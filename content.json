{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"prometheus relabel","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T01:30:18.906Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX19T7zQPcRhKFnBLCMeaoZkHQ7zYei0zJWcz4+EJ0kqVQ4LIuMk0/ecCJRBaRPfsqRpAMbcc7VqcYmdQ1U/ukoWDHNzje5AwSeN40xqHxrgFElJMlZK+VX1f3PEnacJ6M+mCA/3xO6N9k9FNsT6BbvbML5pA3onmhkuycoithhSeMH4zXyukYQylVM13X0xVpi9OY+Ih4jsIvAsq2qKar7h9CcTomMcV9+k8SVRtoI7hWH26QSLEu83LKDgRwllDd/fm79Cohw8q9LnskaLe1OCihlZjrDnu/8aG7OlLhz7SJgdgpaeuL8AWNinWCegPjOgcUbHhCxW0Auuc4EasAoKgvy1I3macWabdG2WyuGD1F7/SSKTX721wFbX5vzbi7sST0/VRSLFdyvLo6bjc+B/CmdLBieyAWnExmU3GiXECPoMj0O+HOcNsOezn9uImO5XMTh5e77GqmDdN2k/FsmTA31KXbbDp5ayPrK6AVZmbjuHJ+VNFaqCEXt2b6yAjhKCWwjV/oKZpCPX/kQJD3tZW8XZfWWccItWbzLl2FCcf+aqr8CN+G4IgLI9CWYgqcE6PxWdaWb8TZS406Hlwfic8uZrNR53KTFRIOxjIpSNeksnNVX8aIHp7EpxC5nk6PrEH4Q6GT7S3lGU7urgNCYgwUePfwKVuyoLzpthKqvTljiMiCHtSSi0GozPEUgY6u+wWCLmoejBST/aezVSTdFJmDQUgHR6fPKdN1lgfecbuwxF8GRO8QktS0bp0KgHoSGo/Q35Hre/F56NH6uxPn8e/SnUg1ylfhlb2ZcZGJXUYe7SvC/nLmJuwsKW7ow4tpRKw2KN/UiTzs5RhM+6nNbsfbmBXW1+aMgZSYBtFyeSwq/OG1VDsl61Hw1eRq+D6oEKkmOFrrhBlX4pXfygKHPsJuNejWJbEbIyYHA+0Y5NFbukpKmin7DY2/0newetDTQogP1aBMGq8qfqHreR5QbxogSBbplJ3yKhfwetV+gK6hPO0ffCa8ZXgTOX/ZbM7rKHlpO+r1igFL0HeCfK3f2v+tK2Hf3TGmxNjJPg6wkyPUbRBopHYuHUDm/uvhBiTewb3cGR46JgSV+aSdoM3bboYB4qnugwsMc1zMfieH9hP9dljF5cYNA+ZJ/lS1/e2UV/R4KUQp2s6002MljCYQF1O2r5GLpvjuVZQ62cdc3438nsxwIK+qnL2LjNKIuH4Y6QFl1zvpl15TIGsPET3n+IfyL7HzeOG9oJp2rYIXqee7Xg5uhLvMtfKAJ9kEEh75BSykTtQU+VLtIJgkqz4O0pEDo+A8jZSATfjL8C342MDHd31yBXijhd4Va9ISFGj3vQvHSNRAOSfY/WqgIukbOVlPNIur96iVU2XIz6tejfWODob1TKJvG4p95z3z7RsVzWYWT94Pmmz14PHvsM9qzazRTG/Vowa5xnMxSyjdRlzTwYATIfj17WjWKwtkoyVedTfX1LMeiNiHVYun0XrgCmo+EJMRE9V6kLgKOKJc7y/fiFan3rx/NNMrkh9mcF5K29abRXC4N0LluTlYA9mXp84Ha4LCKsnGl5hRSIs+Zq/w9XMZlnQEvEyIndZHjYcTblJy3H8OIK7UJBGCtih8atrddU7WFFPRcoG84e07pUDyKOJ7dqpOGkn5OkJORVMRlbZcsZ1UXxxZktuYNERlT9PwQFBvWS0v6aF9KyKDokOCFrMxldeWalca5UwWtqTYwx4iERdV0EZdBUQDtV0G58nZLC5jIfIZHRYg+D50hNpdhFEi/EFFFD7lg+5JjIem/Z28Fl1jrEtZWdxVTk00wJKwRLAtFvysnSyxPGghU0UZiq0UiGlDbpsn2E0BuJ99nZkCV7onhTJxzy0cPNxnBRpNvBC92LnQP+sioVvbW1lPLlbdRlDLoEMxKgitw4kbCRabvsKtxf7yV8BeIQM77yxBWdfjqJ8dU676gnnBY/HWH6hq/pMXYlZlMf1zM8OZk+e3VSKSZauZgbHCu7gxnhptjqriYrKPaEM5fEuebOJoIE6sDAkKVIEP4Z5PC8eRYY6jzTgYc6PI/oQ9/JalJpJh63Iwd8DremrUBv+wBlH/F2Gg+nmIRzS+7QDlUfoMuC06ZiaeHp8oSdAGbi1Mn/B+i56qFQJMtodmf/N6fXCbUQqKinQ0e458Esd98S6sPEqikrI9G80EOtSnkExfzoYQXWPeQB9WKH/6y2R01wqjaSV3RsZvkCYRp8zFZHccgS4HPdL8+4MD2/7v4ARr5uWz30GlPA+jPIgESmw4RKd0r7ay2Ru1VdmIyuYOxmvkUcqwbxqoIlpxAEvDXE+MWLCxtXVDFXQ8ZD3AxR4kpKDV3W5b4Yk3eW7Xd1QkLGe6LnX6Fc1yZFgeR0g0x/N5dazLhKaGf9eOn9E1QtsBDt+6kAk9moGyVGNkJT0lLUkW4ZYYh0yVkDxifAfcZQdry4sui1CwFn635Ep3zWeFl5yL8Xnu93q1+rmmYsdpGzn9Kn6IEZUaNR0WyaqRrGqTIxVlcuGE/exJVY21aD1z+U3UABvWSgw6wWVZ37xgP0FwwXaZt8BdXAIInX3iisrPHstl5QFMd1r2FOPjtccNd10/A3Hs+/r295gX0P2xv5fLo+dI3Axe/tbuiTvI6sMvzb3F5c5vsv6qKAurl/T147PWZbJLF3VcV9fR0q8pkZ+Cs9rh278tT58Qd5Iy/Qv1r1eOyDXoFna5JPR3iU4WiyPfdHdS4R2lrsEBCW4GtSQakFzYD93HclYIwCYSdPZ5Px+d2BzWJl8XUtcroXb7jcXK2gfmCV5eEE+47k3wuWlzLSxzdasRLOaVxWBFef9EPvGpnw0Hr9IFIi7F/NOkoQx9OeBb8rdtgkj55A3eZowNwRdfNcGOChj7c6LQ5MO9lmjc3Qcu9k8G2y4AwSSl3StKg0WdoEuVKi1+6Qy63Zaf+30aiJi6e5iLArnZgn9O8QvWmjwtItGsKO5n0EsL3EsRPL1GmSYNTIw/9O/48TXX67gNwxNG+PmfpNJNvyAOQOcIvc9K0g9Kv07oi6m6NZIX+wiL2MV3T/XJaiZ8iv+Ku0EuYjVgLQqs/D0bh+qOajuYN/2HU/jd513c32RkyLyfUQEsvK3Li+7244IEKzI1eb7/ieD/UfcDfVXOrgCXw8vGc9TXxC8bVQkAkAdHPb37RzBNH3LJfyKLN8zpnFQFIpAPxhKqIY2pF3OkHEPmlEYIYXRsGAJESECa//YsmyUzBgh10YYJvnTOLnb0RD4VrtsDkqKHOKpSAZB7GKWVwmaBbncbPHXVG0Kcb9WCqtHLWd7bdWAnyGiujsDBN0pK9FsogC1qoAJ0jLrsTQN3d2n+k4+vb9zioOCmBZOiI1VjU7+KJ5Z32CJwee8yy+rUo5APKIKtRDIunnrdVDqdbK+pXSpxJ/1LJSfbpqmm92KeiYGGNrpD9kE0TG68rM2px2U+K/CdIiyiQIX09pVYNBeb0PZeKVQt0wl1N9lFg5795zisScZPoFHSd9SRCHT7IICFkVLf7VCBe0TcUs2LSjmNWkshgsxyJP2aikJVHBO2xi8B4acD4XjcbtCob+3WA07+yppO68vNM4D9BpBXdGiYg/4sTfqgvQrJWIUqjd3hetWaq/q1udLu6OIOwLp8GQZFidqt77fm7xWW/esXdtcKd70P3PsNPk8qKchA9HttpB4nCzN9DbuQMBba2xbAm3cZ+Lo3gSiVNIiwKAqoSSTrpQ7PUuYR+dMhwJ5o7alyC9MJY7r5goG5u4rz/deZ4sqRGunh2AT/KNSOAn+G8J/Cp7DX7BNTtbcwVFsGwal+V8HTgpPesaUBPtdT0jNyLTXNNwycFs1+ijkrU9e9G6qpQkJqLqdFX0/5KcTE5oZa8jSNv4QS6ohds0q3qJja/Wix4BvZSJWvlgofxwBg+afSmjW0tGa5sFjF6VE0HvTQ1vE6VJcPx0UsdFYRFTT5e2CaImCjWxONOM+JZ40hIjB40Ha1JOlRldfgXUwACOoZQ6XYbQiZxbq/qaOLnePGhrBb0pqM5xWj1AHgbSrf3Zp+RdP/HK7Y1JNsYoovKox4pWPef9HD5geyhn4wlTKsa33sfDJir4f018pouYwp8nJNNzgVFACMxSE7c2/LaNwbwdBDmMgOxyd9GMP+HzEzH65MPrk5b7xbPsN0SWkkeg/CZsZABNGHXS8/GXHJXVyTpgkipY+sHwlFOghcmNBh/SEIOmWxuw2236o4egcmAINJalShzpen/KyHRpE4fcTGXimLaRuA/CaK8AlF9HSQzMCzaGEx0d1Etd64YE1fZPTJ3JiAvggC0X7Em3mgtbaP6tmsREbOiccYFPLmc4ctziUgi5OdO2inpYGO+cDxHAnZp6hoiMdcOZez8e+U1DdCAVIj0imHob/Ss4I2zXLWcNwgRp+29kLrIKCOqD0slVCz/5WoFMm/1Tm8p61HO+3Xeu1d+7drbKzovNyoFzEIU9dK7YNLnjlo1oq99BmvU/AmakwAPsL6TifzZjN13exW9ioifbNV8JmdZpfN9OKjTthanFhuuqZdqVsjbq0m7l0fGBStxEdNg7RHI/D3N9VviBIYNn0fySMcRljee69SX0a7M3nvjAvpJqGSVzqZkUDLPUAn+qP8Z3IRLZfwY68GC0LK6AVLp6QDmg8q6NU/5boaHudEzEpaIcrOcRZmVRVoGBGyQFzd7vJS3RnEOf0Rf5ApLocxHCtJb6+56GQPIWAs3PQTbjnsVeQKsPZ00XrFxkpFbcbpPV94P+/XqCfXQXhU0G/AmlzSr/5dDkl0sN/J2Yo1lXCGyT/umAjhao62l6qt2kVDS9vMBQcvUlmXnjCzhs4i4HFx7EhgKt1tRhFFZogRbK9Rpwb226IHfOwVz6Fm/YavqIw6nZxMKZDtv+RyogR8Ty047OMV8dcdwpL9e6IFjPvzf1QztpQDPJzq/LcRWknrHYSiIc6j2w5o6p4R7iZHaIYxbk5sBnbn7N83U/fc4Gm2Vu4NDydtIN1ekVBP3/cUEFTlF60cNBaTLP7XmnGVV9LPuWZqOGzadF2v31Er48ecM6sc8f2a16iv4O79n+ZG7b2XMTmJhS6AKr0X0baJyN49jPmw6qD0nPuDoRo3VBOq4bs9S7cZj0tLM9Z1ISWIYOIGTPZd+jRy1WHI29dDPYWSYYJ1HDX0NAVzSfC2BP8ehWKHHcYdS2Me1izv8PjX00nUEIjudC8lNj5F3ONXongbvZ0ZPRq+kRMdZLqf42KfD/XjTFyRSbjr1b/HM09wYegtgGWkWuRpH5OWlUb5BUufc2wftrwyRIZvwLvonJN07Tg1SS9U35apEAd4bV6erTIbtQaE0WLNAuffqmkeQ7AjjM5Zc22zh1R/s6CkttwuQW5s6Evh3QPGnBVX8/gW2/hBdhQ82xbd0Vv6YwCKbQi+rqxbmcD+LRF4W/araRBwdQpBhSW0z04rYvC4HGV23Ss9NjV/W9AQLKU87sE7WJ/NC2JDhTpZCbBclfarLcwbEiFIprOgWdvSXxcG9T8QzLkiHGAT+n2d/RGN3DRlj0yHNRdQtIVl6/ZSalE6Hr9+WrS2G2JOSG4x6byZg7CXap2RU2Ttp9aKsLFngyn37FdrrVADADz5TUTjqkDAGszyTQmzf8rBe47/5OurZtVgVleTMwXIMSVTj2rQ819GOz9IPDVfq+ZUcvA+VNFURO1S9i22VJeEqOQC5VpjWUf+zUD7gpZyBmXBgGFIGumwkzQtq9na3LonbwB0qNaUbFgW4dT0+xzLEPNEA9r3x0p7eOwXKpCbXL7JPULMHrqNj59aUYP1zWRtlstMaofnd1a0c99soURCUyWuIz2+ABCMj79XWZUWFzM5EldqIyhL/x1YHcyZgdgUCBSZndj7t309XDvkZFiFWXYp9Wn7Wb2fGv9BHDkIEo9IbZc5rue6yTevCM/SXRP7ywvPaFHxSwSH3aXrkZicgcO2mKaEA1o/VYlHvdTBszLHTwza7wQPV7hgtbn5lTvxnqn76ysUojYXOl2o+vcZNuA2U4WKt7uI1PsFL9iyCHYoHhZY4sCSaKISOQDHu60ri/UNZadfu8F5xHriFX3qMQB08X8NhIRSUpSMB1bc0bRPMoLaR1VeYyZqGjqtup6AvQWkYdr86+RHtJPHFvWpy1ciPiFQtqLjnQ0szUuySBxCjp4xy9Iq15mm5+KLFSsnL/en340H5EZBQf8DaVZA+7cHiTDKJJ8wRdXtYJYmFrjppkOsCy09uBoaAUiViNqT+bpffaKKrnJnGTBrqB70q9j7hNb49M6P+VLedj5pMibhaieVvd9Fuh2qhbO+AY2shpRV/NjZ046BQlw3SPyQY2fc9HrqzaqeWGieJ/zeO4eRQ5quRtjlqbSkIMr9QHftteugKu2kjJZxWG49mqRQnkMbvsSPKR65RDh4nccRlpbc933UexFseSrNk1X1FDqfs3Y81cR14GngCQmgFoOS6trus8jD9lkUvg0gqrR1cuHxqYNyFwirQhhFIcJY1jZgBuPTvTL1Bc/nrxaxhuRF06LsWQc/4czBsIHo7HgyvqKkvGHo3DjQu/S+enqZADqog/J1txIhaIkOyXMLDpfmwbNC/To49gD0NrAdiSO7JQsJk59QmSDDcqxIVe7w/yDlO2gOeb11x2bguGdCmw69SnghnkDuIysW4v10fNcJ53349n4vPWrW/HaKLnul4HtZytLke4eH4FHZpaw2YSguePXMAbdEnrGDLqp1sbR4eoaCI5GWjUR8A+Xjzg0itLPOVslJ9K2Pn0Mc+1AAb9G3tRwZzUHx+5AaPCKv4xPvXQ70a1AMSqsoGwzhgEUi/x1+DsJyS+L8NIpqTia34Lb/mhY7CBLhLTmCPd1tI/c/2pUua1xIAHt36ohQvL52/ss5aCA+zCIXNUtUVB1rVlTqg20p7vf0/y2OY8mfOpkSHRuy2hI2f1AP/gVipzG7l3BC6vEbLrZH34rfkqgmw44jsGnPrHdyVuVY7xccW+N3Ey4gf3TN1SOpkij9CPPSPFhZ/ozTV11q22jLkIXD87SYJGJEgA7+m6TZVpZ/T+jbQ7+TE1/tWOcpFfD+opZdWFkOEsAdW8pCCz+5uhzk3pAZ5m8eP9/qmjS1kgC5sRpM8/qNVepugQyd3k4UIrLoBJy15virdxWp7xdC7qlpfJwxchEgTZbeIGsQB9O/lJxHXJvRuD86W2j9QdSgqFxCgdfXVQwTHfJc0V2QLBt753J/J3qU/wjX0hJbMYtlwvQ82x90LtEljDNsFDl9Tt1LpT6Hc+aWJtKKUTCNhpi3p7tO9JCDASkxqnZnvtV850IbBHeHTz8pejU1IaxfR6ZfNxbACozWaahRMJa1sxJa8W4+i7AMxLJeplN//zbXIxuvXwCsUG3d5fetpbXWTqFzTIcf9nxp/EzItkUdGT1HiNrAgEBuWg/8pNoloqhfOz1YHi+7FlQl0rkV/XNa6kc+Q9PEVjJQwga+LP2bmabCDyd7dEJZpTOuF16ztq1imsZpcYpz1vi8tkT9ueCvycPM4ez9rYComy0Z7WEcH/ZC9bbYkSNuGMeA1FjyK8EeSGSiHxU+j/toqhw6OZtcGiyDC/QXJ5/djgtuV2l2jElABmZLrvuoKpSc3N4SwD8UqcF5T6ZarKi7w/xJn6PEL6dIcB3FnZUIDikoJ5kJPRXUqLg83gUC007+V9HchadipqHfPx9ib6krv/Kt3BxaD3xMy4ARFlTJeXr2NROqao4f8Kbd/9bEPvGtkLzGOyCPwu3KV1i6NziQrw9dl7QzbQpoIpUlakPbZijx045DMKaxCxULLxfT0gDjU6gvh3mWM02B6N1X99ul5mbUVCUEyfypXDRy+xn03JubBNbztX7nsr5VncRMdiJsCz06a+sUK4Q7Z0mssWa97K8KSh1+XqdyKAaT/huKfRDl7Repg4MMeknm/X9K9CFLn53eJiODnnsT8FwzsMFI1aLFKrQpF9GY8F42T1KTMoK0mPH0zGnMCmQ+BpRKgHOwDo9EVzQyBlKGOMC8fwb7WSNwQ/0cDzWo+UH++Puf/vyg0b3quB8hKoI0fy8HcNY7eYmAOb/F77p+joaTUrR563O5qrv+nWsWoTFumgSOSu66zFzZc6EIFNyEFlpwjqxP6MBBJkFcBkm9MXVht0K1+KBInjidGwqvitnlwuN4OTu32qQg4DvYEGopy+gbJK2APBN+yr8Vc2Y+VV0IoNmFjveFxPLcztDODcf7Ctb07nO1Pm4sQu8wVllYubHVZxkTze6Az3kqhYJ2T3sbh3QJWdf6pZ6hF/0bfLDrTVm2LUx5SJrSsVQ+u0WI1ScrJrYfVOu8M1TPF9CdMkeVaZ9R4HbP9lNvqxI+X3mBpzkAAwL8lhJQiO1SkdprH6c/TnlstUeOLyeD88WiSVaqZbB0r9TmzxgPYg0po/0+LPGWhptduPxbbRkS6f3+QqzRIITPZ9lveMU6lKAj3UgUKISOg3HnxfB3A29zYvlK7nZiQdsMFHS5kR007IXt2xRDGmDZIfE4O+u6eOFqHkfkwc30VQtubjJ06zP2/umV4yHMJT9PouKTWQHnDIEZz04uxRuVr++8QS/8Tz+LhOx2y6PXk+e7saMIfYCuAqVdORZAkqJPUS4Ky+Vh3MtQCCYmyYamq4qJ1oAnxl7R8S2680aDaCLDTvEWPQIpvf/Hub6dWMoFYfQm2o2SkGX/rCPst22E4O4I0K8NNhCftYb5tf8+pmyaS+8U1zdQwU2VuH2eDaGKXssUVardVS9VlZ9cLZkZiWQLcxRAJA6ifyAqSTG4ErWeiBzfW/nyYx41xzSptTTVhd36shBCQQ2FeidCuHuJ8Vhn6/NHRRBBHElB8YHLA1uZ0Z6fY+bbd5U31xwJ4qvE9A3avX1KoyzUXA2NvcVofpbakM8u7BvwsNhmNrOSu4/uA4pJBkd0n2ONNJXIZbX5nDtziHfZXT2jo2LL/KYsulXpzFDmC3iWyxUIE74sLP9Vvkgy8LBWdz4NmTCfTFab7EtdAkfHFqJdtJHCayKYdvbbgF+oe41hDE/4vfzppjOw8ZWWz8iWTQRLRdcP17P0maGNglXc/49sn2U7z9chr0C82qYde0Nsr8BmRE+f5+58Bk8Y7YcWOrJ2nW5Rli1baRrhwCs0aTbp/6IBLV9Ixu9Ez8tJo3wzIU180BO3NU6cE7E6vXUQZy+VUcNxd3kUgW1DeDF4NPhcpJ9CfiG0psKDFl6/shElNvppFVoPwByyj8Lc9Lws9YY5sADoV56S1jxJ+HbsysusHhta+46xhstqPO/vz+bHQG5vrZQzQZHWtYwbqNLIXksqFpGzhJQmawpzolabcM4aq1rYFn6QpupDnBTSws7s/3Vs8TGEjivJPSLL9yEDVRmvCyOICij8Ho4DAyyiAuifxvgcPataU7LVMm7c2GIIWp6+r2U5eyEJe4v6l4rCl5mkm8uGHkCiFlrWk9C5T1m8rKgM1MRJ17nTki97fS1tvm7PTCrn/EQsCCEaczMHcO1izTktFSstrrf7IwLGdvz4oWv8B+gjhWAqsa9NBR82pwQ2FSbceNHRrThgwrHIY757n2Y9DczhlnUqbqFXPEx62FTquEME0z5C/vuJJArkGXTSzOjxHToPjjzGPlMHMUumWnfgCdbYVServ9PKk92kgsOvddgqEQ0aSNxTbmahRx6//d39QHlSRkly+wVSXKXa+x3UamohfJNJ/1Wij2VNVoEGIYU+gTYxDuIgWvF/eG9O70IRVpTel+JyUcikGuUN35SYk9FFO/KHPuoH69QkBvpN776pq5Dyz1jTq34tpwBp/lO7s0zSE1m53EHBkAuCfk1zk5Z+32CRrFJjQYU9fbljV4RdvRLe0VJxVE6JEwJqgAp7ezTFmR3bImDyz5QoD2QrhQBw8FbZYZnYV9hoX9JG62WlziTO2ME5AQQ2KbhafYi1DlgEjqTKxkF77v5eexhNThYx4RVT+W5gemCC7dDZFAvXqeOlBwpz6vatTyOvi5Qxn9GSL1EMGpA7OnKqOgYS73zvsKA4M0IZ0jTudSH+4xfngjp0szlfiuz9JDw3x2gSHPkTu8nozksoRgijpmepz1uSAIbQHQLRMbL+QRPlgqPi+8sjPn6OxVIyOsl8DjVcRue0CVAgSXTbPl6WulYCnhEW8YsZIMgu31krHzuEcobD5lWXOJPnr+Vpcismtry5KgSjeYrC0gXIUyDBvjK653PsIPmLne2C6pPuss+WGdGF0dtCKUGEKkK6a+KX987mH1Iyv4noyTK+ruLUlo5EZhYOhE6ovWYbRdJBMj+JOERmwuH1IwFzsu8VulUT4CsXqrYTsqBKgxIKCDOKiC8L1Hf7kRQUt697UVg/NS8vz+/encHdtHofNr0pjoImKLiHyEb8ljCOes/DAkNtf4l9TG9Y5W71yvSmyeyCrca1Z+N6fLBO53y0v1585TR0X+BNpP9XwY6p7eITqhXAMGhsOYFMiDssdKuix90jKupIesBoTmVosV6hxT2v/CDlG0VML1v/0LxvTEfPUhcmTvrCuI8hMo4cytgZVXVXxa/5z1IQRopyRcSzjLyvHhaFWuYK3DPg2lFP4I857pondaHgpWS1/GzYkpNJIwEX4wOFe6mWFihR2Rh+pNsXvChgxHjNSAeEqzdw+FOlb63GjE/VGCA64uhm+QotcalIjInGQK65DYbHDn+cQZW7EGKTYidz8IOQRldQV3iG8iUd2JtUD718dLNL41H8SMXUgQWlVyrZc6oeGWi/BuR8OJwkV/Fb5FXwksjR1/K4FuoM5hx22/G/R2ksF6N6IPoOEz/kibLMTWtiB2DIfeDcgyIoqCZNXcxqhYq0Mnbl2g4cI6HYbJn5JJxMEE7mdUCEAJSQGwus97avdWSq1kVAZuL/vRD4qdFxo0HSxv19MqFEtVzVOeiBnEzU7nQy8zaJqhPRB2JzSJWwKMH8HfqgC/V0l/PCdg8ASargISmA1R6VFs8ZSn8wZlLrEXO9OCEFj3DtUGTYrG1717hyPCpdnScXySRLHaqEQk4oLLHy5RhloZugmmYQw3bcsFHo0T8PAWBmgbX0hMuKs0QR20AOpS9IlYesMLhgF1XcKZHBcQmZWNJx6fZtxOLzCRYCpHEvd/ioZ54ycLN6F/ABOv8we+wqe57l3gafHF0F9DI6OgEDLSeP98Juu/ESY86PXwcrsyZw4+QmqwQhZe4XIkhSXYzU/VaScdYEZeCh8hTR46ZSMuT+hTSMGJ1ePxlK1T2RtlQG1HAkzGsL3Y7eq197zzXorIb/sGFDcaqABKGmIMqgUgjSCoZXKr40nXZW8Cb5Uz+S61homMN7u5+lZiYOIZdSE0XxE9Ws8PBe+BxpyOA9+RIhhGoyuWv121/xEnn18Rvu3Phhmjc8UYgh4J2PlnUzoQgPkxZZPZ6H6ftte5mwylWIyiYRPCi1rmIJqXF22ZGnTbbKvrV8/l0C3OIZCam//NVjul8H0h08JqkfPxe1Qb2tdJwp6zSn3cbWojoq2wj2n+eAwiy1ulHILOwCBPiXgAkIHAdFGhTAT9UlZ4GspN0eEjvEhj5buFmnof0P0g1ZvuIIk6lXFnTNXW9A7ex+kHnKB80IoRTVFzdjspkHIh83I36pGw1FmguWFGjALrReQA4Mb22h1f6CmMINdz+AWordQ+LM611OeQ4s94wqgl6WoCYsNC/I9CrDdERC3jK4vAIgLI1aCLUvTifqtmdP6w4qcgwxPPFqtK8rwiqdF0X06imgKFTiIi2Lmra+KNGn9PJqyi0xu1FFUOY0oyEgYKkpohAjPuwPV2bUwTVy3NREnWDTeOlyfCq4VVQoown6gDEYBker1+gfr0oBytF+lMzFEKEPNgkXYBht1H/xnUw70SHEwVj6OiSNpOhuDsZTRxFK77M4cZL7Ump0cI3kwGMX35t1YBEkFPpMMONFmVs+QpqGWHl2t1XHjwi1b/EEJd3xzvFjuhtflBPIZmY0bwFtbegUdCil704tnw9RL7hPh+Yt35hUNgCeyTSfW7Qz4MMwC/Eo/VmFFDAtGos6HSRrJxueTTar5zps/TWGx1SCucsNayUXhH/W310KePNyzamKrY36qBrts6dt/nbJSoNLburEfKlB8LDaJ+/rdG5GFhwGQ3Q5E17s2WlVB8U/aA/dtpkaSrht2tzYBjxo8u69kOdK75pJpZ0jxEGLjmlc/B9s4X4FQQsW6wpgJmnwKWaTWxSPXgqo2q3Vik+VMaZ1p8rgaG8i8twhkDA6xc42ppTE4TjRowUbWEi5Pi4O7los8rNzwAoS1DnTUqWJwKU4FuT5n5S3bLX4sdzcwOT0J1AcIxQLF8pjYjAtHNyumElIMVS9HucaMhNmaY8V8C1Rz2pAF0LcmmiqVSm09WYn6QeTGQ/+ZSlqOwhcaSTcZhJStajyFjYFB9PRreaccF0tcT0g/46Lbcs8/UQ5JPMkfO1TpNm3oI4DAcOxVsQGsclqFsJJnmxvLU7hhuorPW9OMPaxCpJSa5uK2Fco8+fH1w3cWs6tixk8CTfRaPpdPjnttsC65K1YikWVa1EbDkaAaMwCMUioNlSzGcpIkOBUwM2tbO8SfA6AdtHMXmqfALw1H7X6t3orbFAmkm/w9E9k0LaiU6TWHLdOeafquTIT4c42x2zS8qrDXSpaVPJulR+ysMHTPixMSPijRSkXeSY7p93BT76TsCXendZyXHWLgLgedo2j4s4zOGg1Ka6vEylTnOz7VS8MgInpQwxJRLNDhaY/x9JFnt3SqBWnfvq/BM1o388LHJS4/PBhpRh1RJ3vWqzzxxjIIizPiEBnYFomChRVT6zxXTgIBZNP02TR9lLrbUNxqX61TCJXqhB0m6evN8btn6df902qyFkA0EAgs31WG+IV/uCvZTk4YcImpSg2c1Ryzrhkk8kyeKS5rGXzW8Hcz7E2AB2pmeWWojeR6NJIvvWPydn+HfMzHXIVdUoZOVUoIMWezX+IUpy7QbRm0lvGsrzPKRcypSXFiVplrUePJ6irW5avbrizv6vIvbZZRUb7ZUUUHuDMKcupqwG+QtrjQ/iIsrmJfAcZVud4Vl7MDmy2esKzpVY4PrA5WZ1A+KsNk9Ng9m85k20tudgA9hwOdKhO37Vbk5siM7a66ZjmjpdEyhsnS1mXNQbY5ilzvhVfb1sjKi41uG+XGiiLxkEoJGP9YCFuhHpHKW2QJD6J6fzqSdx1qDTzeCzOhz/06EFZGeG3Cci8FOpBXCaP2w34JpFqvJKj90NpdmFH1qbsOW7zzQoW7zJrVBR6IEAYoBy1SBdHn1IhpTsxfi1TGIg5yBjwgEscuSPOrphxIFcnCzMzVBsl2mQ4UzoUtBPN7WP1eBjbciPYrOWJQmCrMptIxOpd6VcN3t5qerXxay1z8D+NRlol0+H8RCys0AfSOzXKss/PayJMVKA0yNE5GUv11g4gN5bqMctSF/r4iPwjRJeSFhuuFOOL9ejh0wPBpZyGMaIAcEbuu5A64ZcK9UTa/wf9xr/3TwFS0l/md5rbTMzPE6NPc04OdCYOPZaqhUGYdaD+ggJKIEbznZMbSXqHjc8vKalyHoUuNuKcjxvWn/e/xVRXmfdiWRO5RiOZjfs3onFy4EQTh8qzzb92lXVRf/rxPX9KTzc+ddJJ4OJE44bSThwHjkcxJshe3sjo0x3MryaWqUQY9NGt5YOEGJD6wTgJjzpX9JauiJ9YuMh+aS/o13dwYaWYdRNbpi+mf+zPvPcdNEvb95SEMBzM4bWuYCepGCaB21GPPIX/fTANfyWQiz83zFHpoe/CZfeFiqAMn8uMvXeYyAHahfiDwvakWYDcDbdGLXiQTMnvhUvK/lMQE4RLUp9QdysNBhLpTlCzTY1DpZRLXSyicidzLNF/TjOQ6hHa2MRnMJSTCg/9V69+wuYHUKhc+yam97GqHALHcsqDVBjTjGfXyNYfVM7yWmxIQNyscUeRTalDLcvSRLF2FZN3ancBrXODd2Ig0pTufU6wu6zguU2349/41AkKHOcdYWOzi4X5vtnwBjUEE86OL3hIGYHWjnQfCETcYGdakZziDgSpoxWqjxRXsM0cJInnq1CiwkEGEIMUgFyVHzSsk19gAo5Qvk+/Cyz/NQcTzQNFxPuwngxCiljra5koAPNHclQmg4XIOSk1gwaR4o9urY1WizesizPjZV4Viin1V7rOxqa+xGeRdN/w8ER50wzzI4EFPPJK/EwL76xHz1qfxEiXjnA0pGIoK/WP0aoMt5G6ZqdG4vS+Ejjp3YVCVYR8tIELhJeXiC3/s3UIhug6N/FM80WtTr8YgnGzPa1b42mT7NuTxQBRR3P4UoxxnduYM3+H8BJpPTTPUgX57recUIZArGEGwOqOpQZyVXvqmfJEKtbcrj7jgYjjxVicvjlW8W5eNvh1+/w6UMvzBm27mU3lA3Q2EOPh521MHeXGMkMMaDHkghGA6UYhmvkLCOp/fxZ/shUVZLetGsjkHY4j813R0ibriV8NRIBHLqHzvJcLk32frizk17wpInEeMz6lysZKGFDkk7jGkWRIlZMzkn/08ZTyRvBZceT5ffmT1Sr82yJcVMO7MC0bwNDd2bjrtPLczUUwbldF5kE3UGb7rzk6BUdQDToT3/mSbwFb5YYtzNNW5aGM7O9A0xs/EJ+7t3+23Q6tAC3I1ircX7duIVkC6UWDgUe95D/SDgYbCV7D8TqFOR5U3MH1aXYM88EirMD0kBxL0254b6yc+6lSFT39v7uXC1uXn8abgzrzkIVwyffHV4JnJAwCAqFSisexvdb1C/N6Mho224l4n6Mp6yfEuv1CKbNU0Ic3wibiDNJmO+r2BVNaGe+7yC8AuYmgiXB3HM/Z4lj8Co8xZJOnhCFmGAKePx333tEZlNz9DBe66odue9Rf1nPsrj9bk7+WAqmeSoYY2zqIArMR7rJcLGJjzQ+UG98PKmk1eDnbzDHrpPKWUNE8I4jDnZBc6w1mhb3KWoI/T8Tq8ZYkuvgWlxit0O2PLiveCjWEYocMzdEkyvLrP1Em2hGem8LZhxQsu3JtcpDW0TbKVwdu6GFAN10+jHUZIUCyQrfAYd2S85F7/u+CZS22suBYBnN1lc1OJLWfzLvoXH2ZvnzBjYJNJELYSJSteSEB6kezMHLRykc9MgzyrS4Q2siStTUwrtxQ8ILX8Hx+t3MiPR2zmwYX+J3rmLhHhk44LCfo01jFsssWoOQ2FngGGlBVQXyrOeU0PFqScLC8pfDp3PZlTHGGs/5AL2mO3cB9+VYL1i4zZeqziTekIkoxkXVRo+46OJoqzPnsbfnGHA0L0mo8B++bspxT65LXYkPA9zCW0enGaYU6Uo6IeyRGoadkZTmXhU3n8yFkl5gYWIHRssKBBgvdydfBLtnppj35BcOUv5pWVq7XdDQ/DkZRqQ01c8DtyYdPo/se0D04TYhwOEjBZMr3P3K0V7Gfg+IgUshbPW0s6Pr6fkfNWiJwHTXvl5I26+81B9fub4SnD1Q0jzu90glbV/31oW7IqEHHHuby/TsTfquDyVlS1OJADDZlo0nbjYMuAbQoVSN+PdmCE/weEumNIW6S9iXkrYadNTbbkN7ZczLcUsUHVsPbTXROxIj5T9KGSCLzSAePjMYJY44BVz3Sb1YBrBJ4VQBezWbnXZR2HoGzg35mjF/gHIcN29u4nqi1ZGmzl9ivDGzzExl+zMxA1m2FXpnjKtnPB+/njXv0ZGB9O/R22yAOZpHEUZLxNBIkwRTh1L79dSoSlbDFJB3drZ0eFXG1UE94uJzdEwB6uiqaDqyR6NcjmXuaXEsyTREudm0XqSlAmRuiL1G/R8CHoTlTowhMfCD3zSN7kehleQCCV0f2iNJ41GzQzIadilzwqT+Lv+gTtra0p/l8j3SVwEzZ5AqTsAU3XpOu18RfvSAm6oQOFEuQHt+P7iU0+0nk5Se78CJ6RiL0UTpuTOWhstEMfE9M47BO9wVdsJ5jn+rR56waLyrUSAJUMi+7D5ZmgyJ/ljUM3rmIhMgVGRgvi3MdSiJ4B7kWRJiUyumbQZ0ZoigF73yVFhDwdgIDtgodxQMMqa9ViE+wJ94aVcgsqileLW8bUiCxPgqiYaPtqFg9nn0m+xsSmTdRPgbFJTeH+Zanr8N+CwALg9pmceozJQ0NoHzbwRaUTEjP9QXFDGIz1dS9yopNrNUYQds3GybLG+zf41Jv8FQZyC8JF/eBPuv1rK0g4Qd4UU5/wqeFFKfUnr5XAFZ7UwyDZDUnrQA+F2nVq4itmJd2B8PJTfgq3ARVX/Y6tXgCl6YC3NZ/MBgifS0pXUTX+X7IPmqzSyZuJJqhFhJecD6AIWjx0f4n2PxECxzf0mOviRpOM3gKY0oZWuM5J/cFNm17ShzbSPwa1IBhITxL33+47KFDlRA+nBM/4uZFbzJk18zEIDGN/U5dOrE+gOvUkkJm9nkvp33/DG8IbvTZ8+TyxXYpYWVLcnafPcjiB/HilHCIgkgN4Hnw81D6yYR1AFKGICa433bnjxgnnSpZpJNwJ7nK+0tPnCNHsV+G8S28e1TcPm7JIC9jeEGzd5a12c161zZ4ulg7Vnl/rzEIlB5pyNpqZCv35dWmB5QtHNcffvedF7HubSB+oGo5ib/TXaX4ferbTx+6eG/bc8EPLLg/jrjOAmlJuBUevzFrAa3CaOPuo0tBWHMunWg3Qn6KsDNAgK2drtlkc6I5YWDhMMEUFQ/OKQ+DDPL36zKPjsuyuKGl1pKgvuE15T60/FVVG4/7bIx2Nz1nbr7UyotUEpmrRagtDgNaTgPqAiU9ZN9dSXWbzZBTkf/zRXRqxZQbIFK6dh5kZYgRqtpYNQQgGsBkJDZWbgRUFtVFo31X7ipGSWzF+zNyr7+PTMfF/hWKHAcizK3kZCqFiqawg8RL83wzG6fYutvLOk7/2PL+Cm0Q3g69MJuVrNf7lCE2KfClyTVTz3J3qMZNInS+zsMx0wHMvirggDaED1DgwYx5aRwXzqsmE1a9OAv2DMg9/sh4k1bj9vCl16zhy09aUi7w263yzIxaqWNHP5iaO28s1TW0f60dscHMCnz5oKOYs+j6jDBOzmfvRyf17hQzHYMhyoZun+1pcIwOmnQyDIHG9MB7o8yQy8Zb2AZD6K9bykMDsfboBrt/SJw7G72QxEKixaXfrWjimO07WWyvB90eLkiFVwVWqZHv8npuy6g1abzfiQ+FBV/lEhWnhBhTLVmYrnvDUcGh3tz55AzmB1LI+grKIEQbIpQs1z4Zmk/deqB2OtmETiFc79ULpTUDi9A90ztT5lfoXZvVsCYTeM0JN0Vghvstziod6Le0rkmJuGX4/+oRnSNReHQCuC/gmBY1hkFj0ztcBjgoxhPkPf77zJBPF408GicSIaG5L57Kyz5b3KHRKelmUNlN6wKuNzpQj+bRm43L2dSueSF+Xq+Ubd6lLqRYJBuOb9a7KIo12nglmsFE3vPVi6rl+Vhhp0DBkJigxTScH7CHrkxVwTymBdr6J6LYf6CShNs1TVT6tw4QCGc4Zd9lv6MrkYf68w4abrYvZf9G56bpJo834cOxgGKUbIDDIpJLcm1Os1qDc7XlU4hD3VQLt+vSuC0tcWk3Ja+PBDpkDKrPwOVV3d1dzmIF/nfiuPgdtjYvBsghHUFyGE51UNYhFwfZRUvsxYLXa0c4lARfG4MeNooFZQU4+LLJ6Q8Zhnt3HQKjC/tztWyaPbD5NTUQ6lAwIxc9Cx+iEiM0EvitYERh+W1HU0f2xjdrU7nJ9rSozOxCxpoTorCbAn59uylCrzedNPfIeojn8hcixF6zqr4RYFoXiVVIz6AXdLqr7JiidkrL4wtTIBZzhxQ2lzWnYR2qfQOsZxMB9WbDICDCZH17kllaPi2Wb0pnnU4VY2A/3WFolRNjNi3kiqWCmi/cBKPeBgxEzToCdDF/PaMwJlN7+B0ER+cZQgcqFcM713zvbZRQx15qAd8uiDij4JazLL7vwHo1dvF0PrBUSEjgC8QbnTqm0OrXFhzYQp5QZLga3pQcEStKC8w2bv4YG/xQdu25QYNsLulxaTur9bx18bozSqkNQTJKfYlakuqqfplyzNndhAg58IXGPa7BT8jz5YOVZxKdIApwuTAd98kc8paEcyM00nyNiwaL0WmJUPrT7GffSbLOk7mDlbNknwZ2bnbCBWKscODgJGANkRUszasmS9z05OSf0+7rXXQueYOiT1l3moROu2lDxF01cE2Hi117PSluOa9x+wl2zuaFsC+TuTbppqHaSe1ufijWQc41qBVmsHgWcXGI1YR22p+Eg2Ml6Sr0qlwz3V8GBc8EDCLPs0Tt8g3yfd9EbWauZLyuqEb3c9d4n8q4G40YEEiNAa0E+zZpMUMHU1GHEC7rUH9ITl1pPxyQ7g8zsnD3qIopLPLx2fo0EJV6zCcpOyqIp60/scczuUjNcLPHBwiR3ru4IChVopRq6LE8b/X78Udp6TZyRcwqIuTZDkP7GaQRyNeeM86HBPQwrACl4S3KqPOEUucqHI8Es7yfy5+HDg68i1XYJSpJ+dMoRgT3I7ON6+SzofLuQbO6E0rXyXo58lOK8Lxm2oaeVZQ2LD6u4HIcioZaK7bxrL8U2lQ+vZfZyZXoP1WUVHu4+mTJmvqwoN7TuCUADV3j5R3bz9cEYw2yZhJVE9Nwv4gijniLzVKjMyCdlqEeF2y5FGPO7XkKtPA/DDtpqzc63RoWTbbFH/LVTfBE3vmW2XtuKhhB1NbOMv5BMuGQ5t2WAxV7C+1EAKCmYORjnYEtuTyhUHZcVquRaBAb7/lSro0idD5hAyrJ/nSP9/mjDIMIxLprw3IUIHE+h+yGTjoTYIUm6Jf5+tEjQoCd2C609L3TMdwDHFlIz6nBPfSiirzPzPru2gDnc6IB5y8dIdRtU9d3zuNgZFP0YBV5+ND+65UTdBPOAcVDmqAPlbEalMqrCj6l7W8/dcxtH+f5+ft1TQrU9x3D6B8fuDz6h9UvyZip/InUy0ZnjeDNmU2nkoEUMkSX6q8pznR4PjzdhUodte1BD9sIVEOYW9IOj3yAE9fxFcyAdq9obDd8qkv5cJljDoRu2nCIxyxklQ5rmWCD8PZRQfJCq/CZpMMQf/oh9uKdQGR6SrDRMXvtHrlZNyQfmsdmVrb/0tdNVYpsvV9UzAlJh2rs9doli2DmbG33gQvASkO9HcZ/uVoh5sezDWIhtcM6kiQPCTFpNa3QNZHFf47Q6LYQbihU8NTGsnLvuIehnu3kMnbUpr5E5QPd0RS4hZkKc9mJnjX/hhcjaALWtzCKWBNYvqPEMLjwoP/Kgm0NCorh7K1CnDdeAzbsClNvgzSLWTTm8hwis7PISWIYiQWiglI2381YpBhovs3WnJL75PjlbqjXNjMjUZO1Nsp3y9X7L7efckaKisrD1GtaZZYluMCJ4lBWy/0ttKhcMpMNs+tw16Bs2zPfFP/F1/cuOCp+p2qzaT9LHcV+ydH4KsrUOVfqMRSdIqbNbZJTcMKdcquuZsiN9+Xbrsb6xUZO6cGUJ1XfDDwwG40qJ1mzpLkMkqK+QuJECDbrWAbCsFoQ3O9J8UZ9shKeCQH0Rn45htzWOXlnT8Ksm0dBdiLxhfa+MDsUflxxWzg8AnLMtKImLu2ncHr32xbQFlRXOldQwNYF4W24ODWzThXizyqEAHjAn6vVkAl3Yq20QSaZDdhGs9OkcgkZWfvJ0cxeu3n/ba+twsMEC6bVKbyeh5DUj5OISJCYpdxaeuiXemR18o2ImlOqHpN1xYJqumBAPUbDdJc376X22wr/wZJjFIwN+IJlILr2y9UEQM5QoYQgQvHNniQHnbxSAYq+ghTvCW0AAo7+DdpvcKHkD7b70oNO8lAgfrxfYXN3cvCdl8VyJ4aUZTKZbSfaAmKiR9H4KY3p8seOEjNnsPImraYnL09kyOIiFIBBy+AFbjPoCFSp99oAB/2cqBMy1ml5IEPbDkjK1EQGnIsckmmfv8AmV+vhvwCoNFHkvEAIdjJNEh7eW+hQo3Y3dXS0OGCOQ5/3Knt7XRLa+4gcNmJ/ZUv2V82S/oLKeDR1HpmUR95gv04iyiNW5mgxsWlTCXnFxX+/Y1bluLJPaJvCCmQDNt+Dk02lxHmCelfmjytzryLTJ8Dm+qYGGg3mEh2nPTWqObkkvFWewUayXfMxSrTTR4XdKCcfAWXqAC2fhwR9VxhHAZjbQI2ixek/UySc81CbdpdyFGGEf8RCBinIYaKmDTc7hit84sNOSFghAqFsTO84yGcSvV2XvGhdZ5lpLQvQ75ndp+yisnAMR3wik/Lo4ov+AxnK6PuRauRSqGAtk/ZXOaobplKbB9yPcUPiEZGjveqEa3ebgzWGQA2yns4nj7XnCyhNkPoq7iPLTkPVuby/jO5roRuXR5M0eS6bqaAw8m6gKE3BDZXWcIKSG/GUBr/PYc4a3tj52Duy6j0ISOjq4GhXPzIm2K94cklrhJbl0ahlaRNWPf2ugawmTBkUwxey9iD8EW16CAftTY1m0OsDuqks8fwTqG2SQsmqJOL8mOGohJl52ncpw3GDt4nxXqqpk31c6RmGnjbL9NB8VTJHLAp1edLq3gW2MfG0suF+DXjM5+j7d++hlYyRpZm0kF5DM2VjOlJq1MxTBoEsce+nakIMFRv983Z+uN9Fy2+sOPV2kQro/ZPdrPyjB34zW7u397uVyZWVP2CKqsYow4r5CALKOKiOfcGXiBO4nqpbcEB/5A5BZ8gpCglpDYSurw992SWaGtLlyskV/nobMA+ssUQ967P0JMXMTR5iy8EhPTpLqVTloSbkDQNnjNgEdXEy8WxdjmcDe51CB7Gbq31MPZHtqvbtvBN3LOfolVz4Y5LlXsLgxNi4mbz58vV4HAqn18Jto/tAth0CvxdQJuH0GDgZQ4ukyWrdmZjqHk3ugy+nytTsQmQDt2oJII2wQ870FBX3PbXFCsi8wFqm8lvFf/z8mQ74PN3Ib6PtwgFrQRjTLx98lKtidW+qscSYxu/MnCWqXDdLHihHVzRaNM2oOYRpvNdUtx1SiaPIM2YbBO7BsRVNPJMDaIwDY7jrANVHg2VXrIzkoUilKHq8kIC2srU/+Bjt5MZQwmpKMlqsgEssN6QaXseUcoJEJhbWnLvyIhBeli09Dt1B4OllAkP+lA1x5v0QTgbOQSeIO8OXhhH4nl4Fb9tVMtdOGd5BtyTi704529yOiQyVGcoTIlQxvPzMd9ufZbRwxv2Nh/5fiV3/RwjrgnYm/9PLm77M35o5PlXS4GGP+YXBoOfOF+xoaQNn/kEoOBVRtUbIxaYmy84hJIpydjy8zI3EGLuJJqey9NACOKssBEMPMY/HiQO4rCqZL0qhOzNe9rXRj4Jg99SQEFCrCykYz5aRfGlQEjjpx86Q8IFeBos8ExGMHK4PiPpZl1z4vlWf3peNfJHm4HY4gTYCkXkjLyb8jtm9grAsgNCvCjtv1y1W/2g2pRV9Ixtw03kYUjaFg5Lg2FOBqGCfjW64u7CEprKKtNujJu1zM7LT/pBaLhmzemUU/CxQjgaLNJCR3JTXZDaG231gNZoNj/hgRwK8Kxuon3isv8JnUK8vHrubSjM/MOcqzPdaQeghQB66WRbaJBD+GYQL2wgbBFYt6pJl8h2INSj9T23IhHB4dJBRNn9baILnuLzBrtbTuAfHilaRKTQg6mJT/KUa5oGhFCj4w+YflZx52Cget1CMt+yVA6ku0/vk9YzXjnMCo3/y4RYGw1SFrpZ3MKjYgWqCznW9cvRUZZAkcgjzBn5kdlDC5hHtTZyxVKgImvC8T3nYh51HoU/GXu71/dgxoR/kKO1ceAPk8oE+vu0BMz2fHhhSYP5dEoihM+AmNmmnDYgNG6mdd5IHFvfhBtkSHTiL2Ui+yf0e8DWD/ZZ1lj0JyQBQK6CG3MsGYKkqisu8PIZ0RiuOiyk/5uGpUWo2/gl+MUi5YeKj8cfg3Lnne77f4UFFXaYQ5Z2qDbLVVl0s+8+0DtgRgLJbvvLCHf1lHnQ/dLVR1m4Couhisb/IFmbPODIeX02kimkLvGleKseIzoT6HPv+zjln1Z1ZK+AiUrS/H44qHVANWlJWlzDsMQIk1jc0OMrq+hM2nydoAI4p1NWOaPUvQ9lE5DxiWEXnny8I4UUA8MJSsPxkt+BVGvNCCoShnJQn598KV5g5rLB4IhifCZFdon/aDi6rLinUJCH8BKekbae/umFVPVqHO3yiGGJ1GGzwF5p7RhNc36MxVsW2E+XNHO85giNmHjeoonY4SB1X6KEBRwCzgd1EKk2kXA44olYkqmbg7DnuZKnlUfRIzIAAKnL/ffP9XOrQYdJp4HHQSIZ3hT5Xl5ke/DzoJv25h5Ra/vK+eJpNLkKzDGXiSy5fWGZsK4SAZBAWudmwf2MyMgTqKIrasurDheK+1ZbqQZ0k/bl7tnSFHj0sJ5DHxBt/BKzBNshb+mR1c4Q9AKLUq2wdG9H7iuPLOagaL7ctAk7OUdanAgB2nyXE1vnkavB7ZB4oY2r87HBS7S/JsCs6BmPOLbPATf4LIsJcSqIHVV44Omw6BCeIuF7VyabRe9TG8sMB/uF6NXIHTB6BU9vd+3fW5qw8uB+4lKssSD/+ibRrpqYzEooROTQbmguaMNqsWdacXLmGQzIiVDkGnmtrco7YE009ZCfWDon/UbKp0NxdPWltYDLwucdteBm9LE/VZF6EzlXBpC/SFftZHammPpiegCW1sqX68K4Jwa9D/1rJQaxBglrpBt6n7mqOqAB1JBwylYwx7pHLsqX1j0zEMxmAHOHHMQ8Il3t1DPv4p5lIro5T6WekbvAF4phlT4Z09woXLe+t4MjKCTUq3X/Dt5gB3hUEkUxHfU8+kyoxepxuAS6ELATobcDcSM9FugCiRy8Q9AlkBU2YIkobjiCeNuMQ8F8XRA7JDo8CgFkEdSdylTn++Q9A6BW9dArBxnAjqYYxtj/CR+qyDZjxogdli/8NwfrB3tUqJbA9R9kFhL/XjimBTJLi87AkzWbg0V/wkMHmkLh6438oYMt4HuOyuuc6SkgTZbr5t3W0x/neiOygHVqhaWwn6xYTW19hCAzWo55DYgQNz+BabDATjO75elA4p0Wz5crQ1LrKZNqEfKbsBbgaCTKfgcMj6x6Sz/0Kg6Hh9u4qvoJIuuuI4IjfsTlDW/ihUqugqh1tiODLN+iNYDCbNvxe71ZJbRqjPUv4gN6nHaAb1fLNhob26UsZeINJ0LBePu+0CIsQySFFIB9yGHUHQtWfECOGfJzTz3PRy6UMUveXLb3bGs3QFkuN6JyuW/cMsGY3Pn3NNTqpeCpQfDQ56HBCtSRwt/daeUbEbHWb2CsLlylIiawoIh94aD/mfaQ2a7b8s/575T15rCxxIrlVK+t9OqCiZnXwXtpXBbCWlNzycj4Ff1ZBwZhANkSFJsWX4+qM95647Ea/f1YvQ9J2u2MXwUvLE504G9JwRR5KQbnAkHvmJNz9dnh0DpKxdY1scCaSmzk9jjWzuB1soNSY7B0OnFai2qHf/+hhOZrE7CLRjQKbKIvlR3igm3SmssDFk09d+heObBwy6TbJ1Tvih2F499/yewUHT9h2H1QVhp9kKCSTZpND/L2KfgkuM8D8YLv0abCS8DtT0KU2C0pUmc4OsOwW9RayW2/9Q1W8DhO6OTN7Q+lU2LdQSSB4QRrrkkJLFi/oN3Ta1q3YIzHAuoeG/otOfyiCTcgf9bYRtyLCDp0ayfAMrs6NC8y0MQiq3t2/x1hKWenvGOungrsU9VOvt3kZvfqkRlAnJ+glQuAWbNmedBd6bNuD1lAWQnWTd0qzYdCY0HT7lriuQN9YEKasQ4oOQbPdo0QOpHwVFm5wQOK8EKrrsxivKje+b+fSeYFcoJyWokovYnKbBZRfR82/sDortXc7bBhCvvGbEJtv8LlZPXm6P8vve2aevuAVCFfp2Zgwy8xMASf58vWJfOg/Dt/K/vDP/50URrckclsO/huhSTCBEpyFqGRcUFjzH6vevfKCWl4nx7JnSqHpEXa8onGfzOigbktKeE+B0btiFenq/pz0flWy4ZmyDKxf3N9WDQsvENo1LFj7RiIZNoF46axmiilLM290HgDywI6mqOTD/i/N2a33fdqf2r78Hd8+C26mTV0PRlXfUosfWIr8pM/m/MMFO87bGafZvvGFb2qcx6f1pNYKRTUfcH0zKNS9B4f8LFPzY4vm0hbTGHcgsS5s3JzJltuJIMaPWVtfx2/5+2YVk/Cuh46+c2+5rNDy0yMUHld/wiTj5aHjt0Tao7oI14lpiLNoeDQ2SLQb/dI8aYksGeqqCztqV3CDrL8yTUmgHQPI4hYVuQFOuzZnF9j5i9Q+8irimspIM5pKYjiR+6pQ4HutfWJO27UXQ8GRzfM9k6GdLqEfjr50R8jLaIKvAWgyjiILPVCVN3eic2X4Z1XDjmT4dqWMPRE3qlu3VVOTBLG9bHp1eUIaH4iEnjkEoB1B7nmb38ABeu8Q4P4R6vR9lm0drW/CXr6IDia0vWUBQKwvxI2RmtCsyzCGi8g42bx3xoFL8M73ViRgCELTZahbYRHPmCQ2qJTEjwWHRFSL3BR9LTW4s/UIyIlOz+yqByEk8t9PbFW8umnHPOcYUkwAOyuM3smT1qV/opFzbf8deIGY+mqQOj32KFTlzS1Sx+Gsy4nd9ZItUSJhr1mHnKUmOf3b4g0kYUzRCt4RYyDOkvn/Nmudw59nEq0lem2VixpRjoNQ0p0SHhO2+Mog9b/qncwF0JSTw4Do17mLKgXBjV+QoPVVUW6tvn2kslY6OmadUF4epioEqzddkrG4hhc7q+Xuj7G9kxKCDOu8yFpOjDz1DlCzIv8+9dasWvqmbt7T4QnZms4kMJ+RHrtZhbnQW5KL6aBmhqNfMYtNeB51IUAHKVhUgadU6gPiP3YZFPWNM9fwTUHhb3o+yrK+0Id+GOGE8kOKvvXwnEx1QiUTNGRMUDFvUzRmULmcXvqJ8ZgnSQgC8VSw9Ka5XwsbVfcmCnl0iREhsn82/SrxpPE4E23paf7+2H/UTwPUMRryBbDumX5O75qZZwtp+us+57y23SyUhIsQalUGVhmUuqNE3/gRv0oyjjdDmPKmj26wlCL7C2FbLNIKJq1fUzAkNk0HmKw8LzN2mbgC2Bm6turLRBLv3QF3991veu6/d50K/GTPatvD5fE7C8PpTtTZxdfi6mAjtxe9N8H2q8/m+7HBmb0B9gTroLDUOx3Q641I8ED6suFV056ucNWb3hW0xBqIguA/HYWplIqftqLZ0ET/6LdW2PsG13hu0HfuSBuAFx3rhDSU1xjIOb13HWjn/BBJeTpe1wZLRLlBlOZKnL6i9bQFf9mbUW7t9YcqLynq3ZT8ZO3ESfRcYOPvxCjcpc2LdPMRmGaTtDbXm0BjBdv10d+gv9bsRKJXrYI+ZSYOXya+zvETIy1zbEN3vjWP1coVToccsL+v+dJ3yE56+bbFQm3ZLL6p8V/9qIsMxP7vvhjnUfkvZK6OX7f4vFbjQ1fiL0TJPsEWbKwH8t6C8oU7h52rbvn+MyVNJtjy3I9CFY521xeKchrhmxq0MnQhLQfN9kpRfyS1OBLyKqU4ML8f9fwbUs5Pd08LWm8lQnFe0Q2MgG6CFEOjDWfyN/nQZ++oV4kW13bMP2Na8rExPLNN3LJA7dt1EcvkOR153LVSZuNwSTjVDVEqbzv7PwIlnUgkE0bKr8s+CuGEC6WbRdmHQOubHB7c42NNluqdT0NnRUF6evOfxMkRWTjirWntkTtVi6bNkLdqN54m2xJxAZxCnARs7EfJ/hXR+mdRidyCu096+7QLKedudLXAmilo4mepParet924qRPHQj/tXRU+EBjA8JlaibR/HmDlDukKcY+5iLsyEOp3jGdge/1m0ePGBy9jkhsXZ5dPYOykgH6X4AEr/XrQHj+zTQRntqll8VhiLcDSGgBJTAJaLGpKnnHEfDo9UZzAFiiCbVRAhhL0fhLMiMeJXBPLlR5aeFrNW0L6XOUH6veFGsI+zp3KzBHkxkKXyq7ii9EhoIDkSxilCI2Yz4CtfCVgb3Nsb4ElOYNkscqgxFJ/f57VHuU3FvQhNinDez52qlcEodlyrjGk+KWNzSIot0QTe01+OrU7qJGfRmSkcjgXGPO0UQtlLFhbEic+H2JacOo8hjvStuPKt3eXFCo6BkbeRQrd2s+kihrcWM28/ILl+ZZFtMgvp21s0fyw/GaFIBe83jA/NgVzfOkutrN8TLyv9+tXKJDz6Au0bMUt/IemmAz06tnE9SVrtO+NcJE0Nv9fbnShuQ6K5FXFScmzOrSm2pqmf3BIku9IiI+1LkBDXQwOq3SE1iepDZ0/n4qWhw0ANMnIMU//SGS6yY4YWtPLJQQB9EQRzm6UaDFEiq3ckq1AWuei5QiDHfe9fUDGFjWCapfKtDuy5E25EWQ4Hx+I6Et4X1SWmRLmmx/tlx/n6LnMGZO8+KMq6rpfzY9xWsugcyp246PiSQOZWLBMMIEVxGI6nwppUrI2Ihj83AA1lwsIHL1zbRa/wHTFm8arh/w77b5BTNjOe2v4SdYwrvZdHrSyO4HcCCzfMr58CI0ANXhavkPrLWWSaW/YOg6o6l5n3UIbfivUFzYwi+fSrXdcmh5x5lZBbcDqAYhj6pdTVW8w7eeyE8LP7s+GOwaGuGuE+74BaqEwBAfqpECfhbyXK0a2C7osbsUQu58ECBwnObm1H3IPhRd5qM2pTi/tNYa+54WOzn1LGqNVyynZGK9eQXjOl4U/BIB7PU8YTjTT+07eCm6DK6grobwfkm2NRvKV1ClMUx2TQPbMO2ZSTP9FUF+9vqz+65fw+zvu6a3FuL0JB788pC8kCtERf9qFResf9sHHCpCJnm2r7PGC7xV9mn+/cRXJhwrWPaQc9HxHb31Kl8f7TrIMSifNiPdbf1foHJSzA1VaSeUWVtOVwELfJGFewcxICidf8gNnlCjBueNvkiSDG3G2cNHg12kSRDOyJjlZJ/R0SE342mjcCES4WRl91MviagIMagG8avmmLXz4hNxdkxpVqX4BGbiKwpAdQHL6fN3ONK9HZgmd2ULGRLlHIvuzKPkNkAJ1+7odVIBZw5NrekvN3U6jThT+vBtccOwAPXl8uCDFCL1MjEvStG2IpkIr71TBXZzdv3isGVFg4+fB+FUq1qZCNUNiwjBT8x2F5a/QTH5CTw88I1R7WbCvE6JQY+hrtF/Y1U0lK5Ti7AHrSzAB7YQXmlygTUXyEVqujJ+Z7jhwdIDc2dSFnhDUdskzELmjxOJhZN3Is65mApd8foNUdWt/maznnduFcR1jH2SJonu1xKjThcdNOyNRgz4t7fiCW008WQWaUUHgMdLPVWv1+lG1fGBmqa6Eabzg7jqOyZ8WiU77ijRAPbrDhFRjR5A/xxzA9ZLJl+Vgm25Ro/EK9XaecuW8okU94LpZTp/EhXqXl9PxPwk2rMVJnxl4mmptp4dGgIgcTXcvM+VUoK+KX3IfN28UouEq5oqyHNrkGeHVPzxKo4t2r8uScpBw9hrNDiTUGLr9gcqLg4bL+ZFli9XqRVD7JAx1cHIxogz2GrkzDyNDDfowYfKHvvFJPoOLjmfPCuXeCY2pFHVbyTZgdzDud/OQh74DD31VVeKhqW8M3mtMoI7kmnFzC4MKWzAodcfDhJDmQpib/YVQvWH2OYAIZgNxfhudF/ZM4pWJqCCe85B8uX6l/QaAGKnM9xhlplFUKaqmP3Yd9wXON6nT4lp3IkKhnzfKZSdXzzN+px9riUefbDAr1ldoedkzo6Oj03RDCqv2C2b+z2xd1s2iAEGtm+GkoAM3mO1/cKbW8pb9hyJuXldzvYrmdZLwU0oyQSbKpdu2gqpUIty0OnnUwEa4KduNlKPNSTxSs8pRJPZLq2XX8V1fy81RRleGpVy4RxdNnWVApC4zeEvWPM5ZnF/ZxTLvIJc3MT1gnJmA4D+h86HWH3CbaMrBc3GhxIH1OCsVFUOi4WMyYp0MA65c7ePqr1dYCiT4nznypqwi8M3QEDxCsN5lU9X8ZlXEuzZJN6VOW9v6uELX4KpIEttoj5Roo8xviVpgk773h2+QVavOHEouimJtXsnAyaPBdLtuDCgDcHhmDLnTiNGMypX6RrNZBWVgHWDkb+G1XO+koiEbAtagjX/GDKdBm4NECA7QV/D1PDUa/bYfYSfNkDOVqdkWGHFpxVJjsCAPOWOYZAInafcHIvjpFPHIF7C8flicyj5ykyEr4AM+mVBDbNAUXGlePzG9wWQh4PUldD6lHKPLAwtMpBMRyWHJmztbJjlkSIG2mLo3MlJKEUZQTJHz5zF9LuYjQje3kBXsiZHuCcFlhJ6t3sYtCJOI8zHAklq+gmdEyEAhrKUYso+6O3F3bAgUxJidhM4XsBKmNwvCMfKDgJoY7Rql01Ka7LmhmgvlJbPuUTbXJyAYSyZgDsU1Ra3wzhHFmVnvruoPf7INENiCYAjeSakR+XpfnEdSoBOcm6FnJcjpzCVFaW3CQIre4/gDJoQeEVZFjPfbqI9rgnB+XXAr3Ux8yQO7iGZVPHPZ4aPiK0zaKy1B2CmAf1c68b8uwhp7PwOrOS6eD//kN5NRpwwTHVZbJocNMw8xGXIr581vFMFNXM16L8in7spFX8H5mMPN132PgSQvWh/sm2aFMceK0U/ppwrUgXIcmYb7a7IpY+9sHhlairyg08YsKrzXL4JVAdgjULN+zi9MycIlp54zB8pkHNZ+bhKxltC+sAScTLualVeSWiv9CLC3tpUXPoh47PPULXtA+kXNoNgEXBU3LktqC/3XubL9dXWXgqYrDPKyRY1Dj6TijZNQGJWYQ6vnVaEq1MPLHEsGKOdMYWPjhmLdMsR2MdPUPR1bFD46bRJY1AhQXD/BpclAXwvNLm1eF1ZieCcMTsaDuFIRBQlxE5F+OY3KqKW10jC2vbNnKTTswHAJ3zs4r1rVxNOJnK1uzxyvullx3IDhHmDJeCUkP4qgIPPCE+deqQZ8Fvh/7Yx4ZgWXn1OCVMJImkNOufzTMIImOM0knV4zGDDjq807ob/eFJgWjpnPcRBS0416dLc3E7UZRzBxRke3K9YLhPDj4Ew2/Vj2V3FWgvtEiuvN5Qj1aqCM87Zm3C8HTuxw7Wq+bIRG01lfdj0FjlXi/v8Kx8Kc0moHgd87zHjVlD3gcfI6rEEV0GlOwBdEf+ADds+6o1cthHbdyJiFmAIxZLvldZssrgLSfC3At5PKqOnvDrTfkOGDkmkHeiO+B8LwgtJC0+CYbK47AM2q48DBspOCLTLo9bZpa21lOPSbbLec0YciPba+cxkBQ+jfgcdvrPaRJ+eLWHZEa/Jsoxwg5XoGMAbF4FQhBSMd6I9Yux5LR8LOW3c9T0IhKQq12JdB39XX8psC3nVRLXtYYTsIFI4f7/+HDFDGaE1xD0LokNq/iXdunl2HwgKAbTG3o30gttgkSVaTL3Uci0iXa+13EE5CizWSoKFYaGoVjgPGTFPGYlkLePv0KiHi2dCBBXbngmL6qrseyiYMbvxf78TmDhqM+PiD7IZBJknjYID5pSiPVwBraJtSOJz7z2XKoV3ffQnf4t8E38SKk/vvLy2hvyjMJ+zcb43fJlBy38+2WgTBYXAbIpXJpB/GsmfODwGGgEXx8vM4pb0LsbxHQr8HtvoRt5XY/wPNHRAOPF8Yfd8d9BTkbznxLPcNliLBm7gdTxhQefExA0geZLRlMqfF4g3DIdfjq0WUJyJWg10S482eHAwfAV0DCI9ANX7SVLNI/6D2vpNOE9j0TJPxgzf8XBiXTpsrt2TMArX3VInCayjLlVquf+p5CR4Zs2laA6NVBY9TG4jSDzvt9I15KE+Hq+0XWjUfKXyaWTKOsmsvrA43xHuxhyceBdGQ/OiN9cpkZ5830fWxpF6HPmdKl6qAOnO/Ynm1QO5NPOA/YZ+5T1fzHFqyCjinXuTwEHCYTPDyoFkExIgHiaDZ3puWA8fAQ83VXNe1O3OQIxV+fXnqHuwJ+Dkq5fcsHMWNYlfAvuu/8+781ISgeHieEwQ2vf2tYnR96GVe6RguzXNMASeiTloCwu8/m2AocJunGqxAZm6v7NWy9LY1ZFLiKcYGaBUs+dmttNgT+9tQqmK0C6QfB+576SE8CLqtUtV7WCnGBYVbf8e4Az2bdIrnTS4NSspOvfesvJDS4aW/lTBJ4K1C93cZQx8zJH69x3sjmitXilv9ZKJpPSm+TGg82keJY++dM0ib8gLwUuaVZyS9c1vHMX6NJ7GyJ2uuoLMnYEZwRC6+dpOYyNKsOBdt5n3kwXedcvqE6lb89gkZb6aneTRKZmNg6jqyNpGHTYWmjM90QZg2DOQy/s8V2NMnuWdsooVLD4WCek27dtHAEA1V7PWzjF4KAsDOcE/OoI/WSE2Gg5TI832OIY/9/I0VkqydxJkjv2VmQiPgztr9PLaO7IZnhiekZG9pPkYju+CATESuWjtqw2t3oQhs9DcmmFm0r7IMMWcy9p6/cG1AjoNa+hxT6cVz46ZtYHCDKw0c0vXne2/W5dRxm7UXtFLSr92ul/h1W2XcxUMBin99GMyu/EPb42G8P01OpWQlbwolEmbSvxOvxIWFP9lFq169HV6hRMZHVb9zOPTtQ7J6q1gTyEBHzDhhbEtsGB4GDYTy5k5d29w8M03hAMnEiaJe2DLfrkachW4A/7b691vptGZNMks2ntXxEOcSarexUmrs5ejDMX2ywGyx0su5azsAhj52v2/L6yAYQPPH83sb+LZ5qqyNlh6Po/QgPuDiGzBY64npK9Ekvrmmo0Wz8CUsBQVtumazRB4X29BcCtqf+A/N9MfGvnL6W2fh5nKdJdOFWGwMzkqNnU8I+NnWMTY+kXOOflq7Oo3fqnFkvTY/nEAQTI3poBblY4EOecV7V5O/ZS2u4mdSFpOukFTXk65jEFvXWrb8NwtFjO56gleTxzlxlaAsBm9jn+OoNhvNMOBZXPclbO+AJ7f7Wa9OtfUQTzGA/DHdqlmxQIQtNWMIWPiSE+ERRq5jIXpctfAAaVQtdoKvUPfo92nZEtR53z5SPVR2Mlk2EGVWY0+D0ha3hEjATAdygPgAJJ1mhohXuM/eilPfn3ESYJR2bzY7fFuFf1sTVhi5uzePSZ3UJWp+cNZb7jEJ5mUByhF1K6NV/oBAaYkMpJGxhYQkaZDB0VANFDfXgacQtveOO/IHO4fj1pr/F6u9g8xBhvuAZZ6khAe2KNoPl5gmsARu4TllMAeVWOiOg8g0szKLKWQEGa32puhZQ2YgwnqohIhN3jTknn1zeVhdKrEQtA6Utg1z3A6wohdDnEilSFFmxW/s+Zn1KwNez3wd33vSOAZ0dTjTvsLMVfX70nxAkds+RFaHEE3c1302+Tfk4jswVDuAhOqpCYuwVsAYfGWDW1id3JwwLNv6mZnGFk3odXdxY8IX9NBOnrsGOdMOsFE3gzGz9lBc5zZB8r3yZkUTgyfwQnBTT1hNG0PtY5XZXTKsBUdjTeldDbYAfyscv/LIHkCkvrTagmGiMN0pY9iK8VtfPutp9vL53DA+jA+mbHOaC4NiaPpCyo9ID5svWtX3S79EK/TG50CVIhcKv2SzUrW527BRw5YFoe46m7t1xcICYxqf/1sB7NSTtSCAvjrLbSGi33E+it7ijtGWXM1FtXU46u7d0TZQfs5wJqRU6fnYYUxmpXdv25j7LJT5tD9XJU1ovTbIRUap4zk6QgyIVUn+ujA6U/FjN2kDPJp0GfxrO8aT84WfD3nfJM9Ns15MfmdjwCZQjyR+BiiVrNFR7tp1bvckN87o/4SxGMzbDW/TaR7uWE5bp5QMWM1iQssSaoZqNyCkGYNLLLprfRLffoe49BqKTdASz7kQPVYcA+zUMyfz9CMuHgpaUD/3ZJJNhbhTUmkirYx02Z5NwmpxEQAmGV+LLAj9hwYOekxcF2JUtfR7wPVVuqOoIFOm7dJm2mAZB5tKFmqEFGiW9t+hZmtYII7clH7TN3E5Gy3vrSF5aUPAAOXjykDhwqEie9sA4SNgOFcnbzknJxNisIysCZINXI+fKrwNWajO+WZNXMO7N2rasNYHIo3/rKz4FvdONSBbEWeSlRlNcfUDnJhVth1nvghBsUPF7KLvjaXHdkHpg9C9FnVhIDrsPqRsIYLgKm/benO3zJjFAhRJitcgYZ6Bn/WP+19txPDdvXqiLD4Wj8K/dzfQ4qLSCqQEk5nhj2GXiqqKhmi8FC8qJH+DQRD29Vi9a0toI46l1RiVYMwikFp3UZR0xvnI1V+egZtY+TLQ+0VYvOjf9YzBlXqY8+rk9CYafsuz3Rjx23mkelOVVHKjWd/IBogmggVC3qxbDvyk1szeEt1B3q3X4OVDCI7M7hWYYNWjKado85z5OdDLuUbQtMsWkC5urQXcvmoyhwADpzXvHFe0YGYURmRo9QBZ7uqBP90+06gUky7sg0aZsmtfRruY242LcjC5vZtP9tKp/hgjpr/6SYP/9qS+5fZ/qA832cx2pDXFamdHpBNdy5j5Vp6iAFu0lyMIIfvIJobH/wHXFK15c64sHzkcl8rwjNUMrrKXbQtlgFXVtQZAlVnkHdXOEuLY9QGx7liA/RxUNAg17V0talEbdSKfLuwPcJJiVj20cE5owVr79FKUEB1qRLtM5twhsyKFy9LQ2TLlPQbtbGMVFDf2lkvTltsz92fB9sTpfRvxfV9LZF/JE7Vdi8o17k05WkICtwV/+/AwZp9QEnvRPubfnoiny0fSaMDufYcuph51VbGOjEi+tWKoOu0yYZ2S4Z4G98ObguKh9FOfTtW1RElzqfux/He9UsH1t/uBRaoyk+ldcZm6w8PrpmVPsdl+89c85tItrhU9/2d/yLe2em0WOqTt7tJsb+lPbM07+NyrWU0Hrd43nlqezXcFf+fMOOqCBshCIO+yCF8jgEF7fvNsiEN7rp4fpYgEm+A7vcAN9a9n3xgefOu2+vt7qbSSTrA7XqI7Vnp04p4p2phXO+Gmwdz6CVZQK4TZVGwc9GwJG2O7npBP2wqCjkiPGEdUFv8RkDNFIdpWjc9KxP0fZkN9Kkzq5dXF2g78IWsXmKFogarhAWsXO/f5zuc+vw3SjrgCiGaxQeJf4S1xiYFzj/FN2LOJseNiHsZ0bDnFwN7dDrwFI+dwBy6amBEEOuGgfwPjS8wko3Lh43BEkB/Vf+gAa2d2rUAKkxqhSB3KqJYWNns65Kb011uDsgDX3pHoVogQYpyW90OJOSBEgLczbw1c4j53Sx2vVSzn4dCFjhRCrfCtq1oONW+AUdWhtBWF2fBfocUHoCnkt/OutMYcjWyQknVbfxapR7jzMZLQkIAk2ZTAqU4gdePID9zAmkzc3qBYerylJrmyjdW6KmzYXZbYS6H+Vo2zBfhcx3KDLm53md+iXAJPWYx/a6gMhP5MpclCFnZGLlXMlHexg9SK6Xw0Dr82NdVtiLm8772nfdNn+qfwhEkleAH22FgchC5fAQmv7asPrhuPB7c7FBz2AZXT7F4ftS6/IDCCzyFJKA73mplFx4/oZ8gBQGKoyy6y+U4YgYsEaagGfWNEc9vtBBOZ4cmSV+4r0be/ov3r6LoXMr1J8d+1qhpY0FRHN1Xybpp1/yNFbGVwF6ohZ+R2MaUk3LuwBptbrmLdTrnR2nD7/CvKdLQV54VIfxDTEGEqCh1TLqfB4XSjnAU6qHyYhZ61YNG4qZWSEqhQ0pRq3Uo4Ttns98PyZGwuajNA7hx5/a0ChC7BnFi/V8S2ZMI3UX30YXRvYqNHXOwJLB9VUI4h8UcXCxAVuLxmGAk16adzmEHdZgYCYpufyzclBST6ue5xirevsm3DcTEgjVCC4b/DXWCZ5UOXUMaDV03/zlH8Mx85vYjPxcxkz7UOSmhuhkTfhg2U666hD2xBEEqn4OERLrkyePyuU3sCI+Ut6RtXnbjvJq2Fodk67YyeC83UwD0Ip+moALpXl/HXhtPE7zaQQnXepvGmncBXQiEUaJDlFDoczK6XG1fwV67B9txttGgQ/vOyxueU2acc63ceTvOYlli65oE0OakbMO3BRQcwT7XSdPTRCAg4Cajp3BfIHcTBhbRWxNqMJEEhrDvQ1+vjO05b/fO4y3CrId8Ft/rclvOc4hjlnGPJSFXZS0kO4utsOzHBBYiGd4xjw1fL54T+V/Bq8D9X66FpCPTn+Z2ui260GwHbfEpjem5wjlFpvMDBHkmzZgu7xuIVWzeTrdr0k+WwJaavEwKh0409MUdZfEmDFH+nCWcD2IWfPg2bLJWqqxE1JNgyhhHHF6E0Ndt74ZTHqu3xz6x4mwHSfCsvte4NQhFyuKDu5iL05lws6pHNMBRUrGFYrIFs9RNTd0AVI3ryjsMVjLfCp5AXjux5ODukN4XJ7aVBU1D8HVxbfTSlmS/Txxq2DdKYbJDBS8grKTAPXeyr2bhyS0zsUPacf9eAOmWnQZeODiOjvlLZBkxaAYQTDBEs87/hk5HRgEX+eim0vHOnccjmhr+P1i3uponj/a56oR/x2JiqYHEfHGMa6oQUE1V1xzIH6v+YbjFvlm6cZoLm+fPIy92kSX2RJ/uqSccQtgw7ziJyJ0KU3QuD3ePFAiy+MSoVF02kPlnbxIKLYy4CV/RdJMjHhnp8GkXo+kc/9VOFarS9UhguW1+4hfbz4TkLpegyy3aDn9cSQYy1wsTsfsHozuTucJqT5yHNB9cBfOxsHXb4v3xtZQJknWoHwwy9D6JDgsVk8tKPv07hXoZg/SOFA4zC08rLehBJbHFAzmOnZhA8byUPjwGPbF1SyOeqNrslJaEF/gcE6dOpzs3IXAHVFcS0s5a8fG2OwccpU6kii3CunZD1e/9fK4qYO8eJ26vHHl5aRZZaf6Aae7XMKzkMqc+WYlKLnpRV7xs1R/BxBVikvwRKh5Fft/SynsSaNK2bDhGCj+RUBU9hJBLR7A3W/Ws0b2uk1RIMhcRakYykRAV+Efj1+OjLsNNWN+OjtIoKOtH1VvfnG/ntSUnNHrmKNLdjEzapncLspRLQ6cXcKR7pGMsL6PyMI6aBUhLKjj8nXRNTTC6MkeWZGVfLeyc2qa+Z7Jww9dUz9I5LXJdfkOFyyTYug1y+n6C9MLziP6lY0s9ADol/6xoaooTB21JeuRCxR9Q4Q1dsDQ6LcVtqn5kugAxWNl6cMZQEwuCDStzpNi4spFkt7TKSe1xVIsJjq4ns9GGERf0svdG3Rw9+2qcGg9dbIl+8HtnwDVFYl7Bz7XTgLZ8Q7LqWEB8vZkkyzSPQf5jtuqXGw2df7JB+cR2iHho25xF5DuKo2u7GldArgvieii5Uasm7fGVJ9PAzttpSBxPVi37+xrq/7R1ilpGMu1BdHqM420ICBdIM7onJI5CuiqfphQ8GTWJMuZwPXGCON8tTeGdtIe7tCg36GMg45xcFIk4ginrwfvCW55ETgc7YZYt4oyZyH/zV1Dng/l/5FTKmDijIcxykSpz6Tthkc4zxAWYfNfr4cjo/23DSHUSF8doMGilUlehTyL857pB8VztokBQatNr7c3lOytn4DQt0HOsPCJb9XC0XV/0kuYHgqXta9J3HHC9eHrMQTHy7dU0Jb8D6suQzg592DR1QqYWXd9qAEefXqdmi2A/EGNI/tEllvLF4FDkB6pwmxyJznijKpih5Dr/XE0Ki1BhMxa08Ok/FzXG5zrtPuDmW0vm+spbwQhAJOsJgAu/nzkHyCVzk1gveaEGruWdC7boLg9j321FAyYMNu82SkAYBQACxOjXowkts9qaJT6RCaBei9KK2ELSf1W0shFlHYxWMjjkuFEqKmTgoUw/JuzDRx3+AawYULfztbfdfVR9Mrv8sEdxsyKdZXelr4HNoIkOtPvaFmkpQyWVMKmz8GXZJnJHcjsJpAytkw9Ny9GB9lMrakUdnHN1DMigWi7CT4OlSmmKjcFsgdyWdc4+d+IZ2B2iQciFvjyzhou6hqIJjMS5EsJI4c48PhjcCMITmuD/xalNe5M4YT0djw/j5gRpnUumTH3JVGLi3obEymp2iQq9gXvaL7f1z9hTQnbYJcKN9wBkVYMMIbq3kg0vZh5aiV/CnxO7Edz30KXptizHwYl//Yf9XnR0ylmL3MNQ/lRzr0gx3Egm6uHFu70oKlcX/Jb+SWEjAflK3Ct9KVkz2XY9HQLixptslAX7WHCkY0XYBeyvrqKE1SjTscd3NNm6Vy46a4L5p5V8LJaSq03ftsHCP/VxQo8gRxvpo8I1Pm01lNHIINUl+IXdGD4jI2a4T4RUY75SSim9gz9NNtxcXsXVjeEzgMDAAo2AdqbziHVbSDguN8GfYKShPTu+qm5BpmePYdoN3qEGeW/mVV4kpA4Z45/Ip4m86NLmp5vjrDkvcOPKWo4+pZy3FcIEz4UkO6PUtIxhIRYSuDK8XsSKgT+Wcyvzd16BHqL905IzuBTWjkVSChTfXYPdwSpshAi1eUVgXFfVoINcTr+RPdPDXpvjJGfD9E5WbeDxuob49qQ86wOXLB4FVS2RGZqsOYH8xlRFXGYWMe2xfMXNiJmE7jBnwTaKFQRmZNgMvMc6xkYtKFOJgU6GdxKIsEO837Xj8hWmRqrI8wm56VLziCeKPYSSgZ+JGV20XjNeB6mieygBXnzJaF5j0Uk4iYWQDkZn+XZmxLB8R/ywWX/5o3fmK8LY10E8h2YDCm3E3auCAzvODIB6w9DxtKrDzoSWEz5ywzd7QUdHPNvIWqoiCdvTof3ASs61lPVCgVMG7bwmA2YcPEML7iLBe+qoTca1uRx14ztoCd98d/E/Hzj34DGjUtni1FPsCRIulQuJIqld1kLf50jSqjbgX8/DCdfwK/N2Mi3bf3aUgVnYHPpbHKhCaLu83yTdZq23ohVyS8GkCHNc5o/0YArL1a3Kim7XuAyS1tfjJJetXBh37qSEG39YYUayDKBSoAD/Dm4DlwkRrsGtMVKfGeIAHkiY+0CT7tQbVBOSk6/1mBbkT2j/GojLRDWH+35xf8PkjJH0OlgwMzr1Qg2eJnbYih8bwk4y01RWfvZts7uBJDDr7BotpE++F7iSpzY38AVI1Ny9BnfRPKxV0pmG++33vmQ2pzBfHL9WJ57/b5Ua/lCLK0oolQwKbUwNpJfnLAbt/WP7YB3jCqMyzxm7SzX6Jp2KRTI0r/uDM0B5jJa7uOCz9KSYby6zkqSemfZ/YTfmzB8FekgJ4gib+pq47Xn05cyyMPmeBBspbnF1m178uJQBIfQyLMN+7CoUYPcVgt12SffTbzaDsh8ZRls/cmifbfZsVU3n7Sl/HGZAclSCWiCWZHVLpSDQiMC0i/H/5iT0D25YvxorkpxrF3qwuCylVnrngifMTw0qNclAcj3d2WBb9uAoGgDlddZ6GCucq3IgSZHYxIjxTLMIeaxLNUxbUWqFpUgjiwiqMxMQvxyBEpSD7GlSSVlJqPTQyxVMGeBSs/IGxwB6L+6p/OWxBoSDQ8LQBViiJgOWA8CszDlvK0G1TZwhAEFKFobhI4xQcqHRQwWipSlZZvCSjiscZyf1YiM5eZOHlmkjucooyxzcDdF0l2evEJCg38tZ0F6lICzIOfEpHkAe8iAJJvEH/pJ8MH+UbHFX1hFNZQBjXVjqpmK0FAyyfcneq8usu96hWIs/Y4l7SJZ/eXPURakO8HYJg85hfY8L2QGAeEbHiXYyHDM1Q1pU2KfXK6hOyGBWG9Fl/fX/q+lbG8zmvyjRchZlnuKAANoqwYaXj+wf7MksuPvwyCaWhn5bGrk82V05xsc1R4G9xN0mrTQjvPV8T2UBGWDRAmyknELFmc3sXWIaUomMDv7hEsPzBVYPoSNh5F4zsQ11f8MF9DrrGGO16IFc6TEiez/0PwZKDtwGf/zZIJzE1GnKxrTV+p13GgMeFtoPrKfroDFFpcW+geigNjvmee1SgHz5vkoXDUuBj988H1aLBASdBgokF0LvbiEVsd8jN9B17r3vngL2nFociLtRttPzqXchJDIYuSUFKT8Fyi8sk8RTKwRGRNYSvXY0TisSXHGLVqbPltEgxiZdbtphN1Ton4zxyoiSRxXwvC6Y4M5CZxlYKNq6Hbbo5G8nCrs8GnxoX8q94EQGDV0T4omo3j1HRiddu6/e8fLrJAS3l6bW//S4Dx0moJ2GCvSjleDRtepnVnOYA8U2+c8f/csi784+GaYfh8AK45lenCy0xvUC0H1JuC9g3GQDgnsc0DwanJBzslcAcbl0kIpd2ZfFcpAn9OjaB6tx3tRB23u7hT+6meuHF3WClq9EGdTdVxZQleLhL+KWpjT7z6c99Go/nRz4JyCV0Vq5+kexLqirFOHZM8sygZuJm31/enpapuoBE2M2MtSqoaPtyO56BjZrDVvpisE0AG69Jr66/eRsTB8VkhCdXnL/bmBulMK280b0uAAhUS80IgTrEYLCUPDFUoWpVduPROGuqS+sHtjpDYpIao+avAx5O0cKpe0uNY9vG08KCJfZtLEdW644z7TCSV1RzC9jB87Y4rd6DlVzrrIG0DGfTG4kJsGVcxsy5qkY+QX9hgsQIigoKwkuKosPzjoVZ22pkTYFkmKe5lrFEeqIVotg6yPZ8kVZ9+epEdorg3xlSbYWnyomZebP2YEgJk64gsCtoFEQ4vY+aJfGyUixLD9ZdGqhOG3O5cjVNBRFYMgp07N+1VLpcHiojYcjdfMvTnOjYgQYRUjpFbQZU5uw6AAbnzyELtwoz+F2UyWiuTwLmzRqku6EHyJBkYku6cZiWGoIBD7P1O0An/HvIvCauDY2TI+DpK7HcbELe15S/DiCExR0KSXu4QCKCGIJOEb38oucQgD3CDsfcMpCRoXrPNirx+2vUoB2hBPfRFqA+j8irmEPgZ3MvonQ/AC9eBUyoHIJwoTmjGIgBDzU4yEk9wB9ij2xOGIEFHtQj8dqWeYnQCV9JJG1jNSvSYtO+PDBscvLKK6DW+c92UNckvLCNJKyHyy9BgDE3nWEQuSqkvHpcub7s0NBV/3U10z0zePbT/j8p5dbhH292TXUmTvFMRtmiLOaaFAAbZlBkyEZ1iPW52Q0LlkvJ7D8/HeaHPWu4MGU0CIiOzuQXuX+srpdqsIz2FnMKj2yGOz7c4JGy5hSGQvB3frW8EndAE4Fn8EyGHy6cfqeTVIu5GCUc/joBLf0PbDfYbG8orGiEUVXXmnJ7lPDrKx9xHI7OdcVA+rvWz9xux+mGv7Of68fMY9CCK+aK/p0SQVY1ez6VtqmN1awBtXrAmDAMbLTDnN8EHrj8TZ1tWi2C7TxBpy191Ep8SbnbrU1o1uyAxzq5gIr5/xSJeAIJ1ZsQvaFb5qpAUfvoQetxHfzIseeKq/kysKVavkL8EXRhZ6UzxJ+ou0NofzZjOQ2VctFGTzLWTbuVHyJsq+KswzvCkKmpo3TXJ12Drh0JYULSdN+dxtB4nVZCuduXTWG94cc4VRyrOW338NnXlE+gbQESl6c9gx5uo+PDRUqmjFIXxti3OM07YSLC4G+2BtQgWkExqFWQNmh2ynqirfcKU+vNcYssjIbcZZFo100lneXLKRa4BC3soPPZI+xqFyYDZz9YYYYpPe9R55LLfrKpMxBAjQsVTUlNMr0iCNUyKCpcfDWhdWN/Ta2uXeg3ZByV/jk4S9pFsmNJAm3V5L6VA8q5j5fPr+OiPrKxtzL2d8oB9S3rAt0j7j6bU/WbIy05Qc1T+c6Oa09wL65NzoVwI5oX88N0RUQxEiNboRkJPH/BcZ1RCGcH3DIKQiJH2+1CBeI9rxwmuspF/9mkGofUKAaL1fHzJwGiLQVu0KFTHQiq18VvZDtAaE0DfEeJF1OkxVTnD/C8z2JwGWaEWABM8jkoqNZkHueoSjH5BPSx7pa3ZsGvhrmNG/Gz3zgBe+fNpt4QDAuU7jnu4+tzUPZ3Vk+drI1S8dMnCL2ussEixvfRDNwicecjy56DZNFFp5m9eg7+Gxj5d4TojK4yaT2ofkxQBnN1+Bl/9dB5hZsE5BbKboAWIZjxDjw6yq/DcXN2N9D9cxR84jRrsqaVZxyXekYdhiwVILf6GIBB1LDk24SrIRhBlpcI6z/t2aLwc1QLyqKWQXz8hEkXzGQh5oyjhJ6Sv1SHiJ2SE7gRJroH13h8xVZfgRuYoCsJPvSdJwq1MlghQyulAiiQ3Foj4ePpai7Kg5d6NTq5TctfcWO1DD3Lc5oYRlYuv8nXbFWLymtj+uxfahHkP6T/rq9KUrnNIP0yriZvVl0JHU9JZL/5ykqhTu580VC7Y8JGY2L3DsRM98W0Jr45EAEReHZV/0neQmP1JZ6TRt1cnKzPl6U8j2HtJpwqzsDtvBldMOhqYkFQ5gN22jAEXJHT5ba3K8xu4hTXDKKzT7yI7cAhCCCgpl9uyLKYRHnHO1cSn+NgVWjHlU4kv0JwNDaSDmQ5KdZ594/D3twa7yV0C8e8owi5XmkFwi4CM4fDAimyZaCGOFW9n7JxMuvNbtLZPfGjD5wygMcmZlWOPyUZJ0DFXHbx8FDChVJlHmqIocH7sRHztve7BDuJUq6TCveStU5tkryETpRgi1RwHtkU9Wu3rfFkD1jhmriZvhqV8SoM87QXiFJNfq1ZAJrvgHIelL643nGKHgWdiyiX3glJ7Jj8FSE4MkvX8veiI1CxGXA5e+EGGZrUueHm62QHnuzTY+Cx6mjYrZKp/KhFTykP56Dl/HTjtrhiOH4RzTCPmSC7+5WhTvXMzkLl3Ya9cgTt6YsUnCAukjbLawb6EfYqXllchKi/K7yYwobnzcR/TSL4EC2sJ2aLp+VYJLuq39kU7ZzhuNm/IxjaeTyT6uSIJ0TLfKgKAUdUNjAPGGS68623SNvyOY3p0SSkToheE0CLs+SPBhqO4sZHdf0CyVNcxBotdSUxmmzkSu5wNa7IXTlQrSfvCJZIPBj9k5omsjcJS0ytPfL0fm+obf3DwemUYVYUFRkzzs7Feh9Bgw1kQHh2Q1a+pfeA+4MEN53xbd0v5NKcB/LJcwfEZmWVuPqSZna1lkmnXX/GMoKvF7i/2uSWmeR8fzVl65VYoJ7zNvghRIBJn+W5y5Mlf1/YFvtZA7+ycCTcDoiFdAXA4hP/qhUUFvEWkbY1lp1uYVNPfqL30M1t/Q8N9i5ha2wjZGUD7jetDZCZVXnOZb7G+S5AKhEFRS9pTWglZCwImXzAGdheMjI5YdYPYrLr7Kxg4YH0fbKjb1n51+ybGipUKFyLguZ0+bnNUaQTbqcjHiSyv5ckf75GN0Hr9QR95CI1xf1r4n6pDDvkndjsOtrGzbsfMaupFgBSEz+qcozBZU2p8AzzWqPKYdemVzlw6jiw1yVbKgVnlhDhzfN5gosaFbttLi6OKAPoykw3xDFv26Lrl5GHBtR8TFOvZ1Mdvf+xrna9/7DnaFJBW+yu6b8Jrj6wFz77Ghg0qk6LsibnNU5+Elw/o+MSx1AQGHwi2uoeSo7UZlC97MhCuISYRtiNPhOiXSnvSPyDvuXnlTheM2wZQVy23zhlTHtY4RFSY7NHiROY1JB9VmGBrS+k2Hx9e49goiBr8j3wskCDIC4/4V5F49gbWE+az6PL4Fm45XtmUm5qkVSxxh4IR3uMiHnpW0VLmAi47jF2gRUkWXpxEcNtFJ2oENVxrBVs1IrtrePNCrf/+WBrJq0eGJM+Md3ZrRZGFox6CjoQ6KMnLw9yqSsc2KxHZkMo+nUIncMFMXvSoLne9Zo1ddsrim3W4aQeLn9IftZ2w/zjBuETMgspYBMVY7SHxgreCwKJFrrUZPK+kgS4z0jTorHanL6RjPHEzN38uEPQVoQ8KOPBn4pG9Og31ACxsnWOrXpIUhM+oQkHJ9oD/ERZpz2uEq0AbGbtqiAMy7i0769umRSHG7OuTPJypHbGdlMsvQwS5CU5qymGPnsEsCBOCewTNKPpqtrMb+OZQvv7TEekB8tm8vsGzVNUAzlR9Ya9kzo5DHvcUL7zwPhd7RGSw682etFVuGxRvVK9teWRa1Rl3vBgla17/8uGk7DQanVxbUOdQnaYFYvwWQJTlUZtqDPWHtERdgLPHtuS2rNOuZOdzC7w/wOiWAW5o0R7uncy4kiedBpRIBZb7GBNjjd1PvaIu5YvSpSAfAvwRYjnC2zIWbyQtcgrDh60Iss4pdZFiRY51o1Ac0GwnKeA+j0nnYNyUNHBF+mGq+XPvtaf6tRuThiaAFgbC+Xb+hQ3UdyCLEK2G4cNfVyQgqhBI9MhAP879iMcf+tJYNTZfdqld8fKBiwuvBsPja6EUzPX88M89Z/IglE+F+tDA1F6rphikN9niJnjI0aTCku48gkJThFferCMcGCSdjRwIb+2wrQzYkmD9Y5KvcTeWqbOSkB7e/GWx5GnoKcvjhXF4zlNMFKnkkVUjbVzlaE2K659Ey8w0Q9abATUb7yMLlJVl9w/H0qOfK+qtEx3pLb8gFEN5Nz23bHt4O1cza/iubhrMPpY/gN2q6B8oaYbVqjwJU6HIyutk322RKYbNKlUpnJWK9oDLX6ILLP0RuyKt0AHmExVOH9bsuS+S9bZV2RjKl3ZrcW2sbY+OFdmS1RW5dZmIWvquz8mvukH08IyB8SWGmTuGQtPXvw4BAF+6KuqBxFINabTSrJMi2acs7fY81adMxwtorHOc2X3rlsHhjHzyGCG0BrkEPjMOsUfLTn+dXeE7lofHubVUfcA86SBsR0zJktDoG75XZBLog9iZUNLfFOHsUhVz+zzL53UYaC0vlND4+XI6/qMgHiiLVsmjs6bhjkuapCqNs7ro2qhpvFrp1cCNIo85aMAyfpHax3LOUf1I/YdcshZ+SlWz7psNGNz4zE1xCN+N7p4N+g1FpujkE7/fTlGHqsUouW+xCC0fDd4yWHWcdnlC2a6nYBZk9Y+e1sXwT9KKKWPp4ugdhfgiBjhJ8Kfz/A8JObyerX25AX2CvYI8BGgzuLWbUouPBUvjANhS8D8JCrb98K1AE7icY0zpsF7IbJJ2HCK87646JyiDvmW+mDjMup7Nk0hjxZwhk1VvTfG3el0z6CyIggkO/P1iTblGQG7rFWA8JZMKPG2yzsQ2SBmO3YJEk1i8uk+CWdEg10FJFN0V0WBGpHXuxYjWdakc2S/SuVJ8+ijg2MULbtmW6Qae/mtmlTfrEJ3Nxd7jko86eil7UtuUa13gMNu7O9HTchyJotCC6NasQ9/iDGfnPL7EIqIxXq2d0p7RAoEY9JFQdiJl0wOGiH4C/utjbbbfhyyX1+hOLVVObgYuy4naTEuQKTvfCJThGdF11y4fqjob/TylXp9qu4RWxiL2O8BLOGHSb8dpUQkv9k/+LOKRBwTlOxMPMU4AJh8u1rLZMbxNmYIQ/J4RigHKjk/JIave5sGLMyCXoegbP5xKyAxdll5B1hGRGK6+gVLf2TNWvYuGUkSk6u6O1E6ze8gJ77NK8uA6tA0DqermG4+D1VqZ2+MFtBOAOJURZs3LpCi1huaJyh9lsVnMKacfF8gDFjW81mta2H/6uaouIN12QjBoPZW9WlotyPFdw6xm2Y8R/J5W7xt4rzDAZKJXrB0atxsnvpo5ffIbqiMH5uJiWJpnfZ+946tPEmeXyAFtQ2Fh1quVdp0gTakI7/eyOaY0AxVCLhnIqbq5DrCj3WlgajRwvzRNau8wfrBpI9OuO6N9TGwV55wx25XpBfhem8sigK3/wgsfDvpSwbRwju8AuBhi2oC1KYzoZUTXjs5nSjI2Nh9mCLRyH8iYAHVHwIEeqcCoyGME4ZkH/QCrGe7nGb+JJUFvCLP9lMRyXvnEGp2jNEtVerCml8oETnA1Lh99jok6OwJ5BIFKaG8JEfFiueGEnv/DrTYr3IhjGQdQttVO4UPzYJWx8hVX0Pulvd3qcpJxKsZSReQzelIXvTYK/kkgtBB4UWVbdJJT4QQXZCSS/KdkpJ/vzIHfVfe9Qh45pQmCm6NPr1cJXuWC4gPG2kKRI6CPgkx9lg5z2Cy4EQRoXwaijyq4qD6dwPlXPc8vILMo8iNsRT7G52moRKnenCmcIpSGhMuwsHPnzLFqSPdgCG4KA3fzsX0hHLOKh8MucSChbNCKNq8x/pDs8Tj0h3C0D3ezhR8GrMDs3KwY4KuQThUEaUkfhwG5VzuSUYHYvfMVGesZdNEvylagKiAS42qSvrkEBqdIWAs1wMTm0FimkBrVz4DtLFmumhs6LOTjEelr1k7yBAVWSth1wInTbqs/CWPkSqh8CQvgaJjoyg+TUzVM+xH1loMvtaPpffReMkUox+2KyLwlYCmJu42hIG+qPVv9ULoo0hYXQ6GH9i/qedwXjt7B4CqFYFUOwiH5McWqklJ6c5Z5XDzcMbD2a+YKWepyJRRe8mdUqPOVrzsjZT6CHp3217jix7y6vBaxunEteowc8wiS8XS/IYi87zWMtSDbCzdElX8Lt683gg6Us5QaHWjr7Xecpk6sL0+2TdAqVbOzvf4lkcUrKyGxQGNAdpezZ/d0+gZIseCIK3Ro6inqqajK0iL6eZ3s3vxOZdsAZDcFgZnnlBETSJApw53L1G1HoyfklOQxbfvnJmWfNQ5k3FYL5pTCEinilgfE07pZrJ3INSkHigM3DjSeAtBqJXx774QBHKy9lkr3wH0MUnWWYuESThZIsa3xBsM5IBQxCbpzBTk0uKKIZi4H/h/uFOLSyTZXiDJ1t+UJF1BJoMLnwBtAUNbQywqj69oFvHwBFeKZCQT8syrYHq7zNI8Ixn/8pbSsMq+brTpo43yy/PxQj/JoE7+z60cEmcl3NxHlmoIewTzBN+8THQXzjIxWXLF9Ml3zTvavGxXTLl1Dz3jjRHsymvzyVTKxJ6Ssfz7NgPsCNcmcgJwLTPqRCY8nfu39V1i424vhSVIrpi43uvsmsQkcYvlZpxE7YyFlUNUNFtKvFfpOlZzDbhj4WWWKY5dfYYokFrJsPadgoV4mOPtBPOgUGvagW1lm3+nheZ/b4E0gG3jkGTvwKTsT3RLVRYoYnq0SQVLm0vMedxOG+9rgNXpjb1RA4UfZiN8cZ4CcJ1xVC+Hb96Wqij6T9lX0qwx9GouhFyDVq2N+/1P5/9UVx8ePZ9YrZHIhmvuCP7PWi8kca63aw/xXNPXxiV+AkMq79apZRET599zmWR6lMnzPa+px0wD3lWiYK9GBH8lJ+enwNwcUu/Y3AvWeOOICkQRloETSS0sDKVGoNpgYlOVVIRa65MQrRDZuD21JomVL/B3a3mfxUoFqV9WO4cvlUB5Pg/rx6lNu4VnRBJpdNonF0wmFqgy6B1/51rYvzbOY1Dito9LlQQPiwxsS4NPnMDVFj0QZruGEzeZPv+7hIf8Vax/LvEu/YxlvKVbUhEy71XeGxBz5w3lfDCMnGpkue0+1f0W2pygnm08BxcTSJSB7T98Y4nyYe97i7t+Fi72LlC2VPaqZMn4ZrCwHjSmZ6tOdnkRO14pJDVAxpHkoivSS+quiIEdA/AsFrm+f2ImMNKkNGs0K2ZzpQgjZADke3itFEvVD2HulRy3IAu1jCIJAJRo9/s/E3tORNiW4YtkyKrJQPGve8OMYjWiIN+S1n+pC18HlFiGZ2ZPjYY3LIKzuIEMqxJ1QwLOZ/JXlmthlvRQXjeCnpmlC0rReach9e/eMtFx6Fn6rm355kcazUHKAMy9nq68sOCqnKG7S/CpNyDWPJXBtkI1lV/f+5hR4NFeSpCK+3mCUehjfb28qz4tiobimEBhCkKw/AFbkbX0TzkhjFHQySQTNUOaSxOk75s8yKkiLCwpdAFjZGWFxut6KjQc+A/IOwwlBya0S1ZPa1zcerA+yzpfofY+6HxfcAdL8xtl8RVW/LCaOMo8KMwDOGeNT90z1F5g1LQIlqIsHLhtWcsfkSsI2ZYxNdN/xd4tJj53zJLP9IVwShNpL7POpbFZBnb0mfgtH2UEaPMuqNI+W3sjf6Il9HucRNfB4HVLk/SuUBoIh9lXBlKCinAfBntt3mRkzFc/daqnqgoF1jPDnkAD28w595+FQwbmKaiBxdIyZWqj6SG3AdveiIV+klBsd7XQSzXO3ovKovBNMjMlTgFybuJxYYgtGjXaW2spqmj3YhG/a3sWNfOQjYmVaARrNxvjhn1FKbJv5I3qxhkZjnv6o1O8qB52cnXjykYCOu6czkUDQO98OeHYkSz1nL4x+Aqxc9GwKPcWpyXBGcCULC86rPRmvF3pWvlfymci/czFLC9j2S6WrmiUoPdRNJb5X/VVqM9M4E9EoEqu6J1b5MDVgENCbKDA3nnuoKkCHuizUx4rCN+VH+0ikInJl3lQaKAHBfGieYB86+2uC62Y4yuixgGaifVBqiekbS+qUnjauJWKQREYoeaKW0taS+W++mAbqr1s7RVhUD+qX8shX3k638QPILXlHmtVfTKORDEhtLzFZqu4rYLEGeKuzW9SPVFOqllPq1PGUg6YMUXuFks+GARfqqHej2rxHpTM96oLUvqaGdYNW8LRHAeBiYnQHycKX5Uou+cTkHm4CCaT8ctnWfbeqocAm228XbKDDxELdqHnq3Q5qxRDbZ3UdFCeR54YQPOCr0GZrwqwk95t2zhCbqL8adqUDkmCuK17hOxydUnVo/ow7foV6GfLBWOdiDWjxPYDKQzP6niqJlVRSM9hlGLM4BYYPQwGgTLJgiwPdrur7gLa+fO1dmCIxwIinqAwm+2NLGlwhapsqUKNjFEFd2dURt67S7fM6ssuMd+3ytmtKvBUrGh6m+1X5qkaD84s7wVMf103oX0L5cA/xenVRw2S1FBkOr0Qcv3/xZjUcWHjqJgUDk66iszG1cy1KlZk+ifBb2cds0pTuA8t+GZ9EJx2MhRTmFejP06C42FuFXGp3kC/p+FDtBzfBBhtIGTC9X65ucLG/thzXdSXttY9L+ROSKUFGGExqW/WG+VYyQelzu9yacvgQD9ml/ECjvBj6biFVIPrSP4brM+0NOlS7HJAxG8Su+PxGhzv0fLdCsbH+aXF+hwfxAW1qiDDSRSurC5QlViPEDzSlM5FQXWRvdY3K5ije7EZ9LzCNrM2IUqfuOLn52lOWjV4P4GQO+kfkQboBAAatVQ4DNvNppEF42ER6QzLeeaKYH7r8vMpHyTYIlOIK7mlTlWIgNs9DAEnN9YYS78hmSRtKbTBV/N9/SbDDDOPOYAaoRSJVnd0V9jEyhnHx0CMfJdTp5mCHTakhax6v2oHTVX9F5DEqyzQOtdUf7LkdLzyjMc8qWbuCD8ZvQMdSbcHLJmH+HIFymd85TVcX/J9Mku9n4GT+FEEqogYNKvsklgxfCNUm2+vh9r1Msqxf+QrhuhnEFxOaTpnSo4mIKjujuB9B2TOhokhUezTRiEXmNg9zYIU80XMji0dEU6sB9M3Q626tak1QaHKrmoSszUFfjfGk3YxWie7xcHSLkBFP0PD9zi9lIWjmY+SX/Q6JDIUCFWemvvcVN6zI5njvh+2XzllTI667IJVMIeiYL4RbHutcRyr55ZzPNRviVybvisquaPwKtA1gDNfbRT2WgHWlLx8GhNMbKAF+knpdD7VGLxVh1gKK0/c7C0xHYMWIeYa5erNfNvb9pQ0c4+yF2LFDEKHnFUKrTBautvBA0ci0+aqP2XBfr3tBoin7mkZIH6dggUVOjXBwz2TBD4TZOYXIl+egDIHpzFhqsfTIIcpLJ0EtufBBVAvZryDl4OYczZIAt98rmLUHIv3gz1AznqoyWNMU2BZhu4fcGQNS13vw/h+mjWrynaM6GrVxdxqYyRq1PeflJLb33Hi16CyvRzoAY1OWJ9Miw0vZplMNHV5LGCnOVkQLykqIPnFQZVajOw7B1sPnuDnQWlEpMVWr0HLNMm2fyGvvERuhAX8ME2P74oS4OpppxuhBd9d3OXPpIyZy9BoM1m6BIefxxuQdt9QmGiU89g3K5aIVJT9nz/oIAbkG0JBC838uOt3wp0p3LOwVDnbl7OqyqxvKMm5VssyFZlK9RGgSossGTPT7h/dK09lDHTwH2itaSWLJK97pi6abZchQAIXjoYY9Lk6fBNn35UH1OpgOznjI/PJxLhFUXOwN6x5HhbA+x1XpSvBkOOOtzl0A+nhRBDp3380E998e9vPNP094iAOxYnMkqxk0gR2RSgUs3hGX33VJFS8Uw4GSOzPg6zgPTvr7vDPacWq1yg3qHJGAUUyboriUBGIXqX0eo/4Jm1xNQnhj7JCIVzeI7AGxzZcukPtxogKjTD3Y4lfDb/SLzXpT9VGVdmGW15NPw+dd254NVV/eGZLD6RAvGgTxEg1bhKmtWU8PxtOrwctjxD7yNdGaRari++pznvE7xgtk6ibZ1s1CE6NO854n99CTeelZG213Jg+V94REhRZmJ59jML24NV/N0ji7UGNedFHFbIDgJ4xUEC0jKJF83KEg1Hx3Rcu6gytHGqrBWDUvVzskszfBn7stW8ZRqM2vJOkWbPKJlwWrLTZOqxQbZl2BX08O8jaRlwueEtNRgksFrruvAqhUmrroxg/1TcPxAQyZW+JwotGQqem5yxCEtDcVu8JATiH0wjbYCgDJZ/0qhHb1s45NxTWbOvbuTZ3c4Lt1emeqN9iWH5CFPBPtvtwvL6ibMX9GTojmieDUWRkxg9vzlD9L+w9GssQ93e33qtOCijNqOSwznOPVNfTOd7029FT8Du8ixeFtDm2SIxPBHFi8KO0FZfye6LSQ3+/Is7c243LPFmheH6RAVnWPfhd7gG7vmCEZdlGadyLCJ8fzgqqMrLwYV9k1t3Z7Lof0xjFu04vmFdR2F+KANWLaOoA8WejhiIXP3O3nJTddndq3drQ0pEw4ZNzL/HYlGpVvr+FirBjz/N3SkWVH/yzyyXhWysagQJwRvKp/z0aw/GQwlfyVUvjHt34r6mQrpzlHGqPJyI+E0vV8odXbco9UAMnfdOnxhsADho59cBNX2Uh4fkRh0VX75mtRln2c2sU1vFd16jPY8aJ5OD0VJzpVpPsUxrxk+VdCHUa6OgiGo7jI43X/ZITJmx18sS9LWmMYlXG0IF2SRgDTk+hCgj/0KP0BbDnFW/EMoj7R4Ta+4WnPEGLy8dEbrkRfKSMgH0hLq7QzCJVYcVVOZIOInxqsKp36DV1eapbLcsXwvrXmtMoAQP1uk8sePZjGwLZmBIn6xcM0CyCaJwkJzAorh1Vv4N0uC/Wkq65w3LNwcfwQPnG+I00OpjCzHAo7Q1eMGfp9k0wysKImB4m/5HfeQ2mnQ+uAf9a94IxSC1xg2unRGBC2rFTFgIlsfvbzQFl7vFXsMI4VoKttKPCLDo+UuCUtbulmFcGlitHoB/V5WmqOI9TtvtqEsvx39eBGxzI5OGAAFbvLRwcBRZ+lXIIi3QepJGIr56JjiMBnCFrrV5B/1x7nw6UQQA6H3lVQGFeNOiWE0uZdfVP/6B/5cgcXxxXfAebDRP+uHLOd39TrgfqMA7yQoc6Tfa/gSGENs66s/VqZKuBpVlLjfapupNUV3SixOBL4aVnBU8GWGODjOCKGULdg0lxpkBwG8kUip++NkZ5rqySihvifuKxQoLO5+4jxOcGYGN4Yc8eHAds/z2e9pHtW0Hg60AMrg6xSmlsErk1BVK+CdX1HFwMJ0NPQZ6wE+rWPAlkWtC8tBVdi/1S9ri2tQagRzMM5JP+JGd0f0XLg/UUtWcUqoDPkWw16PtZ0V1Vmf82mDEnCz8d0DQaaPtdNoD/upH6NjyIEp81BPqGPxJ31GdVY9va6Vu+BEjEtVNmDZ+ybb7Dhmmtoaq6r5WjMMhSAcF4IG937nZruUTgZcPUXtKdo5Odtos5L5Kn8GrOJ8tus3pJd3mMXmjjc2KhTOI2aGOV0vcz7aXnNPx+cXIjGpWOt8VaX1/1tl7/CZITOQnNfY+Rio+eKTDar8f1lHRoiZkXNVIgMuxdyWAVYcPzJQrFodyq5e/O18lN3Xz6+fxxxeq1M7xyOiVbGld7on24WBY868MZSJMScQ5S5/31e7d57PIp1mgJFbKfuHfHEEeMNDSJ6R9ssSLUxYsjDVAIEZwpAH8/QIjfr+ZrQGauOcuy+KBMCEj7MX9whs5j5SWmj0c9ihDpanpKF33CEtxTCp1/x+sYH3Gqqn742e6H8QoY8GzOlO5ibqyiU5JbB3kIKhjWFRdl6jysDgOLXe6hgCWHO2RRlLp9nk1YKWlyoOdYwsFPzQqqw1wZ1uhY4rzxDq3+vsgYvgn6jNS6PqtpwTGp6qWSZrD0PkhM6s92rVl167bJney1ELbU7Cl7bn+y40DqF5B4z9oFUhbKImT/kUBpnOZLlFrpBctULuvhgw7NBu7uRGOuUmIuCQPEOxvNlEFmUMZsHayo+zjviBn885mR4arMNfWt6Oeh0PSmf4svkKnV41ebA1upoJjJM08TJzBVcfmYzc3RgwqbgKmIP6OrB2JH+O1b0MbMwFKGvkoIq7xDIs9tG9NyLl3i2GbprgEG8HY2YUeLylBs/xmcTI8VNcn8JLCiq+wcimSqW/Kq2DdcMihub/sHgdJDzQNJHPtDf/MZct5XkM28dDkFcBS9gX5cKMybntGZmHZ76Ofylhi0wdhwEjfnl5XbVq2S8Mc338EzmFrxcIlz7IgWlSx8Dm2w6BRAs5XwRf44vb/A6iFSph+eybkGiWrUcdSEoT4/mADp3Z5C/a1BOAsNT8O9uazfbniPYUbrmjL1exL3AofXAaqoHwe7dnmrN8tk3ympdcYg5CYPaszdvYEY/E83O1Lxag6To2Tx4ROKePFTWtVSlqWYv9srcyj9VyubjDb6UMzt1G1+pBapUym8Ad+X7gz4kFh2QVA0hpJfvV3EgYyt1T4wkTL39f223AocpES68CqB6PmyDT5YaJbeDe1B9gNMcjZ9JUEAErsDu+5QHSwTUmHEFEEPKta8L/InGlcgGupRh4XPoqEtQpzsUrPt3oGx3s5O10Y2qiSPiANaJ4w6TORO5nfm2OSi2Ud0IuQwcaQmgAYrZLVq9AruWVcwDZkKTR9JYCR6oQpF4Ci4gcyjscpnD8v64XETgPC4eUG0Ko544YktbKlNcgBs9IkGaM6Wvvm5YSgfretbSVwrAB6nUUQvpNubayIKAK3OgFDp2Vz+uovwJoDyZQcHQHRqn3OPNdolrCmOu9ZyaDVULaJ1ae0uDMnLqFgK7NUIHH1Ff+msJ9DcgSR5qdYiPDcmsuzTq73k4d6lcQ1iULmbbw8JU0fapwgIa2aFeyg5x2uMBwYdn+uXJ79oE679aJsZjmLx7cNRN1aunk6Kv2VcQdxFaYYf+JLJQ/iVmXwvzrrpL+iRlFD5cxeMPtaHY47ntuzjzq3b/0bwL0N64GarMsRY1Q3/zEmkq5uPze16B/HCgCyCgGL1GAK2+A6EsnBSEFQlwZYTEN6FCaza/JkPsjrvfkL9ZOwjEjz4C8w6M+1WCAdAiIocwY9O4QI4PSQCk1NJcwSQBwr9aeabG21PMTQRtzXVSCKE0m9xDGDCe1iWW5HrkRZAMQkky5OKjxcRNNCFgEA9Vm6K12HbOHR0RWscw0INHNvqqdH0iFBSx95QIqoWnyLmI907gPawiU/34FIH0Ikospom6Z0GedLFtgk9FBBStIOESq8+lx69irq2Le5ssUw5SBU84GMugkIq7Tk31fDbWAr9KILK2F/C9q88petvgg3DFOdbBdhnWxkTx5fvT1EcUyyIWNcZ+DY2xzlowhFJBHeHA0baKsptW1mUJ6s8aXncqrA5rUqAM8IhNJECFmtjq361jN21YlsYkeum3QbCK9Ny3xBfPCBgL4vNsaI11zA/YNdF2mWxnDJEMpNFsxvvKZs8WGttK3vMv+SAMxUUuXCtetcdXNddAAARqiyEEVcAtzkdUpEkZYd/9PKr4Ywb6yGCokJ6s2VWu4qxsCyq4JugP+kfTtCgPThPoZt3oPsp93A5ZyYBT9t/wFD+MNFLQ9zvz7CgzKsQImjJuFltkx6sRUTlR/ttr0tiR/crUlFd18RWnxLZm29Ay4feTuHKQILisvjhJjfvhRIOmFuYLKTyqjxxpvXkm6aL0Q66GSuqMkeo9LCpEKoyiufwi5vZwZxexsG9mbm6zC4QfMXfvVyMD4UsV8694Xqr82zpp01nNkRPBV8xDL+MW+M03pMXzTZy5C3nB090nGkS+Ifpnlwvq7SGvCNwuigTZSkug/uN7O/lQCIl9ulxUoSisq25edHqz3KwXdf4lEvuqRJjuTAnt0sFDnskWtz1ldjxa6mArug8BwtyBcGwHW+RdrmlnAImg95DyZ9/pffdWU8x5cldeEgEU7xNZFcZcxZSte3JLppBfnTXLke9UFKEBF9r7KFdAToPGqCu9om6BnJLZZUFJEwk3lMzl57KrH1ZtySJG6+dQCUyPHzCVcObffvuruaDU2Gi9hOhSJBC00RfViX40OXD7G0J7jJpvsRn1NZxqcdr1LSn4ETCiwddyG3NGMFSGNIWNAK6atxk249KSa1Z9gw8rNfkubxYqKSkrHBN6+cSuUeZlp6e6v/TkaYQBcSexyILpNtRD/VU0hUbcDn7m/OFu3Ntotfv5O8ifMDIIKQNigLEVqsKP2uEKhIGW/rxjT4xzSMuFTS07l13SUB9U3e2IhJxtQwkCw5JoWt7V8eU5vTVIymE9sQgmHM9GRlfrVRsIxATJVptQn9k/6ukOl7MNPFyf+ESS1F+1yLf056gGFZWZyamVDd3ZKaAiE8XFIrQMnuSdZwOXgYL0xHjLuzrvu1hnaNkTR3JD8cO+asZtplRdEcNTFEbujWu14QNnVaXFsxxjgV3DS76SRE9K/f4U0pfeB3QPFtBiUJOSDuexCd4JWFai15hOkr96vjFWXM+fHRqrTNCZzpYIKD1TNmx+wTf8W25TuTC3S1NLbqwcIDe/9pETwvzYDxEJJ1ija+FVGw4GDhtTZZDFjOe0tv/GD5XoIrzsl1UOJsugdXW+eyCp6lJzreLHOnHs97X8zk5kKZSP8AUY9BtL5/+V6BEyUMMZN8bjmERPzjgmOU88C55jzdiP2tgml+1Rl3wMCDH2Os4HWFgZtJtz4D9PJPPyQr1k50Wy6MSfahbg6TK9peKeeXPQxB+JeStKkBHUNUGiJUmnK1HSFTk5aFj6C8arRhnt7TuIp5om26DqXaP/F7HiPR1WZ68j6FBwr4yJtLUvqcQgKvVvccrWIsI5AwUWTB1r5GOQAlO03SsuaC70Vm7J34XK3j35G/QPkvBNg/IQ9vHiTjNjGg/2yINeQo42dSsm4r+ngl8sqw7crkSDGe+lzyOeIEesS6mAAWQpL7Pzq+96v0En+Rlfja/Zzd/Rn+N2rJADklqSPgEUIjM6K6ncgc9wjlaPA3bgWSsl1ff5iKi/i2nE/B/dpyjQU9xi91ar4N+MGF8rP+bp8MCf4nFP3DLKsWZGzzYd/juC9X1l6Ewed7OumtbKKuZIwpV/k4gGzi4qd/IZSd6MF9hYs/uHPhMa2w8L53LpO4gWeI1ocnKm/DD2/TD5iSn1LOUvmGsUuJW0tsRwM2T2qOZLvKYLECRIw5Uxuw3A+9JbSPDcYxhPNqGNJW3l+X86nDedTwJNJnQArKtMjolivRF7Ks3CzJ7s+rsy7E8OOwPaUgEEKFTejXPd0p6geGEFIG0rvlET+6Y7RoxKl2Ufvcz9gs+uUMF3u3DGHObmpyDk4hPqQESKUeMraP36dQXAU34h0GYF5RSzgTCB+GIvnoMvA/8AeMgI1b4UnksiF4qYrEeJQpRh2MpsVE0MEeUbWL56myLTUuSUtUgbicU7sya8pCsILH1CER16R7qEGL/hcDRbshsEEiLfvL7853ymrvNRRfG39YkMGEeeE92mPHXZy53+wumkWXYrKloz9J/p5H4stESZGcwodJEsNi7DSw+I3heYl10Hd1ned6d39uQjzeY1hg7bpJcRCfvpskj85mpBmkRvx52YpccakRTPCftWz3cOI7GlEmauLo2vHqacRYUW7QIF1d3oy7Odrq6oyCVmmmqYgukzntqWbqbikBdC0V8waPiTfiM48wJli08V9QWQYDODyYxpsvn0RVY94JpP2a/b42vaTg6uIyBrAMZNevtAbBt6/1a5sQ85d3KbnuuoS5BFyh9F9tUgTXviNTWGyfItq8TOAN82JIAOZleGakRIsoLGWI6+BDlEcXMnScmG8zsBWCaWIZLzkxcCLTJnMJ/dPEqZ7glWBDemFLYRBc0kQA5PQNRgFKqcebLW82/I7vy824yJagF5OouLjhdnhsOQQUpBokH4Rx1E46/baegcfca3i4cVjRf9YgtcsTBo9KWYwM4Ouj5wR3rkQc1zKsYM833x7eKAsfu/cbqCGPWFZZrqPen0LlJZO/5cLGcu0ipgRJKlHFc4HIG5Z+v7gvRL0sVroDbpfveOs6FB7LqLnwzpO2sMT+UL6gMvNYYvztqFuRKFwoH9bUnuwDQmiA0XFEJPpZSMwgwE6IzjRFHdWoJywN9E0wAsQrRRu2xwwQtE82Dc40ZktExLWrmsC0eZLyDUbNMscbtsNbzvtg2SwXU1+tQaoTjJogi30MDyy5M3PH9z8I/go+ovR06tydZSn3KQy5p5Y6R72Hsnyg2STCQ1ugRMgVcEcG4cRvXuS/TkEtoGND3fCvozLHqQffNMdIOPxbheFNvZSMEDDVdaOGaboQ5UH4jUKoSF8uQQgGqprqXtaSaXcmfWyhBfdqDG/Vh8NXZxxDuJJCtxgm+vfUi/z7goCQEr5xFGVd15q0C7rxldTfYeLr+FtYbbKWSQKkueN3wIuBnnc0uR1+i0nxyXU7r8uY1heedIXknf7gga6FDljtePjkt0P13Xe294TJVz9HoqWCmg+xDqwsuD6H7unLFe0avVpyVocliXBeeCuO78elk6rp42uo650zz7IVcsC1B6x7tQINtC7jqrUTI5DUvfnxdLY6tRSDMkZr8B5qhC9pCPK99yOIDj7IVvkXOn0vLTbVfaf5ljhAnUeGvWSdNX3Ejn8tlwHEaR8W8Y0gCZYdJQP9ODmM/PgvQ9CTxkoFxSgDw5Pt8YSaxyr4x4N9sedNhv5iotq1kGyzOEjIrEjYr+TT3aN6u2FltLtvRu0255c/Xznhoy03Ek6szeyHsA0ZrGORS3iwmT9+E0tXJXpkKCmHS+fgXORCrMTHthQL4D/1IfxTgv+KVIgJeW40O3a8nOTslx4rPa4wq3nAlQXzutG/c+naMUc02t/W3UYo6EpF0oGELQgoNhvUHavWWQijmaFwCmtDJRTNgrLBHiXiVL1+tOb5N51a88XVfkqck+3hw/9rNCzMIAdsO5W+2faenFdpWKKazybaQdssIgNQYhFZk2zeSilnY2NHMq3B/pd7pYHNqQRdCYzUlyvXl7HmIqmt+EeXAb5DwDaH4S6gsHFpSxfYF8+VrFhOxSCqYksbkJpJDtswoxOhsCzsARAQHAEXZnee6CkwLtPofB6wSVtHltp6hfm8qRGomVXHiuCXVqHcLrVdY6g/7FE9kO1070uFUfLtEzaVCkmchEDTG0bYI0Lf8WfHXLmGqkbPvyrKCWO+bHUwcUilw5ucStAMjxLuDeY9+Idh7zr/+HAd9CIfdx0th/mfTarnd3DQbPy4g6BkErbnz/v+W0l757xfa12qb5PUjv0BpUMEksA5Ud4bksQJCXMujTIUj/b31RmpVGtBg0HqSDMbPQubSUNkqSiUqXOeed2yUy2KV4aQCXUSDP+zUxQ78nMCztocHbmGoHgYIpqIMdtDl2hpIyENe0zZ5br+5n7NF/FJcVpeYObkSiPOE08ZGFhCBZHWLfuiSax1ENO7A6xcXpaN5V41uzHOk/5StoVZSjtY7RwYrf68AvrvOhKONDq5IWvHSk1blp739PbDgmu1IQ8SKGC4fxeH8pwxjR6zauLcbz0aqqK8eZ5VkcIwFI8GXg/uMVfBAe4lTqOGYGL4P9yYH3ruXOOeurbzqMh8s91Q56ANIPn7F0ZrFT9STmTZo2UmfQcHnARk83+W1GI72moOzaZwb61qpItoczMc/mcXdWvqLevvRIBGFHNH5wyGNSSBDzUTOZSszcfDC1ee+azcNfNbqPELdjgcOkrSMLCaE17FDTuSsYGR4KaWM4MsfIgqYNUnDM0EVg1mJvmG+s77tlqc6wpCr6pjiYYQTO61I3jZVzs6rp8gzOCP+Bk6OHRaHeyIbTIP0tflYqKQxeb71JR9YWSYzCW2LLTCPQgiF2w/Zxzx89AW37IcYH+rnFw3rJNmGtyM/i51mGboAUV1hPiN1+YsQS5QOh+7YNFTzcV12GSmHAHiqzW0BYW5Vabrwzhn+L8UErFR5MV1r6m0G2FWhzEWl8jQ2F1h5Gp7ai8ZmYwwq37dy9ElfqfE526q3mSlhp1X5fjDLRc9WnsbXT4HxR19Qt3Wp7rn/xKjyHnH/s8gK7oVqNbOQBM825uC3xtyIehLEtkHI4tiNQfe7emC25YwEXrGWOxuglCmMGmkO13t4+2BWfYGW9Nc2xljIemQcA0xegQN9TnohLds0ey8QpHGwBO/G0EMfj9gsCgKRFbvEgTBbNI+BA6aBAQmc+XTRZvLhFcNXKgDlFo7Vxl/7/3kSJxS3sd9TE8iPk9nRiwissGWwr+q+K9BHUD8kDyBqG4vJkIF7e8I63js4LcuPiOu9T1lrhdFF/ZZAF1SNE9FzXOguJvEtPEs7gzHXT9iKZkKlk+1UZexG03uayU/WxqGbZUyg/2dkT3LslNoo2Pv6CqMR9twA02iW56QxrbmuwQB4S9qo8tK7mHXpz8b6ChU4f6iy0B3tsw73ZUQajnDi9UVW3D4iV+hoY96W4KsFUZ0WkoDMfM6WnYK0ei9EhCbP7igKHmKDdZlUmfcFlSSva9ZW110Np2oxcEwgBkOR8iY5RWRV6yMeO8rjqC+XuHQYQ9isBracsio0xW8aqkfQbTo7oPBWSfbPEr3iyeQ7MfoIQ08H+qV+FfMSW/mx29eUYvezmCSO7FcWaIgbEbcTmj2mq1QHvP2KGT9yPNTk73FfI92KXIQG0CKFv7XgDUgHhszGrUKigxgI53F7wCzu4b3oL9vCNVTSBdttgGn8bnXYbrJkkVgTB52k9SmiMnnWn9i47mrXCoGLO/SQUzONhFU5taDivR1mm+6lVFmHM1Xoit8/maXyjNmOxgQk6ljqzdHM3tKmnD2EjOCqCEW+7xTuSgsLcGG6jI4LOs5CIi90iHJCcX/qsdRS4H+81E6UknMCmtrWRBF5AJpO2NF5tnll4VmD426L8W+HUD3O+PPa5U2fpnRZS6CGg2PugQUX6TROecoPA+ChGxB4EvMG8fMU1bmV6zWBBRZzLQpfHghYZiC6tr/UD6efT2hyw7Hw9AzcWSmScA8x50T+K3qkMc0efbuHpIudwPY8JTSWkBJnPEF7HNNsVIbUNzOaGqueWzRUyaM4GJm0oisUIhsK7O/dwfntvpbBmNLDyns25rIwHPgWwT8faQMzcLKmkAS+G1LY2jjvxxzNgMMkQKBf6YVDqjKwUzi02q4ugiWlkWcK3i+Wf/hyOSMy2fn0TnXsOiZeBdEhgcX0Gi+LcIiJpkEd04GaHp9OwiOipS4sBXdCXtYYhm4FqinGDytJJxSZbQ1TpsPa+hFg7PhM3gEX+XYEcdQRF0utdJ6Pzowa3UhKcmQexrKBefzvizaLDVovqVQ/P8KmpA6TVHstDGWhA36nqTxudwdHkEIx12imX3FE5Cq8if8YUZb/Uua7GPxHnb8UtM6HfHkS+gfjVAK/ryWnbsJj5a9i0DOrUKvyvKwczq9FlTJCEaccLmBYWz4cncMwrRkkfujuSe/IbZGaxi71FtWsBwQX5ItQkXxG70aIN6Kw0I00jaqQ3Ww0/nbYpjkBkya+x4V62Isr50zeRZEuGgpEyCdWAeMnUnW4ycMBgaSYnQuPxlv0kDOV4NK5Z3uhh5HsGaKLjY7ZID/wWrkrcup3Shes7ONfraReJ1qwvM8kxVudG2c/K7Jnn4t8KYAsKNsyEpAb+q+gBTwlgSF5I0g4wx5VFGUYr9NCPjyS2SxxDZlwNWyqOIfvSqkg7g0kc2+cg30pJ7qvBFfvamOO9puGzwFpsBztp/PseDgq2XwNvkOCRRUXeBSwe9Q1Uxtb3YiZm6jnue6EleUCGlGF06c1O17lqxv9a34YPzg77/2uWSQap2AhsfsOvauli0hbH1RtM3uRuATc38O7XrkQRxODI0ltlgKDhUi73MrvZ7vI4Pn2nIUTonRFYWksl1L2uyXWyKNE9FMN/FWxowaGIbqx5ZILnQ4BaaDDGlXMh/nkS8CbkHFs4b4hMTGr0Wa1QoAR53wPavonudLougzaS2neTIljoRidQ/+mvNPqR5d7uts1SbGUWtXY4pa/CRM4eHuUmicktnOKQWehdmDEwWm1yvvz/9CAAfhV+GeA+gV5KSBCvlDvg9gyaGdPyny5Zb1csz9KdsOLXnMhM7RqxbQ6dNE6PO4ALhQPscON9EjQj9ylw8m66SJm7uGjI6iDuSNN+oQY4ruHWRpma1ZLKNc1ZYG8kMcOI0Wu4aK1K8w85hoPPM+cW6Bq1tu+kRUJaFXknx+oOIU70pkcub34bntXxd27Vb02GWSHYFG+PAt9e8OBGLVh7gmLTjOBK/+o19WiGOZCZKp2Mvnk6RmcOOnO+8vdE63a2kSRFMLYoIgKMIoDa1YdVGHP3BhCTMpmgXPS518pcU+J8UVWZ5FR29OUvCv0Z+jzrz7/IQrbjxkw70PyXQ/+LhO1S2EbTJyJUQWAD4IFYQYPQbssna2Oukgw6ehELAO9n6mwCpIutzM5pDbK9lGuhLc8CA1TF9LwsCDS7vGACK7oWwUu2T45v5dVmTrtR6npnEyR4x3g7gvP0g+OMhW805PKLg+d6SzoGGoW/fspmDxskPeHGF9pZ3vMEyFJUdXG4n8jpw96VpJ9JRJElCUysrmm7Oa4nwE9YXsWh2i7yCBfpuN+Jb2swk9RnhRTbXcTQ3LtCAqW6LbnsDt5Wo+0J3PcVPd8ZyQrqEpcnjZATaEVezEEJuC938nwU1pbwg0AomTHlifMjr0joxMgOyqAgyGd2STotHPtl9WGUk8V/3J+erj/ymGEfEsBDNWsNKF/MgFhv+PBRH/utok8FEwQryUdGW5nmT1LiSaWME3EOgFyeOmAdZznCNrFcc7gh2MlZED2kwfPFaMj8/W3wGbQcW3UoCGMrtfA5M7W5Hu1rPUth0897gXRlXrXXci3GidZAZMvTFw9N7CN6G1XBJy96fFJ19zSdv8XOM5TtgTqQ3pCwI+0ghlIo/C4a7Jc71GON18/TmTEoKTYFMIGJE8g9k6D9h/v6TOAKABkgGEBacKhPxpWHni6GdMv9vicVPEuCrD+Ld+VYEeZdVpknUqlBSUvRb1qMPaaugqBERpITQt9TlmEPmUqnG+Z+Y4t+IGNgE5ohFKEqn4E3sR98F2rZvSZxvMqwOCef5nQdGPaXRoeBPoOgMpJOgiCxRkP2klDXsDGWGLEEHJWV53cckbAxItvw1ztK44+hh0sUMZd2BPI8k1U0rcb8F9dbodQHTTbXcNHHjiCC4RwKcQL+beQ2wTZuqCj8p29REajaEN4sc3TL/e1zv4al/XrEN9+ApFwRZ6ewr7GpmaKzQjOnjuXC4aMhqTUfseCCjFk9hvb2DM7eBPmME+miTUlvew90IpZ9zzTCYkouh33GjIUnyMukLVLgdmpUb3RLqadvgxPsAjQ0raGCygOZ0rj+a2Aa00lBzOZRo566GkmxuAGQuud0AyB5fiigOWNfyT7Zfr30drAWGjw8223DBRG6O1T1NnwD5U0CoXuE2vLKX/xT8XgJvrfn6ceamFkJOj8mv55pKC5MYJuTjiMqi0ahtVHtjFJ880jnOz2rDCUK45cnuwvJdAsh0ZKL59FPYmWn0aHUrSk8daJ3NJeaDPXxadoitcnJ/MR7r3oeDNn+UgxvmVKuI6oa8IQMMi3fjUtgmSh0wyRIMy1DfZZei3JZ7QlAMceLhrIZWvU2AEh3ntM36egbLxEznJE7wHh6BUmJvCqckh4ophgBmjm1n+scr5fgzOdFaDOJKzteDHNYhcpN4pDswyaWA0eauCrPSYlhoi+NrNc7599MSPnMGPYBllT1HOUF7XGzMnUvaCP6Qb3P5JHj7XMrzrafZYd+qR+9htFGfFGKP6m7JmzOqCf1v10TInXzfi+9PQsk4yP1GwZoGanUZ47IcfnifUysp9Tpzcxsa6YMsTFOz0lkLEM8DPA1NsR6kKUgVsqwWTOnI08R7FlBPu6x5ElUyCichipmLHCgam7IepebAYEel0AUY9TBmzVHacFegfySQk1oPbVoQdvAd6/i1DVJFfAUtYtoS4a4HRnJ6LeP9emQ7QxViXM3cnW/XHym23QpTGS4H8wPu12cb6J0rsGKq7y6hc6qbLQkP7uE0xHNidpU09lsZU+8kNDLR0kT5eVhzkelpWIFE/hnGB1VW6y54/qybvZ49LTS679bIAygzDhoWxdVT/p5/KE3ITdueUqg60QX6EjaXYeI/C02nTZ6UFt2hxGK0e8p8Yc7MwljcQ23GfboXvHFn8mL7DYafKVU70g3hz2Dz6Qm/51gqSMGTXOAfOwRUKdrnsBcQVlpGvG2ot+ofcW9vwWVIEOzT4vQDcsr+QjBzx6YcP6RMHpqpM5xtKLwCGwK6mxRfUzYYtVlhYJsV+BA3HPhLByEGGUrWPJjolchMN74Pq9arVJ6VgEZ/eD/zljUEZlzsZViVkF9rnnUEqCuQZJSWljgfDmYHw8JeCoQIFOVYtvYK8DKInOt35pvxi9WBhToHqx9TdTSaH6DFsVfK2czhTnLz7i/KhI51Zpk6ja8NFzYK3pQ32s2P9oN11kNOJYJpVFtq/mt/3eLyScNR61JBryerBwqHpXPfrj2+hhbYR2wDgZlaUja6e3zuLjzKuK7fmKYK8qTEbSTOzWquEIksZSGXVtAAp/y52FdZ0mbgFFfJkvc8S7uJG7u2Soz8tKqTwC9sC0Ev79Mb4wn0+0viQjamyMUmE42+3MXHDQzoRoxhMPnoDmgNtXtDFkDUTrLs3s/LjOdorY/OLGjxXBGZO6eLsZy1nONHnv4rbkO4YSO0uMVeLzqGddNBWiLOPx50Z4kHzNuO9TpsOeCOkIULPGLb5zfcn5Zz1G3N/+vJBpNw3qFoucdrLemuBUti8WX9DHfQ1t67ZgPpX/NfNe55IJvZ/fnzUQH5k1GNs3nKkEXp7baTwAS1YD8bE4E5WDL+sXEbpZcb9b3IweBvwl20+IzBjV8eVEiNmfRkMaaAuEQSt9sbqZ8UlyVmtjXpOhotCANYUCE6dCH901YCjT4TBgLwLLxpmqGXgMRokbgzPrc2wFs/AlVSQVeAkFimFwsnHtBa3ZHlFoCVyv6ZTNfMxQZmxUo5d87KKHxfBV8Y1n5n3x2liXTj746vmhFI8eukiuhGonJjcLb9YY+Kkpqj6OqzcTFZkIzxCfMNbeha2sKXY6hfLxze9QExZTQ53JyGft0PeTv6NfowAlxoyS0AgIOM91KTd+tiSERNp4ZQoGjihUhuNdzTzWIOQNhYz8+XJnCbCFyb51I49KckAgsf9/7dUEPURKvHayr9vZGEfNa8pv4/Se1bBHBIdEXcunr6pxWWCLHLlx+tXz74P2HytnfPBk0mEyS/fPVa/AmQmulDWvx/f/D50iXjvpJYuVBcXOXFtibAQ+3XIswnwVFXPxGWn7BIEKWvA2N6FDfMcVZMG8bxi3o0ThwOoy1lIw0IPiSXZ6vGuZHuF3uhYHCN8ZBX4D8qKFImlDHahrwDOJCQM9TrEh+sdWAIPbGUDFXlzZOz2TxmFc3FD3MaC/ricwCuw6FBkhgjYlm3bRhU27JAGt5PluNA8p7rN6b7k6IpsC78ydMkFmGpwCBXIP/Uktp9NuscETDxSv0NY8xEQcZFBdY9hN1KzSharOSeXNeZ8IrF6S6yQypG3E8s+dTQakx3ho7b4qScq0H1d3dP+uhXHBXusPM+QoN6xczFFh/ACLMUnUbHIEfqVA/vzqV84aJxKvuqRUfIGA5dzIoM7K56tLxBEXSIQ46MzYpioJYbl4/IEGjqBhuaFRJMS6VQjyHYQ6P2ldK5JI8vJIZY4/2ukjBxUirxRw0W8Hqo8xzcmX/LsKbTx/HUtC39pb12Utk+OKCN2I4WdPWEYl0eBan8k54NSp4qsCTlQUTKEtZObR8m0y5SJS+bQbloVrv5o5ETtYGNSVPzOTjMBzFAvUy4xOC/eNfnQ2Ll73AAOLOZRbq/UfLr2rKgDPm4WiVP8de5yReZPsf1512zzPX3T3SzrpPgejeDjA5zkSxl9oBJ6p3OENToYOVSynLUct1DpHGLvxy9loq6uLLZMsUsr97WUm3BKbn/UZn5sDsZag/b1ukWl+p4n3q81ii8nTDM6YAFDU5p8o66NgKZNlsWFRC54qDhfPxOOk/7nFaOR1QoeNHvQE1jEH0NmZz1YJinWtU/f6gE+T8a3w1fvXUWF/PaouOQbjfdheINfLbxrHsS83L85PB/m/Y4iKmllnHF8CIWRrThn4f5+9WLcyL+TdiQZA3ygUDCvQVzz7BMQ9VkhgB8Oyim0d2QaF4++jo8k+AeUEi4vy/Swl2GB5Iq3MgEvVb6TMWgD6/wxyoLSh5Ci5DSo6xuHN4MVzisr/ktFWBvdwxRTSxy1tLlhAsJlz0xM2c0wgQRCR4yoDAzDe5dW2TmPT257wpVcskv2z7UYkWuNjO04se2SK7gd3NQ86SH/RytWDKvY1D7U5auc/f9kQkBsWU8iokDfv4Df2lc4NNlNjyL2iRLXV7CbxrO+HAo5sGPw4CddgOr1E6cI6ZyMm51qXsvjAPF+EQBHg4uzLGcHynispQc3GB+n7reir+tLAfZSl5BTWNmE526fP7A6vAIGGIJ8shgKBCN6k21JtCQMoB3aAIZnoqbG9IeiAdTko/9uGpHsrUiKm9nMmRWTFsDUGCMP8l5N9NIGT6E+ufZR39F1hDGD3By8M6D/RmJ1PfdcQvsrIq019/dnbylfYBipcht6BlgqipQWOboZSbNGP+vQ1KcYoAnEwfptkEp71Hv/VTQZDfwxttVUmdnuCmZd6UKIOdXV2YstIkX1cvtz9mMDNbRyG3vM+fLs1o/H9Er2sra5EZ2hB0syIt0q1Nws5m1Mob4J1lwsUC8bmDkLG/F1qWttXgVhpXO1jhD2unD3uEoErDaaSyEsEGHJ7vsN8LcDEUPFhecjdcpmUfuHZc1W1sXvRswa2fIrsuSyS00WTlHYT1nCMQzivgOeKGQAJox8RaORt+SjCpiBPdTQF70I3Bt24a7EhCVc26G4jyxJvPvl0kHRwmA99xePBg3kzL15i3dFmTkEUcOmhIkmoq2RQmx9MZhMXSZiYOjy+SB8VFp//ttxEZJYJXoSsDBH6kKEOlQ76lBTbfFq5scDc+PtimGQatzLnwAXZZ6TMis0SgczS7YlVzOpUfi7HDUPVrQaOa4HKBY7jhH+W+3m4YsicecUlC5lwAxI5sLacPaUp2GsgljVHhPnPhV5ryPNqFRdsKSJGXX1iEGxWdnr8NHKRhBkN5iZNc9R332VekMRBg2jMnaH0egm9SYoS4qUIO/qtZsfmL6TlYxGZO1gEjo1GjcfS8BeXcM+SVtf6xqH2hT8ei9mvrG7bpapeoy1EcxbxZTGxMYNg/C/Y78/3F6Zv0QVTJVWi98kqK4sc6UQVWG01ZRd4qAUbQmjKvM6+IeG7Vf/MVyrDVV5ti1sHqlere0xrHnUwZMTnQ9xHUYFHWEXfnOs4X5mBzwpQbbSIjT8mrkdz1oIxo5595uv/dU2DrXJQu8k0aQf8V06DgDp9o8xKAKZ6XiTHnfNaTIs0BNYY81w+ffvoHRqIobyA7ZPg2bN0nr6Mq88oBJJh60hABSfXZLdCwj1eN013KpYL1xCSNYV1l1nAa/ySIpuhkfzZfLIrENvcxLFW1+s2Ro6TvvDsqfH52K0fpq1lrTJcuAb+b8k6LNph5JVGfitNBEhDmwpZWXYD911jRs5KfSRgaTZxmV0hiQMQplFnHBWip2pE64PSaH5MZHkSWpqcWOG0cFv4zw4yB+kGgztHLwwJ9g8OLa9cZmjZcQY6RfLYFtxUTe7g6q82RuaK4vUfojzQjJleZKs26+h3P8L7L4pmv9NU3mNcNjP5ix9+qXoCrY4k6Gl0+E4aF/3RLPjHPszd7UrQqA5lZtskFiNYhxplUKCRKtOdrKC7FY3g2sCHeAWshB9SAdzntRE64hoaxOZ5x5CbrDTH0mkk5338vZfzSlExiUVrbioLaMa8Cmvw4GppxNZn+Sv6LDDd+64vaZv+57QIN1BVnJPpkilRVCq/rWIVtCenwAySDvSDuKMKrEPS8epDZHKzjtGEDDW/cXii0lqursgTEp3oYJBIxwFZnps1trTjMzkMMRFsuNtiC/ktlxskoXoN+R/YFmcRXNN6HURMe9B1NZFsI5ce40k5dRtOVQG9eXMoA54wVvhKYB7w/G+8AQsjfNkD85H/aEM7o+uMYPA9vkjvVI1wYL8ByzxMDdI2biv+PA4RWqjSCYC99rC0C3TPPAZN5juDeX2nE2zUDO6Sf5v/XPMt3vZQvff21EWzNJtycG5ZPD/YsTR2HDcfMpjb1WCoB2brjcsesl0meI3kJhHzAMwnPeZMGdxrRl7S1lnTuPTe3jcgNa9k/HUpttfPDR4rk9NNZHL1XjvlxR6EruGFH57Q6UcQyp+Fxz1WpEo/PL4lHlnXFGW6mHuyIuJLm6UshjgjY7az8UI6mKHbTjwKMVlU/2OAlWXjTTmWkwtia0+jwUi5/V1TaaJDLbYzatfK/pjhzfHh8osrdf9kjjvtr4spUERXZs+2RJKJEiB21VTJHWxwi8JLsqLkulzQcKIz/YasWi3m/bMfoJiruq0ByNJP4pWNjJ8aUDADeZ5sj1BmRkXQFl2oDIBLi7hqnYfs9zAH3BFXM0GO7tD5nhL0PkAin8BgwYmlvcNfkWgaM5Sb/oaSiv4eRx/1X899JGrt3/ZierlJR1Ys6O1//HNdDRu589Du+0PhFUzDBJT1yXvdG4AV5mKzCFwhkQAEm2AZv4PAh2CRJRPkTpZByFhDpjZKaXP2pHbQkA4blN1IlmIfn6SNqbxU/ZZ72GmdN4DZnCeQXjnzX2U4p8pTZ4MXNsEoycbYf712LHGEyXlQhBrb3pODin1dS22eNCzRfJ0onfL1e3HdskO9MpoMXpLR/y+5WVL5cS97xoJCTSLx4qC2OifjJvVs3YSY7XSlb5A6qgTp6RwTusLEcMWymHD6Vpy8sFQqsENzGkT5xSFE2JkBKOasydgo5IIK0/1s6s8VVokGaAQ2qKapZicBdO29BfWCHaAb8RBeG5aP1g4xNYUAlADeZII1xxY8jwkSyapB7oh2gYuRKs+dWa527JuP3uTTeL6jcDp35ptksz1+JIhgJCkLQkiMrJjae94edkvBDTP7E0BizKOA4uz0h8T5fgFtV1wmGAMAvvl91Yd35mQcuqbt+mA9Jf06wub/Pr5Ee6Lahmdf8Yj1gpLjMBxu5Q2xA9I1NTLR9p1Ib8vWgC1iMbtlRtd9Yz+bkDaNaABT2/CI9kjFKfnE+X3gmaVjZ9QOZD/n2xN4dTCigRDcSi6qoEQy5c7we/1ICwQ0jSt53/Cgx+1/ygN0LsH71d7kI9Cc9xXC5KpMebiP0522Nb6NqR2vh1HBnsOxJEW/xPXO6dRZio3hpPkvv8p8+NtJyDJ4/mtqAu7i+gL78WJsyJ2mKk2gf/u4wKxTiYi5JE8p47L4Kipb8W+dk5BnLUaeiYPFu1ewAuOnzxeqywI0NkhDafopANCygmky3VrkAuX3AiX8JWdTwrRQAQ1sgJ0cGkTAtYAcrJQMnncFcY0nUscvUWNUs39DMqbS44TRKi+fhFNw1KQf++blqJ0x89nWnlvVaHgJ0ZlRtJwxa6ZITZqp1fup23IRblnDRUT3IGZ3W3QfJydODUGSuU7qa0QP/nE/5eaEL8Wn3lhGPtxJu8DvwSVBpisRytpIe8LbukD+sdFE4t/1ylCmDc25g2pNtYnUW1K5vZDiYC/d2pr00o3WXu/MbdBKhln8lIIGRS2CHeN0wTmDeLXSSuaHU47GAvwQ3LP04vXykegrwadlAJUI8QttbR3Gls+k0+HoEw87W8ZK3o1bW8CuRmUXtGuQnWeZzzKdv/067fxfplQ0cH8ArvamEUENIkLjmEYNv6L9EgfTylVCWN7gjw5wAvTRIpNyyqDA232lWWNoI2wk7FIIxHY22r0sbxIx722cDatLWUNhJI0TuVY8+Yy1R+xv/KUaVSVH8bFzLB+C/VYfGnz96/ZB5xMkJcdfw4RBe+RgZXYjt4tEfhBj+W4fe8JB4AkkPn0AXMcM5/7xN+pNwVWPcYL2Sw513YH4ScaxXpS4W6tCfEE8MTrWaVvQCTlD+Iq0LXeqPJmeG4YJyztYLRK6Z8jU1Zw4a0pjxC2B898wgZwwxfMaxnt3DuYWqaFuzfKMWfoAznT/2JxwyX29l+M1tvxGps5fKQ0pS9NvZx7p2EtqfIPUvgUl4vLoIE62QLk3L7lAVM0eetHDKFL/hks7eRLdUUge9AJDGUKKXn7r1P1zguQhKh363o692ck+DHNmOmoNXMfHeDKNDeTuSJgYYWzbz9BjgW11yM7UpF9pbwy9mNtf6anZu2okOPwLGfXrUVqXEtwxfoM70SHTWoR7gD8F9OWUYVlmevM4IL4TMF7WYWJgjS/xNQDMVIaqLin88+Cw/I3GrWQeASUpeQ0iZ6E5Kiqaz7FMHsT0rOHrlwVvJrldYsPcZxNF3JN8L86mtPPDXtc6eLAYFUiZkwdOQUC+u9SW49I0qmr1Wk+bNJv448JflvIVUELzNx4G4D/zAuOpovArQcAMM8oVLiXYQWz/6M8RBdSVRqWwLpa+o21yNtbfr9ZBmTjzyPFGKG2i3pEvtoPMuljUuCR9lfenwwhEB9HjX799T97HlZvUbqVKIutxJsl4hx9acnUEhOB5xB063cG/wvdZG7F+dJYRECseHdgn9SZ1E+db5CrCpJJly5QZWpWqYaZWCYzCTEuPSitaCjfqpwfRYBeYolCWNRT+7+mb1cC8OdRRVVsftB9C+/qjZykuTAoV2iSFeoFyfsQtNPsxnGHPNMUE2dvwI4Y7uURjp2dSONXZyKN+R1FQsjDsOXusf2AtUANlS+M+VYvy8OMsw1ykWNkvHtvOUagDAYGQ4dB4T+HvKdTB4pdhj9jC/V0qz7PGYfrwVSgnLbFh3G2H9bbahnJKaXNEWvmTfd4jv+DwYaCFYZk+kDa+ccoG2mGpI5LUmt6yTzPaTOf9084VHjELc3LzyVJGi2GDkloXf3nztCdWyxnB3/zj44Wt2MNbS2WmBXJvCrREgVU1wOTEprnjgqG1cnOa7S8gTcJ8DIX+/tUhMB6PBWNYdbnDNwxyEIo5XUehVlVRJvU2/WN/MHqj0Sm95vCFTj0uiaM69iXUoPnRCXYgLfvdWP02uFF/cP9RD4tvCuq9wXiUCv+qAT1zW+drt0HRaaVxIfyYTZWAm+lfUvO0wp0mi9lPtFNlSaeDZ2zojLm2aK7ClJXeLBrdPyS5FrjN+u4qScOhmGSsKOItvVl2ancW/mQ2cafKn3x8m9VNERLsNpDoP/EE7I0RVEkKVEBITff6Hk9lO8qXrR5C3kfAfLtrNwOftHHUTnSMX7EkkecMALP/aMqQE9fWv3JbPoYEXPlWWDC5ftw7yAqOkCa4pepPzGlZln200kyc4ngEjX12x3f0xtsUuiZgelhIy0qmFKnvLEIT++xhXRd2tHEQXdOv8YqVk2VsePTmaQv5qzavVYBxrgdsE/giwv91OXCJ/qY22Cvd6I+dkjvhMdRx6YMHdyloh4Wn6/jDfYvBICAHN5nbH8wUUF6Vdfc7Gf31g2hi+oEk7gHT8ICmfncloxPKnU4GArrIpAjWoYKG0ueUlOnm68mHOn1OzCUbl//IP1XuA5wxDaKcb2L5GIumO4MA2Av+6C0eRYfdyz0s85gRj0G6/wRVADKumcsonTBghGTkuxnV6U+93NRUewYvAvU3a0Xtcg4jFrtOQN5mnGZ6pBNPSVMH0opt9dZudIEqKvHZErq1C9cANFsIBhvmy0SQX222lgxB3k23sfBNVxhkufZtaz9ited8QKU8iANaxOfxFiZj5VBSYUp8ZhinoPyi/GKzrS+FlQJPWUtoM6NG69anEMfLSEYniRWn8ess2Z+FMWkcXx4LyQSRyT/+Vmc7ToZSkENS3zevMNEHrhiCPUsDwXPZ1xjXz5QZA5VGfCiUFyzynVth+ZDg527ICokUxWdxfJShDGYbimA4g7hmv2TS8iO7QgopyZtsW74Zooe6iqMY6t7y+xiNcGqVWZ44z+YcQ2rlXA1Lv0p6VJc4XDL/MPIc9jIUrrvIkeMVTrwd58ATIqVACGT34FVXXrrESM8Eod3Uw8Wgf4xBOzTdFz1Z/ddDyRxTeg6v0UsKp8e0+jy1Uttk7vgCQFdm6NaCDwczNwQXgSV261Pspsn2iJf9FAFhG8K1qi1evitEdHgimKJXzyPfvXyNi1L84J/CckLgVEHx2Ev9vRXTjmtxl2vsWAziwJ1OiZ7xQalKKdYJo2wgC7uPA9ZyEXF4ww1f0MAOCJwb947reTT7WSJSpq/NNwFGA5HKzZLXjunMwamqYpGFuRgtJzUJy4QsxOTQIFjlcsAJ1evpP7cmwiGMAUz5dzSmc/+d+TyLsM0KYYottyo6WaJE2MVOzU+GnEFvbpNT5ktIKia6h1hSRkKACsC6rvRxHdk+BLq95tQGePfsa8OUeEeSCJbUgsfNlIAeYSypd1wf0ookUiNxQIx2uIywjNT/eJF3ncnya5orgSTp2PFutOfBA7KdUGMdO5fYBujMWoUEDfqIrLGQNbNjn4HBzV7RicKBpDvPaqOEiaHg1jF4dvCjYhcn0XZ0VWMhd5R8Ed5dAzVfv2F/6K9rZnYkNZYQCs/ecLMtMyNcLEY3gZdELr+UJ53FJ+uC4V7eP8Jvtk1I70garI7FM9U7d8D8upMsSicFLCsswQ31QfffV5Oq3HAqT3gJ/TUQR9toXFtWF9cpQFzXyjuK+75++FQkrP1ykfU0xIhxjQOeNTF4y+rXgNrB3RNQzPVXwh+s4tJ56x/LaGghajRcFOvCpGMs/P1tveZwxeLG8LtZBlyAQ6egljqUFnxewD0gAJnn8zemZm8XN0ahXjModJAz1NK+H8sQSosiDpTJC/k//9XxSK0HL/qeoHiGysk9/fAdgcyObz0LMdwtzq2/EmmrDnwe2H7lDFR0YimPu58YKPy46n6rWqbif1OmCDfsYdIcpW4NW0WLwy9Ura7GNex5AqHhMl+L2j4+XOLPVNoJrsUedd964h0ECGaJkVki/6jj+Fu9gNS7bYqIe1AbSxzJKfNTL5FHp0Mm5tLBeHobiRS0+DqDlotux5rZuE7Jx6OwNqyezJkex7sTW04nDWLnD2oNQYGthcAbOApA2FxEEHxInosFfd+gz0nws7Q+WeakmGh0DQj88J+sRYlhg58EtsC16AUMcE6FSY79qNgaEIppuuIVA1TL51700shUEHj2Hl12lfXR+1Sjodm0hTQH+84sE6x9ySrESzKr3tv4pYRjIZ4g+EiV6g5F1iTVUqzOfM1StBft+OcScwMqY24EAJYhbT+jH9SmO5BZvCoLupdE/b6G9nBZRmwCrUlaAaFK38Dgp+yaPQUnW+JRJRWEX1upNTz/Rfjm9o2jNIJzSWc8JzR3mZYlReEWuc2rTffjygJg/hUYatBHDO6r3/rVFPKbz0jTPSyfY8SjaUg99svcWVVw96mOm7QHhBnpl/Y1CFMdXWUrLO+sGVx/a709+9ZwJr5koa0oIOyWezDTmeGiSfserYMWugLycLuxFnXrYPTUCAFJFVdSo3iMPejevSxRfe2Hz9VC7W/qRgmD2utq/9t3wXXmSGefMiVEZ3rInIHj75Y5xf0fUg8ysf8UIMfs7NwT/XwP6+lpXHB33Mldm1oaHyELGjb9iZd9ipivoF7Gp14AHv8WZRfvSLq5mEmK43Rus4mgxGJpE7i9HS1e81EMe81jqqVq30IOhMK6ehEuqkvux+SupKWQbNdqZducr8eUWLtUapXWqO9w2ZY0eqTQCxst+6bA1ZgSECvxIRXMMIxleaVOxTvaNHEXkXbph0yRnngmQxKdkjERO8LVw7Mq13CciZcqvvhDXoMkHq26Ot9pooMJSHlgivJqQWwaUMYdjzf668Walb90jZIdtLiA+WKoHCnsmsNCM8rLGKgQIfUA/gzmzGN7tGKZkLOJt5M2HM0Ecw27eTXSXmBEEQvPZAt1q1dfWaNonK2YhzPGiFGPsIgCXJ1JQC5MuT/KVlhT2dknJpDDz/vBqiTdj7wnbEJK067CDUpG0kMR7Yx3wrXP4ngtTFx0ii+aCw3e7BcwfBG3+Cj/BimtZxwHCNQX0jFjZk0ssTNu0U83XONQ+iLHjwtFuxbn6sdNjjaM+HNXDm3JEbntmNn0bTdjYFw7CcmDnHE0B98j5WzJOAoBJcH+lQlGRQJ5wbZw2y7VrelabJu4lQtBpl2GjVWwzLJFHqUaxHD1xy53z7ShiV6apeZqqUVd7Ug77F/qmguPFLpvg/NKSByBag49EeXeKLJWafNwP7I5WH0LRjQUmXyVvCVCQ3KITqaT8Z+mHzYw8tQwd354++d41WxLOfXhMah61UhRreysDPZWXFx1tjg4Bxarrfvq2vO2erVa+xt+5CWXLdI9M2FBfbY4L+iqQzQidYqhWf/K2/EaYwpkHRqlEYjWMqfu+fmcMfeeHbKp3cM5y7G/Upygx/wKpDRcvbcvgimxvzHlZ8eP23z9JGYLZPbb+6i1tuQyItVXddoILtlHRoZV2ED6HoD5fBhOJeWBK/1bhEZ4Ty+e18HFhADWNVUHswwsyZDUzSqF/NJH0piP238jRaFi9SwQdEZufpbpuvxYDZ9WllfmgQOplKUzkd66+OuTVfwDfO6ilRY0FUERF6/C1yBL75+NgcMGGJY6cH1B+rGt/kf+D3hVeWUgpGngHcnbxeGKmQRE9TDLFQa1AsdHPE28dhtYCymy5g2yYU4VPJlKcwe1oqQRvNOwJcKKBNccThh2/FbzE3BvwxuEekRa+WG3bHxcG+jBpJniRCCBwmvFZAIb7AOkDJnA2u9qLZZPBXj3hfkZPAxdk0nIgUI+tDoEYE7nzbTvWSV/uHug+e6iCC+J+V8A9ZL1YpyX9pmtNgpvaNDZwQJLepWpdqvQ6B8Kh1lCDMJh+Rn7p4hr3FKrwhEeITOzx/ucBM0qo1CqlQbvvURIS21tVufVlInaMiGA3RxahR+Fg9XomJ4JqfQcrq4SCPvGtAiFLm82I3ZRO6fxjTVhyI8HiqT+Sb8Okyp55cBxN152EYCrgD2v0ZJ+c24i8I0mdOt/PzsaIoh7oQpyxCGO4BCfiToHSLW6WK+JaW4pywdw/gVWr4VIEGp1HTn7yhKoJLy4you6Dg7XExuLA46OrGQRMUDboGAkHgln76N7e/i4FhTK6LjzYDDWuzS7WkXnu8nU4oG16aIgy7+UEgp4WJzu6GK47WG5pSzkXgC8u3rHbsOwrKIlOhdHnhFbfV1iLcp0K2Vrsve9HBpsMjVsVvkznEEShFfq5FVFDkzUnpnL5HUv9jPimM/czZS0zkjxQZe/PzI83UJ1NX8beshENTuNEHB6YqZpx0AYc+/n9letLnkxNrtGOEASEOS5ZY1mbJr9XdZXYCPbsLurN2sOa7hhS9Wa3VttoUy9yaZhjJigfgP+m+hGORYQmo210zCVz4AMWDT7P8Hz1agfIBD1gNOdcgQQ6167T9x/JA4DinF98k8gZZj3NnreX2bcoWpJz81Bz1Q8s+nPxLTmYR7p1ZDLDy1XZyHNJGU/9RxE4aoBT/0f9VPEFRNKPS8I+okG5p/UGjKUETWUXNvEWSxHqAIRgGvi5mEfWw7WA1D6J6k8oPXerU/I8XyCp2QBOtttUNFzIk+MROCPejwundFKxmHj7rO7bn4cHnDtlbKwknzK7Rh+1UdXU3d+GR+EChUwtKjBPHlQCPKR2JHR0PTG0U+oIK5oO+XTTjhx67NA8aV6J8YvIVPhhbgEW6PkYxgeIpadF3NJeO4FJpr/7wjoy/5Wo7SmKr67eB4tY2SxK242cOtP6USUkhGXRtHYw1gm1yKpMG34nS3Twc6ldDgYvEpVJSPvRRp/PXwQlMmrpsjjvjGBCrKUV0TrWCLyQK+y8A1n0Vo7IpqQwju0mDw8/Agr9uO63MqxYiihrNHL5zFKmfjCmyUt4PrSS1zveef2azQoVXkYzsyUCSUxk4UACu6mNKCQ2P9V9q6Xsmjy88+wr5vNUYXpr8IBBTFi58gtwvEn2yask/Mcpnlkz3HGi5OpfGWQhg8sJJpp4bIm0ITJ+oHg8JjUx1dCcpiFRyxEpOOmIiXBG52jbQ7pJ9WSM1W9NT9N5H4tmSfFOyQixIktRh+ECrrP+qYMWxHKdeQN+K4TV7DAtgl6vrDsF5KJOEJbG3ks19LMBjLrTqU8YoOzL8ofTPcqFigSLDAOdh49cOKLn98dcQEDuuGGIyT4Zzw5PJWNBjo/Ql8wWgkH8W1gD9xf2cb+9v/CHArLOcUuPgwTzdiCyEOD8io4faq/jAgxqe1opBbHfW03aFB7W1RjOpr9/acIiYyDRekmkJOIdmq0msnsHTmWFHFg6kKWGxHIB4JHUWUQsrTFduhET9cxCDQyx4BRDMGsv2NRyS8CBRqBYrKvVYP/7Y/rFkWuaDZ/YrCVMXwpe85/5IPLMM7nq4xcYPj8cBUEuf+LoR6poZVMbS5pkCHwiOmZSYleSO4h9JuC9QVZPFfOmQlsoGnD3A7wAX9oLHbKZ3r4+OsThtkPnlqHLUR+XmAhKLVS3+cu9BhqEj2M8l2/PU6VvHUV/2URYBybO4H2E4Dk0qhjCPn9QB+oZZBtvIrXXDhOgwHdOhtI5Y8uJoY3esxT4taOaldFg4BME6guPyWxpBY54ayqQzzEcuu6e9FXwQf+JYzxlqOdAshpfRSTNR/BmYLSaItvoORqid0ThjKjvohJZZQXVpDb6iqLLYcPR8ax3Rk7SaYqH2BC1qqASmtayxs+I7k4Micg1xE3qiO57f9ksK58rIrSAQjxV+UhWji2N5HtBmzp+SyVow/jESpgltCR63D0q/PJZ9kiPMWKfXzlGXr2jWXiThU2vQYUKDdUs73q12YoASQBrv10tf1g3odYlO+UJZvtYtDLevIKFgkOpGkuYmPY3PDvM7G6GaQtaGkK5HoU4F6Zk2c/ca2Yc1WCS+oLx7e7kRwUraaU0K+vTJtzFOIMMsztCGXdDrvlMqoK9LVWfs3a85B5XgL4VNQouWPDRu4/HKYEvhk0SUe+yoveqDWRRBuItLrLzjHrPbQvDHuNpSwAFXmvUcrWy+5u7qDH6Mn1KPXwZYUUG2LihfYjI0+RjEIeG4E+vTYujhHAYfGz2OFlxglpT6dRXA2rVNPSRPKOIgB7gJHEyg0YbsmYESw+gd4yTaCB3Rhu+snXpxRVdZjIg5JMD+u6v32qf6KDpzVArQdycctiIe42xjAY7CVqM3zB0Oefj4gWlNRo1qHCpqlPfm6ElCGrpeunoNGvhquS7xDi7GgPxhYhQ0Sgl1UKOliZQz2akIOQY1hRGHXK9WifoA1p/hnVM/tdqXzeFeapODBjtcKsswOSFgFZnauq8k5Ky6E8g510DgZMUHysxd5UT5nSXgaw9iQaWzc0ZSCJTSfbKyG/L9Ev1TEpDVH2ErTWlgPihkmfNluP9sXUpHUhSEr8QlY89WjqdZkopfK0abcweL6vecJLqonKuonIgNKCbA/ac/DOLV8LNk8GZNV8pTBNQhsd/ySsbvWk+ItuSj5iBkB/7saO15j53yBZgpxt+Cfcz9bvXIoAzRpBjsgwTfFC6Sig341VPmtOp1Dm/jHsvv3XgLSw1aHrrET820IYqCu94YQu4ylDGccnUSnRC7MAzEgG3jah5uFkGngU9uRa1Q/0ep6oejoATzp6F0pl/jRN0oxsMBUaMYbjnvINlR0q3BBQMSQLpb2/kKp99iPplW+pnB6lEobXhPzp8eMt6/Ce/i8Fok8r1FAggfOAL3g+pGUJWa8yDn8wrqaTw0zk2TEw48NHkJ8gFDqJDmzvfK0mbwsVSTOztqhFqIM9BX/0eBC/JhEFmk/l6OBe0Ppi29dW0Lcbq1iofLqAAMhWOS7yxxq0PZESzEo51+BlwWcc0hv8pSIOhimHrC0x0PNAMJPjxuSgkWW7i3fRFF3QLBMyRPTjZ43DfG1JOFcIrHVyOAN5o2mV9axSVBFRlrEciYcStfqdaWLZ2jm9GawW/cjyJP1SflaBN27y2P1N+c9TiIW0wxGpzgp8weKNEiljndWstJ1+K1RNScq/Y0G3rzX6VggQ5gRxg65Ds2OaMXzQq//9M4A0/Bo6NZfNW3ZHXQeDfmHXjTyeexDgFGrZh1YeKApLYgzeVwRn8LpR3+BJSnJc52lEzXVboxCwfbCoolbBynpmISGKE1lk23bYbJ7yg+2tNE9t5bejncS5s2aRiXKLam8EusqeQMWYQi5nPgkW2I=","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-12T03:57:18.813Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件123456789cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"linux","slug":"linux","permalink":"http://www.digmyth.com/categories/linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX1+o5WY1uuNixyGaXedmGdWzlckP2sYgWRGgFgObyrxKQ2Qw/K/2gRWubYi2PIp9BYisbOjKe61weJJ7LrCdT++G15WGHiY3u8r8klezlOR+5+Bq3VYYlZugXuFTYmdve0zpbCILIvLqDJQoHF508Y5+U/f8RCCoN+BeeN2+dq0SvV/IjbDmuh2Afq2vQRpb5WEVmH6Ntt1hmtjqlQavNgIXHOE/nSfgjSAY+/SC6Io+qLBDzG/s3UjARIISoW8g+9+u4ajaP7hmKHVbXk2fLocYghMBW7eoXtdPosEARTxVw1NVqGfSz1nh8lP7Ntwv/F8sxxRl8fw6Gdv34CNot/WM6Tsze/u9m8KZEKc/JlSs5cjTIYRqe1VagnDBcACuZEleZSPJf++pdseeVay3gLpphBexsBwkP0XXRllu9eOskyXikqrUwu6rqycIIXLZtA1SQMxz3bKhhhgRraxZPvW/6QQofcrP4xDlkbWD3PVfe6T0sxsXr+WdT6mQhe++T6nhxH9nY9FWqnZtbjcTgLtcAWctoAMgi6rZ52AteNcQqvP7VEdzCR5h6Ok+2o00sYkc2CKD2SDqvIlCsKb1qvNn+REuBnKEKBgb33b9OT6qoSfH1f3yBGE7tJA8sj2n8vAcLTeAfpYw7a7W4jdGYQvChnBC7KYT+4IX8ZeZO1c5aj5B7xNxgq/FCiRbZD2fb9E+SrXo9ZH+GAvpowQ4zo9+GnjWaRdJFUtESRTVS+wDP0rZ6f2SbJbSVBgQsgLmD3J0EipU4sNmAJCe7N9GlgEY3I/kH93o1t1fYc7jN21c3UpQvXuc8J+sBnKGR9877StAxeRqeropbBmuco4opjjFa6WmTF5SgDyri5K6XTMx9hceK/xAekTatASV7tTVqdrZZoCqJ+/NPUFXqSJz+ptPml+Ybie1eZyWaW63Qh8QSdDvLs6pI489UzFOFzy5hv0eexK5OaX2JLl8ywMoLxqlhHoqcJtdQZ3hq9mI3ePJmwiIh4D/lfBdb962SOZrRPkD5361YmxI2IeKrw6yv30yBdlyF76cicaD39HNEOahd3h1YPbSFOPzxPbVAWWXqoDbryCCVtpJTVHMjGBayM1C/p/Gbjzo5Qpaiu1PZrdn42+ycGYwqsnCQkEaVGxjIsDNHQGgP/pO9EuwXtbMGKNwn8dW1RGJ8+1WP6g632JK5HUDvyLSCmmFzh9nXZXVFlPX8zxrqLWJrVoRHnHZ0hzbYyEZub5QvMFES+ivCi2YdlpVbc7JyGrYjIeskguZmYjTXV6zFsz+lgBnYo0E28vciUwRPWsfiPkob8HbmfCSHh3hJg1Lic0ypUJA5Kr3ZrJ82eL1g0gA12DLG5wQRdAnLRtTd9eoY9VP0+opIwmNv9e/Xz98L6VoeeM9g/TzhvD/64IamO60EUWXmdpzPX/zW76w6h9Z/JX1AiO/MHgYpQtHwSffy01VSyRgXMzLVS5IQ8T+tW8sDO2+75K+gdz07u3Ht0D1olR0H6UhuT0W70PF1IQg/95uW9D2SUaawXOFHsV+6x3WgqurKDShKwf0KHl9QmeYPSMU17psAJOL0XyHPfGqEHyeq4HmtRxOy0j53Owyvehq5mwnBDrfr9xvn28HmaIXkeoLU7ANgyXhXshyVYtXCV3fuWoiMaf9uNxVtaHd0DITw+1+STWN777Ec8UrTb9lnjPBMcJm3IoNra5Lc/2I3Gv7T4cORTpvTvC9hpesthRnmsXB+jIB6WOpLILpL2nF3eU5lPTH88rP+yBFvXujh9Vinf3hiP6hou7S19L1TUHqrBfbA8arw+MP9hHwse5tgSOTThpVOkU2bLtaZcZsWvjN3fjb7EoirQxRayvu8+l7CrDRTFJoqcgyrM/8fKi37oIeJf60eoNf81CvvPKst6+dwYxOFhYlKQljtabawGQpDeRKXoi4DM+9nut4XEBEJLkVUIFabMtreW3RzSrrFoif3gvjJ8MBwga2dNkc+cThRQye0hMoLP9YbOShHhdH8BkHtSVQ+3GzF1NE0PVkMFvUsuN2cOhjEjfdLpCSO/Y9CYlPIEynmBpxKYnijvf2TlItvyTk2UpNdArt055+GabatiCnrJ8seEuQF/QrX7Y9cO1r1iU5Cu7nLf+Oq1d+ujqi7aBkmIpeE5YBMrowMdKc4XF1/8huAJpMonRNrd6X/Jdoi5Su3fUTOJaTLr3/xXAuiPU0LsnUlBzt2+/Fee8kAnjOUJLOzJOuSBNYYh9JgSTjUPqks5kAkkY/bSYIz92dbQIKaSMaNXFKrSS12SUPRomtJh/GumbYYYTCs1G7zUGn13SD5KWb7zThEG/pKS2x3QmXeajS0nivynwBqW607i+DO4LbNkFDEYZjKErcVg==","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}