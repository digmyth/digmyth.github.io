{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-07-22T08:10:15.294Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@own-jxq-rewind-server01 ~]# [root@own-jxq-rewind-server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX19WL6UPRLAUQPSFsoHy8B3mvaiFWk+Fc3PNpiwOxjr5atUodW0lkjyT76sEbTh6Ft6OfhY3vmwcawhkVnGIeTUvOsTjpdw7icu7zXtYH5QDjhgwNvVT3ymaMSLKsuGOMVNGfWWXy/6hWviqxg/H+MR55D3AnMs95jwjvl0//unL0eOOjA/AGIVJDnCJck6UvouV5nWBkqieSBobp8VLP5WEZqnR40OcowwQMSs+hOuYZ65eAQhGBqBbKyyUnfTeE1blhsPpFoUKAxw4sumhT/a2uj1DS3zePy2ufGhB9swZDsDCMhM2MgY0nlFpqIAFlLDwF2asxo73GvsyriNKsDLqvWJV0hZdNGoV2Bv46xHuUq738Utkz6w1Ovz55LWkAqLwUvvBAUFYutTOxQWZw/za8EEwFnq6VZdVGwSFokHLJoZTdvcOAEuhg1nDECDuhGI7+ytluhch1G0l4QuH7P+7hnQx+/L3YpBXPZMstZm5EbTpwEeSGeM1vPV6DZw0suxOYk18Ko/Vny4Jrr8FdbCR+Uhdn53BZkgZI+lTY/xwihiz6wA1CGsC4vn1jr46o8UdT+lDGuri2kyzZCVBN+svayAhMB4K8HeDASfc1L6p/h1R3arf4vausTTPUnfwhCa55HHgERe2KL8V2BrY23m2GkmHx/lRXWmOsDrTCmtIS5DVOl4HPHR880NXGaj4VZ2wi9vWJRt+9Z/1aswQUtTmGE7DSJycu68AQcSFMGqRJw+HwPqJ/A8Dt9ZRAtgXzFC5vUIkc8iiIpmt3DGiiNP0adExjDbe6L/XKJzwRkdUseyg2hClRr/OL81QsDJpVBiMhGimQ/pFHDO9p1yc0vPfD/3Y2WUckrylYjos2gIWjhoxjyDzLBQ7d37E6PJ8wgQuLif9uOLYqa8kpewWRu+qLEuS5hBxGvvPd/cffayqIAW+q+w8LrSpBuZlGunm8m6EajOYB0zGfenKTYtZg4UkIZXqbOU0rCggMihgWOG5KATRaaXrNAlM4c5pvGRl+hfxTSjjlB7PJp5+V6wiAGxTm/526HNOT08V9kpE2ysQHuqu+aZplZ4iuaR+PdM29ZwYcS9Std+xPFyHWwMk8EZKace0lqqdoggip9nCEh3C4/X7zp968TRUKiXofebod1w7GqXqJpwYyelHZCkJ9nP3PEPbCBPqRjPt7w2TTO42Zxb6LxUywktBsY98I0mKOWTjiuJ+aOvUuT1XIB/xDArnUBrW/h86fP25k6sedgDkZUiVbdSBxL5z7cXlsYKPij2dF9Q2afP7MazH23XTbxQ1h7bJ3nAvZjvW0iYdD1GxnVncfCgqR3UeI23r3gjaSKdVFyoKiLPEkLo79oC+QcG2/i1eV2/cfysZmdAb9hfkjdL+cwM5jb7S0PNeaAhKV3s6GX7WJjK+urfd+h02OB1Gj7uvrRbEV2fYZaIPX4v9n2WL3G3W7Uigj7pc3nAiX/jv2DoVlhTnKiN7G6MiH4A8RzwHP/wHmMG4UjEH3/gHlsXGrGffxJH2SrsHYOSa1N/jhdJcmAfgYT4zL0R9tR/hfK+yyY1g+/mWEv4P92MQzmRctjPR0zrG2Amfh5kKkbXAQuRBPWSdpPFXEPlnGmMeizYk9WAyiEs5bN46FZSWFH1A5WEFt1EaPKJCYVz0A+Y4/7QpJ4xMUi8JBRbwjhFuc60+iatHZ/FQvTx+ajDAHd/ZFJZW8XJ3edqmXfaZC0Lln4AZB+l8G1Bm9g3MOWKWnhMXLVgZSuoO81iDNeXmDEmdnqnHqIb8iEklaT20ENLynohWVVjJrhyfawOMAbahZSOMZGcUdMM+NLErysAgUPIFBc0tUCZebfmK+rqwXbaQ+QfyrdbndB2Hngc+mt0Lh4xUc5cLQK3y9GV9korD4WabO7H8lDIPtaDigfLiKBqNlRJlxVJ/9Strrfyz4IkWRXZV6Jk5gj5uXV784UmhuBdHT9D15rAoVmnEsEapjsEBo2GKoKvNc+I4JXOLjez1VWDp8DSMiT6nBvMCmX3zlhnHH2iHGhG1qUb9aX32CzDKScZVNj8/NwuR79CJdh/17wPMsbbo7/XgJoTQkgm/0o5HSp+uqIk3x5CwCjDiD1SXs64j6TWSUN7ecJw8NVWzChN0lpicBGZ+AW+4R9L1gEARlmVVSHcWOduXG6r8dKGutDqhmIBVoaKIhRtesBgjH57RqhKOzmeek36GgUr/feYo63Uh5QTPqYAM7yK6XInXuO+4K7D+YSx0nBy/51c/F3iyQeGlmB9A9MhIjbZ1lilFTbHzi84ALeCmGgrMjHdOhX3srZBX8b/uShpsRfpsVlmooaaamnTyjUvkg/BT0E9dJaxpK8iNb2LY/AVpmpC+5BuxPv8q3LrarE3lq1Y2W/WXE7AAGCiQFoS3G5XXK5fgYg4byFXPkfB+2EVl9jxPEYWbYxXVcEO6z+efW1iK/PXLfE57SA2b4LC9H+V6s6HWmxWY544ldTsd/SFUR/lZKRkicIAGXVMKLriI/i6evRrqyDQ3xKU1V6A5Dy/XZ6YlJZk3PaB3RhCpvLgQIycwPdfrGoHpmV3VJQGPjmBP9Ooax7X4pQpnVPLhddWDCAE7MSZHkzo3gAM4umnCxTbmy8CG0/87yKJSf2a6IepbJnhidHG74hS+1VoH7sNBw6EWH1FLjrYnUxHmnPUsvt39b9Z/RWWesgQC/9bEErMxzUxa5NFCh1FP5cfqeXTFA8zYUgHROZ69qRnRs0QVr+k7wBWdu9OW/TAxi2iw5UgKM0O0ZLTQwT5niUvSgAUwd2ska1Nw4Or6ilw8YC+TV5sUb0CDd0dOl49bdgZmC045B6bPzFOLmyJT4mmLe2N1kuwp01aCbkWhvuqXotkZi0sKdsydxc0BZDspKnH34GooT0l0umocOWyseOHCzUPfOzxdz9+H0cDsI655C9r32PVnRWQNWu38VJKC6hfHgfmYjouTnw+ITVW2KSqrIqH1mVbis6QZHf24Vm6bHPCw6fkNBFRxwHQCxmhkdjLdnI1/r73X82/JXUJJzkys+yfZfoAXSx328gKkyhsLwVhBk66jAuj3+4JCmFkttpKc8sQZnaO+5yrYG+e8rclEioaDIBuSeZ7z8nhgOx8J9U2mzGRYqbM51h8jD809CXQkyBDhpa17/JEKaNejHr+vlzFa2xYYfLqjDIB+jYDUqx3SZCjnm4Ag3T0LUL+co1sX5Ik4V2MYsqHg3MvwhCSg3C+nmxDtpHD7TsEhPCEMVZSHIP0qNh1omCQG3L2t6Rbpum4L5R5D0J2W01pZSIY1X+YArDnttQtY21oFizrDqspJb1Tq3zWyLmQmwKBRoBZ/XQb7xcIcyICLg9zWQO4GMJ/XfWYd6IzuqFNCbAFpAPGoDpCWbaTiJRJEZ8h/nW/Bjt0O0uuwNJv8upghQ1REXC3uB1tsoYe0bO5nwLyvuI9OS7QyA3zuvvEFAXzV3nfUfXvajyQHvqMoWWf3SX/mbKyjsRYp3bG+3tvxwfaAMXDyGgN10wWELFaKsVACKN2OeCPSrkSy9P3CaRFcaRkgHItfU8qevrVHrenU7x18yasAev08M6Wo4fg6+Jc/E6cUXY11nDcPSWMroBphi8BDrs4a+VCxun4dxRtU7MpXcw/ahtiV94g12OvOBME+fb8DSWkHBP3YDggxmpmUCXPsWF2iViVKLuYmRCb+WpkNxlVpw56lYQ/dVQLhUxNmoTsp1tsKLFhwBukkF0XnPTuaJ6gQW32GNIMx4cKkkZLpH5L/pxGeZ1IvMBGlHU8Ff5s3MQQr69tDXEE6fFZpLUYxH99rarhqIPUibUyYYXZI68G9P6H+1wMoFwrKLD1lF/Yv+ZXBL0ERoKSPXGJB0VmBa39iriyhmHK3t2cmWNjKDSCaD1/UhiIeFAf0D+PEJTJaTusd2KWiFLaFwzHPytEWWoQ0lf1TzKKevW3jkKEXNCe5CuU667dZztAjhcNc4SUDDsSCJPNPq1SEw2yCfwAzRAuGBiGTyofNW1S3RfarO0pQP1lzyTZmGkA4mWHvbHcbUdpSzWRHP5x0E5dTJelIFiPaPzrtTtQiIQjwgapF/5GVV5+Mce3Lx10oZ4luLJ1DrIuCxX1e9t8vkKVMEMPadzuUniHmbJ7CjGZ2zWvHKbljjzwP7dmBY9RERh3Urb78KeRVrOu8qLSxZ+FOxYLjwktgaP2lC6ah0KV7GCgo85Wv1uDjZctzLphHBUuBQ14iJaAbRL89kt+TZrlWopKe7cq+cS/xjycJ32U6dzHlIdbYLIVqxqx+K04bES24cyY0oIFr/A4lHYCjY7zSh6dT2HHMn3zoZWnxXAvM/V9QsJVzmNA3lp7EGupcRH9NdfGmkZeLU2coMn+KuHhL6gjiDx3TxqXi4dk4WDzB+p3AqR7aL1/+4YhaWlwVs66zFNCft+nNnTT3m3sbAeZFAt3ORFxy0ZRAhFB8jIRIymPbpu0W8LX6vE8BffqA964OjhbxEt40eTwQAGlvcONbx2w04SyJy8ZtHSb586d/+Q56TPcDi2a35lFyA/P+Yh1EtZ146U6DiN6w+ftBmYq6C1CMfTGbQg6b8RkTK5rvEVfreOs3M3LWvdKacb5PYm9sM95Z31qQUmx3r5XxwUUCmyGjNKFQBBHWHGblnrP0lGgUm8xwR4J61n3lHMzbaEMTLb96oQMs3XthhBzXYYUlj+jvddfVxvZcCa8zpE9cKT+mDPbWOj5VbX7LCYGQd4wm9Y98FhghX5FfTvIBwwdNRGAcDAgKM9Ixm8cQ3xEuEbiD8Go3WtVlyO8pNEKn8PIXharGwZ4I3hJxR3IQIF+aCN/+6CF8sECu0uKuC6rTKy3ED3wHT0HVTHJasBY9+UOv+uwxH5d3hsp1MzoVNYdHFzSVpH8WMmp5gvOrCnEW3bl2plhoQBlpsLuo49qalTeYqJBc8XvDRKh2ntETutRo19sRNN4FyecmnFhP4WNKvRM8o0TAACOXSRVk1jlPApRv97EyVi+b/qaD0vBYM7cr2L5db83MtHUBqkczomRJ6yB3sMlQqo3TSH0/55fI71cgQQ+EWMpqpBgyYYEqEHZTMUWmoxKKvhPgXKqEJ8HgttHvTV7RxOmhUB8APmETRErZIvET5e5UqqURtrEJALbIRLJkvMvH9w/B63HZ/u1LO3QtrcbLBIp4+5XSiScJ4p9TUZ+QnKUeMQQyNkjQnagW/aVyzSXoMrr7+ai33W3B6jhiBBOHw7zpFxVuVIzpJRnJqgBXoRferjYjmk8rYzPQhhlvFGwBjtrGc59SJ70o/DVu5xNZCaa2HpH/QgiB/V+mmsH0TXYxF7/3IpFvhnx7di1ELB4czxVLhqA+G/9jOrM0PYycAysHpdEx6Tvq0tqsBwChLnkk0mneXaTd3RadZgFXC32QHdtZih/VpECbsLbMpwCt2ZHFWXIG1Olg/gss7kjG6jII9rOZGtCXp0A79E+zmNWrWoIqJs/FTt3zl8cUgrO1Km16t8Z9k07sJcOifGYygsYnziQiFwf72Og2TiwCkz1cGP+PNlELBoFz2muEXYqlOqQj4fuar8qwx7E2h960pca1L0nVPNj8oHr7jH5lH32T4pCTjxI/85rIhg1BDJrfJVcDVVpI7WwiSdiYl0O4re8lGQ7WfG3mPdmQRxlkELO7ez4d/15k7gtbtUY0LnmlOFJk5I08QSOtjz52XQgjRADOugr0nKMNANVPq4mpRjPSLdHYWinQJ07VlDUfP6K2aovMXsSc3P5lgmXtgBRfobBJwV4kcIj52UCqzhG1kG6iktZevmeodx1V3dQGpJQGZDthCOz53TXfA3/5AO4O/8q5l+6c2afO0r/YGPm2VHppiqILNbHFuyN8a2W2gsyGRwkeYF606hyjQKdwbUmVjtKg4ZJpdEcudgreIaHmkVe7ddj4YPgV+9extaNQZbguOIZDvP3TLo2vhcxWuNcM7pFz92PtF77zZjEyn7CH8UbHG2eqS4GVraysRkIpUPEcN1Ku39arth7sLpigAvOT+DH+QCCW2DK9Hg9sBxNQvkmMOxgvbVgXPJ+lw6qpnKhX5FYxnoQ2agzlL+5ojK0qnIwz9/Bbg7/72ZBf92r2cUeagyZTM+BGqT9vM1dwHw5AKi5Lrk2saBCvp+UyXvLn82PraDCzBt4PjxFvvR1uJSt2moA4/0Unnpnvqg6sF5G7jqDVqnsgBOGaEpaBaprqdydohdJsV6uHTAtywNVTUlRrxKXEtT30RjU3Q837YVXBL6NTkkDURMGVBmM25WA4kkg6AhKhpGDmbJnD7dVqgnadlLoWea5sIT5dR+NFq05jKz8Xe0D3QTM3tUwFfI+TzOuKImX9u63xmA5Q2fL0yqhY5ShOFBco+j1dIBcm8T+VhZArSvtJpqh8WNEcC9KkU+yEqSnzqPH3u0nHiK8/0htGcFPlSejRZ9BD8wm0Oe8uBflhUNMvfCWCKIFJTWdDM9xSVFmdtRymfX2XC9zd0QSCQ0K6ZlCLfPgJl3GNEDQnkLnq8leCnlCAz/opaFuQGE9My2RF97nzqkcwGzRzoidbDxC5e25diHBzsY9K9dPZFV76uRgP4RFtPiPL14KZhn+DFNsqrRFqTeIJ8lgqGP0WmsYnKOD0tqPZQJZ7dkrOIvTsEHsoPTS1GshasvOsMfGveKsPuokYsueIdYzTUJUK44uJdqQJafXQp0g/L93aozVarxJnAR8wqWRlvUa4go+wFiufb7gI3UbIbCrXEP89rnzCWXgOr6YWAQSY5PfjMrvBNQZUl5Z6TbJtV+UIhgntQS+K8UHkd9GqUne4FtMVuz/SQfzWV2+hZzO/VcvClkOKuEF4lA8M4N13kezHqsKRADxcFXK1OcJbDmtvpsGhQ9yY0lxD9rKJN8PrTOiqOpc5r4LSJEbiXfTLHRUWoSyFpfPVzSLKlvIHofK35NUdYQ435ION/9ZiyilQGao/5GQmVCUnB81IKOm3Ns//lPc9F1nrWRPsaLfMX/WHZgFkmQzoXQNn1wNll7js85l7rRoz1z+ITsFX0FW2+C771F6drhm80neiVTNz9a0zt647h23m5ECpaJ9YiUhEoxAwg7GH0Fjq2kNvh2vvz9K32q4yAUaRw16COCCa4EKAP3QvSWHsv77P+RSnpL+cjZqPXAeE+Tx6sT9Cx4btUyPIHDstvSzgZ4bUZ5nFis2haT2Syafl5feZc9x6/gIb8aehIxP2LwAh0zyBOkOZSwpiTyxHsl2W/fjqRpBKROytceOR7YtrPXarIi0rCBluXFhXHEBnOzl76FSEm2VUf/cZ/E6log+wUZ+75MrxMS3d+qiyb9a5ep5RVBs1vO3oN6OkBC34kGIb6BW0dZmhWsVyehrbQIhHJ84K3/A4MGo53Xqee2Hprn5l2wzjdVAuYVL2B6cOwX4CVIMhOEjCBKZ9379gFltzSzd358AzBjXW1+DDZi+W/DNKEW9MO2FCvMxMZzojKW4xXwyABRI2XNjwpbc5CRSL29nAKFc6aW32A3Nql9mCK3PVJjl1AcpFa0XkQkFXFTxLWPYkjepFvUmpnvekg7Py9M3H4/alhm5bM/IEbpvUx6WWuPwuio5+Oa9XlozSvw2Qfvu7biKTTwY5h1jCT7RFsCUPW/Vc4qKjwxJnQrbLJf0i1iqVVq1uusykQgsrcG05eB4Am34dAqh+USBTizw0G/PANRj7GsLIpnWlbUakjJbX1eldz8Qv2DQp/ukDx9QBJHKodf8xcN1yCUb7QGe5T0OGVQAUmYYYvLj8HEaPDqu/kPT3vD8wDjuTaHUC5MYG0kQ6VvnmQuwI8R4vASm+nR8/aUF9AFaN56Q+tF1BiuuiBHoZFf4MJN/qHXMCmq+GQiaTZKsCHIrnkcONz6Njb8NFVKl3UIEfeBtpHGmLsrjO7UCKRkuGkoJ62SioLxQUV+K2gvVVQ+e/wHln/i8ifQVnECx2JyeW0cdAB8ZyGCQqO/7ZoiPJOgbT8iA7V9e6Mi8PC4l7EjlaFmRpUjwXSdCJCZKoCkYmAdKPNl5Dq/9sXhuNDmjw9lgEGg6arKJvzUTgto/4ci/VUri79RUMWsdG3QyszXslMSa0R9tlLueF4jK9UZlnBQsF1Y9D9L3JOIxdrX/I3pp/FJnKkglyCL/TLyJRO+GzyHqdD7A9PAucdYVoHSUYv2frXqe536FoGhtCjTMlYkJBnNLV9Zda/IPhr/wKfoiDN5oVJ7b/re2cDzhlfTETrjNu5qMizrFK91T4TiUEmoPk8XP84DEv7ZqKOsQkxGWU0MQKWN0z0gxYxE/1Eoa7QhIKHc1sKGVfyP9bruJC9k/rg8ANcaH8SOu1CSpFgo1JY37BXHfrU6c6lVaUsLCvJo61M+oNBjRDpyxOnNWvpXY4cSqCqxRPtksPEWAb0XUDzxwI+TvzcGfI0WKQYaagxmrObbQy6oII9v6Np5+IrDB97EJegVG658Go2bcyfAGs8ddHSA5IBUjrS9LOHOcPF9Jl41PxR81qHvtWiTbnalSA0I7JlxmhkCJkvJYIXTiN6VGLqKUFKJkIx6dc59On7kATFT0Am4PtEdMKNxC7HKDUDUCyREzJ1AUnPWi66pDWD0+xWLetP7bdtpqLIQU+fUOdLN3UG4DBTDM/m4Ie8cnJQOvVSp9YX2puZBQaSNfdRju2vuZ0puWPwNm6UV/15Y0la/4M5mRiJHxkfXK4vNuUh1nLC3hRFKX5JV+dgs/oUUWKqQwJqw8fV4lZMBiOQvEEhWr8YiLqgQMyKvgtHyzyoYDkC12gTuaCA7I+GrsY9O+etfiNTO4VRBtdP/Z8HQqTkVmquv+2a5zXr2zuXcfH0gFWSY5xVCnDsPIPH6EcQjtJirWroJuerKIVxmvobfkC5DwkqihaRc1lKFJ4eN9boSmTLqMGI9nqjr4LwDmecXgUl9Dn8Olc3sphygwWhQWfeMKZb2t4eMeTA96F0DPAH1Tv43aAavi+N4VJBQyALokIUMEcsNHPgfD8D6/MOT83vJGywcAdTS+O2H9VtO0P7EiyXfTJ50oVKdg1WekuMXZvilueUpgP1t9Sn2ixw4xh1M2Z45ASKW6CI5RBrIHP4twcoBt27k8ccYDw9um+CNSeSr40qLJ9kvZztpiO/VW9Tmns71qmrTXE0NjL9tdNT8duEX6PZPNmty0u5dV0Q847NWl0npGy7HanXHCBP7dap/njmvlRi+z+mliL4NS5VSEQqwCqF6nflfWBLFf1orT1OWzSESbB/JW++BvJBR34LDKQlpbb23dhU2xhrKsXbA7QdBGUVbCz1oaI/oE+rp39mHH68vqwtOwQ3M4W21uaEJ6QveaE/vp2iu0Nz3tnkbk+is1TmwamC+wGrzii5K/6EmDRvjizVxTIRDwCtGKBIni0zt7RO2T59vZmpi0sRtVGtLWB7c+KuBUOD83uB+iK/mOzT/J7KdbSLMvw1kG80SFKVmNpOr2jW4eLVPM1y+PWVAuMPmWFomYZ8zIG48zVUjqWrC9xJIUDD1theK8Y4cwjmRbeOeDW/FLfl1cBZDvaXbOczcZvVfB6qny01gDrs37AnTnFrBNLLpvlVlvEYbY2T0/wE3DYGUejldmLh7f6VneNfhxG7OIUEsQBrnebPr4d3UCI9V0L8q3layA05btyiujOjtdfFSXpwCwXuykUg1eLcMmOK0Rj6d5frZcArqxrJKJld2HDBw2qY8cdijyRCtQEW0EcZVim9LA2tO8b771295WIHajyx61OJAs4DYXK25aLxE0uBLKog6d4NvDd114eZZ+/NShuCHhcKXkbC9OsYgisUSXPL6C/SCbx+hrsNoY+0CQHx1rBJYlJag+o37HH//7VtbIMZYtQg/+VkB7csi5H5D0hdIycsbGvMzX5tcKLK2uO7hN3cVpuORQ+kolphT3oY2soO0ED3xlrDG0ODSzTT7WVq5dBkVCUnbJMuSz3ozHqAPMQWtG2aPA4usATWOIGt2FnZea6j9zB4VyPWR5YH2DAJXdafShLknayuPHqSrXIxbHI5qz5Hc5vfKx02G2llHt87uk/LNbE6R1+pecxyeXgh86+Gu9UR6BqxM03BR0yWvqQ1S7LFNpvA7gSF636/+vk7RNLG4AQK/JRMiyXF7l16NT/EzDP56GzlsBj+/0EsQK7C0zILO6qkordeqwiFSsYtPkfDz6XP4baqOcsNReoHVeBH4oa7H3JoT048PY8FDK7YYHQsBq8N+9yHrSY/Gx4IEI9Rdf0WvHjWqMEDHUDbpksd+/nQ1JwWcMemG2l0MHKilDHWPo3/QswotI8S9QmfvLolrOkt0tmnn/oz9169snFSil+BYK3WFr4QaHIK9bM5KYEJvPFYai+S3dS3ZTx91xoApC3RpGZxkt9O6+b2OnpHHbmT9Rq+HI4/7m+o6u4IpxhnXxCfhjoaMCo2CepS//VE1W9dBBeM+aXHjChgI1/3z6lDFJi5aZHd1ixPBwLh9Ii3Uab0Vhk0Tpc1aSzgzpm1reC/HP2/15MU6iYTk8BmTgtIcw+8H7C1fyktzlTzS4DcPYMUfLSJACAv5qMdniKT9pN++o+e0fXVxZK9cyZAJ1a80c1W8POukByUDdV9dDqEqEbQ5g6dgRhiItn1dej5rrSlCC8/hKMQl+2Hrwho4oKn7bxEneLRpnS3IgE0VK2R3IGQ1QkaHo2R/zcfiQxUUBkvOTNuz/prgG0VG3vx5644rpIlw0fI2tIcosQKE2mEMyeqDOx4rgFwJ+3tVIkNiQqOu+WmA7Mvwbfs0UlIUcl6J2H7c8LGAyIoHmGWsgOMm+kfnd7RnBwmmGa4DpboWUtJG+BdtqRjldYYROeBCafqjne88jH9fxWfdBzDWELKmcV11g6qOobXEzmHdy47M/bPSvh1SnUD1xaNvMkxh+E0KanNsrGKm924U3LENDSQx/wF1aA+LtSWsbD4LRmuEHx+r6wh5rXDezFqodIE3Lwuwsua+DgSMff6oCVAMx8p6KnnTN86u0VesNRzX5i8yQ/xmxRmbW9b6OGGmMjBb7Ydq9Oc3+bX2IOdvR7mLzjj+AdwBM/u66DGY60h+Iu9YskhdumJMV79xtl6/J6ckhksI3SCCFL62d7Hbx4AAztVahSGC4dnUnptDH/7rvaZqRhv8qPaq+hSWcsREfxjRVAGCN83AmKxGS0dDBoQuuiabyH30N9LrJdVRdjO1t4aEU5qJK+yQZ4s0hwgUYFFTwe3z7CBUJM6ChrkKSjPBumKCT98DquGwcV6GvzT8CMZ5QHPJu3HsDmogoM+lTxKbWkHAJH6YS7FuL4NvKVXQdDuFo47VVvYgUDhz2TpF0/tq10WaO5FzlDz8IVMYEC1DnaNUIKdN4OUvWG7W6boTQhNC3DG6MX9Us7zQPzMB4PAmkuCPRjyem/s+BkVokGfUYMIa0ErJ0abqEXUrg+erilrdsUfBI569AqVtCa2scVj6KfBZ2GC2byrCp/Zm7GEio4cCQnhSTlCsYhGANCvRK1sD4N0Cgh6jFMrvbo0UI44YYFSyQEDqMPWtkLUkaNnxeYL1hcVdrBXDmjTX1CoR3XiPFz0Ydo2hn4nJAQkc2cmN86NLH7W9aTMLsBuZsE+jPmS/V6nq+2uhINXWScspUv4b4aJFdV/r0XY+dhE9m4DOTBEj52Y8WU6cWPp6nkVPAIHq023bdYpJTVtBsg8oe/mDn5mHNcSu442BmbUuGaRmv7F/Tv87ZPwG6E3v4dsEHDzw806/JiiETY1ti9EmEig8PLV6xFlY2CXU9NLOq5AwltlrvKVnTJcOkTIv5icw5EFgNK0upTVyWKmjoDrkrya+UWUk4wDD8xEMDU6h6dvok00tnyyGxQQtRdSdswEayqHz6DQSsJdlbQoFSUbI8rCHiEGgehMSL+saS4xJfTTYv4oJeZxY65OGL1C7Y9Dw8tF5TvIJuU8Sqxxf56tWJdlWDLrOUH/zLJ6luJwOvOBkc3KAXlh5H7eG/qIBI++cqjbRPYLW5ot3MuFQmwWo69DRhVyQkuVG3FNqEJLV7IXfQhBENOeGFZpeUJfkjdBoZv064Vyv4Z042L8bT0BcvrWdJhyUxZ7T9V1+RNeDMs4zLV+YxV/ECZTJQCEfI+E0snL07k00ElC8mhTY9TJ8e7Neq7/RmjGIeg7tCvXDZ055W1YOfWM3t2Nq7wLDfeZm/R2irpHRbYBHM3d6UOoYp3TW4+u8SQHZz+9rdnFvJpxmr2OxOZ/lxiGRAI7Yn7jLlTNgH1OSZAAo5JhM3Mp6Gee+iD0639z/vLs+f6ZE2K+hWkzllGR3P3VP/4Nse+7oLbUpHcZ5IPRqU7Mcwy8HUpY6kInmKa5VbU4gTlctGHoLPkDz2TeP5M6RnmAcgNiECXuyrEQekfVVnfhTXRS74bCj+kSCJ6h6nkq5fJk25mblzw/bPNM1BorkX8HGBnxQulOJBtFvpm+aJCWN0JTMOpWXm2bNtpv4a3qpXD0VX8zfn4QB1D2HrQnKisqqqSSgj51Aw85Smc4SPYLOqNn+AW1WKK4P6ir2UoKjTXV+//yfxElwHiVc5ZDMxqqP2kAgqwNfzwfSB5RivC9dw8bwWpDmEtKg2184N0ZVEr8Ow1ru9AVtfOIa88EOK+r461r3zjeurfvUb/7BnYYx/uQjmeTHgABXoznJZIacPqf1hKRDhoMOjnZqdkofVvoUd2lb4ATfZod/JiUCTJF/QFUjiRD7MVim9kSss+9c1QMFWzIowIfwrF1oDSdOoO6ySTzX7M3l3HxE5tS72md27c6+V9qHNg/LpZlo28swf3efhvmKFWKWIicTFZzLtMb3KF4VXeSRe05+1K6Rhvu7augqUDS281fjUN4a8frPHie63iRTZGQo6GqExrHROrWkxa4F3in4N8RCOmplXPTpP1151frKUj16lCvPUoL/EerJAnAkOJyZUjB9mdpUzsvB/eT7EGb2i/rdY4ra+gOSHvmlJW5RDdCLtLCUo69QFv0osB936O7UcxYDvdCqoNFQ20ekivfDZJ8RawcT63FiQmfGSNGVGdXWmRC7h8AJo8azKHUIhonpDeAWRl1fSVHu2f86rDiYmP/qcW37t09IGp7gJhtfJDrlz1xpPxj/wXai3Z+RMG5QjrbR7nnYz7uiAthbW6LsJs8ZWP8cIFDEsS7+jI9XBY1p+N4MKl6/axu3/X2u4wVetcaAxx7SkIOVwubLiRIvV05e40+V2gku1F+Y4JW2n+muECwqPrU+lwmfMFn28AkvGNVcNheXU6GIk08aiwhP7NdctRcGKJVsie2C2tCRj4e5BWSAIJECniU1o3Bj62jnndGQSMtuhz7/KfLv0f4Wu3b2Eo58+034XVF1/ECxP7rLv+5ueYAPgR4uDoL/kwS4EXKhsGmApaJlTLtNJd5c2SVJv6cS29F9azYIhV7xorNTy+v8FvQAlM9Xu+GGo+6XfZemvhqJFF5UNXnqgrHrFegulOll2IY8SDj1TInK+DzXE9DHbRqt3A9eLISCJA0RQ/rz7sIsXFvgdjQq/wOlAEP5FxDB1k2i1vMmZ5CbQutMOja4MUpS2aRIQMwZn1IdNspazYV0lKGa6yTGSl7j1EqvzYJ5WqXlpe3YjcH5FYWWw987c7Wi4V9Dp67jQxkhME13koO66aM8Act0fa5Z11mO0yOPzQif4Zh52MxZ01rciQkJwBPXCOHLZ1KGVGr+9uk3ZTivMcDV+6J5Ng4Drvh5bAkKIJ6I/ny835vDJDJbEM4SlsD1ctKIMkMhfLRNsCjuBHtvPSKtGdJPI+OvBf2YNuP4in3Sr0mCAo0pCV/OTrP4mDSnVwO8Y0B4bWeebDRNCdxld07iWG6TLhmFqRn2fSy8PUfQOQryN0L/uXQ6BR7+/MESdik9nV96jJ2K/1LM6VWtSMzhwgFYQeiijLH0AqXmRCutmJbAiCQ/1vLEyTbN3CYe5kzvZUYBCE8OqpF4Vu9zXjnk3/gmu+7+k/r6YN67OdEnrAapezpAFUYfhUFlB9zN0suL5WqRbT+2D9wjq0cLQOUkNHICsF0bj1Z+f7u2C6o8BoG7v7dK8MqQtiVCX39lbh2bFrYXeDYnAvjvU6ciT5WNEC8p+bga3PDEhXtFu9YZpzFrf0f2PabeOdu3+gPBX0GlA/nyT2yon08me+duopgFtsOzCcmjCRDtzCPvvi5/ey5kgf+LcBJR1aEyKcvrMx/Mp/SVDGTq6roJQhiE/tau0Ysyz9iCzkvR0KWoYdlJKXim+zzsJ6U+/cA9okwHZ3tOyQa046O2kntjr3Tays9QdMUjbBHq/ULIB9VBQUgsZRgx+k0SXgYe6UAkah2HOtnc86JrVZCqgMZnAoJWtHgYToOcP+ogRBwrDZCQthHK1K0CsL4PLaWPQ64h1q1CrGct34kLkoihQ3R12PGE32CdjkMH2SOvaU6Y5HEhGl3wvErTlIev/9gw+gKpd7U4vNnf6edZdI/m8H4dBMjAV0akI53RyJT0FPEGl5gqpeCTiQ9J9z/2Rzw8MpdYAgnXES+hCMH6CSqhe9Rcye55fVHTEvhY7nk6UYGmZLP8dH52DhnJ8gqeWvtPxHcJYC1h5U44bAIvpHNQFL05jNS9/JzTBOZTG9ZZ89rfnk/bwPvZN6a9GMP8OZ1mLmr5NV95Hgv44rfWlYipkUM/7X54Kdv3d0Z7o6kpeTsb+OnU4Bunvt3SqCsQFuA2l18oiDzDHrYwO8lQlg2+vQtnngdgvy7cWQhl0pgjBNx5t/XN9/Aifa95NzzkLTZeQacwhyddSQNjq4z/pzVlNtfAtSaZetXlZv0AdOOTRn2BswE9C8Bdacb1GRKqNea25GcxVbchjRzm3gI/otp0eWdUuH+5+k86N6wjyzg8hcYsG2EU0yrAmkZtpIozVCiIcIXFT20hRcJXbx/xQyCaqgXRQYId92BQwAeNsD/7RF5Tl2fjKPfpGPBcRE0sAHvOrpfpNOZUYYbJ753+KdKtajoiOU5mEFqbRaAi9E+cgDS7kGIxa1f/HLCKsAxl01DVjRAFgww/oW0+QrnE4i8UMzYZehInPqTSkQKcUL1zLEGCEzifZD/m5G1MPnC75HkHT5LnivsCWeF2CJz1hZ9/IdGZrnxxGID4BomdMlp5Hs7t4QVLUgUGyaelWu2XCRrJILWe8v4AuZI6BRPZ2zU4r3wpvtctizMT6ST1dPVK54Dex+Bibw8QaFMWSSAnV7kvoAAQ1xlkwjyPwgiXI6w6XM86CF8eFMuZTlVdm67nZtKrMEnkPox26kvRf8q13hUfQ3zQbzh6Gn05NOXz8C92OE90KDFrv+CFOKCFeQCdD7eDtwDQJHt2CwJtcpEZpGjIet+/3q6q1+inxB+eIEUnh7KYeKRYH3IUOvn0PUojZaAiIU7VIVG2sO7QnAlbA8GsYruQUOfiuchw9BinbDX1WrU+IQ+MmhjZ4fpJrX4K269Qz/mR1uZInOjKZGxj+PNcdzHE5lN9mgT7l1XQBuMoacbg+HS+XuVHS9SeM+5M/U4Mg4YCGwEpBpq2HXLHBEqL6kD0qR2GGQofhlDo8xyNdsrdn5ZRP6eiSG1fhe3mohQDzskQgu+0x93IUQMqrcuXErl45iLkNDVY1wvPUBFAraV8GllJceosCFPugfJJHO5gpMS0KhXHCaz3BE2BIh/+gCvsnu2bdFsFXHfniPIh0C9jbkSoPMi0EPqUUsyHpj8p5DGuQ3eMHSZ9+Cq6uJmHqcSTAaYR/9T9e8kxe3pJMChrgLtgfJ0DGCj0IooCmtcC4Nqxgkq1NPUxFppq+7bIomerQzlgCHk4EfQZW7G9laDJ8QGXRayLQn5NmVDY3vvFYpIQZCUBnDvXKrLcBzMfjaaAqCWxRoK0O0nQoXoUWB03IDs+NUlU1lSI5psMpHEAmJs/yIBc7dZnREzrj8a8kXV4r4dAFxt+Tdmr4CLNFcadbEqujIXq0KSqzpBhko2+5fZDDVAZvQB7IAI34/n/w7IK0V1rxhouIYXpWAF/seybFwPg2lIIsbTIdIjNiZHJ3Q+rOwv65pR8Q55Zht7eSdxdSj1NL9RP9p+wRZJ78lsw/I+VgbtYvS7VZs9mPnc9liz/w20JiXxvYgqO7mb4bV2enro5HKehq7Oy0LoatxcOCb59bKbnlM0x0jDgtYiwdYcvCoM9KEXheRHe+6jfwEAtuKk0ViymqL5ye+6GTek6fn6/JzPgwaa1gl4TTMNAgVEdu1rQxnmQ9pgaZNir+aEMCIYnapfG67j/7Odd8ASrpToqh5sTroij1a4uRZSCDVwieaPLkfNpSbNqX/z8JUiaTlRiXQOq4ahn9+QwvkIpwSZ4o4oKy0yLqjK1SKTIiesO0zcKYDySi0nPLeq2oBy7rkkQZ7hLTIszwlxUD8F9usNSZUh0LN79du4I7YVMbhKrEr0XVBggskSv5DOnGDS/7W1s/IAa2ZioVhxiSYuWEqvOUP8a7WdjeLDX2up2TyEFunVYlQ2uTOuhvTCcla4cRBxYur+UFKnyzOAJIboXRqaDUKNkRdBKSEATOrt3dG/HQLbjc40rzGxAjKXYdEFtk667FlRVAfJFLAIL2zrkq6J7SLkgsrJvc4YUarONYFUDz2s7DMFkAlXWG25ZJcprpbyPrfS38xU5mf+XEKd40qX94M/S9n/dKhloPK86oCIKclFBPVxUrYLmSNGY/PfDYtS0lvq8IVPZOtlzWffREMyRrVQwSHxcNlWfa8RPqqHvyFEpJxVrEphhmcad4JMqRm2Fj2GamuYUZVxAClqFJH4hpIC3aiw3ti4tPZEvXNUEluf6gRF1GaUX89848WaHs+oT37C7hodKir1MixGfkz6dmer90pjmDtbx8Rhy2DcqK0N9vusx4HwB86cc4NIM4AU2q9f+0xwwkgpSQ4Em4PnUcdPy8JQGlPlQQMk5RyhD3BYI8w3AaKvivBMbUKGfoZYttZ71FDGO53FeojNOmsZxl09euOaRMZcVAoFXu8kv1N+QD0kvlVhkG1PB4n1YUdeM+d1BileKgw1a2lYw1bIIZjjxyWpL3bg1hsksvY+0UJ6Bv02s5ear+0fsuJK8Y1lFTI4z3uCQSPT7IxqMEWBZdeFd85SMYB/Sq6VV5RWtvSbnRt+FhA1+U3RZlHOMhDB0sgxOWsPL0fzE6L5RmADelmxwBYHLAGgtyeGCVOriHWm1vmZGw6BYb3dX6EQo9qnB5u1rYqElLDhORbh9p/8GTnWJ1nkV5wgKo7Cpj7HK7ssdkuqf2JVvey+boREG/H1UBvv8hP8y5HQbx2fyjUalvT5xoF14miMuh2RJjysGhHuCfGjqZ2MBiwRR7hKjE4Ebo94tKDmZcp7lMp9a6wSSiPojN+QrnoccE+BknSbkczdbvnJ4NgxCGpwQGj2FYutblKGTncBG34m68BlO/zzROHaTySGxLjavR/A3ZmvutYXsbAGMclDg8HvfWF5QSyVosWQoEX49Tj8UOCgWSLlRbxZOzCzj3evZ8QGDsVpF8il/UlauZYO4ewTH6uM3AGHKFSLU2IoBRu2yY8kF3+lcrjok9GE1Qo5FjDzRPl+jxYmvnTatOWkFLrKz34bJ4MyVYgJ5EgMsbJxIuhjlW+kouwTRrmFNl7S1Hgi28BqV5JwLO5VbXL8UqL2KjlQg+QASTHNYY3GgjENiQpfEGwpHR4c5/xdTBkjF9sB/DaZOBCgyt0FpWs0E0ybWYKLrOErTQAQjIPZcFulTGZHzFNzbRz/TN0waJZu2m8IBILyCtWN1V/QQyr28ED6Xyk6b3AXo2mgfSnX0GAV5r+BbmpGQ2YUkz+zqbU45CWH2kR+aGr7lYTpL4v5O9BUava6l1v5P5xYRaCWdj+JlZurozgjy5G+aDS2y2m1pgTXXWOhbmjhJG6+sjW0cqbybcR45IigteH0oc/hVcI3IgPV5BQk8l5YXlCKVgBmOdjrmkiN3VzqDL3i0nyIXPUuMTzhDbwuGnpNFPCg3lCTSZrPoOCbJdVvESDr/TPlqBgNX8gAG3UH+upVAef00CMA0ypkjFsxsYlrhPZab8hmtSmORFGaYx9oLUuwSbDjNvRVTaahYEAcBK1v2zATrClaWWP2FhJnxngibWgbJmlOeyNXBj6EaJhh/LOOxYXTw1Y74/v16CcKXJ1c+IajaVuFrGSJ3yerqAhwTqec6AWCDUBMhk7qe8XPd2yD2uzywhkuzwZNP8Q/3dM6iqFEsi8VJiz2Qf8r04ps/1DdeBiAhZHvfK83xuIs2bAh89O7tDHWvoX16HwWTKP+9WByg7UxPXAY2yhxpvvuo4PaUGeIWmx3cXZG4o9L+rRJuZnm4XKAiEqcYMW28vQXoQr80ITUgGfvPmwkrrjEcU6neJkaJRrXYq0J5v9tEqBYnzM4OQCsoAbrzAFmJVBlx0vWnaEIwt0Czan+keCaIYzwbVVlfIBq18swOEADNbusTMbG5WIkUaoubRrAJ5u3zEG7LqWCHB7LpjLXcqy8Y4GhOCm62fUJaHCdekNEN97nMT/M+DpGM88U/m90/3mfEWXS/pGFLbtGlz6LyjFAkg/0r4IjStxmHvKBiPkA315mVbmSEifeTrhDHMFmM8ktzpBEAeduAywIxaBXQUjCbjbiV/pEssoqJFYK4EEm/bUSl96JjXV5Kzu4eJsTg1zfHD+V/8LLAqafLF0MOFD1tOVJIkxpueN7TkoLc0bRFoiJf9ZWwSgHomEqDU7pMagyezDtiSqx29006SiWD0rC2Rzng0agHkGvOgd5uivLbimQjtiixJotbjBg1NCrgHKnzJHi8a7ftK8AOogQutPkAoX8pFh+eD1x/6Et0hY0kwgfn2c+uaWgoUEhzpoWejaT97L/KsWWhuBTeAApoYq9xP6pX6WX7Zfy/3QGepQ9DQCMWf6rwXWHs3LC2ZWkVH2cuWvQxuuOabQLWhMHLZFP3RKPMCDjgkmFr+7BSKmjvb1faoEJw2uXBQKE2vYYgnKsfu0l8G96YVL5pjTzeJTY38/C6t6g9nbhE18XGZdSTcugTtxSYsb0FNF9O36kXwbhB26BykqoJhwuaZYkqDpwLumj3c4jFHf9mEHTnLZtlkITEIYqbUPeD0l01/ya+6dDpk9fqjBJ9oipG/BP9VV8jbNnj7Jq9G3o3LXGdYRwCU7Cq+/YPbqYKe5e40UGSwBYar245lKzZ7iaGwOTWgQ2O7dX8jx6pd6QceKskDRDrEhV+Rrm7k+uTY0ZO+YXtgzzCJT7XThGKMLAeRyUhtAK1NAH4NvyODyN0BfXA2fvjWmE7cTgcyaWgh0dqw5YaDJ0RHwksw/ZFShWfTwCuFtohPF1bVciOSlwTW/9ETr1gqrNUPYq6M6Xz7su0pQ5r0MEjvZgRejdrxGEZxtUvX0Pzr5aBtLiLQvekrG5ZHx3koURrm2cHRe7vFOhEvXY76x7/UfkBqndqIQl+63q0JylI8oOM1YZ9T1O5e9Vxv6efsDBxqtJccsZPT52dxNCh83dlDsza2cqV4BNdJ6aKhj+YmUWqwa/NluC5yXxnq92pxT8ehWKUrjlPfoemDWmXNJXeeJEzEub2mBaLOmuj9dMdJ9AYeST4sCf+pgRxUzdDP+PcLwvJW9ccMEvJkbvpEYZH5eG57BAiqWKrmXUtjXSrXze4IhFWzhlaTDN2/YmXUhqw4kHPBG1ty3vH0Mo210sVp4YrGcjWHrsi2iqbrE8b5OhrzknZF5TrJCD6cZ2yVJMtCFLMTisrEr/MxGwgJX/KVFMTsq8EKqIsOcl8WU/wScBv8rkAoF6UY3yFMTAdkACx7ypr+i3YZlj9AspMx8UGUUYPPVRybNtjkRsaM9M5z0/L6rP84fP9fEV8O9kvpeNjq4ke/5cp2gE9iYQ3k5QiacnK57tjz3Ko+Lbo5C3EpoRmXdI9QuuWqADKM0S1h/0oWb24ZpIP1/5pflzU/Az+QvD7aZNWXIgN2z7/GuNYO28sb1E2FLHOmOYtF4YiwhXQQEz4BjfBoEJrS7k7gZcgeHSelegIDlLTkwEuYW63j6wjCxuCaDjQfmqK1Z6nK166Z2jjZEz7u6lkXk8W9F5FKd5d61fPYnDV0Yv4XKNso0Akz55UG8/69mhLI/WJjpMWXyxpiRXqa5jTjoP0/yJvfwXETKZaWRO//qiWT0xnB40MjrgWbvfY6G1uXYcdjGB63REIHM+ERLAyCb8Au0vfGk24aE0+miPmJlBC0YkJejKA40CBpNPkMq5Lq702ryJT8k6vwmmxBdq3hnSwPTYjqKqjbrUfvxAIN8CcLLsBUr8jjk5YhuX0cFRsHsJAFwVySoPXQbuFmUUkgPiLwkMLhf0CYefRM7sVl4fSb/w7ZZDkgC/NrBpmUHAXRU/sfbGdH5M5xVAd6LjmWF3tYsP7yRuy3q4bOYjSeoxdjp5fupgBeLWaGZ/yIbmmjALTUm+bM14MABZxHELxe2tNa0P2xe9xYR/Cj3PKwBoJoepXZ9AR/z5c0wceRZFmlZOmHVvDQFMsaxiBAdi1FkByQIuul2hMJsoRRJjgbsnbYUlMn7gtfqe4/4rgZrMm/EMagO/9SdwqOsDvocSAw0mbPhIyqORiWUlwCXBw+ZkaLudLfVSp9LwVmrPFhaIZ+13e9v2phytC2jq5so/ppSOjgVK1KqXBgUc9Q2MmNtG1vncUJnncjPnef0iSHSuW5IeUMoECh3heUsqTtMRBpEWdzthH2+B+pTizy4zMXHRpLPHx1CEuFuHLkhYbg5QpWjDubPecZJQ0KYf8EIb5yPuEOqNGQjyA1KRrGhj2sqEjY94HXtUwlfW30rZm4yOM1jaZcB+Zzl+4D6tYYMbzTXZpH9ym17QbYaoDJF0qCV5oyEVy5i5CYDxnr0SJlC9zC/A3xFeIhY9onZHB7ZsyjmqB87bsFhcgDW6VsV1rmiA++wetXhbkMfa5SkXhRJWBfHdpqyuTcGuP7sQrSsZmJOu1mh3pHpTtJUEVVigdWsZAjwhUQ5bduChjoq1GhIqJ2ONfYWq/Y+zWlFkgcB0pqUjnuKKfxsAwLXkTPvX+zaDSgJH9e92YpH9wcSWY/GEP4ufPYsMqQBtC3SumiTCB5NNxXpESZdv8s/JaKVkerfCxeDMOK/ipXpyUnbgBnqjyp1pAH5liiOT7FOoXlIZ9vKb4cYvGI7bde9WAwjKMinMyILJIVrwypyzYlvXorvAJf25efw2N7hOkBc0D/m7FPSox732Hg9nkLFax2WFjF7LUB5uDoThFHt+b38zBY/1U77/RvV0qaVaGnbYWcyK4mR+xttyF9XzkjSq/uV38RYveOnV5eg0lwzOsJhB+qjtQrdSYfISvYr9FR22ieCsYfJ9OI4X2lSjaCQFLG785CYQsWQ1bl4Q3KMD2mnuegt61DNB5bfgLHqR7ARcsvEEjQClS32cN7HoVJsj94UuBfDhIn7cZE6k3xTPs68jXzC9lNYIsRaFdPPLhP5KnBKrgLVrdknv6WVizydjUYnZ5k9/gp7V7o4mXAGciVgsl+SNQe1QwSVmiJD8tKgmuv4q0IdfYSehbIk0gqZtpj3yYSHLOxN/NJQwMmDmvIF+oEFxAfW0clFeqL6gSvA+WtsjE/LdchqTQNEQONzUscIub+tDZxc2J8ub+lyuFU0E7DtarNz88rPYmKZVEhmQ19+mMt9ELI0LwOZilblohGGiriVe86cbdthJSb2IC7AQBmFUTMf/gdfpYlKgruuJ+nOaZ1G8xTL4a2B/HwRD2FSrUhhBTrkED8/b3dEyD2KF4C3E1w42maFHWMYKaTPYsKbzflFkFgVzo/MAwBoGQGE6vL+NwHj1qQaK+P6lkm1pVjxPn2v+T4v+GIpIhZbyBDkdqnYo00FD5FHd1SqvxAyaqAPYYYJMwehNng9TrLdC+6jCQYGb6rDLfDyYilvt0TI+XkxUxmbFmtPF5KDo13s3YJCzLAHoOxbp+LhE8q03WKHfN5HtNl4uI4EV/jg2c3HIZ1w4Q0RgiOCk4/e1S36nvdn+tqy4zEhrQnIFaD7rzZXwwUgxNBnRh8f3748ylDn7F7IjRQacdbBkS983RpCWncfOfBLCVXjWFIN3oF7Fed384JMJCfhsd52sEGXxVdaSqJ7jsOQKdtDXAT2zo15gozuyAwdKgA+H4+onezmiH2pR3yrlxdtjerb1d2csJjk5hCZzuhNefZB4DUzUtEitZkbxP14aGCr6f8M2G2aGmQIRnBxiXp8tlXZ1EeoJM6hxPCOhh4kYTAjN0hljVliX2+GMGwhZHMa63depoL4Jxdfe5umJh3v1w93LB3i8BbdEIqiiyw1O6iO4ex6QDfIBGzl1YZjA748FPFUx/ThNZac389HLp3YpDHTnBYXHIqTg5sjnCSdLT+hNHtZEMf1aVDccI/1FUXuzdAl9Xn8XtgRLr7qrXPtuFvmvpxwNQ6e46nw/5yfHR3oD/w+m8njmVQAw7/5LOUlroNTT+bQDib8tQVdbGe1vmGXxX3cV/khGj93h4PyLRThs4huEcyBD3PLN4deSyYsyyD1Gjnb/MWTqYkDyt7Q+G9OPuJby1ZorZUDAVUShm6eelpnbQCg+s4aIdaJHSvDeqscseY24fdIxSyeA4d7t+v9+O3mmdVwTK5MgIX76yo+Y+5xNh8lDI09Z/Zbx6a841fJRcorgV2pAlRJQnhVoanlyIF2wNrubItxvy0vVYDw+KPp1vRHAduOTkWvyqxLOOlbEn1cefVa1AdSRd+fhd1D2YIvp6wd3kZWzQI5BsPInUUoTWILNZXnWC/y0vHlb6o6qjiWKCG1dUIM6kCL0gVY9XK8pF/NEwVxQZ+k5iqIa7nIZOKSRFZOuDfffRjthSUMaxGWedvBG7kN4vJ9ANBWFzh1ZsbpD+HoGkpV9O3DxNt2X15arI6ZhIVD4DUzMD8kMcM7e6GPR1PkUGtZnDfLMekopMA/v1vncgD4q34dmUJQ8AzbjYvzAAiUlN53monprKew9tdOK6DN7/sI0h/SGSBgq2JBxTmP5LlMf4SHMaIYG/ciNO0C4G470YWDPIEIUCCvysKiEtunFWSwm5wTp5XJvglEEaQ4jrLIGv5FITm1BwFt0R8YDvZnr/EmxFEstiyiKWk8FeRJvRQMHfwv/Qq34ZWvUNux5fL3zSBO5ftapcmlamsb7zW80HTRtbjXO2Q+F56Zanara9jozhEDzTC4pruRGCcxsDSuBiWZV3Xoee2Y82giKrPBwAJJyzztIjmLQRCzYs0H4EZqzhSf/UzE78+92/OlIXqCCl1ruuhi3mNi2GEb05iDHwXzPCX2CvJE8HpEjoZTMA1ymxR+6nAC5QKynjOuQ4kRC75McB0Xei9iXXX66kiCgTp0EVX6jTiwOEnShpn2cRYEq6Uj5aAh3yrDmiB15qXqZoO7K2F3NkbwuguhnrEf46AvIrOf9Evl/nlCB/7qL1wUNT7lGUSVWdebFdm9CUL64OAn75JIdY/K1hl+g5aG5fX0IQdEOSlVVQ39dF9vwb487MrmUmtmq39uqtRMcImJtm4lvdw9vYrM9EDDM1vMOLGpL4P/9ImanRaInOqtjHczFZSolwfC3U1089an9K9TQ/I+hNcQs32y6EEurGKfWc7aF7pWetcYTdP9EGagh58+9MGnitHa/6G/QkRxON9X4gKa8NJYPps3rZ+aL0o1IzY1QpAm4z/XYsHJniorL/tPWqNvBI/+TACpPTDXw+6+x45MtnoxSFykcCVXyqCi5yHSnOCa4lgFnWIABcFuRvks23Uuk3NBUopAUoUuU3WAVgvLdmHDi/jC01NLuex0C+N24OR+MUvLTqtgwhU1IoWbusx/pKmyXMnjciM24Yh5MYelCIl6unSN6c1OLY+GSapvxlXnFxET/ejQl63q/kzNWDmg+QOKNvr9/AiGGNt+DjHmNr2Q0eH/XGnSKsdCywzTHhNVqBLJptzDDx0WmkVtUcwf502C0X+lCCdWZWoj2x8ff+t6kL6iJZiNsO0zGHJ5SYUPyAeAnD+s5JiuJ41R5kxAZTYiYoNKXLzCCzuzaQpDHcPkF1hKO8xFSU1qa9K8ns6Cl6AFRXDEbair1/sxh389sFjOdrwD8M4O2LtLUZBR09fXKggmPp3GpuET6wyrFmlV70C9g9IeErOJdOfEanZxa6wbE0Hr1K6GP2f7NwL247OTkuY1wpueDrqIKEyqSfaKht6xJjsN765FZzlYcnve5S0mPxLlzXyf5F3oRgVYCqDbSMIMht1qv7RMpYCo/4/malLmmGswZi+gjRDqerWv0KL6624CB+2eihn95wWdQvWRJ78ciTrk6449W5RHmYsvzaYlVrGAElyXQy7QZzVvYe/LV280aF8oh2/syYnS3YsoeWKEwtqVJmMxdJqLwHMvUpEPeD/hSV+sYq1Yfp4lbL8qqwEsivetl0VUt2ki9Syif6jFDXZ0A4veN6f6gYKS3yNEikQgSb1dWphjJNEEnBEXj0gkSJwvbs5INCzefSi8FbNS32ZxXWVxs4f2kd8Almq5ieEENT2jKePI0hpm3CiFd4lD6LHZG4K+zO1i/edxhdpa+ceXHlYdNc9rzOty+ocCEis/2+z/Uhdw+3o0pAIDwwMHvojQCXsWMSvFE3GIpN9M482dA5o0wJtkCY3MEPvCGhCCobH5vrvgWKQGkVtIRE2/CS+P0LaTLvtHqm8rhvIeNj0Kk44d8ezO0HOtAGk4tD3Eg9ijwOhpk7OkrP19k/J53jGVmCc21f7pD8DqqeXW+rVFHYWhjvm4S4tunFEtFfv8+MT+DyBXq2WTmApT1WdCww30CH+f3M4yeTBcHSwtYnNo6VQhIKbuUGH5dKhz6MPKR/g2InqRInAUjVsQKlm4ABL7yAQRZGk3zs2thK98JQF+DhjlJyhlDPa1AeG0bI7qIVqjI3ihwKwnfyWgKwjKSHkQa9l3fsZKFBoLOKPNL8RfO7UMk5aNB2lLJZB/fYumCqq28bW8cXL26yI0kXbWxUNnriuPYVzLD9WEFHIsde4NZ9uEupHek6uIsULtaQQZ6U11NBoKtTmIRdaOLw7Zkq+b2XiO7w9Y9QsrDHP8GZUZL36ZOMjRzsCwJaP6mHVXOTOQygVqNvWNvfO4BFU3435TZNnPKZ98W7QocdbTxYoHlzg/fQguuo2yJ5MCxFJ/HMxIYgdzHj3DTU44mZufktzqXdOgfYC9ZWyz0J/eXyR+p2uFMhpcJRQPzUiDt1/ajHvgSudfgMNSzvtzMGf/GMNa0oYg9socOrlXVzKYqTTgJ4X5o2L9dTWB7G5s+OfMTYB9pN5B3mpq04IzSNOOukJYDLT+7pkxffkoBPuIMqepX7Ic2YkwcxzvdzSxE6AJArzhx2x9/FI1JgPDtx+/4jdXBUUfuU9N3k/qPvm5NLXSYx85/JVY/aSx1FhQkYg1itscVQ2dbyXY4bo7msaVdZrvgoqPEqDnMOFhqadmM6FIB7IgGb5e17Pf4WaqXp/GI14ZU4bCWSdLY2c/1nXIAqCoh0FLlWkyi617dd/1Fs/BljK6iVo5POOa0JTAIkv5r88KHH7M2DIWBQAX8Pke7XIBJjAEHFlxsVqfXg1+5LDjHS0rz/ux6isgRlHdaqZT6vY4MO4+vFznVTdYtAJFvaOIEOHDrA0pLSAwzGy8jeUtm7Unumtr3jYGg+1cMZ0Teva+AV3u184WYpjlHRGLa/ddcCZQPOJ9LEDzbhJ9y8aP9+zaefJGyP5tlXImyf8iDCuz6RyGYpGNlsO7rheTiw8zOJqgdCveprEynsv1PF1nUIK1Fs3eEum/5wOQzYxVXxSgVax1NK0J4524mpyVwmW9/HVBLcpaPALyuahFFuRPWa5XrQkKQZKTw2onaBcVc5lv7Vrik1aR/LhLkdTjynckB1oaS//0dM8hTqIYrwhx0zhr1rLKXl6A7SbQ0+393xa6L5CfJQHOCiqlAyBGNSZSnP0H4RxxPozZTNu0IXmdgQf8qL+xScf+n/fhNQ1VTDLY3IOV9PwRIYtVOp5Cd1CyjC+YL7qZaG+YsE1GQ0i7cOEvhdAGCq4sw9Bp76NjTpaQSOmBv94H2D1xkV1bDhXBkySVSgvz5oq5boFTskgTLahHRDpedSZ/Lm4ywQ/AIf7a2odfpBbzVk4/GQRtVCRZUo7XyFSntpTbW8ILkDMQTuUFnSJiO0bmyKiZnja/MRSUYN88bsuS8prFhCGSW6OvqQ0AuYrQI5LQ/Rj+NpzxZLO6EoTs2n8uSZI24JdnpAivHydAz80NX1NpqJXNEcwwYkJRtXZs6Jxzz7c8++GQkpGpQDTzUSWPJWa/7hp1io3DYxB3hXW+t7/zWH9M7qj6Y4iL/z06RrsEhaGh8bnIbldQ7UygpJLbCruhEj4Qw71HhRqq4SWJWXfOe5Rlw7v1g3wp3koCRxCY3FOZiODtp/B/igS+UGcIREGr4I332X2BkP1WJmCPn+3cqGakm2+qQgyf3I4l7N2eIffRiPnhfeh155V+daYrqYg49Umhe5R4m/6eqb/81c6DWmkiXy44VnynDP092/ycmvog8v6k2G7XHlNBXsP5d5wdmB65wYCCxkWY8u5LWbWs9mVJ99nMcDlmcFmueOyYeMpSEjet6L8lTwfOVNRIM0JGej6cQx4zyOaWbdEU/7Qi2EiIDFSovOW9194X3GnAl/lrPzU9Iwg4W78cqE6+G+a6CGWBNbZ52ZddwPGJkHJFHJFvv4dhBICRrfAURBfybrExT2OCZYC9ZaGGGMVfAOqRdrboO/9txhXcoIYETEAdZL9ZvNw3gogRPSvp5muMp/fhFPQ4/gyJ9qYYkT6GEBYFrForx1dx/d5rjYPI/H8p4CrP2EIIvyEAK2lHlEAiJH+e+F4VBZL1vXXxIr22lUKPb76os58btoCGbzeDAJ0rDneGuz8GP2G1nYv3yT+dIcw+hdnES8PwhdABwEOseipoWDW+vHuyK2MYjBlpxk7Z9uH7kPUFpt6OkBdaxdAmFzEZZvFefj2Y7VsRncjP2mXqMHrTnr/XIA4fI8+1OXYEAWraafRve22DMOtjC6yLFdJ5aIKcMNa+mI1dG6HCvihd4iAHloH1S8AKUD0JaGmqBfkHWNID4f07/YEzd/iDXNliVvvdZB3subtpZr64SWbMhXPUf/y5cB3uY2ngwK21bYJm7gMeFoYKaVEjv2eZyala3E0KJX/CzmepkCh9Iw1n30xdw0lbZUQ6c5OToPkHmBu1DL2+NuimpviCR20bpcq4qGtloq3snm2IpipKOrKQEExHf5xtEeCjYp5EjgWsH2D/ovoUIMdarJxw3ZyYEW+deD8eECQGGVnifH7WlNUrWPWfgy5H0czFFGmex+boAbPzN5HKzJFkuzBN8p2wu7vrWbKgizTM0fHQ/OArMQYXvpzrBy9SniwIbsaASvZYG1/wltMq8sWQEKdw872oPt8R6RHk32KmIdLDckRx6/PTHaTY2ZqZuIJcg6ZyQ7OY7ILPt6DPJ5q/KmNSF4GqBdcbxgGM5gD23GnEIdBpomoILHvGzHAmtp0r9LMHOMSB4+upDZYTmgIsem/2fHG3RdSySEuycPB2JQHlOcja10uTRhH9HtfiPvet/K1Y+0ImIiAtCSlp/8NLL5G7l8VIfnUp9oKBuSnadTbk7ZO/N5uMupRzZkbJKRR1/8Q9pYXuweW9+waNQpiLpnWhdzp4zSurWx/E1V9Z8KrcyCbFCBaMa/U2jRBXkwH8X2P4VEQK/MS1kofjbFqEBhYUZYW5yJIhb6nGprHlGSk0Y3UjM/ikB+zL0zgmFm7exP6v1i4vliOFdq57v3OCldY8CI7pmFKDtITtAd95ifRQxcfUfc3yj1N0nxA+FhTArAiSbwqeDXPOOmds6m4SOmaWTZWAXS7tdQ/LdO+bB3A3ITzEl47cG1wDhkuwlC00duZNFH/9jXz4zpohYPhwnvjkiJu2tQkBU//aKPSf+iEeu80e4+3PbVKzJiuSexmrggbOmasaLSv67cGXyYIvGxVXmL5z9eHoO6PhCpvgdHkBCt0CfE/OhrcZiRo4+VkOdlWWj1ASAvPVrp6nxD+fMjyvhHQAK/PvGebp1MC7KWerL9E4pi1orMummUy9F5V1d8uTRq4HtdDKtSsxOBkAP6RF/SwqaoHgrkRbuDwD4OIYrM3HAKd+m2f6dkfX9emgK4lx7iefQAJAyCVbfhbUWnUFBBImRqH3ZfdLqVma7n//g/fHWfLwRKp04sDiQk5fkAjoir9k9QDGFy+gcCc3ujwrhTAKnK40MHKzh+Yk8dXLbqTl9UzSEyW3bJn6zAZCtz6IUohgBL6ozIn1DtAc7z2B+fP0g4/DmPi3z9AC84MWrAb71XATm3HuyvLfOHEmURqv4OavwI7s4KbAKk2/sgx2rIHlnwp03R77DWfpAjAwddD6UZIG8Lr3ZhlTdaMry33fiAE5bbCyK6BmhBx+BzrhI4qE4IgTlqHubi/NYQzBuD7+1sOxDQb1MUBMYV3S2Dpg1kN+3ETXJHPRg3LcYauKA3llmAJ6MpCxiigxU1Yt7bdAm3hU4F0+M2MdcSa13AHvLbpNsPxnMZEzZhd03uytyLckOUu1LM+aQwbQ8GRBrTffgv7lsB/HNl/6zfCGwvP9f+hhKZ8ns/2mr4TP0YJKL+3jW1YFNSVDf2hWjD/JX1BdBCWZyol5vJS1D8Luiqzzn/4ItpZyZBH6JO6mMu6JniE2DtJC7m9Nzhb4Xd+PM2R1SMOXFl3NfIiEPwdDcHMsOQOrV35SC2ST3Mu8HPgu7F1akm/ZmAaEBM3TTZqWOZYgac29LpxhH43lx+HYfV8ns57emDKD6HHK/nBu+lON4IT5YBlX4sClHYzfIGzitrDrro0Az2LT72wdUjJ8rtIJU3oqgcD7lgjIEnc/Ybyvzoz3m6bAmfCwycmSKJxX0/OYDgW2I8fI3ZuhZSdFRsybilq6qrtYmgD2WP9nyOXxAPPM+tKOEz+QugAfOTemNf23QxrsjtKtlo6r/7J8aHtzAEZxBAu0ano+oIoSiSk4oxNApF9+2iInwL8Yhv/GmoxGSj3xSILIoRkmBP1NE42MVDEHqU3fCQlfTEdNnyFqQyDjlimmOISxYhU9J0Oa1bzCblHwuBl2Wuqit4XPMnjBTbRrgDnNHLo02VhS0HIPJFee7kd7+wIOnrbyQe/6X59E+F3B9DOoORN6gVMDB8C9FTeMXK7A7qVqdm/5ZTD0jrrkjSN/RJD3qQVAliu8MLqp1UftORpgbS+9Ta+IpyGfagrJb6GU5Fder7c9TLUacCvQZPA/F3SU6wLY+fULnIoJLbNiKF/Yse+jRo8r8cVOokVcpwt7zRkL0BmpAj9nk/JLRz5guLGgPNP9Gg3Er0gnVrkYAqcxqnVO/T1hOCokBYQTWoeBSieGhd003SQ3EWSHLizfSJARNMjBGfWHYojlhLO2lpNLfdzfuVBNOopGlkiSLFsU2EAk+v6dRL0eFcgFLsIa/84pU7fOXPfGD0YTHSi1i4Uw1Mp0qACBncDzlHjqwFVZ/5gqoV4CZCff+7xusxabj6OsSnWEZcV+7biaCd6MVkjT3rSLyvbFlCuwhUCFmFS0Eh5ziTGo+fG0eQ6hferz2mrdxMJzlfp3MsoS075ZSe3YP0RPc2rrEazitWBJizHk6pFGLqGjhJA1mQnF3FfeVaoTWPc9dI0ttIBmR8WFvxUJdvYqGMY8+RYEpZFA5Yd86+ssyqi11FzF2eOUYxmotFJq/BfOoUa6NPKyIEAHVu4DLMafgBaxQeUefUUKJfJQ8sO8Sg5bkOtgVDXLuDk4c2bkq0qKrWl5R/xP1PNa/fIOQcC/Wf//ghkCprXC5575hMsub5Er1f+3wez3ppvzprP5Q6Ura5lGRukMrQ6NCT/P9JD81XhhYQTQSwyEz0c5kwkGb6DX72SJSBpsDHBmR24FBNoSr9Yk6qM9mkpwqw5W1Gu+oZzq/KmUOpvIMuH4fFrQD5I/aRF3sWbsVq2FgeOgRWvYZ7wOLBGdULggozzNV2pHpS7oJxDj04ckoGdmJvszD96l9Z/b+jfr9BNOChRpOBHg02l9xcwi1KUxH48KxtdioJf4t4x4xtFTEti/5ni21vPq0c2+yh9HX+3JOMT1kp/hX7K6lQI8vX0xbgUTlnETsyidoTZoliolWE9ky9YG4uRx9DNugG2F0W5s68DB2xVlgUTQ45wnJL9/Sx5BMQFYt/fEiejs+vf+JavQAAO9x1Tn/n3ApjURfPttHMQsS5qd82wLJSIKd6a9la3DMhh/uHg00cpbiiumgeBUn9JZiVkml9M7R2ofctSxXEd/z2uNodEL9JXCYC/7fIKzVeTOqegDsH+jTGFfK22pWpKwoTr84RpzRTRZmZw8nHteV7YX/feOqQCJxIHYiDlplUmdeAo7XFQIxkwaRV2tvRBkxlDmLIL0A5s9hFmZLZklTNDcfgvLsm0WeORe2vmAQYjHmj11iAEsmc5fi688V+1uuWM1uB61A6E213FjDXnSWBDPG3ZZwL5u7txKLkMiwusFycUWBpQHruPlgfib5lc4LH2MQUOkau9knarFxxdWfpUaBkfKuVK+/a00nSoPn8bv2ki66lul4gdlt6xz1OmtveB2Z236Ycmq+NKMKFoehe7MqQ0Utb1xQ9tJVenJe7mw8oCVxnQZG8WdfYZTC6SmNyFuNWTopQSQA/FylXapAEr8RcJukjC1WsKR6NGfeuePhQmhOS34AhdgT3JXUtu3JrNWtOFtJqmOzCtnSVz4FBACNmE2MQkU+7/XFJbBgiw/vDcG7oKgcDxeh2Qs/Nx07SnPcSq8VXt6aVPOMkBcFYGlEKIzLcpJ/BTsBVzEMvGmJmgtJVq7nraJfFQ+jf+GTscpnsJHgYnOJykPV9WAxS/dFyl8eXb1wDzzAWsuMd3ketsteOKM4CxCeJBapXcVI1995BB2SfjHvagU1SAODKHVZs9xIJe8oBiydd5mFprCiwNlPrdawjDE0ZUYsv15gTzxTtyO6MFqoeMcHGFy0LfXHd5KeSR85Z37TGNk1BKMP2Am1tXHxpPne0Boc7oy+vu+kWnzFPhtlA9d3jPWguPKH9VRchLCoTjRjFOO9OFnZsyercbEo2lY8WNc3HoeM31XEU9HbeFwHy+yRFuLr25iydnAfCP9tTFu0M/oefHzQNxI1V/prB938qZegpFyvoefU6vzCur6m75Hc+ZWPZUQFEHWPnA3B4RPZSOKj5TCSqbkdrMCFJfpINP5Sri1GPyycFEqQsIUdd/nELejJDBogTudEgQds2R3+Q2lM/hIRin5teMb1jld1wOcHwZeKMQx+C+srNC0H18nnC4eE9s8QNXdRg1qsIoplYR+F+mRfD25IawilWvSLvO4j8vK5+DgrP1YBQ01nQZJL1FNkiucLOZcm4ins3cp/I/w5bLLWkIgmhno7tfsqrhK3D26w82gbMZxqsV5jWNRPjx179Eh4pMPsjB2iY9s3uIqWjua278kxL7Y97sbEpMe8pugkEf838YwAVUcKH737S8VSdYlZOh36dQRr8BvqdpF4Bm+m6H2QA/mv+fEtuVYVWjLd/EKLMBqvWOteejDeGlQrsSMt7usGnbO4FWTSJ1IAzl4+tiy/D8MDZ/e277VKGBbHw13GMt7BWAeQGE3B67rvzBzpnTT0nzinHIYU0mnPe0fqg7QQBSwhPMnvv9wT3E12JBh9enErgUKRWYGoQ9u88dyAyNpTeKI6Oqw8AAx9NSKvGtWD0oU0SjpfOCurATOH53+Z4LmPDipGVGVPSvjywLW75jbkVzvANjfUJl4HSKjSV5W4eO/Yv+gcpJCWB6JhBdgrLAwgRTdYGvrjV7hTevEX72wBOaMfLPOBZTQ457WQKN3NlkiHmD6dKqVueZ55uujfX0lO2Uxwybo3NwkRtT9jbIdpHMSk2lQJivi6oVuJMP+8UffAspTQXdM2pRGIKcZUeq/qrKFl9MVQfkIfPslkeOu4tGYveZgU26MqdZuISpen1kIUZI4Wbr8r01V8pzXyG3JnubuB0J7w6klERUDYnv9ALHJ+K7tqVD35Lh25Y+q+0vJvg5he+ELpF4ko2CXrJOgP786/exHvJGJ3lmqkX2kPqYpOIXRkse05fImdUuBkz3LPZHpyC/2rXXpTDD9z67UqRCc51V8E+cx4WduKCyzj6Ct6IDxZre3oo/7FnH/5foQnHgRuusmVQLR0FEbP8ITb1pFsFssxy0X01fcXGTPy/0NaYB8u+DsAXSnIAH4B8zxomzxTaY8590MgnIYS88W7H9O/Ra7EqQfuEXFVbCM6fq4hUA7TlXfMGdHgGklHupDYUOzuq0gvdPeTJ24SYF0T5KY1wUPW4x9E2BhkW3tAK84AXlg50DN8nlXTGUmCJ16CIhgzPyNGwCbA4rFdVY3nFGhQCE78Ags7PKbQLrrH8lDQRNVVe1bvg0F73g2Q1PrpuZzRzrwJC6WxMni5GiEkANNZicEYnAm+sXwrX0JfzAz2Q77zs3Dfg+t7vJZcvnevpQREZJJy4ywAZJ/hUCsGIQXM4LC6Lugcl1VvYNadf7TravWONlBpTzdA6S/9yOBeauINXQx3qTxdlm/gWVqrJcJJCkoEjfhVrAaFWsQd3GqzLjdcPe0shc5XLBjTfvY5u3skXIvhCwNUVWJHOVm3oSZKY7OUP4A8wi3zH1yeddZ76xWkHiMVU10h7T3K/kfscibmJKHFBrE1L1ogd142/SFY8bFACiJ3SRgclJVjNOPO2h0x+JRGS6inU9M9hXnjyCYa7wIEKyUhxPRJGar+IUu8M9UPzqKO603cVkF8Ky7U2nj0jwJsM7PF7mongb7rbksaYfOxsyVXW7ACBA2xjtBOu4NuMaJEPRpHiK5/yDZWOrK5gxVbaZIR1TZMW1Inv9rZnqm0onR6UXw/tcFpaJouxb7QoZ7d14AYh157maxXm8MNkJFOVspVLVjpReCzpxZ3f7VbzhukTdpXOPYfzHX7fOFgGwQaG0QmUwiz3y/IM9XRq7wsg6Myn5YkKIlm4V1y3A1fhd1aj11qPcDyasB8Vp+mlz+SFrSOD1DI4+W3C3LV3yoXyNVKmj2R1fKDrUmijguD3oEdSVENSKXokbr4Tm4XtMkYQACdpEdTwfESWsCcPPajOqH1J11Nx/owJbKKqm6e5PtyMrtzPfafe29tfqRPdzKVLYWynY5ws8Op7RoS3QbZVEBO4MS8MdKrWHa/rY+6u+Rl1r5NZw6j9U/rppoj0HDP+k/IuL3VYSe7qyMpOegdefuIJNeNqzC4p+sFk7zuS4M6UNlJFMUUsy7oXn86eIo+T+Hi7+kSUI8fDlTdBbbEmrg//1e1uRr/tLCoafSI2H6UGe7J2qiS9rOO9ENKEIv3Ca1VOyWBP5Y5WXFmAZ6JMtPrFrMOQJYj8s8+rkw2a55YO2Kl1a/Nd5fK49aXRGxvUvyVeJNocTBgu4xKk+CVHcVKwrjW6RjvUdJ1fINYIjVyZjZf6IWTGgxIqNMw11qM8veNLfQ546XWbm5V12nqMc9uq8KFCrXGkJwkedy45TKNtNuF7HkbZVMPot+IVFXHJR0lDhQg7DxAT3bcBetyPvj8ueJOn/54RyW1JGyCda+jRZvG4V7eHQ6pui5GnERTAchKqp3ZVMUMPjA1A9pPNpXcCjRnXObJq5KLb63KE/sEe8/8/QMjgZfKxrqDdGktz7WIysjG0Zbx5exQeTE70AVV1OTlmGew/3QkfN70qiId5Msu8jhcHs336NVLzeK1rt+WEpBOoNnKXbXgfDf4hGMAa9sBYka5W8zloeH0r5qmjQp1NRpmRQe+4g9j9Dx/i68j9k2HmstwPOzMIe7Lwz4cAnOMcYG5e2chOLb3HUVTKJAhsiFSYlNs1H10L4PY20dh+G5D//31L2pyp1aiaJsoLiA0RkPrGyOL0GPJ3uXiA6QQU1CDG5WSryqU6w4rgIL5rD5ahOb7QAq6bGMcwb3LjrkH+LqsNY5rmsQQeuhZ5vD5UyfPKDUBQ6JfTvLXwkEH9UDwNMTEP17+rQ6M9P3V2HHRkgkyYwXaK+vmJHqHOzIBBbw1b8EZKD+EaIS4RCRkBo585MgCFAUyCPKc++me+GSTJv08A7xLJq5YuhTW4e+OsxRnPxHRGvGREVPINeXTLa0gNat6XxtJjv8vIf72Q4DOTlsxawubGSklV4eTuZQ28Cs+yyqBfFtwPHSft8jNxqd7pMXrFdpMxBNKf9i9kIlGftY+tgxz+8/MduTHb83OOvSH75SmVn+BVjrWdRtXsDtkaRcHVXZbn8lWCTDNyiYs20zLAbnL1IGS2sj7H8Ph8PuRedT6bF4sLzX9ABKB277ufFyFD+yD4I4vAfflSgKzqbcKpK8foX271gwWqQDSIqnmNv1tMBgGnoIZuB0y/E53FvIqeEsFvh/Xt3Ounghzugch13t9A8vtR2fu8/9dfDSldaOPN9bGYSY+1Cc8qoEuGFWQcRdifL+T2bgGeVoij9wMtpt0OmkSmgBmDjdpsdfPt17jHR7jfuSp/XDT2qwa2rP9Xlh8Xm3qpzumhS9BS/d7JMGM4sp1RZpq9gWiPmf/rtm9hL9v1JVjLO3Y0vgV5p6X0rJsFrlgeGRCdGspLr/FXXZ5qz5F0HZsGEfl+Eu452cuRpglNkFYDHuFT+Nb7J8vA7mj+/DG2XE+xq5EqrncePpy39z62zsvGpCDqF38PTjGoM6KO5fVUiWuAUFu9FRidnbg3Irq5qvDTZd18nHPqKoo2TzLctNoX6z4xXC6OtGvWbMRoeN2lqH6bENstwynIivmr/vtwEL/0jYkLpZRj3AG+YCwR2z2KiPHYWlIhdNQG1R5M6igN16YLHP8kuqk8Tj7PKzt6GOpOO2RXe7khgeYYIPIdm9c8Kjh7MbzC6COVEm8XB1YmNeFovsoiPGcWI6QWZB3H3xLuHSHKTKggyHh+4ySzgkkldf0RYFnTK8Hmfgf8L3KeL+cVhLWOaukXlEtXHaUi8BoHjJCs6M8TmwcWhXyuyx0HqqTGpbm17VCtQg6blA6/iGl8jO+SOjiWD9/ENvF47WGCZOkkKf0v19R5wkM4tZNJmyb5GKLYWBtgUK7O0/6Kq3SnaUxtCbkaAavIcGfeW1/7h2UveCCq+zwbCTlxTiAkcBkKitxzMgwc1mpuVyC6KrIStcG50hFrmc/aD6ROEBhW4JmQhUpgPEuxvF11btdZ3hQ3VFmQXei5S/GVWdJmbvHePpqSfLqm881YsZxb0ffPNcdV9KbHi0u/iU4YOcYjxQc6LMvZVSvaMwrQ9C+A+KbKjZh5if/TBIVPAc2Wgwdu4rt+y1vZP/l8fDbTaSvMr7a4rkPn93KxxQqX96pqIDYNO0lAtejPFFU+mMU281LwWuLZhuBchbSlM+Nn27tShDw06CKAYw7JoJnJiLoakhlT7AV4/kww0Fgi1fKAkCobilT21VUrKohUHeqmW3MMMH6NJqSqhzGHuLUX8Nek8gecY50YNiGVBlNGTtO9waz5g5HUzh8ceOETmq8B+bd/wK7IO+z9kTXK81I+edFLdOp+2KHEuvac3aVPtMsdqqHgfPOzKGE/oLHiWMLM5EenJNiHaOz0catftEQxOPy00M1iZoujl9z9p/VEMD48xLV8iRyYa6losxWBNmYWda023c2v5BoWYs7t7zD47pTm0y42OL36RV09Kn5arteSa+GAmXBAfZL5SffAk8qlaXtAevPS4mA9Ol6CIMd0IOFNs0z9/d6BY7uFdbqyAAlMtb26SU3T0ibKdwo9NR0dF2az6biPmF82fnugUTRojBpAbrZEEk54tUFPUFwSfVvQhIpFDYsWso+EgrUjvOd0wU/vT2d57JzJSpypGZ3FPyhuYKVbr5LYJS/TkjUorNWk9e2a232bdbEwXsV09pbyn7yIXmJCiDoXcNLItaz9sN8p2PVDyZv04pfkpNeX7GlGA9PTI9Z8/IDo3S++dIFhB/Kt0qk72zdRZ1LSW/xIID1N+xET4K+t7FsBVHzMU3J62wYVYa44wAc6ZllCYQ3zoWS82sC+u/phkhGfPhQYK49VLnZbmSm9PwTT74CUUnPHd34aeldOQwe/JkUzTkYsARqBmCIOLqK4yQKHw5oZKkUrarREYJ6ydBbw0BDUZ7MoxrWeFqPziZT5d3O5QvDRRi2cpXOrOxTJ6skBkSMhqrWnd4A5LC3lBANUr5f5TIFZR50QrcqYJMrqwVyxNd51KLsJHxM3ZbIuGOWlbckAiAEWbF90UefI6Nb2Mva+V0QTpfx1n8htwUy8/wWe3zJIWIE8O0ME43IsZIhlvkxKoZxz8mxGHy+Use8FK6euxeT3DtwpLRLIJgsARr4YMNFRsYm+7kKN3PzD2MFn+bhHSxYI7lDnXr+E+6fEN660ekhQFuR/0Px1UmCZhZ6eA9pdE809XdojuKOmTprCkhKjH3gEKGrCXYOPHpp0MNSQqPFd/kmQx/SR25VrPk4DArY39SHNjlOUTUwjbBCtYS53y7m0gxl6VTjqFNP16KPzyUpQoFVpIZg6UMix+JxW5gZ7fLnGxF6mE97hDJlDIWUJwWteCNd63up2YOa1V8kPLt5r5BMz2TF/b6pPqL98CqcKQ4CyXlp2JcqeOGPXaSacGI9jyfAlyIzz+zCQN9kH39y86rlezpWoDR1i+J26KgBAipGBsbMn27nJMPOsKQjr+m5ZoTu877FAUo78XRML6Z6CLe8SE4X3VZt+mBqRpDspzL1fCDUQgsSF75odv1W04p63FzxLGsFpC9PR5PMicNCWQdbO5/7LhE6TDGzG5la6dp4YdWWByHsqMs1VBj6HR/hFSAnwUTgibYd/AUYq4twmVCs9xU3WYDKs2r2h8eYlGX54pvkvGhxAixePChML/S/B64Z7822ox/zXFOe8gcG6U+v60tFFo2C1itWBCuIXkWNm+TygC5MG605FvLma0c+BocPkSJOh9UVZjgE08xiHeVPs4XbPx4J7cM2sxvqGL4p2VXuVeW5UHRWHWuAsK71n+X84XDEytCMoc/vBPasxHwjMxaNNJOn0vUtgb3d2pqv+Jsnn4XJNwCdMvJRwoeZCJVDAbOFD3SEzdjbFclBYWOIZZOOrSi0JEqq0L2CHK54hXlS3gvhzeLobEFafByF8nXrvUABldoIq0bdJUGy6lzIPrHlM0dVk2Z2R7Uz9erqxpCWxLYtw15i4yHoInqx40GBX/uiMHiwd9ZlZ6jP1ys+LgGH3GMCzcKgUQVm3qOCkhKkiV8B4hP4i73irZS/cABYCCJQLfawF1GbViTwQH0ctrkaiNgq5BWJbOt6OwJQ2EdQcBGfjg75jvuv2iFsjndSarvsNmHBlLsrDKU/roisZRNzVM8g+cBnhVUCxhb4GuanDyP7iy53RE+xg4qb4XZ7ot6p/cvG8Bj0NPaI1RkSoAvpFIN6c7+sUOlVSr1VC+ziUDsbHuXQp4As8ca79oVEFZZDi9A/4jhIVcznUmivQz7s6DfwL8gA75W/XTMYySXrAX4R+wjbz+7BT42rIrZSth2PcrXEqA7Yn4Qh1PC5OgUtV3FSFLrMIilmtVN/ff2nfDaaSu8A10FQcMabJ0qRyhDf7sTi9zvP6bzft1uDK+4OilB01F/hw8Rxr9V28VauC4hJ/2IBmr6pLK6kHDh7nDcuq+Cye65puMZpmA6tUQ6c6W1Ps1HyIxpnqMBetublQljKOw0fSUOvYJH6apnZbUGZfjOOxy6h+UEFc2zzyLwa1dy1cEX67A/PRwYR3+PrnhdmwuID3D63EtAvrOnBqfq2upGK096LInkV9glUyGZRWi+Dd3lF2csDN6deSzTi4A2u6938ugziHpB7LBoSdkXFFBPbi2D2jg8uOuLFz3JAZz2BQ+GLSljd0y2BVwURUSnhAH9F3x99SdWiZsoJ5O8AUgdaLUb5fXAL96NrH9//lWCbMyiIl+N3J+1t498RgT8AXM9/uXLLG54lADkUY4WHh8didbkLABSffB0RK/JB939XApQ6ABFSbxLsVii/xNpSIb3tgusvdlFjgKZ2yB5Z0VEgvD6M2SH05D4DkMerPjnklwQI9P1sqQQ9etmdtd158ia0K9w+NzVNAK6Kwu8CxsQsax9xAIjmKrCQ90h4/gRDmeuaap2nOdmDx3pvric+1+ysmE8Abf6/ML6oLIUwo4ea8MdQRdMD5ekt2fZ3yViYHIEeYKovIBoRhuoLjNxCXmV76H6FJb8YTs/oAcvz6YLNBf7wBXFsZ6rHWbn7Y64eWS5ZtnGfKMgdkLT95jI+iRlvy6hkJTxXW/NZFwe7Ss7moe4xv5LxI16ZZ1aqY9Jzbg7kDj8aLdyimeyFv7pyyR3jU+22OAzhaRFpiXyIIfJaajXY2FmVMANkRNeCoSwA7+rWUjfs/pbF+LeSa0BxQbakATTv23R8TzD3DK74IlakCaLWMddKYE95NL0xVRJXyR/4UvKv55w6v6wWB34foodTlLXSWeg5uVBw6ndIEVzKk+DCdqWyKE2sn5133CeiEsBt0QcTRxjVof62ERD+YuoIZSVyS5UoU+uyiUs6qYgYQ/P1LAmRqguCdyu5n4QIe5QD+pUFTHWG2U+oySsEkFnYeOINzG6hAeWtLlQxx134cYLeLTDG6B2XUtU653PIUJOjKL+deYEkoI45Wn1UGJrLiEt58kQypqtbUYP4lgd/M56xFiMoBYoloe/q2JnIWOHCDns+f+o7HCOwZd/x7WBpGQOPamV5mQZ4nCcgoMmv9faWAtd9IjtO6Lkti9E2bzvm+duVsMOBxauo6CO/Fajysf51LvKQ4oKEi6Svn5QP+EhUnmI7MR6F3KZX1WVFWiLgTC0EEs5GegOxwTTxUojuEgMATV75n/OJVETIt9HpDCAmABHi34kyQ24qGHikObqR4P7Z9Y+nBT4zh+mXc+pVEwp5a+3Q+sacd6A/4DsLvRdH8jHbb5XLMh8ylqLWMJcLTuuF7lIe4s9ePKy7IrmEN54gT8Ksf/q8NKpD4pwh1RYDyWUuovPPvX0gt79eLi7xjZd2AndY77/Gf/+PaE6AMsfzzeP7eq4P3SOCB9d5kHF1NqfTyk+c0qysJ7dh8KLmNv/2zImeny0VI6glJXbC/na36zSmM6gAB4SJPod91hBAd8rB2a7T7pMKBsA38M0q9c4yiygg1gwxEK3l/E9/KtiWmOPaA+iueWhPdNNowL329C0zvNYkX+oEQwacOQIx+L7pC6vxL9vZyFAlUOR0IVThZlJGxcXdPkvzVuUphT6p7Gn9x8fBhMEWxTP3KVsnxiN9LLYrwnUohfe/xR6RNx/fuO91H25r7ZXEvoCiaWvzobtf3GIFxLsRuY80Q/pv9+NnRRu2dzTnmd7oSm6j4k34te/AGof+JMIys4uhREVgike8KPshV3VSx1xDGZItbp1Xn8UY/S2/gzd6WkeFSixEL59NhJ3NSInmFSGJZdBMq2u0EHd41xO/r2J8hHg6+e56ISE2NztvpZ1zGF7gH8qLH3861h6qQGphEfy17iqP8T0kLtcOQef5bd7CWan77dN++Hen2N6pTIAbSWYXKYZ5HgLebmlefT9gh3L9UQLDGST8RIXXOhtQSzjhBmVXovyG48tV5+qbyDnj08uQ8aRE3r5nVOn4rZyZSTzNCxXIL/pV6sOrBxsx5ESjQlFiwEdKCFVzZ0DOY0nh43FTmxQrmMqDm/Iu7DfTu4F4o8Ri80mwwCcgZNI8d8BBokxx11RyhF0Sm7TUfK9O3IjCFLGDMGwtzC5bg1X3t9xZCe6NqKjU3fappdt/Nfwbxif7Xry3AAm2lsAb+XFblZqLuavuQim++fqSpRop7Tpra1YIcMIOvqe7vbJ2sdt9IQOXKdaZtH5xT1noFigRjHJUM01PVxYp7vGdhyeciMBQmqh7YtNw5bZDMYXshoxLR3ZgeZDkvQ/F3eVg6bbwVsjBSmneLoZ6iIo7BmFoZOEX2zq/NJIf9ybaMPtDkEQBcX4tAKd9H0584gjm42D3hFBjOKs9y8epHMJkczKv0S4p2kXDGsRUxkk8Cl6vquHqZODTb7U9XNthWBqgCa9jE2jxKCzm07ZnV7LE2cJyjzwdAREHqqJBJQbgnQepD7eDCqyUVyyNL4x6WKdu5WiUi693vjg5zFyEm06AIJVT0lahHs3ghCGT+hxVw6QfZb1AoBZ/ByOX+s6A55K9+AsO1ZN5e85iCBrYiUDy8WF2K2Mc4Fqz4sJb4SEYmId01RxCmCz6hyO+TqYs31hlyOc73hEUNGzQgrmAxY8ARea+GCEzQxLY2wRRAak1h52IpWR1cJ2MRlz+hOBLeHFGiX9IyR7ebEP9ahm+KNj2vTVllW0pWSQODV6J7DlQNaCY4r+Uj2f5oRYmUx7PVvaqgrq8E9YErNk0UXwxPoGroE2f32BcZNeBdCw63PY3wy55/KEzaMBWIdcngSsZVhZ1ma8m/Hehihz9oJcE2aOXVo0rzPnxRBsd84OitxHvJJimQ2Q7nE6mdgMxk78vUeoefgKyuBReFxxWWG9kNIfpgUTMq5tYksYwpIJJ9y46tnah6VGJ1q1OE+QdqRx7fKOcIZtFne0xYCmrG2681d5c74hvf4yUswYbKQg2NeC2GwTmjU5Qv7xIqhTvmL+xu6d3WAz/8TlUnqR3Gb0kmuCtH8DjM9Yv/opgaT/ULZvh0g6oc8w2IVtlGvKnBIlcS2Y+oEQQkBEn33cnwgMQH2xqbAJD/DJsRHIFOolC4it7j0b3kaH7bNjw1UEgtBPOzTrZCgTthiuSblqyfbZCi7uoMHc3JwhFzGgdQrM4iNKKultkS5GDAbwSVX9DqjjnqXhWLpoeo1ozlfHCj87+esRm918heQ7nIhEVDyRErXuJhEugQ893oWusMPRNWwJzcufGVe7Sz/pAIgZnDjo9he8bTS5wxxLJ/Cn/GKLCuJdBNsb0xVW8In2PJUiZYbWFDLany9lYzs0VTwcIyZYfUFxgye/cyzuAr7+QQEXrE35MwEbb5cAtzA8ZVO640Wj4/iiWw0EQpJbp7jhcowNR9ozd5WLbFXs35f/rt3h14bLMBJZpT1gybZzZ34BVXQEJ2xN3n5BGU/ebSgOGV12kTzQKIwcPTKoYRMv29UXA/tdM1VCQw4q5rNLVDzF8hlv18f0H9RrcFoWxsZf3OH/Xen2HvGI/6nD2VEKkCkxOSI3byDPBMeGWUnP7aIiJ5OIAjlgPyKGHlZmKewT6UTH44P2OPYL3hPmv8bvQP0jp29vort7QJOgCB4t4dhD44VqWaIccu+fwGTwdZitqaFfawRlyLX8xvuQyYzyvZkXamX19fGM9f/RBtUkWxo2sbu9OCyZZxvC4gZhaWqJuiNn2H5k67quF0nYznx6IYGTtcQeM9SggjFoijoIwhKTButCkaK6W+o2TZZ+7lAYIc03z+Da+jbA2olVZsLiAQGeWm7s1cG2KWINZ3q9VKOMqeU664pfqq3dRvNw5P6Qx7l0v24I5J/BHpUrlqW8wpOIfSJRIBxukqO/hbABWpIFPnVBAQtnp8m14K6hgY/qM20uBxrYL3QzaVSbGFWDD/gaE5cx4jtMWV8R4B65hDI2qOmxR8HWP9qZ0pZS661k/Qsb82IOj+iQGMAmUhewj7Gya9hVW4JWFuwLutd8hnwEHYenNtsNnxR18josuxxejS3S/J2Y2XAqfs6B1WTworHkgBgjVW+8VIyvG/OsTsX5NAjtsoZAyaUOp86ENEiO6tS4Q502fk2TW0ZPKWJQwyQy9K/rPjzzav/ROGOVMeEAh5Y9f2ECLRGTOhczD+0k1royKRta1HaphW9z2WCzBEYyxyc9TYhWQl6HNWFzDGFkipj2SmvYMVTjC1aqyYmoZfWoUvWo8LrkRurr9X+KjUN31vKkTAvwDuQ5yQgAHhOw3I2Jkv2in20ZmnVs+HwzvNE1XPTxLUBATA+8qyDziYOeMCPp3SM8h5Ehor+nasmdFfhiY0Iyl2zfnCIq6X8oLy+ICK/abNN4h0R2VblZYAUffsI0l7oidTbbMsKz8H7/sifCLcOh6qZYDMeOlF93RrK9bM5p/mS3Krz/m1X9hukZQvdwbe2JcLAJQnyJ4/kxbiD9fpsP0Gbff68E171zR83fcyzAA1uur2aLKU4I8e+IN7FTq7ayGikT+cFlVCKhfNUuSAZzyLIxhHjS8/B5PCyRjBHDZDfAZT3N5utzGgr7KssVsNWrBCFfxvwtESiL1ZK2xTyoOAg9nxXq42APiPXlixJYUXgCvg+fSiRkH1nsNVC5k156i7a8xpWy+2OEwsz3BlBPlimbtP1pxASUuLV8xe+vfpyp5a5ABeXP4DIaB8Zygi6TC0B0ny8DeTq20RdVZeRaVIPG0+/M9w3za/1ZgckgouaWFuU+UB3Bcqcy13WJiSjEUr+BIZOj46CKHzSvE31+blPgAANdFRqXsS2KUQeEemIaq5Km0hR5/Wf4E01LUQNWf+/iLkwsD8RmtabSMV/JOvm+0FGwINeFh6e6AL2VP/NSM3LoMlu1azxxFmHZavgGVWJuOfMwkjwz7IAWJ7+bNqDGPQwzlBfbhVmdT3VqH9gMayvfCv50Gx6D+pITcGP3vLtuP7qtyztSfM7OmV/6nQqQnUMsiMqsKpHcwDe2qwj9JqOVp25CBcFBMk2nzKED0T8ORHITjovT3iMQDaF9H//jRbxofNEpXFmOW22o9lwkDQXL3jJ84/wDzNpSIoYK1wlAd1boBKdJO0lcy8UoblqjUER/w9f1nF+1u4HKx7UhkHsAAZYzjh20iU8KDcFY00LqHavSa37xyDOj0sEwqZgITbHuiMdVrzXH2H2m7YxcMavIOPB24e/XuIXvuH4T10QOqb5nR+dYLVMCaDJDUmJ1Qt896pXTQEdfzOnwAnr6gvCpg7BJxOE2I22hBbHrFWALZFF7YC0zOSqsKVcEOG+zVt52xph8g8ki8F0B+EPW7/g2p2FC25G4wseSB/PhhBxBJifGUxfrUBuCSjItmV5FY8PE2GSeT2Ho7dynDKRSzm8whFQebjXHHdJFOaI7ufIyx3RwfnITWcLKDmElRMLRF5TSuceazULXjUB8aGqnk74w5Pxt1HjvN4fqty7rJgU2IbOwAn/0ZLvYCXLi7PvW2+HhaLgynGQ6mSRywkFTIzU8kMYmHCr5E+tJQVMCXbmLDb5gg3yVzHXAb9Tk3Id0wkgEB8fV5PrZTnSORIs/leOTZc+LV1AmLbgRHJTL9tHUxREeO2wovl+vLbaEm2kbR8yG+/ESS0AcjwPQuKUxH4JHalPFx3IMf7McoYznpOKUkU0V+T/LcG+UTo0vYDUjILLnNCi9bCWBWZFC8iDEIlGAJH53ypos5Drt7z0aXxjsvcGJUAnJ4WbAKf2Ep97tlhaou54D/Zwqc3/NKHS+LjV710uBbGC9gFm8nGYSx0cBpkxrWW0yOm9EEQr0cZ/CNgzbcHSfa/G0RbRGzMBI2t0Xzb2L2QnnkDkwj6qXq6l7XUCJHzzjAZN6lCEYIzgUAETUf19HIbP09mHDMNtXu1Pa11zjGp2QFhHiXTLtzD2KqCxpXhtm24hrLV5b2TUG4lFRRzfwZox9BrV+xpeEPGjSPKE3wHL77J6tJvdioII15T1TdOF77rA1glVTl8G799G6+foEQqyzG+OLf+5GzoJD3OAzM/6SfjWCSKsYch5bGpoiKY/c1xgxE6JLO402cPkwR6PY67PHeHCWSp9v4E8bYwXQXHluKfSNcy8LL3azYMkQyKe9SCvI+cuHBUB6CFDRY1/qWshuEow8lg01Ini48PFpZQM5XUyUyqTxzim+5R8ExUbX5uoG3zuLZNeLZ0ZFrRwUNCWy45cEN5usQz6lBAssmdqlKqf7FyglrAnmZlKUaIkr6P90U2g7hdetghRY67Zt5QV9OnX1UepeZzw2/DKIPujsJckDFmLBHdUmNKqiLGo7Tx9yYauCdiDVpos1+xVngOLizst0Wt31QArsVuJ30k9e7O5JgKHuqAHWZjP6Cwdyt2HYCjK51FNhDivXmRN5XxFRi1PtG5mMMyQyVKl/J6X1dip5DhLDH0y/97gAinhYaM2gsAjbpUge009gyqmGnIU66Ivs+wPMF7lY5VfAxUb4+kOCUwA27Yz3TYSlQCplXNyRXWUpam/TdytZ3EIFvkpdNY5ZXgW2wLkkw8X0DNH4GHq0DDqQVaNNUXvyCUFTKEfK9Pn7zV/wuOInQgwgx2/qg+0lN53gEkuab5N6XT24bkw7qAzj1cxUBVkMTU4weCr9Z9OsC+DuGLa5rL6ZKvTPl689+jiQT9vfxg6gcoQBH9hDWDsBPP+lcmBCX2DV34GYCI/1RBgUWFPxZMSb8X8cXfg9C39SgqAgRLuVwt3aqfh0uLuSImB0R2fbCTnyGSduQ1P5/VWY9B5wVmvr68CW031N4rVxhWk2Hb6p6DoJDkdAYTA/O7NDfwTJyuph8s7JsicUkCkrXb0qBESvYcmKQNMFYw0znPLnMycYEFOJlQpUMnKvjg8enlEI4Bl59TanWHOalzWJzni1D5x8ZkILJEJhRFzUJZT+o7kfTOVr9ATsKNwXF1AzqpLsB/OAYI6vQ6UP+cnUpKmPu14OrKotxSU1xd9TEuiV/Im+BpS9fUNwXSvgiEwoxXxyAwdgrwgVtyjtp90xCHHX7sJWoLF/4WHkM3SJQKbiM8YS2v/V70RIzfHdjXxKvvDYGwYTnmktxlgMU1MEP7nqsDUeTdc/4OSB+TQpTPqMPVusr4yiXZTJ+lQbFxGOdhIp7q2Dc/jNg81f4uS1dYGtL0Vag4rSRowXAifxKHo3AT3oo9hHg5C5Q/9ss5cBQC0d5aSAPjhty/vIzwWggiAcH4IXRAudlBTE5mGDghLzh9UMV+qFw+lrOppehh3rGs/mxTeHY6UrL06n/jZymTUmoEsMnT68623ndeRJaSNoZlPEciX6C6IjbgGQBg93BabWEO+Ac1jr9avioBmUfk65oWzfpFTD+bAd2nu/JRcvDsjElxK7htMcwu+iKMwxxEecOqnCKoMvcKpNshD5C8+ADLFzJyLnGmWEtV6v9iQeOOk27RQIEKyqaPJ5/pUZus685hQDqtRUcD8VtNt0v0+4EMDw+FibssEyEFE9000n5w2vm37eVuA6UbTytnUbWOeOTJ4TbC6q12/xE9BDknPVopyrO+SiYQg7vGii9HhdJbZ0SNlGS51VGJxvJyg/6ZHEpCLhNKjFrfwPrXXaHzGNUOQZBO1N2KAXT8pXCNObVYPfxU3sTuc/W2HJky8625jzrGT3tArVdkivXw3BDccb9f+GLzyxXH7LkMlHL3MyzCRrO8v1MZWMQPHWet6NiHoRwJnX/o//ru4qwo8dvVPFn5CBTbLH3ghVTGsvG+9L4rbxvaWySpCrEkWCESz2r4F1VUVz5A7TxW6OEszzzBpFCgSOP4QIjXI8IdZCTHj0frNPcYGET3PJ/esrzi5TfTuHEH3thusUR5cDjilNuUDraIguxHF0qcPjjmb4kJsRpA7urv2CHsGl8X1685mpF0q5mOXLfUIkzW72AwyQ1KIGFPCoVY6aQpT+QJdk1nhIeJnLsMyb9Mhb++j52B53nyhZtqk/o0hygypHnf8xoP0A2lCeayIlq2KzkUHbezE1KHpD0PJwy2qZyemqcMMv0HpZGHySd1xf21MfncxMszKvDN5Vlb6TBogzDZ2/spNajsZDxZRI0we1L+0zzRRihbLz2xmVJA7JstPf0MHeko3dpPDELd7Jb46IDCtGf8DaK5u56aS+x8m2cF1y3Xl8zLyn1+sPtk+JYbr44hzVfP78cnmb2uX+ZMw294k4pcy3U6iSmi18OlEMKH/BvhhKD9XZnVMSHxELAPiM+xN72D5nQwBFNEXgcddUM6YZUo97pmzuN5IS+r9e0d6rpDPd99khkkymNAAZqU3sNiyt7kKBEc1aOurqeAZpGgHruYJiKiHUkJzBS9abWF7gSSq/Z3YVuIhhw2cOA+oJa0Gco/32130Gs30F3p1Gd+qxnx/6X/KMZ8GJpMbwO+JRCyxSkArWr95fXZQuTCOLd/WGueb66LyGgSnjy+1gI7g9sh8UC2/Fwd4g1AlMA6UR4Wn9T9OYdULOo5GZAACJZjNGNXHqpV+Dhak8wXjl+DdbiinOTkkyZ9rPJvcmyt+NKpVZyi2fPSquafLVEEwh8f8OYDNIvpDlWFScFRD1cqVySHyOqkdzvcWgVeY3c5JnE+AP7dN034HUw92ED6PCT+HcSqbpThWa08HwrL9DGABiqEGFibecP/kuSimEq6RJGgNBMbI3hsY/6OCSldC2CQtOZAhtwPbJgM3fBpBT7hoOkvvO/h7+LFkqZLcjYdk90D0HEaqgTbYB7LkWycN+5LaAREYbuC0ZZgoPxBZBhAbYkkY6rJyZ9D6l3nH9U1UObURE/n4b1AoDbnNSJfC6YuKEWBfsnzSAYHoZKXpI0mkq6YmTUhP+PV4M58Zo2DiRvLQxdIEq01frpE9nJ9OdW4q4XT8DkBAphBZZ932fDgURHiGuGwGNamz+vE/iTprv6gUSbM+CeQOQXAHK0lepAAZJ7XeDqidy8LLqiBNfqL76WNxx/qFPm4kcOeTUhwx4pPg68OWGM6sZU2lF6RtA9oz32AVqTbV3gK5MI3Co0hPlVwiDYB3Odn0He97rbjH8PQfiWTW/BxB6P4H0c+ZrNCWtWxxRdELhn3Gby+I2ozYOd3iSTavYGBeHpDSKf8Ox+8YbG4sGbJR2inU7VvawegwyG+RLA1HZnp/0lNk5qe06Cw962skK1/oIQcgqJs2gfOXtlvPnNDCdfFB8lF0D/nU/vNQ3rQPnZpoUjqLxwBMh+ZXb/QCQuitlqwDP+xA5jjelWpCoD5IRa03y0Vgc27Nbr54pv24pwG//+bK0EhD4TG0jJi6raNSU4gokUd4wDfnw4e0MvTS9l3vscXlQOSAtEPqcnx1ul2TAHHsgotyl+XizXzra1I9+yCQy8GF3TFEgFq658caMz0q4aOXr4QB8LQwqSgNwPj7KI2PG/gt8GWdqWu/IbBDVxP5QfOgo92vq0VcLp8QwsuvwmxcHHSU43eKcGsmtFoqE5FeT+RNETm6zoAQyFaG70s9zsENFkMC3ZG9e+xINA+kGSgyLlqEnhdYtpcZgc/Y7KHGTKcL+1hi07FYDeIHLK67sripZR/LU+SBSTsPSxbWYsImrnRzDxsYVq41aUsA6tn6pbjh1EUDgsTJj9MHWyObsWhdyGNbZauyVM6vDFlO/ZgM9wrEUL3CWjKoOWFHkxXFMO7Ir481WuiYtisVFJPa9wtPnL5Q3+vgaKWz+j6qcUnDHj0GUTBd2A4nRwHZ1psTBMFtRPyfsQfXCEtGvYJ2PqRn34roe6le3JDCzEpeyvaSv7Oy+ND/xwZqa9wm+KHlcVSqqzD7AVLcrpGBP1/EJ2EvxIw3QrbGhOhMhDwqnI3zVxmJz3tRFBvr0pYy+lsmEh4Fso58siqYMaLV8aMddRQVO53+Q/0CxgiLZ77Z6sOz5DM5LHZP2cSWN111GQZBYNdvlOgUKLJEAgGiN8V+ehpo71om/zkkm7Lsh72Y7HJOSEq5hyqKhe2EYZeggq5V6wH8EzwdAHVfuYRm+iCG8+Pu97ZU/2vubwFPWz5ix5DQRpJRYzvHiixmOnjD3FQRJeYlaphcabWHcA6VDNzs2NGKIVctVxLTz52pNrBT3mLX7rTzTxGT/wlhSAf2TNOxVwYpOT7oR4X7R6LYlc2Ny5hiHY1iA6o6Sot89xv1MLQcB7k0oG7i0IErdPhy4In1Qw8GNM/Ol0pmG8aNZlvoEJUYbwoVxIqStxlaeJbia1oNdWFJDE+ozZ4oAPA1RHwu2brVd3Bz0gFjIT9+JWuN6O8IXxLJ73yODTzc4xFwugVeCv0D7+k8c+eVA9310WmRJzU2+2Hr43IqXILHpo7gosmzq55893FdGP8K5sNpy6lkeXOsesJRCtOrjQd3b2Wc/yg8A6uPWPpTZbiRseLVaGU0iUqTySfVBZ6aTIPbWOuKtKh/Un+St4D4fA9pOEeYwtb1pabA1UeCSbCVwynh9AMuas4A8P9VMiRBnVgf6gw8P6odB0ux+ajYygu4mD4Tm+Yf2jEVu3eMN+W6waSOo9k5FLCYyKSNSA8NMFP0Sal18FU2pOSfMuFfFYcEkgyqQkJhbGq3aQwU4Gib2uG5cn/IPAL7XHVGLnTTSTGPRwHOV3Tta28JxGW8mYo1VFVgNIjYLUo49s25vdTZUhO2gVuovjJuw6LySopletCSHr9xXYCEwzbpgb/tGMH6reCYvgOY7vCgqy7W12OG4FiwXMJkCtTXGblieiCaWA/9UhWIr9w2Vz/P5OJ6mf5C8j+Ntqm8HOZkThSV9Q9bt7+mKQEZkDtH/Nr89QCcRQsPwNHGy7GD66Zdr2XAtoalhPkw4gOQC+MnrbZQVWKeAIkh6TOzHX9Y30qxIknXcepalOFFKtXDeg2/osZ/0m4ueDrOgvdFzgVBFCcofUd0KJ+K95DpbaB8Wq0WqYLCbNIcmPLwMdkaVYq6uGbfKOWaUrCKXeWRGb5Lhg2p/mmX7CIZ6n3FaZNQwEdm+cj8duGjOl0ZMzF29lPyoqKhJbSgpSkRfQbSn3HduOqpMQHDlRv3MqT/itwaXNLyXY4u/8eCQLUTEuDfR3E7q2znZkMnpXPcf2HBh4pyNwfOuvkunct7E7W8GZ2sBzShSxmQcKQ1YVtFK6f2GGPfg73tXd9wg4u0mbIMxjHEsgDihHWbgXCD9ale5O++l4YBlojNHm4xnHOVw9FUsUmXIbS+fiKMchtXysu23PyTGCh4T1qPdwaGEwbpSSjXdOo4hg9Nw87wJBd7SxcL97D07+J7oExu1hNsIX6zlLXPdWXTjLI9/4NUQvHGMLARdKra8C6b4z8/wDwNuLqrI18cX4c8j400c3wYsr+qEUtiX5OLxOMV0kbJGhjWUbRhszuGpL7J3dlnXTl75yR5xjDvuVAA1iZKXqGKNmQrJI3o+pYtz2KA1A3KMb9HG9FchsGzXKXr7s0XLeRX9I4O0OyVZqPmYd4qeclb14+CPhQr+bJobKZX9gFavaAvV6ma/5xYC/ek5J3zQKGm3DQgH0ItCRb4QUCceoGwF/J4a94fquBOMOaW1I+xLlavDkm88VVQYSmQQ+BnZm/xfXdTtztFDln6c+lZmDfGUCNO+bHsIxY/z6a7XbFaXJzf9UjaiEIM1s98oyNeDW1Gr6Vdg4hTRoMywu1EmNII5wSBJ/xgghPXP3Ge5VP7vQ897Zkz3xr4v6qXLZX1Lt3yx8tuCOUv8VpZl0fksA+e1THx5lob3y3Zjtomjmms4wHBdKkzAXouGTSfED47lUPTC6gdPYWXRAoW+fCuRAeRdMefEOJOl+qp1ZoW5/mi4TzB2zdv11E4TXLwlpHpEY4tMb5WD4+19WgR+Nxdq6NekbCVc4yreqEfMoweQmf0Mv2okqDreBXYzlygBcH8GvoMzBZpDLOaSvyCBZwzccJvF1JzwanjKK7eTdHCNwEPgA2lvdWZF0TuV2pxrQsQhJ+ICa2vxcvofc44i93upRX5d/TwKyQuiAjwPvFMtFFur5Nnq81rXliIUEyqeyysG7g72+YVAalr9jPKIo6UpkQCe98e7/sJIcKUuK3lTX+Cdgmr8ZZjtW7hY50QWAH9SMk3aGD4fdvLJykIukiUca77uEkfu47sQMlmzt1B5QJE0FjNtBhAvBAl/CSlxZ/CFF669WC5DMFNqEX1omUM6oUOtUnVBYK2dAZ67U6vgRdiMfVCGxmeF+OffDBbQeCpu2pfW3QLtB/CRHR3OZXG+SumIMqW+/JR9PZ2PNuScVuIyikIqZXo5jFe0f7mYsgqSyvM6xED2cBKBYjqrCXiG2S81a4ajXyQHCEA6Ji0/RMcOpT1rp9kyMUg/mN3VBnX/ZPOj5q2v0rZYaias4zvDAqpvzViyFrlANhWNivGI0jcZVRwZX2GhCCQWAd9fYZuRBM5iUGf3Pq7OzjmM9CoOJxRBgOREKftFMHi2w2iqWPY1Ojs9tbOrYciv207MT9bB25BMbnuaDW1koIKlqEONuMJEYZwZl4kDoXjN2FuaJFItLM/TqnLO6/TaRGRTgt0pBSGzfe5wcj3mjIG+NgknZaTqBjImIHMU23DY4xWSGhoi+a5xcaQePi4IAGMr148CJQYlZ/b5g34twOx7jAOqlOpITIavtNZlkY83Lyr1W9xj4dhgVRvi8UGrOBZxmsHUA8ZgdroClQ1Nd4aPPr/rnCW3ZOwjUJW4rRW10eyp+GB3MjObthPA+gJCxXY9l/A9Qz4MiA1E4C3QsO1oqnq3zcYOGGcRK6V1esAqYLsJuZaBN3hIQKeHRPRxVopBabsAtL3XbLic4+XKm+eQmDwtGc+Pv60Ro+xd7x20WCjXRMo6+8SXukNc2ValaDEJBRa91yQR2Cz+2kLj+fSFNKN4OQ8RABNs7Ga58mUanZpwMAFfKH1q8ttna0GcKfjW1p7YDMTtU9YgJSuqdwEcJr7ov2EUBCcOGYbXRlY3KT1VADKAVfk04ShHWho0r/aFonPhBiPyIy5J6pEG9NZ0lD5pr4mf8qJ/Cqvy8MX3cjzaCkN6l/7EwlOie6hyCkeYanfwMK6Yg6SC0T6KWUr92hZ03oDoRwy1w/ItdxsfBB4Fo6fydX0W8pJB/L3F2Alx9RFVCRlUKQZjuQpTO36YX6SH5NOGkGd4BdM+nc/L0cLP3CuoiygCrFzePXhfpVmf2SKo6joeDHYdhb2jqoz+NpHMQZxN3o5dO5YmVYlQYW/lEvB094Y/G0a47uJs9DVaJaXV/3VMUVDWDMmGQb7TJB99up4PR2tMwOCehgizRbDJVpB5Kvrjg45Ra1gKNB2bZLN1Fe+raoufk2a3YNjLgaLMgllhMiym5dMUgcwzjJq2uDKabtQFdVgoEzeKoEERGQQIK7hsb9t53C7jcReG1+1xWnReTyfWB/jzgwIieIteNC9ZU4QBJvMaZSESy/orHrF9MkDuwgM8W8EnXgXTmvNxzxpzGir4jXGrD9wSTjXGJNAvRrK+VP3VGtQAEzJtRjVIRunqaLBG4H13oywLVhelSaoofWIgTJZAHLe9daYhouZTgc9QnauYq9WqVckh4Rlvaya96Xhfp6XlSK0iOiXkKnoc8QZEhDvKTHaIYYxWcHVVcfYlPxMH/4GC9aEpffuuPJNdGK3mPcasjQswbi/Ts7w4wv1Pt23VH09+vWEvgljoshcDmnDebBcwIt++mGod/Lu8UyzgYhntZBtiOJrv7HqmjBHUzSCMOXTvtQAYLC+W9Emtcex70Bln/BFLED9zjqBk5JVGsrpKhoBvmv/6n8bCifMgOjGq3QvnXd+sKsqFeab8MjP7JPUhylISORpBQPsV1Z6WX7J11jmk17aP3dwFO+2LRK++DrDMk07wbM494bwv/eomovRzv32fBhXMjPJcK2TBWB261Pc1Mz1E0YqCA3vTcwjID4f7gctxHgaZlqTLiwKP9XXWTqvZu3pE8HK5gsg24VTLBP3j2q1BHEi0cHFGK0cmLuZb89rnuA7FJNeHW7Fk34D5WdZ3Q09yrugQ52oTzvuYVbLn3xHYXETDoNIp7B6ME7kvvCj4cjo7pT0ZQhh9Zcsqu0wTbgUIf54oya19Fb1TDU8KnU/8A0Dx6rzCLPVUEriZmRBtI9RZEwRN58wWQOmXfxDH/e/ZzDnegXXer5uDp6Z/AofZ0hfI+f21nzus1b5XNWgaI16werjszb+aJHWLqj+irin0RG3gE6oYzS03AP0VY82aD+sMXL9EFwIuriDNmBNHFYpF0ef/HjFDXvLtkkaHvux7ScoaX7/+HbFtLTtAEKgwrFIHmKoMHlch/T42ENAe30NXzvlpjkGd4BQ9J4Tg2XqBb6jzvAxnH/iQAMLgaDYWgoosySEA5xH52zqHdu3QBuHtiJ8Y7yrzIBi0Z9/mVUNH2A0rnHwazv7jqldz/xDT2fbPqHqpTd2RuImenudgsGME/X3+J+ClwZV9aTLQ/zw1y7xjmo/AywVKaQo0uILv3aFzRbtkISbbCof59PyMJsrKfzCYm2lA+VSE8Qke5lVQazXSDHYGF93V1t+LkfdoGq2jwzbaZjqgJ9n9LHssSQ/WjrMN5OVh0PCYVBZ+I9r9V6lwotHEGny9OoSab2mdh68z/khzCFUYtP99wVuqDPawieGC4R6nDCrMy5aEovemQK0LXj0TPQus4yrxSHHd0l4aRX60eorOILYNiGo/nGAlRoUgFbONwhGyOmJDRnixhBQ3+J10GNjQrLDk9j+41+xnFmTVFBt+UNwen5QHEL6zVMjxqWtJy7qO+GhBr6MXUWFLRdYAFsl8Sdg6zi1riZAr0RBorripkRuIkcswb8mCt9Net4xSnApAcaUUyYA1YqK9kvC1LpB4Lx9mH+Ws3uB9hWjY4uuYo8pjmwOnJzibkixBRGfE4pAES2sF2ugEUPuePbyjFW2QAH1lpjkAE0znyQZJdSInfsPlODKpKnEfcM9Eyu54sepEEmbvZxET7ryajd6Iq/T4mxROf8uwcjgJT3klzPv7IS2TzbIC2Uc0PN4hONVA+i48tK172MIbW72kSu6LwrK3ODMmwgFXrAGM3VPf+qQzYNYU+7XtgRqYYK96OoPOtqGv2MEq8amxYkWBR973llAMJAQY/fX5gLa02BtHfsun2WU4CATHIcoP1CC6zhhPYVQHyyb7AqyGnmK8drnqG6F7jaA3X65WSsWBA9jebVSIuRL0BeloyXi59nkuMZ4fkhpX4HsaEOf9E6XslWLeBZvA9lZgaKvO6772un15hxLI1dquZhQhEBGmaXjd0xD/9Hnt3hTgWFcSnDu3MwY4OFiPPjla+6RnazRCb+nVHwXy7wTaDQAhLNYtsenZtEju7AAZ7vlEzxtpeT3ZciFXVx2I1fiAhRzxzsTOFGLh8mjH6zVffr8nXWxBvYCElnX2aFL0g5T4y37W6UBT02LdYu7vCEj+G/uoZC4ShOvQkwKDFYc7BEWRLF1wZFcmbBWLLGyUfboYZVN9Fq3cMT7xyodWH0wALJhrpKG9rN9yYVBd63AlYtkGeX7y3sdRVbN1b9cB0JhvjlNApCNsYBOAVTxFZQiHMZOaEEZ9bFfyv7ocobASV8LjJ0Xb0mHZy9kEozxA7wtrvuF293KX2GGVDQ/ZKkm9JG/jrYItWylvRmC2BY69/prM10u19dlEEBi31RJC52FOdzU23f4HWnX3dwq+xSBdajsKoHMO7Mhbjec3jz+8BBVsjFw7fBxzbQDfdTCMed2fv4UbzSQr2/BDgwF7/+gYYHURSnd7SZNDGIv/pTPfPA0DJKxDPsPduE5yZFv066OFDKfH4apzVXjs6vfLnnx64FUkJXhDeySnHpNwDiGDY0mzF0WSgqFRPR+MPUPmxehFqYRkhxixKVHKcVufe8s2a0XXFu476lLyIPad4i2VjfAeInls0SzGYZ/dy/g+/GdD7R8VWZ3TD/iXUpB4y5oHon+5lkAEn/nyRgJMBW79VEqIfUwrMlhbKNkfH1hw8vzdMxdfeztmaZl9iiiJiRlHTO3B7Vm70u4IiWjNVR/+DnYxIYF9+AVQFOvMEMvp0OP11xUsOnzpL2TcW/050YsROYYj4DDvNxRiT2/PB2PRXH7JIACdwBKng3hM8xAHWrb8OCARk1uFE1NlNfs8449ckjQCmvm2EziomX2Dosick1KpovW4STXHYd0t/jZzz8PIZoTbHch/RO4QkQOgoeQzXfvwPlrJ1Z47CRWxdcIR/rs9mJjoQoH/0syVxrIV3VNDZe/CBMUrasIogmGt3ab+OzEWjepSvkmjVGIH5kXEH929yptkMfqbQvcnfDIezkH1k9YGovMpzigZnkTSF6YgdPLaSVWZHW6qAgfcQssOLorP45IJJuTh0AlXyBl6wiUs7e9aHzlCE4G2TRx/fnAzyOa0s4HvWFrbp6z/GJHyA68OGlqKA35uUeVU0Wk1D6LzLRbPfxM0yTrzzsqY5tpB5v/C0x0nBLZNYPo0WqV8DpBwPBNZrCZgOfuGpJfni3XcLXBBvoXwb8yDEz5WeStm/9Bx5WQvZqQ7598YzJ9yH55B2oIL4nyRdAOcCNLVFS4M8JskZvlcMCY6l0OT33InSQn1LoYQR/c47DXjwQwZ+id97eTlXw6FYCcUKmp4uxt547XeijOTGPBicxY/qsX4qnkAuhOjH8c2HQHd4fScmm7VHB5Z9kY+s77Zgro3p6chgrufnyQa5iEdFFbwPhH8yMwJnz9CV/VjqG2ijg8I36JzvczH0urSASbpRAVBVihww9EQJTp/gJjNxtE0byG2WmN8XsHaqWtdWTIM2SQN5mWAu/jQvqhv8mM/rhuwia9UUQeb/qTxnZfBaZPODb9dcIzWqNJf50JEyTTH4rhQm2kaKRjRhQyZt1luk1Y6RhlvYeZoUFog7NB9fWCjoEmYe45M1WnjrsKo1dirl5vT8ggmT3IxEPzJFxpoj1qeqCRpFJq40dBYMfy3/emrcH7TtL/2GEErJKU2Po+kLcw4VVznta2iqjWAODaPBCGnihsMSqvekbumroUKL6oh5Y9YNIuyDsosZCRaf9+V9brxRgsEb1OADgkufnYrnQW4XtRJivxWC7EdqqYADNnEBhkUlkssKgYXavc8rlHdtYDEuuNnNY5MTGSPeoWoMvcSG4rxDpAU8cV7cNufj0oXzZCj0v3KbjaXaIqFWz1kjKCzjlMZiuPZuiz74HXOrgkVd+bt576ZMQr3/XiM1Ap1IHARlysOJAJbSytzar9azUcd3DEIJEl+evzoYQ5uvwiLkbDP6OcP39KQuhV2FXz/xgXlBr28tQMb0GOx7YiO2W9SOHD7k0p4AYREZFv0XlBjYYvgfUN1ifsVch0io0IMoFCvLJz+vSl6hJ9gn7ajs45GYBNNHeZglTP4i73+xKHZfQKQATOZGMCYEDbLPguC5U8tYS+Ma4IwI9AK1AQ9iJpIlHi5sFAhkUMfl1XhdS7kBfskE7BDNn70/uhVm2//nIyx+B5Li1ECF7pix2iR6fPmJGAt4ZnUySaCh8ibcy6ZzLt+KAmyM5+29R54u+X00abeoXdot0ECMOu7U3kppB1tFxWPArZKLuiSGRSs23ZkpzafOzR1GqH3fA54JgQnoLt47uAhxNKj71Mc6M8ak3LE0SuiaL0sWN+cJ7fZTyyLlIlNFJed5k7NdIhtwT3biAsGQhd6UKz2E7M+DrHGLFFpiJzuuL/GTVNz1JbSdMwwbA2wg5yZr1cn/TOQDGtyVjjYzn/outFSwNh4AEtengx9MB85wuMu4UUCGckpiWJO5M50LEpxZCjCJe9F7iPhLdYtNNgI+IXQuTj4khD1rI0Qu+6fpSzOyCNGEOrPTHepxVMLdUY6cQK4oFyNY+vNP/zle9JcJuvF5eGxTR7Ptc8afO90L5ErsrwYS2OwfykN50hzYZrZeeV18R8wBldct7+SMiBUOiQhMCS4NYU3RnnYQ7XBvINJ6PmDLTn8K9+t4f6Z5SERtbv9GBa1lvWAHvsKTnjtecN5+NSCKxe2YpgaDKQ5hQ1u4OajsPg4NPwwYHbXnaJeglQOd3M4W/6aJjOLm70xRhnsnb44kqyiKkP4ooO0sDM7XETgGAbQ28i2NXqkQuBd4NO2MzeAqb4rt+RpYo49OVMYw6/bgj6bwv4NRUdiiNRtHNp7KbK26kroPdS3E2JfzNDc3vuQ/uo/b+bMRttt+NoOmCfcQsdkbncVMOOlL0sFDb2sAWAz3AZPu5qeQTJXwQFEdhJveb5BBN6y0/VxkXm+nsMKWi49h0iK6C3P2n9N+8wDqgOyQOTEWirspNx+7gRxjezfOrSSp8HAn5xn894Fv/9dgUu+w1sGq2TyZ989Vt6hnAP+2KtQeK1vhvkkLpEK22KbMsAC+4IXc9F3y4fLEWuZDGM+YIk6hL8whXbQ3Y8C3+HYMoNJpqAtLGyam2yss5vIH00yCkGz/dbU3hQsdI9a0Rcnill3rykblF8/vAb9YzuUw4Nn57FxdPi1NffZ0FHjNK8j7NaCRqL+97k1lWbSI0IFS7g2FG0WqA9uC1i1tbzKNPcTeMl2d72pCqGKL3XbEOiRK/t7EHsMjg+q/sTTNh7JqsuDRMoaQ56sr5BKjvmh/uP9W6cks1hy29s0jDcmCc57S3RRHRPDxoCvxcDwZzPR4mVTZrJ/S8IDQYn1E/Lcy9REeO7oxdI8Kgrj/Q1SCspFoQXSwgL+WKpqDmBjZ3zCdNEoKduUphlyTbQiE5qor6CjxSLSkzFSE0nOjrb6MMzoWLm8T8xb3W3iMMYhoVL4zy+AlooSjeOKI/Na+p01xThRa11SJUta8IjgFZ1bDWjPv0PtffKPhKkSaDNYCYoCLsllcXyYAzWPBYr9AP0+5ls1aBhaFxsHtzBl09+dnL7dLZNWn+TwyexfgChqgHV1Y3EIoV5AvgEnhRaAwZa3F9yJ8w7iLoJppuItttSugM2Q3LXIlfN9AFNimTjnDOUPtPnPoZjVxvFISadklOxDdiulMvvfQyjwPeHYRyQRvjUKyQEyX5j5dwUgwOxjedgu58vZ0/bOwIoUYRSgLvGrnOt0EkSmd51QIq7YDMVG7sdVo2blyODxz6PV0M/986+2ZHz4splUg9F5tUwmAAhOOLhAA+VLrvcCxA8fxkLH8nCC1tBHVYos1q4G1K5cLRC37qiWDNbpBkpQe0dCKw9rZkH9/DZC8dnz9l0sV1CGcWqknFV7X4Zx7nJrFqKEUGJUN2Ik7JlYnO1PXKZr7dtWOQpdiMntQh2okWuKJcT0gF4c9EyXGt6JD0AO115RRMyKowqpwPejdfbhDAuupsHPKhe03AxW7QUvNZc/UZ5GU7wTWQmZzqAZ9i1tzkdqiFqcU1K9edJaOcdDhZWhbQbPUl3/IXA54/BY237doPyJO9VkJWtrPJ31lNdWZcuuwuuzbnapOkiX2fWIJi862WrTGRprmYoRLg/9f/0xebRkbhdZitfa2IPXQ2N2Phdr2xj6mfxH18WnPI56sT1rk5b0oKaIXHEzBzuMss/EyZMjprtB63nbeLqFJg7VC/4W5e+1mtoR8feRCEynrpUZJTtNbZG19wJu6imxFPjAJMNygen2EyuWW0NVkNyd83M72I6UuM87s5zOEwWjGPy6qX6LrAnRUUnK0XPXyi7ZQdn2CMe6kw9LoNEfZUBYqO3+4mQV2PC7x8F1/e/6JbdjVVme5Yy+gb+MylXeAyGVJy0fKGQSyMHvB/T3h/2qgyWCswQ4nLxoEob5oxowTD5NH4yskoRWKXAv/CD7nLUHS2w80rdRwNQG7bvExrQdn7m/jXAHq0c+PbpFMs8c3YcxZ/BYZFebIDcmsppWB//Mi5hMClLWcg5NI2VzoDpx9ShG4UDDVhjIg60jPJAMOh6SnRrF1LKFuvEX9nReLrr5C3rJhjJ/O4uGJoGw/GhIMbgOrXLg6vfkRFgG5bsKyDWYTDioG7uDSZqZpcjqE8Xwb7sXekTAlG/Zvau8xKp5BKipeZflUkiwg/6ASh7/RHvPMT03rA1f/8H43m+WI1m/YoZNWYMrLWUjDUdtqaHfbXnLsixzO+LzzNHDVEBA56wIZwt3wEZ9TUOI3tt+ifOzNE2K+xqB4lQsjbNqqdvqZl1G5rxMNcqVMY/TIEB41HOeNClj9fFW5t6eXnxWw9FPoNyt/W8cE/C+cy4u/Q6c4KfR/eF51oENrLlQNI2AQae+ZeYeRb21G514YA4GVcnne0HsK9PY2XE6xa9AQ13Cx80WXHNLbfovEsrxamVsLaQPbW+zQoSYtR7250OZ8m9EuMTRtSjpKj2LWL60t7Pb1lj/+DduFNtvxp/Rx8N2yVLdUtbjWFj0Y1kOB5dKzKMgRBdChgjVhhmPijA2cbiNTLQKTNnzZMzjhU5JffQtHay87A+ny0k7QoPZ5ChEJh87pxdBhYBy/kHw9UuAavj4iD0Qls8/OhllEbC/E7jwzTxQOGeSvknK1UVhpArqt4wDul6pQyMx6llicGTdJyC8Op5DBPCC02XBXh6PV3Jag4izwsZNBr89ShgR7EffXdUeerAdtqzDjhbD/XEX/3Qh3SykNcyIQwaTOkcYH7Bd7his9ASF4Hq+ifLnlF3Fj97XtwGgSfxDnSAM8j+zslu9XndY7rATK7Rz1dxMXMCKYsNQy58IPa06yKAhUcLrx1PWpWWbJoiEAibPPnLOB/R15rmU18kiN2PfZzxqwpsAFVxHv0Cu76XEAqPGnS1nQAiQXi438jleGlmnkuq2XqC5ZyCbYBGybPVviJHa7iW44/OtRv9AErwdvmZvWHSQ8rM6ZoUgq5QPUO7/RW3YLZIRKTXyuxXAopULA1cSZVB15bCzN+qgw6Y9F2tzGspXRQS5amtVChP5t8PuWMYAFfRvzS72WsNfMiF7rZD0TXcr/LTs7+xksevU4+OHvG8gUlRGiH6pwPLsnGTa5+aJqLgvKTxtjLwNL6svHgIWqphsLHrhIfxA1naJUr9oQ0QzgU8mSjEav/YQt+ibxe52iLj/lvuivIEL2P/C1iM8ZxygmpczATxDZLk1d9+KrxuJhlgbwS0SyhSE/jF4UDxxsZ/cTXPM0nSo6xRMVsjRyXfq3wlfn0uyVIwcTbzfb2eft5A11ENK3/c3yofOYBTOZsprL2WNnkdoUfI+7dqTTBJT7d3kAGNlhQqmmeZpAJCMUvL+ammvZmcSMfSwhI91GUMbDIGHiSfsylmK9z5de+bCSytc30+xF+zLyZxnonBYCLPfvnT5Bdqq3VI5FrCyx0D7061dq8iCPW+I2//MRmy8PU0WPEXNvXqhRL6OhN+gkEU9sWIsoc/IqHIc2Qb91G740Zv4i0Q8U8MEal6joxDCKbvzJpR1cWKTRUBLiwOpWeeV4XaZSfV2nFE9m4wSBanHQSN79WCSiyaHwy6kzJp0XXNXCoKyCGfqTPXreEUbVcr9R1zTl/ej6jPM9xhHicFZp8XCLeLaEZTCxADdEOYjK/miAx7G5uZh3N65GjJHSIVlypfOE7nnUpnx7P5A7Zmb4d7AzutqzkNHG/UQavBWLKdddisCXf83wzQwH13ELYjmeKl9lC6nb2gNHXXeyvAAahrDAgwe3PuWcN6lACjhDAqFdAIK0NGhsv6pQ8JuMzvKjlWqitkyDzdj9/2Id7ZZSGr9+d+uDac1vzjPef1kxDJo/5tlBOEnh2Tmi3c0VbkTuu97TnOZlh1ipk3fUoXFsl7a3yP5MEuQYo3/mV/i7eg3e6MUkP+n2jklUQZEH8bu6GLBb7jNbskXCttv7BXomd8+sSQzQddOVs1qB35Ou3i+XdhPNpUMKIjfdwvsmzIdaKR84CK+Q1+ZFBsyHjYpVhfEx6YkdG4l7tDfXwbYBkPfDtH5OgWuV8fBLPAMJwO2mInlnkUj/DPCLTRSuSONdfI9EoFVO1KUjLjKYpJTN6gsdjZbAP/cDsVhK1FG4aHgJwP/YkSzTzTUShEZKSGNj0I3SfdHxqxTHy1br5ycJk17lGlHf4v6pRRbKgjHsz7c85eGdyEXZe20AuRXFnCle3Z9g7B1nGFFx1/vrWZ1IUPxoRmT+OFJo3bpcVVqTmHogclS7yPCpvKxdc3hJ7rhtfa2XXx8PwW5TUCxHREGBJVxTMV9BdajI2ZyWXmQumCeQ2s9Qj5PiEwHdB7ywg6FEy+6fnU6Yn0kLDoXkMCeiQjr4b01GOsOfFCSPNQbA0v5d5GyU9/A2vcm3uWOnwCs/zoZA9t12c9Ja5OuhJqWqlrMB1oWykJbCYy6KmiHYJYGKpjwygMGwkaEmo9VjxA+iJ5rJt8ALaz0Bip+uquI5iqZ+eNRlHqxfDXPhLAG7bdzxpJiiXQp6bX0DXcWbJkH5uZsHxrWvpJAlsGssmh1SyrBBxGPBr+7pVfQkk64Di61fQqvL0TrqH2axBaYO86TMEKstVy2fIZx2PUthpMSJmHcvR0Xp0HsP5eh4Vb9xCCBJcGw7YyeUR7/tjm4mKR/A9NgfS5fx4GDwjNlBN191n8EaXLsIhWYju4x4H62s1g+0fjNuck+L8dD6aIV6wITmNjMQTZav3cG2fQgqMQx5GgnErINu0vvO0pXpGRtjI0IDEctudWW5a34EHxvSv+x9tsIsbWKhZc7zZjh8lvgmV14wIWRUJ0P0BDY3O3pS1p6hKnH8I2Pu8tuHa9D5zVOB/IL4WnptDXskYrQn4w05f+J/EIpjIEcH/yWf3/+wP60F6qKO4RwsYPtIjZ6q/ocnzmGQIW7BvBKy83MrGU1RjTjUSAP/pnuONNPcFRWIQpD8rKK2XyFc0/nBFUcCIQiHzl6tRY+AKZ4pMFwT02jlSPx4LLFXXjBr+QvEkohPfFUhVaNwhxuHJyMHy+PgahJxW81mlcTTgNVSB86F5x1CQYdI7PIyPB7jejfbBaGHafVT0NbXebyXUkkhBJnZdJ9d4A2RBOByc+yQ0mnimh4EfGOmRQgpHMTNQU3uF++Z2a6XO4xYgDKYJH6dJpNrQCYyYigfttviVn2pzE/fjajEB+GXeNrQota1ls0DDHEEet6JA50hH2hIMGkBnK9yFAQhrWO3SC3tvuc/VscSW77g8hoqYyU/FewMEANI7iD+4EvshG0/TGewHyKQpaWxC7sTz1ZqtThpPklPy4q7TNWgvdI6hI8ueMLHDi+dxJ0RA5Dp4LSm6ouIr6F6SBOYgEaKWual8WAgRQHNmyc6t084A2EALQMW8g5VGVn2eDiEdXXW+7IXvyfcLrHpJ6A01iBENBLd9KY6/BYf8ZP5qzvCNJF8pYugRFfCOVEnHto+dACGtPBoYAX31fNmAUqQu2o62aCMi3SQhJ0H3y9vJGh9oXa8x/TWTwoRYAPB8730PLpLOv/pe2V0YVToMk2UdMuRdkE3BEVD+AzhSUNEm/1jPbF5JdMz7LSK//jGTJKsCQ/2AsHqmm4OCrQ5PkpCoawOkHHtkz0YSJpnsbN9bsTzRho2HjnaKtp5pI9QQN5RfdwycNnPqXuTjxjMVU9m5jesliUkRKwkwxULAYypeJzHGn+V1tEjGyHLbw3UuQ5lNfzq3tcA6zUsAiiSHnuelZXQpP48M3KNEWrbjJKyVPwloFHxkqsLiPGulosIUGcx+ugFQYxiSWrYPKf3POqux+57dt9DiOq2uXJiwbLuJvtzbIIz6Qs6tI4bJPi8Zf+pqNCzk4iUxYbA4emj3OEoWmTEm4+n/qXG/c6gcnH3TGVX4TvLAdFjqqLkw3qMX2LyCENQFXYCzX2PEPYt5eUcVEz6r9uIpJfoFv7u63l8fLNVS8d0fdqok1n2AVWjxqpaOO7xsLIQXOJ/I4FFHFx1UTEos4syRB5NUijq3bYv6DHqq1R0Yp7HeNurwk/dOFk6Sp/ex5YxsXkkqyHWB/hUHFgkxzNwGNhe5V061bnecVmJ634I4CrOAqNlcz34oTdJRCaeYv+ySAs7nY4CSQ5A8JXH3ssSQ2GCfrHpk5zUdIvGhNvcU9fqFFaGGzHZLWPFfovBc7tu83RpQKYFgC+PBLbWqivjCrpyagIYd9dZFLCpdb5KZ6f6/F0OoR2cxTqJQ76OscB/5IQGJ8nJhlj5pdnpnJB0sdKthbv/i2mdC0bXc3/OSKqW+K1D8p2mdW8v+29x34Zt8BQTgEov5AQk9dWIEHlhuQ4Bw7hYIobPDP4IIU3utcFAeHnORWaYYpDYMS/OTuCLDKEnocFIzHJOm86DP/hAcUnpedOg+xdILj6ilbqkb+DALgmufEwn3JedMWt1cuziIjVlcutKEOfhF0W6F/dlY4XTVmldSS+ts5YC4WiDngQveFsRoPdlr2uVr2BdElGePgU79PEcOrC0jufSYigiYSQsXnUsb4+VW3pQ6Io146tmM69sEK+qxtcs+wQ2QbunNRJOr0Q0jn2GBEi4gjVvQoZjCSJYKrv0KuokCblQZRbxI2ivnPszyc41M+r+OLNFq5b/AhYTKnvHP400VvtxnnpzoKDBGv4gts3xDdsQQhpi3Z872+BWFaK/PXDa58f2K6pYDFr1JQFxY1y4+LgY30tWds3UY0sQslFqSFEDc0RcKmu6STfYdb7IjgrIRBhjPqgonekggO5Dj8YvyI52k9D3eScaJdF2yA+O9rvZJlZcADRg40wFXXxymPaJgzFDSI/rRon+vZjhHUQsQAikyVnRIAca4j5aAeftiLmRgyyouL+gs36YkPTNIyPxstqzZ7KH5qRoFsuwVybTrg2yQdx2xuMAtDgLed1HEfZoMJ6BCd688lGyuctd6MstBbxlyk+30ycDiCZWMTw6W5rDIpdx+0aekt4HYbMwR1SVn3yPtZ7oml2t+MFqZacNQ+KZj34swxNua0Q7PG9rX63VCu2+473W0zjHpVYDBmqb5gs8WOc7jrX1OvmQ8G4EWCWr2tStN70Ef1SKcw+9aSePGpcfx2P/n1MHq5YT/y/lFeeQawRvxWJSpx0ruxrwu6U+ts8sH0Ep/mN+td59qliBquoQlmIMnILNCFRbrhkjcgOQFsStftcCuZvs81Os+H7rdZ2dgY2FoXxVYhD3rbWIo3rAX831DzPPOKlZDVs1uqPpDuFw4gFuBJpQJtl9+9YPRI0SHiUP/J5b8Qg1fpcRcs+YKFYpRq3ceCN8jZcCOLsp7FmMD+6Gv8h0+ipnF3odhU3YpIIIaTfS4Wnl6G8BbaCbJbgJQtWXjzolMq1AmZ0hY5lqSnuz1YdwTmUKzRneM6W5hEXJzuH+3xvshQn2XcvT44gBjZImWoRGGZso609tyqhqmtJXLVf1oIMjJVK5DUzewDxe3fowHBX1wepf41avzUmcjUEIWBjKfkhRQjGse2YU19EYZHMg8Mo/h5yfJz5iO5zSOtUGh7952uBmsSoQhHPGZOT3ak0a18ydL0XlTs4yfL+R+YHHkfJrfL4VG06fC7PQxWcJcpNN+M01Txx+lTyyMBGGxr+rLyM/NP+rrzC47FKz+0cMySk5ZUPYCNoFhGOquxR0mIeXON+asWIQqcjycMClSJfccYYHb3AOw2Uv/3aXGdIPjBM4+XWom20trNwfXVlTYwKwQbu3TzVTIhDqySzxyIxZEYtEeKeDDLnQCIfCaUQ6enA7Fjl59CsNSmmhJGyObeXCkhtjk+A55483Vfm5hKOyyx6nJgAEv9gRotW11aYDX6QUWQIUQelUV05M5JpuuSw95v30v/NRI5lnE4e2Y127N5VeK7Kjy7T6IUTmRKkvHO3NqtgcPTRRO04XW+e9itnjcV7LpuRvM5RE8m48VeoSH742ZoDvIBQTvIqrhjH5kZGfxwwjOeID39XNP3eH9ee9XdRwo/1ZEKVOuR4Siw/v53ImPYJs+mld+ej5vTryzUP7tJBMgHl5kjnQQEho1WZ+AsfIqkWWHZpdpGPML17ju8rELtSlPfRPs14CZvy27Z+nD8oOCtS8ehw4zTGq+epBRPSyrfAwm29pNTM/+SBWv2/QnhM8WGVSNJpEuJO2mymsT4/WPbdXh8DscQGi/lW/m5jn2MwHIp93eHed8Ouve+q7o7P2qG/Rpk70gKFi6jyGjAsBbCTsRhj1Hrj6g/ttKiuxlPfF3oVGnm3n2qKjEoceYiMSN6hLrjNg3mrXN8OiH2WHByXqd5bvTVmKIZWs7lTeZd9/mt/Yka2m5ED9XlaVqF5q3uAwZnd/tokuGcmc3ABop5ylqHF+z56MNkT/gIGn9zB9ZEKIRI5M/OM/J05/4zyIscDSzOSNaStawatrqKp+EG/QfrfwWenYDZ2ZjP8mdPnFFicmDEL9LuwnB32WIpuKx565d5Fakg0rwuRol0ovYojb/M+ZCgIvz5q4TdG5sXlCu260OB1FBkoPL3StUzpPzPnq2aOl0XKhB+MvcYMhCL5pkpaORX97G4Ht5rhpGtBAu4WHBNpOK7oNqk56A/TdBKyhFNmiio/udRXiW30qxGM8RhNv7pwZrZx9nqAA0HiGxAweEkI4rzIpYLFJb8+WEJnLo4jmjMfFS+UNHbPFsaDuPtL+Zi1mP7Sa1EkwMOLOGidsZwFBH2gZK3Q+DIfC2CmZFfuszAu9vOUq/RZLTPBSMI0a+urZn0s8tivgRcZOg2hJXZ9EiSEK6ohuIOVwE6WgIj30nksBok3Wgw3wtgBImrZaskScf35K36AKhiq1Mkopu8B9GR6TBd2HSOtPQY62Yui4M40/feWsaUU9Gl/JkdrtMI370BTunO+tLosh42ElRo+fpufNYEUPt80Gyx3CPUB2sAFstmR0c8pjE/1X3Zh8oldDXfmg84OrJpM/ktd/yTJ+S2PKCqiewJS4YUOKaxh9wBrUvPkmqJzW7Qv+TTM7OHk9RBTO/oGuQ5r/E6RspQGFCJQIvN0IhSssysnXvhvAl6b3zN7/IZuYBOUP34ffj8kluv2j7BG3B6AUWCAtF8FGaQsH5YRt4vIVcUaS0bCsFAdKmf6ZIzGdmR3/XvuyFljn2FbDkj24SSn8kYMVXwlPt6FtCbATWzzONtJA068wXA+gsKCQ2B8AEF8To8gzTb/Ci8RGBTmI0Lmqz53qECkvjDeP+RTEfjWAFRrQt4PaECUTLiDyjJYw4ZwRhk0ajJrBKO6SnmKNfwxOXT/VMpS5+jlZGQ5kF3fwW9NfOXfaMiwz5sWqQIMAOHb9H/ApqMsItqcgdcxw7AAg2EwuzxhI1f8p88cf4lI/xrjtchQ43uSE7t+h+Lb1LPlN1pPpXfj0WJWIwVglGjV3hgFwmaFJHoBmOpq3WEA2KehZggo3l3uWfpvkmBTiJXVloN9kByIgiJ75BTCuiceVQjzp9jLHyGcYfElEXiVdc9+ldHhli0dA7yL/B4uRX2PT7pukeZGvRgfgchwWHlwtSKAqkOpv2RLUIjrupbU4fK3NHn+UT1vsep4Jp7ESxmPdLVA1hxH2FGc4WL5mZXmn66eqEM2SYm4AR3qgHXnvDceg8N60sYvpW2SgwsEr35ilx/6gOw0p9UscleCuhDM/XufTUVcnLzBfYfa+2uk3y3GpXmRI2VMvCsb3nRewnfEefa7Fub3sgJKpqFzIdyivYyLVipQHK0OEYM7EQbhGeQ16GEpXQffTSaSrJaBHJHIePOBJimdh2bX8IWz7YZVE936SsPoU89lviffkNAwWv8yX6sJ1axTlJFPt2mODKwF8OLMhdBz/m5hnt88WioiKwKa6whXoDAbD/mdLli3zpRJxycXrcvbTLfztHTtat9HbCnkdmR9fcK4VsLtY32dPs57P8SPyxUXzCIC/nLL0LtDVl3u2f0cC5TQiqE46cyxPGu27UCJK1JfIzM5BRGuqrdy9rD2tGOt8je4VZEiScr4XCs2lBCS282cO2jFVn/KLYGri88F9wb8YaQZ4qw28Q0DgPi/j87h+L+b545lCKt7BoALgkh8EM0XI1Va/hr/EPs2l+9ykY+Y+ZNlbey2pA6DvZQAf6Wv9IfZZXwcNjo64xtt8a5EbxgwJVrqQJTBI9jXmCpfGG6YvqkgveytzG4rnkknDoINbSm/SotGsh+4t0Fj+u17DluJi9KkKBDOLHKm2wWI2VplrwNnumZ/f/BpPlzqD1qvnvYKB/pzxOFRnxFKNlorcZ0dU2SEOwVS1aAv5/+aB3i56LTCUTb4MLdEwRbkhysN7+/2EFMVhrPJXRuTKT8bDePzGhM6qzF8HWwP4t3fhy18qHfq3BTHZRr8UxeF5Et11IYoziIS+CWcw5FVXhhRIHQeZyai6sdR7+E2mMtvwlt0byfyZJRd1NDsaka8fD3fgk8jBBtz9J2lYP+x5qHb1T3NnIpvbVtnKSF0/cpMpF7xUDhFgdja9zxf2eANuQFK0Q35a4ssaTF3jhfZsXdNLdEFco+V/I0kkhnj8Nqp2je45Ysgh9c9wlzUT4dxZjByFu7zObcqB6iIEb0kvTgdarFRJVAlWB+9aQDevKUy2/EMxfscur/7ROxEANC34HGEead8ed3+Fl/kKg4FKYvblCKQtnC/DZHY8XfLehY6A2h+6UOUincTw6TpSHF56GjVh1/Qr8hnqEPVbgGbx5cSmxSKDCjSXVE6hf47xXUSkG3fWs68PtEcHLrng9BPUO8eNoTvk7gPENG5CD9ohyFz6e85LXBge2hhGWDowLbGFoPZOSnYMAGo1FWjNq8110srXDgM2gHzD8HComCKPw0cDUC8j4Ep8OB94GnBmNwTuvXVtbqXhvJLRZCXo8yvum52DN40YMCeoPQMtBBqSEUibUYLRwSSctPKXqY+51ebfDTE1xD3+Zp8hSp1PtXW4FB+T1ANXxfofSh4i0hULqjR1dhooPzBcVKtQWfOLHYdJKG/CTMcOMUDv7BXrePSz7tB7fK5sXCAAja+a3DXr7Pd3pZLNX+Ue+Cvdp4OGyvFUDcYSo/RKRdMl5j6e5Es1ElUNjAOemp0iD5i17EADTbh5wW6oLBXUatrL2ZFFgFUH43EJ4oFqd4RKQYQx8A8p1c5ed4Uu/FTyAE1bvkvT/a4DBemh/hF1iUZKXSxY8sBeVkzJc2al4/+FyYpNfnx8iwh1B+lY697Xbw5raUl2FseuxmQQqbmV9yPETyU8D9wEqyUv1TgZPu53wWH3onI8fd13bwfMxX3Nqj4yCkiQw5tHb89+Ma+4radH4SboEyRb62noWRTKChniFDF7koC6S4TrzgJr+WiCHSiwcYol2dwXMAe+Fzn8ECz+2sq7FeSDSD2MgZUBMGnW+iXS3TBC+OT2WTHRCu7ci/FtqNr4tVc3T9AAxRIgQdnS2ZkZSdaFaX0kD/r8Ok2oQ4LdDE3bma8TpLC1WDkFaXP7CW8L/VOBk6fyqo8C5QklWaflxUaAAfPMc/Q1C3RW0I+kSbsRK+nZSPt4CrXRioDZwA9CHDyTzJUtM9P669tOkAqZKSkV+ApktqWw1HMToajfOEXUasuKNcw10nBJk++KmDdxgVAo/DibQZY4/BAtxzVmTiWAXbmlurrCF8xrM+p0AqSEl20PCij8qzghj3Pvb+qTmxs4+mU8somcIsRPRGY9CvU6q6Xf6nF+XFIVqaG2WgBirWuXeRQoKsvsDFvTSnLFL3neBmKzI+IcGcfAgbMBDFrlAErUa4kD4ZvEqS8QZFDeMqmoCvPjQWJfWFBEA6Wlij3PG0KtgnZ9mttVnAFH3His0Xpj+yHobxdiKoK56jnLqNb3Q0FSedhHYITQFL9Wq4DINbmcwvFL3ervwSZxc1M1+zy7gOsdaqMVovS87NMUhc9eSzf0Fp3EFjSiSyXcLG5BIPx/+OgjoXjeJU5kxrtU50B3FUo6Ts2nXC8VUGAojdYRVmw7b1QRgJGJxM5zhlxjgOVwUNtZGPJQqjX11NbT6rXLPuPjc9rKrKxKKs/tZoRWqIN3rh3gNrNaQGCfh7IDAsYsX7TewZMHSz5t88om38hTDolG9lCIAo+4HdwmhORHM/4hiQLA27xu7Zo6xgX+D8N1d5KGuKRIviVJZce2ygY8vgvjvY5zNo9El0xM0vMwiLLfTgSgwRYx14ddDXvDebeIuoXEfWUUTRT24eHQd/+rhZ+1p5dRRI8S62/2t077ciIkO1DG/9cy4+hCv8FkmMB2lYcByTtNr7QfABTvtDsSrcrqPP2dRWg2wphn/4gb3AXYxDxgY6MhAIl3x+asVZVxnS5zPsb9hKW+g104ZRXTAuzIIy6AJI6CJbEqZlhWS7YTcJdXuspYjYdZGsmml1RXVGn2RjkWHBbwbWzpl28dVVDkBwA+Xt05kWNaXm1xHg+TWgf950+wrLgGintLYNbQ8rO+zajskzUI++izvAd8ay4NXnJCv/yyUG3PZZ6vTZtv9Pxi7JUnax0ce+ZlHR/YxWGuRNT82mntdxuUTzflBesg6jJchKLw/Zyh/Z8/hiqxwAEDtyawpRvxjSiQgvbxTp4J2rqCR/iOJ9mBwuhMq5RdOObrIMZ+UljFxyfFehe3z6s17W1l1jLE/fQzkWEVgHJ9NEnaO163fjpPDfDL24w4U0BVsf34lzdtzB/rGeXmMUCnhuFDsnK8AjQQrh6aBwjKJEq2gilPd3EqE4gIPdB0JX8LClvUjlZrltCHgXAVQ6a8nsQ/xYlcQcgZXQ5RRVY2K78fP8RYl63IssjQ4l9hvpCAlna2Bys2//uHh3+xUal1FoyZI2V8W6zT0EG3U4sW9Slf01xoS5mJz+lJaGfl/diJnlaCqKaDUC/d0Lw+gigVl2cZc7foT0RfU5gMp7S/qf67m/sZ901g+4uTRVrHefgSLcYrTTsWANJDnTSNNHp8T/piN0K4x0/pnh09U346SPj7/m0JWeup4W7by2dPRRjwJ3Xf0B+mtqxo7Ogx6KEGKOH3PpnGZZu+HZs5HPPFltraxnw0nbiNpCBRec/NxzCCVe5th/7IiYkzTQS7tDjLNm8dU0ecv3d2gqaLB9hiNWlbpkYERhIFq8Dj2F/78VVa4MbEGCsPKZwVpVkuqh9lfVz7wse7BAYRzu6Yy/h8Y2el26MmybvrXKnhkWrb/enUy1Uo+84OK7sHq0QXtkr47iUr8jplIJDuNubzW+HUISXOkFel84ACoyds+VR5aM2JKNP1kIdNBOyH4jDnqDkTwa7oAOgFN1/HEuNNbjqCTmV3FPYJipRFokXs3i9OFs75X3AP6aVSWbaK5ZuRoQoUrv7NOJAw0dqSy+mWFhxAK5gIapzec9SwikMFSPk4gLRYc3mARalEhdZh+VudhzpvSmPGyXwT4DpgPxxUmWetsiUpZ0B0d9KJfoJ9qliq4lhfFHzu+/wbMjzqovy7y6Gdg6EwUrKL3ZerOhNwObZYDwIpDmwHz6JQhINJVcXFnfPXK1nxu2inaF8OfxtKqouPhbsOIhsDCED4/YxUfGv52fehieO8GlPtSKcOy050W4aZ0dJOXLVJ8C8Wu/joOfy8oUbuQbYrrFTct16Rm2w9wA7ycX17RxMGx+NrXAIfsk2mS8KF7APQgmoSZ0FCezaNZV04ev8LynJ42Qbwga28yc36M3Y69KIGL5iD5+vpOPTSrP274HfVF54ZEVwKmU9WIMxJNrbvA8B+CKd5FVl9rA9jfGhTlC+qYbMA+XZlkN//QWE7LZSZ8LjSfQ/jjCBG2HhRY53FYwPGEWuxzdEJE6rUZd2sG3j5awrLTsQFmXYMh7ANlurYt4qKEcMYfxF9WQz/6NiFMHTKee/7VCAUWfsSFnLNUV3IeyPx0tw+2Kyxj99XhHCnj9kUlq9VETjuR8Ypt4ks3Nu1gvuMENSrkzwXLN3mbK/mW1sN8dfQ8Z0gj76uYYcQV/hdHur5XDExbyY8u8HsQ1EoleT0IbIZ+EbOnyQlG9evNeOPdY54ICzOy3uNYM1UaMUDbyHLUxKzdeNjVpXwsL1uYU7LdlzBNLetSL6ChhfcdLv6kQ+jH3yAV4BNielJFO1TXJ5UqC5ngYgr2Us0OL/iHSS6bziybmpTIekzUVQBSZ95jJWlNpQ1HzfaC9Ufwk6BkIR24n16eCzAGTMFf8QVTkx7zWFQqjEoyXG/ZFnfct+twoNsqS2t+x5g3IKzvpamqMsCrRv6IS5sh553ZEuo14sD7LhqU/7714Z0p1uB44ywimA5gpMD/9ToK2OufTX0tY8KlqRLQzfzG15Sg6a3h/6NJ9+iClx8pa+FDYAiMVX8OIc8f2KOWufWtZrDs3nMbeAi/A9HvVtFzXtAvLajThvkIQauo+J+G01D9vwzdrUOPK/jiDp6hyp12AnhDkz/LxylbBWewXNMOn7kqNkoMO06JVg0t4w8Q5SeVqOBCHZR6aViVHojbTvfB5PRUS0/Ee07+duId39P7r68Rha7jOf9sQtjTvbw5NsAj//Rrs5cSqEsWd8ghWHX6SRgniSeX/N1bzuxF3oBnpudE/yH91Lie1JGNoGIk0zTxdeMcFfD9NBirvCYeB93dDh/TjynUAn9CYldRXL8vjX/MbvODQWvmOZ0cBB2ivgLlh20XAssZl5quny5UyNysE/cFna0BCNvb2r3sPKt1sdcqhmmmaBdd+nr8bbFPPz9iQ/Fywe8vnKYxKAZpK4MJe7WoIOyuMdwvaiSeuw3tal0cwUNwJ7Ul/QzEsLXq+M/qbDL6YLlPWG+VS2Q2xLz4ZAcxrkBgb8h0sckcezrK5eeHmZnM7wOiUhWObHwi0TXPg/QyJlyVF2X/S1lHcNk/D6RlIWOBVmleP9wWolhuxIsv9rV86C5dif3QZ5AwCwuVEOHyoj9sv1qlPaL+sXipvO06BWP0RaOia9t5B+2ejtKpy5RTh09Sltc+ap4+C1uQ0giYaSU3md+9TDHjYIBvxgTtbE8Y8PtbQntwKyWhADXF9g5/BnBc4nQ7VoydxM97LIGukkwYi+Au7smwq+64V6/qCha+HtsrvChIZkn8PzdhTH8cl/LFQZsu6bAW58BKVBrrjFecvoRCInMYCQ9Wd6IOBxVG3IvAwF+ANvLe5nrIShnIG+5uvStCjOna1TJTZrnTuKLk264XQ6yknThB1Futa5bl5v2BKyRK5vZlVxQdiVg4JNI3hlGh87itcEWm1KuvvzHgtxwwlgCRsrThCeDwMozE0+Xbhhj2ZBaxtWm8IzDy/5A4DsdZN1F2KY9W+O5PNxsN6F2PgoMFddl9YSlscswLVZTrRdE4tZpG2QY7Z1zxsr6QYnCUiCNslOHheocZ12zvNoJ9NrYRACvzZrBG9FzBpC6vz5UkSQ5EjLbyRr1EIcTjvsQ54tZHdGo4DFXbATlFSpAwD63D3u7reeC6/V7cbIEKi/BfKPXPc23Q3R2Xllspre6svHmCJiHBHNnWEUO84c/WuHwlaH46gWSiiIJNVn3Kw/H6NLEMcZTa/zSjNdZoeVAqPtzs6Hs2M8WcmU8oPd0YL9sS+gphpcorCvQQeGqMiQGKfn9uYu/3MugrCwdjxBj32ZQK+ZLS8hN4Q2g4ysUmz+CvA9AI/xf1baDFa/XH0IbaAbSjqnkbLwuMAKJheTSQf1kEiq9Sly58SBHnW1MX7aKbqcq6eTAnMS48CmEPIM/bguLUDTAM/KNQwupT+dthDCeCxnQEiFdw5yw0P9Efvp9jzLCCzXYI/nUF6XsNdAQw1rPegcEc6x2zxwU/VopnFTgEWhucNjb4B6BQRNSDpwAha/nAD2KQV4wr3Fa5tnq+S2ykB2OVKsxzac2nxJwpU+0jr6mXKEa4ICKI/K8K58ljNL4KdOZEZPzYO79APcxva9dyA1fcSVP00OKVmTrOKwRt8RkZXKgGArvExOmXxNHqtu/9m7c45da53L4ezBnkeEZOtW0WcBciabbIn4VwQ2njOrilW7CCgzSK7XAJaXACBAMA2yFW/RUjiaKQl9Tqv+gPd3r8fO28rft2+25tYlS+FMl6ZNgzASIREnVMMdGJowwGtuAZbyLxnQueLt5itvqNTHvc4d3/MAxyJA1DO8QQb6RxL4P65a/4NSOOQFN1AJtjY2v93XX07UNpVmVqW5GLiwBLUNFwOwn0KNPuz3cq9AgGl91ER0/6Z6NVQoTP6JvdlUXJXRdvcBrvD33lYXqAd/9sCasQD/KU9A4iDt4cJhHbLQoNhuqFzCcySnDUy6dR4571wh9rr0tlaX+briSKYCnlkC5rIqRlhtCAyihGM034OGFZvdQqk2EGxEnxIR3Ofh56VLf4dsZsv+GerhjshSuGpGn5cLaP3/gwnAB6fJkIxfIrB2QLtqh2KKTgrN2XFQHj3IsfLw/Wb/PBNwXJ3QIJMdyLpY0gt0kzeG0RrjXseHwRW6dBdCEUVyi4GRTSCbFZ6AjYsBq7ujpoIZ/Buq2YKQitWMX61CGKgDxFCTreRe8xX7IXnq3UQOCasSH7WNIunBuH+d0+EE4zi/2raohA4kyEkuqlEw2IcINLIQ0RM4jumk6fSuX7LeqMFVx1TV+iBV6qK90CNlpfqYu13+7yEHx27qFMT5mPUtvPBMf9QR5x2z37JkOY20w15EDb9TmccPt3cehe1WBRD0KIYw/Yn1+gEPnK8P9OuFjm1P9xZeLS1hBEFnrHT3eZw7adf3Hrv4xxc3LYX8TOlctecDAKEVgkeXQOeKXOXBcVNalX7Xqlb3TBagT9D6+3+CCKHuZE8sULxM5nMz4W8GdINVzTRXsEKE0EnGIw9Naiov8GQ+tiTn8dje5mqUsSbr+J2COTPzccD4kVRsNxp8EUIQHj7IfcmvkyQfDb75I7EHfxwiVJ7E0FO3Cg1CWUnqeAhr/4PzF7kr8UQeTvQvPWz9sQehAdWGB9rJfDQEr3biQ/dLvuBsORhdFCDbm9VLiVC9ruj32gHUxpLNjDBF1i/dX8gPMRwTUFx7qWd3lR6N8fKkGizvT9n1NIB0bUECB+lpZN4QVPpIUe09I+U0xCSDqDxEuVYue81tzQz8s4t68Rs8SE95zGnufRIY/mFFuacv5hE4B8KyOjRXhBA3eAjZqmNU87JAO98OZS1ntBeDc+wVetAtnVqK+xDpgX6zCnHzGAdpf9fq+3coKU+Uq8nidM+S7vqHYwPq9EV1aEsQ7ta1EI5sWV07K0tWC2QKQrcPNsSUfDzZtI5BEmMkCqu8h0nly+AI2sKV/AmbwMuuzHHcRH40wFiFVqc4R3fzcTWhEZB3vTv3PF0pOgIupfmIUx2CAiLg3McYwRnHoxZqvzkm0qYc4D5xmeva5K1YVqCjru4HyVGilJhMZLZ3GEurohjHysGOAr3P/ha1v+tSgTBlS7Qr6ob6w6PW0moZ0VmTirxQAAF2L8G9F781ooJsUM/kBGopfEaxxdJ+OSE3yW17M5ArBuiFySnTRjtDqoGb6eePZYIK97SAEbTTtD7KtpInzTMbBnPUmPOoHmKuOje8vNqXxgC4sYP2worovj8PMI9Z0s1RgA20H8rEXjRenhtl79hlkenNjh7oqGOLckX/5wZZaUiileiRmwSxJ5X/04Oatfdbjxt/Imo5U+KzOqS3qbk+i0BIlSbR6r0Aft7ykbmWLCFK7Ot8zJPNeHNXEuIgeEoFe8dXVoOP9dkfBRwP29Q6YYEIZ1OZL64RX4I2SOG+RK0WPqm9Njgg0MTi3YOfICMxNAUI450ozimqkSB9A5dHDcCZ9ljPtkwJsoYoPVH4nAyQYz9Ei82IJDsLP7N9IEvALxk4rdRYwnD+okGlTkNMnuzqt+C1odIDU33F6LX4Q02fyEHPthVw40pO14zuGsIKNIRi/n59vWL6DUt4O6XRpZWnD4iL+ZJr7IuBPBY+pMEakgPNVkarNKcTq7cYIhQ4qmyOlacoVlDKqqa3iTpcgc5ZWg/hTfk3eRqAqw5RTgHDGzPeyumK653xwcogjERDHwWDKvoILibUIbjjN9Q5+Hl+hLeDpfjJW0eh3j6PFxzn5oIJR9ulEmkcSZzzahY5jlVX2MYIsv4tBWQgamaveBx1kut5Yqnmoz5LFviPuRAKR/1Yc59JdgXW2l5z9oUPbsGIaM6wnwWMoHYK7jqgxoTKYGEMMI9OalBJn+GoCQ1wLsu8/6nc73hU3o4nAZlVAghZkzkxXhuSDTd33xTeybXwCsJAihQzqYb+MkWiDURY3PvN5DqrOxwjpFdBIYRR4i/rb968y2zu6ZEXXRHvg+tgSMZhhTMHHeQjU85Xl05EgFmebYpCWks1AYsZvFBjwdX6cwi4OfUD0p1Ze7Rmz7xHlsOycnZSts26itLdPUZxlJ2qe6Cg35qQDJgwMPeP/kOJZzcqhYAoorkFhFthfP4WsjMy7RGQ9OWPg6wweTt0etA3ffjv0xO7rKMVG11eKR4hUJ2XGw1VnrG/JfLxyzRAg404g8Kx3lP59+HLewu4PRLGy+lzfQnbu5NclpaByHywjErYW7up6yLmt7xfZBlpuYL4PStOxno9g9jn6K3GeAX/rZ0hIAZQIA6iNPF8Jae+f+2iiwn9yC+uJgCvBN1YspQRyvPnW55U9QRXYLPHLGG6NGAxZ0hmlgyx3wU8/KrJpq0U/oCi1QYEL9RyqKIblRHZ51n9m215eTZvqvNNroRWMdbC2g9dEQ863gN21eUFwEh6IUfUyS0UfMR80Dj8T8AUJLpEfNaSgN3TmB5/XvgeVbFvtfOo9fjiJRiNNg5JlHjxqGJW6mSg/ZXcDdgSerw5UgII4E0jstgVxQacK8H0pf8T+IMDp92kqLgZXxSmbEimknhpt0rmIbeopawHIcHS4+sns4CaaoQLdDqTYqP49guv7RsAHxis+5UWVx7ri/7f9Kwqw/SLjundZQTLUwLrJnb8maGZrYgHsMmBy6LB5tzWqlLvfllwcANG2//ZThn2q489UiZ3nwHH4eOpHP1A30293LnRjk77ouwYnlkXQ2xcvLMHLrcSo6ruAArVi/B8ZyL1bUUheYQ26rNlMrq7yFAH7HV6wbFBks/q5S9oks+FG3vQcrvQEHRZBVcguhc5KJPU9krFnQoMoct2epIn1Bf0E1zAHL4MucedKXI4DHK2taJS98vP3/C0n3roxQ0qouRw56Xo8q79EV/UZTMI1gU0PgncrK+sMQAVeLH8KZdlXakLu8Oq2E/vANjceU/fBrxr36FvQJ0ty7ZO+ExXcOPKHjkmsH1KK4uk6VtqmT5L0dvcXwD5j3SLdVLZ2XbRTGlcBCsTZRzNp0yaN448EPfvVhQf6etdpUKX1vWMoDfVRJtdI+atFZ9CtJ+ztbsCc1NHhYu+fC8fkxrToaeWu34pC5Ytfs2Yb4BeAyVkksy5A2ZFVVjU+c3ZlcPHUJxkKZvgitG/OljE6oHNozal8c5mB2dpQLdkK0YTBZ9dzdFOvztOiEjj/71Vji4Zu5vr/zIyNCkJ9S3PoFheBcp+398Aedj5SABk6kUwEzjjC298ULL1y/GjjZCSTNEwAZOK10DAq8SK47l1mO2+3GxKng3GkCIkmmJfuTOYy/Ok93q58RdBScbeo3a5qK7XLN6lRUV4rMNXNNKcwltYFDW4qv9yPmYFuIx2fDhvmHYy97BUf944YJbTWsgdQRBVUR/tt61qY1Vo4Ysv+gxLQrQH/oXkV6Y6dvybtvus28/tjfA8INZUDuIiJvBzWh3qkyknvoDWLhkKtzdH6ZBf33seD9S8FOeincMYDCoqRbfC431iCBV144r6Ek0QxmLpcFCuMXdRIVkijgI34RDy3D5B3uimmGEePBP+4+c3Xs8sx0+02m2sIraN7g5w3R0HBioe9QrTzF4Xc5cEbO2cruA/Dzfeq5854B7+QUzQ7lvKX8EPYSH2p4LHkUg25oeqoecWkg7ndNH+tfScVPqIQCQB9ECkVkCN8CPMzttbosbU5F0lFFQRmyjGlLoG6A+wF4GvVUJOJlO+q7mP+QPzOAIbMKh7zJ8DmnizX3tdVN3ZjGxJoRlo5K7HJnc0Ca00iR661Yw8FG5w6Y76SEuuLNEvi9qI4mW4zqppuQfLlWOfffwnDQOgN0EmVJy7oZqOGICro2K46u+SyeYQnH+NE/ySszhPX9oZ741fKHxP4PRLm46b/pDswQ/zFBBOwJ/1RR88VmT76NlPisGt2w7kpw7khREv9gtObB/JyiJOdmje8SGaSBrfySKJKGKOp7ot70saVPw/MSytO5S19OitR0kYRE8X36Ociz9uIwZQL0ufW3W6pblcrvUYsah2we5dDEvuapDZWIzldHJLjWBp9adAluXsiA01waQAl2BMqoI4f0d+DIyiN1pMoEBA/xagoFoEFNmBYCNvuei9X2HSJvej7lhg/ZZJhVuZfnsZBxwnP3SyOtFX4dqYjoP5061Z7tWD689U6lkkS2weFhg29GRMa7pgehonknNgojntP1RUrmmlYCiY9oiivoauHBdyKuqdkaM06pWlM5PbqBG1HskUL1u7kFpXudQ2KdYUSx8D9apKyWqLaLPwcBTv+HCInCkU281jQT6hAv4Z7TjutyreDsUEaohRjlRV71H4fgjO9LMBfnF3DIbMmStFd3sujN76RrcISAfbA+2IzKqXl8/STkxt9wrmqsb5s4x3lFy6EMa63iZ2d6xo/EHPcP4bvqstJxvVCvKjgVkO5nCqUF9v7+01rnSQPITpFWPnRnnKcpbAm7UZU0Ynzg1tONJB4SHU6S2tWL4/PNmyZI+KKfFs43QKdmlI9V0qpoYIOwJVyoLdBGUg3lTVvxLOWRknjaAMC1Q+DwYE3PaIbRwN5KH/pjyclDryaLfUEyzor0UkyQiY5qybCVEhj93oqQPs0pDBN6e5FzBzbarsKAWDmaHu5VVcPoJo9YFi3HjF1+pweYJOMKYxLEzced2sj/tUm/EqeaCNRAOWEcBvMITRRhnpqBrWvQcrC5bT3Aae510srUN6i9xNzg4yPoAWQPuXI25xK6jZzEsy5Ua9nHILAI6L48ST72rWxhBGRpNjBn3mCnP/ZF46RvEUjWKTiILLt1fbrcIkDco5ox5U33aowX7NMDrXxgzguvtWKwWj2eJbYy7p/RrOJrGf92vLP9TLhAe+Z9/1QjAxlrq+0IJZsk4Wb3TVI0oBEktjSmiao4lsmEuFpxSJ74XMgbxMimv14FLto8qCb2QDdp1mToZjLXMaCSC4LcMxBKyZNl0iTrGosXT4pP/lKzY6d7Pf9+vaXMeRe0lBYRczblSK1KhhJl6YP1GzKQZMB/rHqimmOiWyt2vuVoTLtg6NBzGwnS3Cm7ZeQ1iv7vp1BY2thXxEdOEsnOaB4s5hfDF8wE8jvrSIWJ6mQGccV8hs8fIuzWoIocTbXL+nPQTL1dIZNYOgvzsA6iHph8louvqDxcSAYCHR1XS29pxk2m/8CTNJbjxcdQlf8/9c/ZXGrLrjRiQbcR2DUbmTN+kcc9rNlolKR2WnaNI4ZfPa7hH+TqMU0P4hVHwlOkNf7XVZZLmQq6OHyjL2OVTx0OAs3/L7b0nTSmHH20VsbKH2KT+Mk4kX4aRXn9fyhR9ElkGf9i5sDDn3LMkFzjN/v23w/bxZeDzXEFbptIhMYi6TOVuCvAYFNCf/XMlvGmBl+mtb8KHhQq3MjRDkP7sOmVmDOuvh65lbPn4jTStkheVYhTjdkn0zkQoyeyuZhdaLSOfwvsWcJYQWy5wj+bmdBDI3M/hBljN1+/faZLoYkidCbgsS9yxmP89vMkOHUmtzUTLUvw7SFvqwuz6IgLMN3WcvDbZ/LqFpKtlFMehpTBk7C0lpV4PIwX/aiESj6jyb7WTzGCJ0KcnqQnK2iNf/ZMSzvkeLHOm5q7Ns3X6gaJhIWXIDzAmcVlEabsKyhrXakkvvLaIzRDDm78sphT/Mbe8V4+FONpgjoVQ2NN/P98ABsrOxKS2cK59ar0MvEeeNMkV6hdON9tR0P8BmHWKaIqaNa4L5A61pn97d7PAqsfn90DJhGINBNpSP4oQgXjLBePJr7lV9ZNH1uophruabJCeR9P0P2emBbl+5D7Eyb++J6aqO7wWA+A0L0K+cvaFTrrG06Gdby4iNuqUaPbFKQ7V79TqNdmFEfMy22b/Pq+kxGVIoGHb+Iy9N/1r3MvFp1ZzTDUbNISVm2S1SALBIRQ8KcHE3eP0SnCY3OKqFuyaDAquqyd8LeNg3BJ/NV2kYN/nFgw4O/97jvJeNz1tQRKiOiGE3xWoFwVigVOucgi/6KypJakmWrzD0oUpTUIhM3bDPhl2lU8I5IbLsxYz7PjpI3mq/X2b7yJeDuM4oz9TDLtNBL2HTG/V0HYIGYtDmsYJRzM5HNEyOaNGwcAmi8gmxvk6pMZPPBSZcCUz0WsMnMT6I2MyjBx2G31KUwBHk5/+iCwFhi+7TSLC+xNXOARA6Svns56CoCQO1fqWQW8vilwJ0haLk6IE3eWMdwW49sK+HlHTHJteB52nesdj4fYNGYzqcBKC/HbCVOZrKaVHFpyTbHFj+uMyJmcQyE5hHYckFJOONckKEiQN7iwGI7OuN89KqnF89HpxxQ3UzlJKQ84XIAc4AGBCAObwh35vnZQ2E1SYDwS1REHuZ9rHlwVxf/p2QMufUOPo53twmw42fa15NBX1noAOAqCG+x95rtzJ+2X1CTXd5Or2qjOt/D5PM8rqfWtuZaXKbEsF6LoBs8Gu3gTS49Q/4Rsjy5y2TitrOWgnKIEI03IwX9x7aM4FCG/SSby84miyEdIlauKAIviwv/md7W1lvi9C2ENUsmYsMFRBpnuxL2zx+F0r0zotP0gjL0H+mZ6fbWXby3n5Mv5xEGTag4EUuQWdHk39GGju6lRIhZ3vIFLYdtKnpU4JLQZQApW8M2h0qTfkLE8O7cHHUPTkoeaF/0Uqauun5blQgQxH/Aqui3JMyGRSy39teuIj/5XznxLYaO2dGsJxRw9AWsa99siFlwO65tmq38KJ8yZ+K0sT3ubMGmxBnQ05IfTKHbImHjzFmf24w5P62UvNQByLTGm3yos0x6M6wcMP9WYW27xPcATULu4bbF5kZjIDS381w0sw7KRPR0Ckm/aHzE7cIoQnRFzQxaKqJTKffjB2unoW1R5IVPhMEzezC6vecngZjgbbyGkuVQf3VZPBZVkM32SJ2xkOKNTSfy01D6F4Qes3z7pTF2aidN9laSAo/Ra7gDewewXTXYxGGjCOwvA6bQjTXei1bdKib0E4cy2R9ydlzXjsQBzCy7jzw8ZwelZ+WgZrVZY9mQPSvjxRTeUbhi2ukxbzHwcK2kSy1PDMENh6UVPt4oWGAUke9PSDXPbIfQ3yUNEFqPj8ticJcsYRv4e1WF4syQUc+0x+WX2d8q9PS9aEDAsJ4XsIqeSaUrJ6mqIe7lJiaihxkaL8xoAYyUNG/DhI2mfliRoCU2F6m1ehUQhlctBgbL2FReAekBgfrTvqKV7H0ouNakpndPvyUWtmSXTcrNj/R7jXuyLBnOsEZAUOq7hCc8XDRPp85/AP3RwiWo58s70YFJV+lvZyjpA/GwUnMVm9W8VzOYNm0xKItUFqj1UyNFhmVNQiJtEz80jjQw3FtgyNwQrkmkL5puXWAoVosVGq/BDQtaTFgrEiQzOVm2yKdxcKTDdOIRP4A/Cmt5oE4Xs3hqt5CATvsDnue9y7+w4/Hflpg+HEj26DB8BrIxrKk731GbSkXB0Ja+8KDNWYLFMatZ5NfvJgTRp13cSCLOYvyNOBzUkQHvcKkx7ixZWSc4wuU7cwII8COX2074DCJmDzeMfwGFkbCjw1eILON/n9JB40fjZzpWMHzWX8v8ZTz/mvKWEQt7mPuBGDMMWl7mF+JNDlCraM737lPiqwf2z8cT70kNlgIqb45cU/K0+Xi1LxvEyoi8bVcmb7q6Tt6Rwk5jFFGAWqpZtaoW4YqZHRuEwyA2fKOfiBMzoVZfAGouTVJcTt8YfHwjJ4Z9VZn1dR7dJDi8Z4OFXKYSmV1Yk8PfsWZa/v+L+GgbA06YimMdP3qe8MErFQF/63WM6lUOFyyLoYcgl5+4nQGhM2BklW9Im60oBpT7kdDr5Uws4iGh1U5gBf7FlVRIRSjL40RuDZD+vGU0Mc7NTnxHm6QDWLcMGi8560AGQWrIVve6OKuPIxwSeqUBp65pHjDdeh+gGDbYgPmWyHif4kCK8CjqqnqJcpXfNWP4BEZ9VUA22etY+Dfkv49p9Yfr9mSY0dwLStTtNOyZvaZy7+NQiZ51k41qeJtqeZ9vRFHb+eq+LI07iCrrwdAGti1FhSuas/irQqnoYqd1VxFeshboK69CYgIY23f9OYs3xtrvchUOyO93I9gooeAiNAG70qA7BOaUjKJldM58qbSFz9MR8++4gpowd1eUIqPomc1zAHQ1NHVkdafqUss8BRtVNXW5miC6NKvBB8PWI0kctFkBUn5vbAgO86aOD0Y+M2wgQASdpDYr1jmhswSJ+KG0ODmxVEh3Mvu+mffqKqs4IpGJc7lShrOuivXBPP10mfqa7RYZglo4xZNLaLbPRW7E+cJhl0fAVKDMfJUb4Kmka0W8+8VToeSiBgQi6ycCjmeMI7zdGMtNYFadRsh4icfK9CTBzqJJSf9GH0OAAyLrMjeXhLHXdDVacSXVVdIiM5ollt1vf1fxBDGAskP1DM/1kdopm3iSx2nzsRAyMNienNd072d3ICzHZTSJ0e0voIY75wE1FjfHFg/9P+TGSA6uQub2+vm9PlhuvmB46LpEPH7kTGaWJ3JbHib6ASr8vuR3ImmYLRuCbBn8xSGwNkf7v34/wTuyylRNnwco116kk/4J/yInofOhACQGsmklS2vgalFZ96INPF4KKTlCc/uGuQpqDQKSyBKfUVXQUF8Pa2TZL6de5yc0L7RWcSYqSjh2RhPxFYB+T8hJGd118iWOVyoKTKbztkuJGUCBnkMdSGM2gQux1BIYJuGYBCKNF3OtBzsr7IgJk/vNqYw/+NsrxSiXv6V+t8VxRbqqBx+ckNE4gmYiKl02FPKQZsj10wsxQNVv8BrDWRQZIiXxdyjN2Rx9FyJ4Tt3u+t7YMLV318VC3gKUZFGk6VCozXjTf45of/CMnLI5d/Hkwl/ht89cZn6S2izKqaZXIGDjwzRLaWza5S7gWQ/RwRlsdz1k0daUDf3J+piMjxq+bRvIoi3x0dvZHmJqfF6keaqwG/XeHgsmT/cUQf5l+gFs08eoE9Z9NN5I9dcgQ3wzF4OR/ii0aZjloP52cAcTxnGhbUi4XzjZ/8UyWdYUm5t056NK4BjDkOyziEb+o2l3Kuhyy+x3veKBdc3zO+MenXbjVZqbjX5CahTjtl4hF0M06sGe+boQvu89gQOVlnIjDVFUeNaAtVNHKui4mx32H3TUp7h+eoRF4IoT/scRExvfLGFTnG8tR0wKBb1kwm+F9KZOaHoNYznlGIxQ9WyyyIehtLAmzopkUrOrE31EDV5LGSwHjDCGLSSDOJEJZ08adLFdhfmzNbqvfuGV/jgfsoLydyKzwhBZZippqsN37My9zdglvitKm2a+x+tlSv7UzNyh+YY1Zp+o4Z4VsFod+T6wsbDESvVojA+PJTJuvO8DeaO4YjP1SBuTcONwv8FKquj2FBWD66ZiTHt1alhverAVfs2OsDYj9xdXoOsA6JkqaeQTm+4MrH2Ey8pNm5bC/Dp2equj+3ZY7eEklwVt6BsLYAN9gOfP9fgBzOrt0rCqzw0Fzia2PwtnQxcU2iqxNgnkWUBA5p+f4QS4mCpuD4fl7IqmZbU3Kn+7Eb2IeYK0Fo3ThGeYQ1ZDfCrl5BtyDJ6EDIa+G+lwzlkAlbblPwFJWfwcSnoTW/ftPxG4KY0ZmAmtpIXB7wXa3xNLCt6YDpGdcwmT3bpR0MSDmm/7dsuFZhnBOYVVKmz1KvXIxxNpT9byPO+rrlTwR5VTB/j8bTxC4IR0q20u3XJ3GjyHnHj+Zq3Bo6AjWr0lJuenFXT5PdV5ZltuVbG8Yadaur/n/LLGESERf0UgZCOCznb6Am45NyFBI6Iol/5HzKY9ykuYEbszBvzy0uXXcvcMW8gqMcj7rFd7vTu+4gEgodB4nmwiAlGvlabSsnODTPijFMdYHUgu3k5OD4RziMeXU91aK0KRmui6Zkqj4bS0VkE8EDkIQNVP1/UlH7Q9MG85HJSondRh5FoLyJhiMwoUiDQFIU4oTNWXw2JZD/Pu8CAiLq4P2wl/ghjciNgHymTr96s7ZGjTxi44bgQKFL7hMKXpSvuvp6Y6Yycg9oc1ufP9eXqqdLhRBQc/FjFBDlVcM9lVNfRHCtcC6STjZHBnqq9DGZqSN1xGIhxQfi/i5wMfZdNlLW5oCO6GL1hNsD8AM/R+ZK9G0HXV2+bp/p1lewrLg4CVdJwfeIE4Y/L84yOT3a1XX6eP+Kn+mnCBn5EJ1n6vOhV48UyEXdCrDvbFAQ5vWZtNC4I/EhVYa78euWsaGcIGwJ3BfxXTjV5S5gBya0fXavV2rRfu26vjIE3HYm0YDrihDsHc+dw/SVmAmAMckO27TYcc4ehsSNT3PsTEUrrNCRY6YcnTgPaz4LgTrew4LrW6UNLZb1iwXinMgeNG2ErztBNaSGbe7uGxbuSTaOAWKTuE62AvDa7HjNkWags4rKOBfrTJxDqteG5DYjW1djjJtk1lBO1dUC9gZMMNPBxuwXr3Zu8Hx4hNb186+3/ycHT5I7iPCY3kigVf2H0Sb++2gAE28UyJj7p3U48ySQh9RwzfYioLaCm4wZsxqaDyfnrpUN+ViqIRsrcBMeO3Lw1sWksgT6H9helm326mEyfJlRUHWH61tIekTfGsaSL0sew03gcDylE4L62eREbwSbIJ10pXQFNGX15GTdEfg4VPwVUSp8UroSYfWLy17JuFK4iTfic3v9LFkEY0ARPAB/D+s5L4W99O+vGeLvldvfca5BBu+5FfkUbz1g0jtTIgCexjLE0msL/uCj1HWP1Ax3XhuReARx71BIqsT6Yxakhtcp+UZ2J3eSWrK7tLSXaGKYAIcjjcTglgPV5jRMe6zx9exPczhUVfJApS6NphmSYlnP+xIePBOLwaUaWK09VtR8vSV+ipW7aY7RlHSGHOgMrCny6wWfyElBpz370y3YrcJMaQ2bxLohKJksuIwHB6Qkk+4h5clnXfFHYmbL/8uCq2OqkmNe0F7Ki7G9xXwwiG0F2etwsHPIeBYn/W5cuxSx3vQ2TuIPFz+MF0akw+jrRU+YHjfgo51qi78zluXaWUydex36QLmoRYdDIUUAqpxDGyoBCTbj6Fef831xI2MTcADmYzcgqpvtOax1qZJ909iUk24qBWnjcXRx9SZrnIzeFHYndoNqb4ip1WoaSwGk3s2scIQdfteABlO/6ROo+85ZcHku4F4KjyNmQnGwjsxamIPQLSwNRsipIzZ5TVRRmNZ3oIThB/JWzc6/n+flJsrLNgmBhLXgVN+U6nc5/kVHWaAwaIKak8tx7n5aS+fFrGsSE+f4S4qsqjlO9+28G0ukCWEBs9SAV1wz4PLIJA+5rZ1YuJLZlg2y/QLsRoGdFQFA8AADQ54pEuWNXi+PIk4UBjlY+YxMRmDcH0upHJU7+pKnEUSMlJZrus2BOEGm/8NSqEechwSjLCDoII+uUCugoA5ocPDEjhjO6lo8zjvxTDw84rFCoRObQhwZSIYJOHEEbRrH9mjIlDxvkELTnNXjmqGpCOy5t73IWsEMn80gLETtErm/VlKnziYZFdFDZoztTN/8wFQpHIq90mx4OFqkmndBCL2XB3DK+BypSJ5wjxcqGoklbHBZK9dL4MFxSz0VGQoj2g8zn/e8jo5/BFtL9IjpK33heuO1R56qaTbB6M5J7L5JXmUS3DG7hF/kA4RAsrZtMh2tkX5XUtAddQBDBzvL+8Vw6EK8Lj61FuMxNZuraOK0EGnFzkPCKM9NT7yjBXOasHqZ++mtXHYNGp4LFmayLmW/P+WCcVtcGYHt2GyjIqC99+x/Ewf7V717+J7mvZcU7Q5gUFL7KXtxnSFNJ5GR+PetD7PRzW41ljhPJNjMbfCWiGeE4BDV4p7U/Z2hhc1GTTNO+6q8QgbuLS2rW+Y8UYYhpmL+QwzMiWcIbxVY1XVkgXlOfttQLFWq411Bc25C6oQelgki6+y90Yw6J9F+jXvPL9YktCjghJIv8iRY1b2CFoibEPNaMGLJ1Ss2hXZTs3YHIbS5dolbXp5lZIazq+CDCzy/APQY1c4AirxGmdMXPbYs0be5XnjsMWbbd+H/XHIgo7SxKA8pkaG6HNoBqIiTXVjjvv42KY58HtVjA7D4csiWEfeK98+mrsgSOjB7wZBueIEkuExfH8meWY7dRJFvFMhFZ54fO6fpRc0kCEf+8KWAY1LSiMpAoFIzMeu/LXZicroO95Adh8ZoWWOmdNIKIbUIoI6rQcF4cgBsBtwXRj98SoeRzii3JeWeGUnOkDE0his10WfNsIeNrQ3xMRMG7TPswWAOl7gonakFrQymJw+whXsgZgSViHwT6YJ/ZRlerhVdaMK8cOLdcisZmUR9Sr47Zf2LBNlKgbzx5PXfQRcFtuL+NbmIar5uxYFEggDUaXMdQjLjnThBJteR8A2ae0lyDb7S1t7h8hRhX3Fo+CfMWzQoWGWMOS+H/g9mG4mZHO+TbHw3j2jLQlSLnaq1KFl8BvPWFdHzW47CwGLlaW6Mil2SSvD8IJNjgKmIV5NoReKTjen0BEDwmS1aRp/CkP4wpVw9nuvDrdHzTiw2wADhiwnGPqDmogKNUOo53pr2rx9TZSVCrWWxmnQkPN02T/8UxO68kKFOWtybIBvOr0FBbmD+1gD2WLGn+/iIMa6WlE7FD8OXdoMajBF5veLUOedfQWULfKb/P3gyceoU3X6UZzvzhVG++uuFzfrViGrOU5He3JuOdKqnsXA6iWtACG3ITndhW+7MiRtax9zDcLUXSqhQXIFhgujqy7lWHF+oDPXUEeK/8/tOTox7bEgzzQ+UvA8I0JCad3EsTbN3r5cQrZw6SLdd/jN2Hhg9h7I6y6uW851jgVstDw+O6hCq+AJT1HLlieuBJZ0pFfzFMCQiTCBR7H8v/z+lZIf1dvu3qUbOWdvf4hrBV16Y+q9QY1YVQ2MjP9QaxKvmT1qyrnrQT85ccgO86YBv4xuAcN4mBgerPEo1QloEqBYx+NSf+cmi8Na1miDVo2pDsij9rYn64NPDmzfIbR/7oIhI1W5jD9iKu8rfIG/z6Q66eglqNzL7WgU5I75fLl/WpLQl2PPMwcu6Z5KYg8fm3v4mtfR+bVnbnOAjr+pShq32pSEX462MIyMn4LErINn6smQvJtHO8JEHgRix90yZuotnL3yW5dKPoNue6Wh8GsLGM2b/3qWzRVenPM8ds1yqKBFkc0kwTlWsOHgkKcjF+ICQfJExZAUEFgLF0dB1Jj/OayMuRzY58m2fs99ZuVwaVaidbO6XKBUjGw02PYaFwdID31XhciaEapVkW1qa8S/JYx9umA/ft9W18I+gXJxSFRkTlbfT+klPxVu/WxrLHeggabzgqNobhALgAm7IXAe49siM8id42rpXNcuhDbfi1YR5c+054wmJmSt8h27J+ZhhNTv6gpJmMQNHbHkmPU5AFgf1JnsyvTpdRM9J6hOq9fOkFbm4wlBsF3qEy2HK3a0VCCQPcmiMa8TZiNzJfwBsKyQwN6ntcH1nsprGpmQpM9XiYHgXS4oJoqNlOiXSteQa80kj5xQ4BR2TylOZTIGNZ9OC28DvFNS8WyFbbg5BU9S1Ue6HY4mB92GT/mInf0ZQgyUrY7La9+S7gPR5CBYYp/RWO6h/lFNruwr73jcVFe0UQ/aaceNE5O8BqEX/lY7b1LlpCSDu8QBd9338yGTRCqlQ53MnDMevQM3NcUJyMc1V++lJgxCDtTQZBT3mInahlx51ViWv4dC2eJiAa7tlNgmHUoTLbV8+ir7zC4ABbGrtVjhXMExVsXKy+wSWHVJjYnqShgKEk/mJ9vSSnkOGxMr8rSDJB0kYY2i0PYyRVB26Z9VZ2y4j0d2xilWCd2YkCo2OWteKvhXHY11uMy9luqoKl+UzmlIw8R5AfZuRHLa63Bc4GrACKYLVK6W1TNO7FzpKjUVvbgv7hJj+AgouY1NcbjVP7pFeVW7ifx+ogenedttC+Euc0SlPf9A5JAUyw56YpCQgeem9vsWxrw8TvDGfvk9xUn75x0fBV9MIYoNPSMe1tn8udAstlN7Vo9xpvHBF0neQ9BUsuAo2GRT7f5oF/CUgOkpJD9BaQgwIgmAoapLT5sgy7tWk7uplOT4tzX/fVFQvO0LG1/ee4O1IZB019UnUpVkE6ULh/C5vueXync4IMv0G+l7y6fDfLxkqXF5q0am8DMA6EEZ5cK6DUjmptn+kqLKho46ylBi2J7a0uu3QQ4V6SG8S3obbE+hlXhLp6oSTDPoOeCHOpESsruIR54pp/KUkLZlb7Zayyh4OzT5JN5Y5QMV97YXLLuAGW81oRTnONYC2LICsTP4GAvHEaGOWc+WtGPc4WsNf+jgerDOcineZfNX29AlP5hYlqIKc+TxZjMYov8UIbwEfjZB8EpnQ19HEN6D3/LNLB/nzH50RGbYvNXeR3p+FdsXSM/fHhzW2qwTDORGAOa7wjO9yj6XO9nuYF5ax8H5PFrzaoYYlW9TGyAm+bLBgBXOcNATKnz6I7a6OIoZx+FJserTvKaBc5mKalHy9MHZrsnx3pCw54aXAdateVWFQbgx+aaC7rr1SDnE2kZe19MUuUHblC9Mzy750ZNaA1Q6xFIr587LRtYT2ESstRADnPU0f5MBBcw5CyivMAZhv9p5GUtyr2g013B/BWrG6fG1NFZV6710d3ju51VJaI/axLQDyxiXeK908FSkliTdOS6E2VPeT4taELhvzKHFm39M2BBajtCBq6WITSsRsjmnunjvnXXH4A+P+Mn+xftz6iwpHJ8+nET++squSA+1WXk35YbWDfGWj9bv5rtTONbs7cNnRpHNrP8n4Y8cJ748wBf5AXgnyqPAKRo/felzmwfahMkseePKnV/TIwzpsbmutgwkOEif7dJNnfegvCvNu8TnIm3P78CmjLL7i0HQGYz3x3jPj3EpfFdqrcWgOt3HAONLHmJRa3XVARL9spqQ/oEJwKF7FkV41iDnlbhKLTg2DVZd6z0FytLSE8Wg/OC6Kuuz+hAQWeAhYAkrWMJ75cOE/5zTf4/tP4Q9/iwjtHh9eMzi469QtqvPB4C2hnKxNVbFoLkxjy/6VB24gXxgALKl10F503TfcaeDxPX9TUOrHaWDc97QCxeb83aXQZm7y+Gys0dHT/75lqES5n+ktgYCsz6teyJVPB0QFDiqr6YQAQjxjtcqIW+vTB03Q6TwbjnROG4Ei1yZGfysKB79eNJ0KzyPebiqVMddnyp2+l/DL8X1Tg5lLnPsWFOUH8vFqzFOu9z/rl5HHH2WNzqkqf3HOMan8xwdTW4DuIEVW9+VGyZjFFj0v6CdD21RhGWm7JEjPyJxjJruh6DsDlEi25Qj34BkiINkDSmUikEg7E+nbfTYaY1hJRpj9f5aA0EgwJPsopbtdqmqyOG1OgG+q4NacRoWOm9XQQwXsdQ5SgAzmJmRO+K0PbnDgDeyIoyqeMib/Tlf5lXmljZiEf+ZyRjDDJwInjVvAUqQQJ6K8i3y+a4DmMon6gTLKvYqcYV/+TFOBqFvouSq3Cu7y0ERDmJgbaekh+ZMI9VxuIKeu5/B/P138pkoqymBNaza56krbGjrlR4/j6bQtLwnVNGd/lmO2QHyQZchV3fg2OfPHXgCIZNXCLku3nzhOmW0X/KRm1EAFe8lCogbSJN3hByS7kQ4KwSQB8Vg7PSUMRCITAjyjyg0rVrfVuxSIyszXqJbqniVzR/7GGtoQvpjHVCzm6A/QhnVI+heqqA0RmMI5d1makD/nQ9aH/Tpv2/XtYvOS9DrcI4qzUeRRp2/iBicebHjmgVeeH/2vpKQWZhmgQOpfLbmYESbgq7pq1Pxa11Sn0uG9MzUL0VBR76TjY9XlRbT8MdM+tUUQabvQwpp+7sJ8D+iGakPNBckDdfZekra2FTkTesTmXAafGkbTjhV9n5dEfvGH4g//AGWcGt7pu292dt4/Jnt1d4YjwiTXS7XkVFgatsPFE8lxArDR7+nN6XtSLvtksu1TbaySglccY/eChvrn+07I4M4Vrx2B+qFQ9NyArA8+0Rr+ClGsh72ECbJIjcZtVbdgkgQnofaBcd20IPGhMDTSze2KzeVu/9gmoLP2175holyTjz3ad9qtGobuqIQBmws+vICzW2qkJc3VJA/8wf2W4fPRix1QEstBsX+5S4vMmb0jxiGSwZU8NcWqWrr6+5wJLevy9Nd4ebr4gEj/BZ3inv71DigvIHMWmxmfZDoevBXecqbYz3HfAt4lLZMQ6qO/E8La2f2Hgyvv9QhYvVudvcCSeXsHUJ0euVCXxc6F2mrH+sGxu1vF0xqO45LXihEAEnKx7m/q+Z6V7NEKm3UF/1Pbbh3LgbhxGoToa93g0FLt8CA7BjMnR6mHlXtWmFkPwlfT3tDxRfQaXYPVOP3tud//O6yT70FeOnvktvQw65pRFVARnLxTV2J4KGRW1Ig8DbSSJ4XX/Xwkw9sj1moCF8Iq15S9Vd712s7MvtrvZ33XtqqfahDUEdt/woRe9GPSHaQMBL6P2DPFbfV1oDwSts2tSPa2QPc65NybqjCoPV6psUOpr/FIuP8HshkEFGubNVGAwl3QCgUW/3oWhGB9I4R/axmPhvJEohuISQV3NKIVXL4Z7qS8uEza2QVTAZLqL+miWbf3tUZ5W9oYe93CpdqFNlOkfCdOidegB3vXW4SHsu30KBiWA0Id89GfKkK/ggNTZ28l6JQpCx24UOOoQcVFS/H5mR0jjUiPsKMNhXfpmUdTrFtxyM80k4zSgBBa5GDnHQPXrKDimJhQR19CgNdqcQkQB6BAilk0GzY6ojkxfWRXjZSro1nHL5F1w9Tnx6u5TmfJlEGB5/YPonEhq/UwA0BIU0at7qMFZcUs45t6WXrr+o+BACbSF3r6hgMehZhO9Uf4x/q+RjYZoKDWhtLCNBx/zqxPfbe6d6QDuO538U8orxtj1n9BSjXdz1Hr8+icbDfE0574CQgJZzQK2J75qDy+poDldph/0A5z3FA2RdnIrT4pFD6ZbKN0fsRHjIDa7kQxAOrvmyo8sky6OJBbXn+1tdEVkyYzxO4Ds8PwwrUWksbN/7DDIcVWbtMWrFJQbYmaVkgPqAN/4XIHrxtPPd75WAu7aLihcWBPppXLwlRZ63QyV2BijHH8ki9GxyzVHpMxjRKw6KhBwIZG1wWB/h3AVfmL4XLKQkv+aRs4Zo/GjYJUUSOygb09QuEdv4Vi78iSBINytAkNdGrU2NAfB81T6lIOsrxck3ui7Wj8dQlStfOGcm5Rk32K/LGTdU6C46HD4xQHLGwec30zBS6LQDBxUqvMBXjVL4WlofOpFdVYEwAtxE8t5LLE1AR35hUxWvmJR7Fp7U4tLm/3EYXsiMLF9Q7Upz2YSoPkLXlQ0onkD2Nv7TPW5XM0YhHp8SiyfikuA1tTmFNueKcbh4TAbCxiiubAFDwDUw+GzhSh43Yixv+PvrYdTAIYOXn/RJsQPWq9dqnH5Vs6d/GYUkU0/BPtUX/upwRftANgiKYBm7qFiy5AiGnxv7Ig3YcCpiErGVjKfv/F7Qe/ncy0pTRaV0l5YI7RxoYJWakk6y2h0XdNweuQR75CJVtLqLvOJ99bzVZdL+bLoTzPMlbLIBQ41+1RuKPQPgq7FxuYrVPROoydv/FModqATAqU+TiZ+Q6uBjDk1w2rJc+aO1xh8XdhV/rG7uLOFy4Xr1DIYwHAoHqM7Tvs1aUshZdrqFK/OjyCYxKiYYFNA3Yb3UL6hv7P86bV8R9TVYmnAoYlTJbXJdJeIMC9/Uc/J22Wf/hAn8MVlFBH7Z6JbkJk8bojAOKDG1wQrHhyX40xMLMV8INmHLxiZV/OFeSsPa7OMTHVR8sBYwFFH93+3B18M8gESpatrDQcikiga+Kgdg1L1SDxwYoNPgHi2DslADOrs1SymRtOVeQ23LOGVSlh6xdku9PMwu+PaB3OpZZs1Gt5Aj6ATNFJmntqqSJc+Ub0Q7uTv/1Og6wuXM23XmgmHXF9vdtQXPOhjEIeuajjqqG0vJbZAtI9+41eJF5TyLOnq4H3heA2pT9utGLEmgzJ9kxHHaNsCe/tmbirrmAqkOpbpFaXnbsS3Tztt2Ob6OzCI4liZJMmzK/t/nbLeyHGMwCwy8DICgOGEQu2ky3Zx56p3iCS7tQqwVPPhHPrsDuT+cBbU2ugPm5q9qDiCfqSQ/5VXH4xXaqf6TT5gXndRLEM/GS+q0pNGA14/yJZdxbyCSDpxYQP4VSykpmEQMyEgKAb21SFJrXF8JwGSKDWlr+1oujQnkDdvO+wVeGyLvie5Hde32IT5i3VYp8FGekNDRPhWiXkM+oB5GWoIaMC7TTy6ewhJWKWUpsCSYLGngnDrqhEXYZ4wPpgyeCBG7KWlKJ3oA1HFexnIGZlKznwPfOjODY5LXKKWVYSrdqzfALl3Qa+DlhlKaqIhzHnpo8lMMUxgy5uE22TokUqO9qEW3ZYbBWKwHj7g3OkbjdgWcphcapkGlYK5LG9SLEiJeqdNXFJuROnjLQiTFUMdKXJ4w4DTmSYKMuEQ0zCdrEKOojnc4WZ+eay4/T9AH5W4xTjzwqJJXYPsprrt0qDl41nL1MgJdvKppGE0b78cFyKtLmorYMcKUtEF/lj4NDop4OWo4HnS/0OanxNf1qv2fai4myHINn1+sW8ChMojJ69sQz3SxwsSqWBs1jYKPZ4cX9oCLHd1E2FnQfBJ2L/uJYs9SgDSpphMpd274bMVmza9stP+bRqtJa+Ep8EhQGeYyr3o/+RUw1lOh622R9RfXW7NIj74e4sU20DzEOm+s19XqXSuVrUec8mThtOszatKWcZ4UKk8cQVUqygpuyeKYIEQBHHnekPTNrNrX/12D6WjcsjjNobTQ3b2zBCvqN2o8se6LvtyTQT8Z4H5YaYllAXrwBPTaHHlaEaL+GUTUZ6reU539s/6y3s4kLWcSqN1BX7Q9oVAfTcOb7V1elQArIVeNIQfsHVHqSS1zHgsc9BCXrPFfCrmaGOTAsTdo3jLfXGbjYfqUGCdGUYa5TSpEiQJ3EIAS7815rAMNlEoXJ6Z5Muld2xcBJUxYSta5ITioggtsCtbn302kcteASXPqFRawaTEbpI888zpQTmEn2JlK9pdBb5fxecw1G7CB1J2Wo71f4gEUyw476g2N4FLQtPjWGYs76f825G/dkDXCTlUGyqJSWBvpkjrrdwAhyvUyezCf47iVmMiVDXw1WojQcvPly0/UmhVoMk/vRrzMMh6Lxd0qb4yYeZl+YyQWBvg8oWoGme9tq+8OjccMCue2Y46R3v5pF2rniRgq5EetC6Ms+EmdUXN7LhL2mC9wLXV53MfVgwBniRvFfICU1lKM9UupdhW4MMG/ttqop00ckriQXkHredO1OEbaLdRXeLYBNGrtCFTFBN5FqlE2GYI1r23R449L8kwpJ26jnZjI36AayBc8VrCQYyaUGSl3jR0d6zeK7m+kBjcO8gVsvznU9rQUWITZCabYTOqBm65hSVJMBwcGf8w6i78rQXfH3aj9WDO5bIog2q+phYswsyhwO700riQ3jwGLLTpvqgQPq0XdavnfIcU1AngE5FH+hA2u2zDK1xXnv4wneoefz3wCkuLT+1G/hiAgYS1A/kVr/Yya22g8e8C/2hovfJ7v4jNXxJ7W+qlEbSz7i56ZSK4uchqbCbNsaSGpOjLYED+zMmGS5VcTS2A2OoHCDlHPIFRrMDFfU9UrDn+cJc8a/Exj0NAex7jS3gnX5wr5NF6ObqdxXJkzHO5+UqfK/lilD3H+J/1y0Nahtu/nQD4FbucF/s/rx6EDJ9737ZGydM3lrzflWNDQ4n7zG5qBS0TaL6NcmzfXzVc9Nw3ZH2T1E0F0n1eRY0vbVDdOnyFwM5Aq4D60iyeHQplk4Ol+7dE1aKnWhKgr4I3VyJgyaoxg5ok2LMb7Gi0GJ4Mee7Paj63GfDNjbUPUKVEFtJRlyf138eCoWYoO+CXtyQR5tUFncDs54i5f8lgD5ThTe9u+qFeYRTJtp3ayf+KubjQVM41susYuc40+RDzRS+EbYxaOcLdU4v9GxfQNLW7S3lFHvYrG+U0MLJLKRIps075C5ZdYBHpRrUvIFgG7Vyc4D5qdXrkrD+4E0MvxRPtJ1IWjQkIJ/ZZ+Y8sZibD+xnAkMhsT9lpqwLG78fks0ZcD5uPlGtOY1sHMvb5vAURAHpEBqWXMvWoRTLf1i9cVlGNBpMwqleipPhFyH59fgTyDt6YR2Disgf5r8Jf0P1nngOaes0mDPpQOiK0L+DFy39oitCqtPcbGk3EHkOI204PIIzDnq3qn0wTaAtWsrlL6BDeJvYjWq/uzr3mOeGCn4e1SjHMJmfMC7e4C8kV/M/9Kap42NmhzNpkRJpN2S4YuCojh9LhhfaciEcd9Q87Bgyd/mX49ghp1pGkiuy9fxKa/d4b4Fgnlr5Oe0noBk1ScXXbY+7ULTXPfG7YUB4rcieLLUGkBR7WxbiNLECIzLkDZ6VdgXLJaLOdR7Ch/JXhoo9VMLAJeDe8rZzMiOSND7BfVIJ+wOZr/65F2myRjTSmxzG5/P6s8R+y1H52150ZfCiNn06ILFU2FUpYQooqFSa7xZG6yWgaZLi8r5sbQfYfnQdK9gvu1C+MHIWgkWXxpmNBwOnfvkPalLOeJnYds9VzH9rme2mw3CjLd+9TXjLq3VS+GFHqAoyt3fbCvMumd5oZEdcDuZ31bEcS2TmyJsx6mXgfPFSuKKSDycmVaFKu3OLVvdgsU1h3tNOhxaC3BMl3L03IAuzc94L6OFVsFqsZwxp+PB0vtN508NMqH+DxNf6uyk1xlEX9mLw8wPMJvS9e5CRmLRFbmmwiEKdXnhfGQM1idtLIjwKIpJkyz/OBTx6u/hd2DYgQReW2xJs8SzEtsIaTDmAeWKmOeO9fT4kQqHGIMuPOtsmBC9yB2ASESl5DZgVeP7/HjJFl5qh8lXR+xQXk6u9NbfywbsqgoocJ2lBZMgEJBrlVMt4MUlwAVbD2gMUR65Zhh/uDLgm+uZ7U6dP/iIuBnygP9+muPeR9abiinjIBe0o3gdf7ApzTDxo0Mbv0xbDUHkNUwXRgoMpHN4JF6hB29Lc+vdkrbT/CkiZURD0PmIbkdsLn+ujmJcg1teL8P9KHqd4MJLNweLG/8RYVt5Mgz0WeDqd9Fhr/LyqoeUbfg+wuedx36Z0kC+drOOUmys3nQA+pTfjkMbfPbbPIwrPtnxCVzpOdI7Rha8tb2wknKZHpB4voMnlIJoVbjDMkrWG5SZ3knr1uSDmotJuoTtCOG3xrXvCTk0jQ3kgQq5eKHyIgalD9fr9Q1cIcv/UtDik67r30NYfQ29Gp83pePG0lxVs4tlyIiqAmhzEPvrpQR4IlQ/JSOCSbFIBBgYNMkXk9Ec7NeREBCJnDGT75GE8in8QqEVz1bqkVDfhD+Xo5AkNHJYKhwL0Snh+KbFiQWY4P7Y/g0ZlTlfeCl+52bCwlu1IOIe0+HKUo82KwccgrDVARLA6+YK7ERPja6/yYlsKw/CojY89LE7mAvcGcvoUAy+CTDaqRdBurqqoPDqg3EUco49xPI70gS98Gsz/uVjV+6pMyc3rz+hg04GH6RWlfJpyXuxFchhLSLlQAt4homQW5rCS/IeA6BAk6FE6hWEYkO4j9rDwUf6iHkPgFn1GVuKGCOhP1aWKGJSUOL7qEwsaEyvfm2pFnoEFHWzwGC+DQ5vHLCndPejEEUEGmFUn52s1kjdPyMHZHRXYma5O+E1RMo82nQbHAFPaGJuPawHExlQIgR3ZcJlCP0JOtTgS7ZEFgx6lv6zIgvQM+TtjjEjNw5p+RXj2xZKlnwUP49pE+6DtTuR0g8QSgqh2SWD4DXf8kAtHO8fZbLd9PHTN8Oeefn7PI3jnZJEJzK0lGH77XsHPtiEKdKRSMueE5GGyRWua9CdQk7KSuDKzKHS0owYIxNqtC7ufyZSHWsKnOQaH7E4lfno6Q2hbCH5voVACdXlWjTDtQNREDuGVG+W28xm2DJqpF/TlAIb03JHHBsB0m9c9J3tDS6SbkVGDtSF1arEqDczS6faSjWzqfrrnNtjIlIjvgzX3YJ1WT7EdKzn2NFGu2u07nsjwwwuVYQsOowUeSIbobgWoNagz84SC/nkEl61ShuxXPFgD6Ug31IpofMvBIBnxcBTf2rTTOU4KbS9VUWmORsmr2HeqJf8NZhCjUShE063CaF3mzugiWoM7nq1BaHTXtkniI9yC1paGnPcbwNEVIZq0N15BR57tBldGDGyjFnQvIJ7rVzJdQ6V/VBJtQL+5Yn6pWrecwbXEhE/0sihQNFua8kZDF/nPLS6l5BwRJd3jHcyyMwRbqqQ2NDDHjTsyF07lrUpFTED4TJE7KppcTOAzQoDclCYnp8BZf9NqD+eKfztVRthAXkI70+OKyH1J3lDm9LBxq1vhImyNlnG+iEb9iJJFuezNBWYe6pM9nY5PyKkuinSGv+es9og4Qgz1iYf8kvEm5UYdIcxwq5TG9cPPpcWc92MZszXRa4Jw/koRe/Ac0QcNUqmBl09I1KAg/77wYx3kThbNA7feWwG1NzAArGM5zEqYi1DZvHWmEGvrddhsUH3lMruI21XphEVH9dv1TPDjr7S+d/yikkrzCwSuTvlhaFqFKiE1sA1dzeQyoY1RulOFRBXEAZwn9rHtCushnP5mDYdCk8FHFc/bUwDb8NtNIcRKpiiHzYiP/Y3s14MAd/3l7eRZEl/88QMegVb7NtLosH82lb538F80hY1lseRZEO32ytQSINxeo9pqSSwesE/3Fs0OP6tuH/wmYvdaU1YpP1LVXWIIjOVSPdtj+D+x6N+xg/g/9y59qlh9nXZkeNUuQLGqjh7sqPsCvCkzxcj3U8WaH8jZivfh/agbosLwz4xScVW8cJuF9MuHTKfhhqRiKKvMROwX4y4HEbDp9PElX4FT9zUcjCVSCdEXGPvH1b7cEqIIj1+JwL0jT/fvSml7bbRprEDJF8536SiYa2+tVdWbvyO058kAvqM5AXxqip6pFu3/YX2Ctk1AviDJBoR1TImJxbw1umJU+IE2Zp0jHjg4fa3hEgQvz8xly6Iey7H+oSHXzEi6SZ8AdxYt5SVvWMp9Tklqz9N2b+hZPQU0zpydj8b6LPUtwsWAnJamBgECXKUadPidhfO1W/j8ffDHJvbO1E9DvfV1cvuzti1jUl3qE4tCJtALkFTQUYoh9zg+agnKTOy+udPaYOF0zm7G/Nr3kyTBSH2AuiBjov05QC1c4lAE/kg/HAqpWctvIEXeLClJyOxJg5rP1TksQLvmT7ZsAKWpXHrgpidnE69tBHvPNIFBA5Sm1qBz8N20ivaXG/Ha24zNpD9Z26nsaMMo20dVBp49SQou31MdbM4lST9CB/ojgewgL5z18b7dS+Gy7+O2I/DUP3+kOab4bQGYD1zn6J1DmdnXviT+xbxj/Pq4MH34nZeAexpOG4qND1h8FJQCz74zpPvUV8vzxoCKiAqZXI6Yka35eBsCeR11nFElTbx2iQp5X2nLnaJ1OdJkMgnztXktBXBZCa5+Msh0xWn9VTuHsbKUSm9gEL0c170raFIQp7azZTzgIdyrsLSzZf/6S0i/D6697FSshbMNM2SoyGUe7Zmki1oQ6ulRXDX75Aowyf9C3x+PVJ4qTatA1/B8ov04yHH7YB0ptmSaNFPMDiUKqjVQ5aBpfaZebsuDvi8aHdgPvvXJxbttw5jdqETXQQiWYRj8pdmJtuR+drSzuVJepMNKlQIaWvZYTzGIHKTOeMRFlwAH3a7H011sCIums+IgNKN6hKAOL59s8HnF2h2HhIEZHEUSbRM6x9WxvIruTFWgEDGrliozKVXtb4TSSPAVoIm6APMv6uamlTXq5Md2vsXDlIgpEplJEIRWVSlqcXspHBK7NhldGHLMPKkqQtfEXpmG+IDTrBXhPBcg4uwaSr/tZoBcAb4o7Ri6itpXsH6hxfJ9YzaaiHKiz3bA/gX4rkMH/BboyCK/2AbNccSALwW/MZtpMM0EkesZXQIwExNXjIDJa3FSGM1SLMshP+wJVu3G40iLZQW7/6WrSL0mUe8CiSGwLGUJoH8MOA7IrWyaqOghCdJyd7/+Vnk6StSt+jSk4JzYA/IDn3pw4/MSByXvPeeCghCyyibE2SZLINGjvuDXaz5iTSl1Z4b1g/FJXEziNML65KmP2OFK3GP5nrOYRDxkeeS09Agos1K08ABFD/nhrjpfu+Proyl/hMP4nhgXS4EiqPQU5cLK2RQc7HdflXd+giczcwpTegDrJWxHbBGiW/pMpqO9M2Vsin00jj04lVufoistd7wO3maTbEemam96SUlOhGVce3fna7H93qr0C+5zcY5NhZi+rhubkGDVORMqwAEud9tF8ldfzxLxavh068KcM61tF7LkAprhVd+BbrzVO/jmN3RjzzyaqnGowbMz54ClP7U9eP8VG6r6BEYAFBqv01PZqtZsA08VC1z4gS86mq9NSaXK48r1yc6vISk7O7svUN6fobF1PYCeyf6AkZfGKOJfN0kfIfQ/0JD+Lmk4nzP1XBaDrXXC96Xhji7Ip4OBbkqFJ08M79s2bz4O6+oo0zhYalXqXz5kYFbadXIOnRZ/41m98c5Z6RcxbLwwTt3i60Fqh25kxN1UwEVIyNdApXMVy8wFLrPZeTovoGZx+tVgwhr9Mk/aGI6VRQfnkPD7nXibQ/2WldPmADaOO+p8y8i/G/1ecw8SVsPr/gxGvzV7XVdDoVBzb9vJ/xVxhN0lri9Z97MIHDXwCr3W2iKdNr6hpNScutEi42MwM33Ben++8F+2lYLCWzCh6ATi35SCzItnXSmbnDMsC3kQ+hl7fR3wm3fH3uUHvUbNEUM6eTgBISQ6nZwOcMQPEDR3LoItFBAlB8KNSgq+ayQmfNfKi5Rs9Jj5z5TH+/+TPe15mG+d/Xq07bCeTh8wtxBFFjuLUvYhhrSunCt4q++cBvnZmHqEC/chgjMK5F0fLCdD7bjfX1QFwqeHgrHtPc8kBfQ9DPEW+3K+oCvc8hKgio9msBpgQnZ1lpWj6zAE5MPeDpz9w4C2YrHw0MgI0xoGbRnyfumc/jhSyqRDV//zVoD/rnKxFs5kXL2IpR/LVnzmZoNgAG/GAZxme/cYlPZNvPlg+zifhWWVTAfT9/sRjxANg2TtOyaBQW0Ht1S90wjub5H9rXWYSmAn7acW7j61i8uwz0ZBC7i/SXlHsK5CTbWheOdlwzu6xNafBTrvdRovJSitTOENpxXUJdit64ITY3YGLfrDukeofmixMdYpAhO1FR51H1VD2GY1dvQAgz+PIO0VVGjeoPbj5yPt6EefitD2jmSivBA2iNr0quiyMZ6ftIdoYYMw74LFgPX+HfGWaESxE9mhqKQt1EeMFK34QsEOEyD1GyE9NBO3HyVpxooZw7+MGj2XgnXiTYQiy8HK3yCTupGJXgy6t0qhfRhMi+ltpW+75iF5pCnRJEzeuG6W2UofrJAsfxVt7kaGqIOPx+g2D+yUMtA77+uvpD91DwseWgFKCYZxctasMa6p98/nMR3BtJWTqGF1FpaD1p9F8eQWNw/Y5u9mqgGpBA8wiGNPwopxxMAxdZWDTt5e9N9kUCEQmSaRaBO+EsyssDpNZ5GuolPwihMb9D+7lnxe944BGMdyMjg8MA/MW0b4hlXK68neTxec14nn+ffUjdh4qTPm4cn4dPnJ315LFKVce1T0ILz79RcwEwCzyBEuRmeBWdVoSZW40AWLx/mcStBR5yxJH8GW0oer+sVh9pPBZslEQqFdkm4k8vR5AutuKCJ9KD7E304j1wBtYD6ct6CmaQJEea/C1yZAEi/J0hOZNGyMYPZUmkZ0IFzXzQdSt9hlXxXCKv3Iy80jRwsV23g/Ac8XJVCRhZfmX3LL+q6DoTS1IEAHuF6p6DRwa3FF7bV0LF+ZZn8NfN1rS7NY2bdKF1qWIS6GyIOK9J2IDOhrkE0YJPpTzaL7R8MbDVUQCND2Mp2otibbfFJsYSFukWAzbpyEwzJw7KAPvtwpIkfCslgj39HqdSCCl38bAwn2jJ0449e3EoFaakZ9nGVaOpebjEECUrd1SxAiRQiZlWaK8QA6kZ/lo8wgC7colT2naResyICEoHlHxh1/gJYPLMnKNJYK1T01ufJK4oGbg74tnWbHE3Junx7usYJNY3saZA8WnXrQ1TDmiBqki6zGWLYdn0782GWEC5A0N8yCMs23dyWmHAhRGIWMBnBdwajyqEq0vbrhKGTYyEkFWJI1LtfXcB/zJpSy3U4QqdyVMhs+jpXpFNhhtdLpbyfWj62wy7GEtlvxX7bKGi+5C2nhL+bLukNWZ25fAGYd+imgiNOldrfwZfzL30uHvJE8+dk1hCSEFVODWJSaN/HA+BnX9nCuUdrJgu39A/MUKwF9X3YPVX8AwReExM4UBdNrBHrPVE/xLsgJYFTiP2SyI8VDqraTq5yZPAUMYpE///pedw0KnKPD9JH3kLwNLaNeg0ThT1xBQjnPDLRKKL71kZ/ADMklvJjGEFQlUQm3rdW1Y8UwVqpp5MOKsnKa1Ah/U2w8kwVqUq0Sz5OuZgj+ku90RgeIfQi+jhraocVplyMJ7vqIsN8nSwW48fMcMGjSCadcmWVc8vodd0vpTB2p5exEnV2Cyfw3ePY6edga5WFOMwkg7RezHxBcuRF8Svq/pbwHrkmcNg8Xl5pwtXTE/+wU21JtpQ6g+qKdjr5d6wifqY9cOJ4cfmBHx3w9J55k3XMe1rjYsq+PVKFy6yQaxncUp82AHtSWCppzxeVXy7n/iXZJvXwYRQO9puFJm4WV3eUTEaKlwMNqo+7eY5xMBr5NOduHP4zvp0gk5H6bd3AfuvNbhqWQzRhPIFRUOY8/WemxOEEDF8EepU9fpI9nfuP75O92mL7phXWl3lLEdmXjNqBvT46sNQFqeEPoq6HYoMCYf/4lKmAdGcNxrfQq7y0zgwdlmlilo364uC5D9JvYo78xFKolt7nc1Urve7U+aTJ45IlaEGN/M2RfNBiiq0sW4yggPDd+JFILUrviiU1exZ7gRwueOo3xOuqfuL1sc8YVm3PKrdVAquBgN5Hsj76pL1QzCnkf8WCs2SWlZXGe9mdsDNP+LbbRH5AfaANurjLKGckP2iXwh5ldChJ/QvosqhFYM70b4/vskBEeE3bqsSlCdKDblr/9PWNhqzVgLz6CviuRxheFv3yT8pDjqOFXsp1YF8kayNr+OT6iW4XW13yKIr0n0A/Y1fhvLem1UzgoeSUbgzjWNTBfVGDdgIBuayGmtTHFP61eVovQkc4Mq0q2HzqPyu7kRCuJkhvaCYr5O5dVH7tnASDUs8MtO3NfjyBEjuC1jmYZ/IKBcb4XOaOUKSxbRVii/CYvagjh+zOAB4mtspqhB8Hwtf4dw4NzWoCiAkUw7e8Vq0/0kkvjNYXfpR/52geZDt+3qjfYcdKHW4v1PlgM550T07SkzirxkObflSUUQWF9Nbuv05G8si3T9GX2GT/LZtxtdxUo0X+02u+zPgpnSAa1Z8qjKJ9H7tqJDk5KpUkgJCxxHpCNo6uF8b4pxQRgOu43FDLx26NzEc2VvRoFk1AFNwm78aFwM+qESaGCXhbol1zXic9TNB0ibHv8dCsY/zf57fcjhj6rOMmYs2M+BGYt+rwzlR2O7zvuZ9IkSFTGwvZRMwxglAceBt5/W8fDnHvszFUuXnHFRrQH2KKJPcPZQxwoQbsWo/3vsz6wPESjPpqxZJ6dfwoRmPul3ImkH1dZSPzYCdInn8Cg5zBikhtb/vxiHpOYBRw6TvJHqGOGCU7DjNlYZc3jy5hsRD0rHghkgUr0tLJYsR29Fg+A33oo0B0tammI6e2pRtzGWAKatqs1B3mjaqJo53CRxROEIj24u+9AnuprVSftJEmLKtq+m/Cnjq5oi1c/9vhg3mDsLA/pHKpiwp2wS+lhI3HPxGx1GXyY7xjwTfwgT8K/1xUAKr38jSlgmKDF4m+VoSNAlAJakPXkONtCHLVyJ7GPllbSiuur8V+ZGu5f3gh/CxxY/QJnDGtKryaA9ngGpPIGgALEJ4SFiAUx8dV2lfzA7OcS1k5dBpQTuJDJv+u638DR2ZemNF6uIAetPVBEGt4jx/wR8S32UJNfMY7tVf6lkDYB6+9rnWBQlE+1r0+Ux4rCWRn/GuZcJ/OMqPJYxN3SIHBPKPNkzxd6JEAgO5ytd9DXZz31/NsxsPalAxUWTMwjxRMaJA7SCe0/eJDrnQz+vi5CUsLucOyW1zPbPRJo+nbOLtJ/qa3LCokxtBQ1d37os1bXHi77MLS4DquO20s3dcz1daXItPmFvb6Ds4y5GP/oTKYLOUCU8nKMGHolRkTo3uNPyFNd2Ou9Ql7fZOB7HXvs6j9eWqcjM2lt1C7KrxHuOLZFVrNoKEAneeXitdvkmOj37A01JF0HKKuHXNBLLydCb4En97Ak9B+OvHzsSiBCHFWD/SGrYiO9U/jTlqTWUerYBGtcaLnAZEAok+RQRXkGBB/h8tZTc6QU8NpqjLx2eTmGGmLOBL0iuUB9uWHHMHI9rhb7Bf4Z4Mzxkq04FpanawqruYYgi5rBNd4ZiJsvHEimZVV1c2c3dtrL16F1MEFJalF1bPFdF78+1nFWsFwlyfSsRVi4P9uD+K0WSrghDB1Lpsn+1T3KYTfjJHIz6oCbRbEl9kGWFhsX47ZZ2HHx/1IY1lTUHqKDg6A5cseVgYaB3u9hsdV7wDcnaDsI/jaVtCXMEPOsriWHgmsH+pfVQpeQe94UyWEQZ5EMceAs3gjbtPVuKRTTT8Wcz6UmMuVVAKfzNUNcaV5i405j92An2yaD1dk7LBvsAT1uOwyLX9iU1U+xOhBwvkJqbkWFD679IoS3qgAeCtIm2Y2hRIjcHMwhc4JTMlDX2Ovs02SVr6sJzbaA+MbpFCIePDYkYgGTpEvJrc2IBsL2SfQsUV++cegt7aylSd4PBvnWpiow/eEEcCAgYOuXAQkLMCnR4jyHMJ/ICpJ/bBJ5ePJajLE1B5R9iBwlGzrH1jlyMQm16lcOyvj5AcScywoviBvI5vYEK//avpEh56JREtmGmMze/e2F5zHsYyWrL2uVvgmawaNZReiucvWgRapCRpXahYhhW3zEgtkkCc53PlLQi2qsIY6nbpl1ivg0SJiY9qnpNHt1OyXZLkBLsxHC6WArBy5lOpSvsebyBHs/1wvvFkwRSrZdEC9gjyN5MA3tF8BruiWA9vCs/1mQvkNFC0+bC5mb9DUDwaFSc1gJg5xGr5jRcoU6oehQTjv6cIaCrKtb7CgCtPkDhsKUqe1L73Rq7N0VIho4LxkCOKscNDd7vqHNUtUKQjzYNbZDdYCo3Agdc3s3C6ZBh8xE6g15BGd5kxRp2rUu8nLb5FVQbtTFObKA7i5K6GqDtRYpqQ1vKjr4AyiwI0XOhyBc/bb1pZkNkCNSV5gV3lSB9iGqANJDnRSWOKEcQjJ4uw6arwkJdDL8I5GHZxoAVdo3puPgBu3622yxVJrCUK0IvGm9fmY5BSVtV9WMFs6wk5FUNr87XbmTTPuUG9avW4sT1N0s2Yfdr2nIXfW/ePKTjuRYFRrZ7+TVUiMGLlzIDMjCmMqIWHdO/NFIlHlfaPn8p14JzJ1+BIYVggQH/1VK6M0raDFXt1+uEHSclicHXkrE1EbhVjR1I8SilMopxsSp5t27y6C3OmFYX2NL3Ts+ZSJY8IJhOmhzzCp+kC1G2BjMOMlfStrGi5RU6yTOPFBpXBIqohp6DBUSNZLTw0nHjN9TsRGUnUyDWhi65bCgGhRg5CEO1TKueQ6yZy8K0CnFkq3KxWxXOppLo+62zyLb1fxK+WNLzndkJgMglDUwC48ClyCvl7yVE0Ai4C091","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2020-03-24T13:52:16.618Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位是扇区，bs=512代表一个扇区，也就是512bytescount参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2020-07-08T12:30:31.812Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2017-11-08T15:18:04.873Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 123# rpm -ivh /opt/mysql57-community-release-el7-11.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec)","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}