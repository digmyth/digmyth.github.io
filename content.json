{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"linux个人小记","slug":"linux-note个人小记","date":"2021-10-15T01:32:54.000Z","updated":"2021-10-20T06:59:19.730Z","comments":true,"path":"2021/10/15/linux-note个人小记/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-note个人小记/","excerpt":"","text":"1bridge fdb add $mac dev $ethx 执行命令 cat /proc/buddyinfo 查看 slab，系统不存在大块内存时返回0数量较多1cat /proc/buddyinfo 周期性地或者在发现大块内存不足时，先进行 drop_cache 操作1echo 3 &gt; /proc/sys/vm/drop_caches 必要时执行以下操作进行内存整理1echo 1 &gt; /proc/sys/vm/compact_memory 123执行命令 atop ，查看当前磁盘 IO 状态磁盘 sda 显示 busy 100% ，表示已达到严重性能瓶颈，继续在该界面按 d，可查看哪些进程正在使用磁盘 IOiotop -oPa查看哪些进程占用磁盘 IO","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"LVM 换盘","slug":"linux-lvm-migrate","date":"2021-08-15T13:12:30.000Z","updated":"2021-08-25T06:00:35.421Z","comments":true,"path":"2021/08/15/linux-lvm-migrate/","link":"","permalink":"http://www.digmyth.com/2021/08/15/linux-lvm-migrate/","excerpt":"","text":"背景： 多个LUN划给主机做成LVM卷，现在要更换后端LUN，也就是更换集中存储设备，业务端涉及虚机上千就不从虚机端拷贝数据了，直接从LVM物理卷更换 模拟线上操作，添加2G * 2块盘做为LVM卷，第三块盘为新添加，替换掉第一块盘，保证LV卷数据不丢失 扫盘1for i in $(find /sys -iname &apos;scan&apos;); do echo &quot;- - -&quot; &gt; $i; done 裸盘分区123parted /dev/sdb -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdc -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdd -s -- mklabel gpt mkpart primary 1 100% 制作PV1pvcreate /dev/sdb /dev/sdc 制作VG1vgcreate vg001 /dev/sdb /dev/sdc 划分LV, 有意划分3G大小卷跨物理PV1lvcreate -L 3G -n lv001 vg001 查看物理PE信息1pvdisplay 查看VG信息1vgdisplay 卷写入数据123# mkfs.ext4 /dev/mapper/vg001-lv001# mount /dev/mapper/vg001-lv001 /data# echo &quot;test lvm data&quot; &gt; /data/test.txt 添加第三块到VG1vgextend vg001 /dev/sdd 移除第一块盘中的PE1pvmove /dev/sdb 从VG中移除第一块盘1vgreduce vg001 /dev/sdb 最后移除PV1pvremove /dev/sdb","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql高可用集群","slug":"mysql-HA","date":"2021-08-09T00:41:54.000Z","updated":"2021-10-27T02:38:52.245Z","comments":true,"path":"2021/08/09/mysql-HA/","link":"","permalink":"http://www.digmyth.com/2021/08/09/mysql-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"MySQL MGR单主多主模式切换","slug":"mysql-MGR-02模式切换","date":"2021-08-08T21:45:54.000Z","updated":"2021-10-27T03:14:14.145Z","comments":true,"path":"2021/08/09/mysql-MGR-02模式切换/","link":"","permalink":"http://www.digmyth.com/2021/08/09/mysql-MGR-02模式切换/","excerpt":"","text":"目录 模式查看group_replication_single_primary_mode=1表示当前为单主模式，强一致检查group_replication_enforce_update_everywhere_checks属于关闭状态1234567mysql&gt; select @@group_replication_single_primary_mode,@@group_replication_enforce_update_everywhere_checks;+-----------------------------------------+------------------------------------------------------+| @@group_replication_single_primary_mode | @@group_replication_enforce_update_everywhere_checks |+-----------------------------------------+------------------------------------------------------+| 1 | 0 |+-----------------------------------------+------------------------------------------------------+1 row in set (0.00 sec) 节点角色查询12345678mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+-------------+-------------+--------------+-------------+----------------+----------------------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE | MEMBER_ROLE | MEMBER_VERSION | MEMBER_COMMUNICATION_STACK |+---------------------------+--------------------------------------+-------------+-------------+--------------+-------------+----------------+----------------------------+| group_replication_applier | 2cc80a03-363f-11ec-9bdd-000c295cfe4c | sql02 | 3306 | ONLINE | PRIMARY | 8.0.27 | XCom || group_replication_applier | 78563b4c-21b6-11ec-a7f5-7bc466af3c1e | sql01 | 3306 | ONLINE | SECONDARY | 8.0.27 | XCom |+---------------------------+--------------------------------------+-------------+-------------+--------------+-------------+----------------+----------------------------+2 rows in set (0.00 sec) 切换为多主1234567mysql&gt; select group_replication_switch_to_multi_primary_mode();+--------------------------------------------------+| group_replication_switch_to_multi_primary_mode() |+--------------------------------------------------+| Mode switched to multi-primary successfully. |+--------------------------------------------------+1 row in set (1.07 sec) 多主模式下要求强一致性，所以group_replication_enforce_update_everywhere_checks=11234567mysql&gt; select @@group_replication_single_primary_mode,@@group_replication_enforce_update_everywhere_checks;+-----------------------------------------+------------------------------------------------------+| @@group_replication_single_primary_mode | @@group_replication_enforce_update_everywhere_checks |+-----------------------------------------+------------------------------------------------------+| 0 | 1 |+-----------------------------------------+------------------------------------------------------+1 row in set (0.00 sec) 切换为单主，同时指定主节点UUID1234567mysql&gt; select group_replication_switch_to_single_primary_mode(&apos;78563b4c-21b6-11ec-a7f5-7bc466af3c1e&apos;);+---------------------------------------------------+| group_replication_switch_to_single_primary_mode() |+---------------------------------------------------+| Mode switched to single-primary successfully. |+---------------------------------------------------+1 row in set (0.05 sec)","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"prometheus 重新打标","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T02:34:38.742Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"","text":"定义在job字段内示例11234567891011121314151617181920212223242526272829303132333435363738394041424344# A scrape configuration containing exactly one endpoint to scrape:# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;prometheus&apos; # metrics_path defaults to &apos;/metrics&apos; # scheme defaults to &apos;http&apos;. consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;prometheus&quot; refresh_interval: 2m # All nodes - job_name: &apos;nodes&apos; consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;nodes&quot; refresh_interval: 2m relabel_configs: - source_labels: - __scheme__ - __address__ - __metrics_path__ regex: &quot;(http|https)(.*)&quot; separator: &quot;&quot; target_label: &quot;endpoint&quot; # 添加标记，值为replacement内容 replacement: &quot;$&#123;1&#125;://$&#123;2&#125;&quot; action: replace metric_relabel_configs: # 删除指标 #- source_labels: # - __name__ # regex: &quot;go_info.*&quot; # action: drop # metric_relabel_configs: - source_labels: - __name__ regex: &quot;salar.*&quot; action: drop 示例212345678910111213141516# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;nodes&apos; file_sd_configs: - files: - targets/nodes-*.yaml refresh_interval: 1m relable_configs: - regex: &quot;(app)&quot; replacement: &quot;$&#123;1&#125;_name&quot; # 重命名为xxx_name action: labelmap # 标签名的重命名 - regex: &quot;(app)&quot; #删除app这个标签 action: labeldrop 总结drop: 正则匹配成功就删除keep: 正则匹配成功就保留 relabel_configs: 抓取前的标记，针对target自身标记，将来自服务发现的元数据标签中的信息附加到指标上标签上和过滤目标的作用 metric_relabel_configs: 抓取后的标记，针对抓取指标的标记，用于删除指标、从指标中删除标签、添加编辑修改指标的值","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-08-17T08:39:46.462Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"hadoop安装","slug":"hadoop-install","date":"2021-07-12T12:51:25.000Z","updated":"2021-08-20T07:11:02.012Z","comments":true,"path":"2021/07/12/hadoop-install/","link":"","permalink":"http://www.digmyth.com/2021/07/12/hadoop-install/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"大数据","slug":"大数据","permalink":"http://www.digmyth.com/categories/大数据/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-17T09:15:54.618Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件12345678910cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径daemonize yes # 确保redis-server启动时能在后台启动 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"升级openssl","slug":"linux-openssl-update","date":"2021-04-15T01:22:54.000Z","updated":"2021-10-20T06:58:25.355Z","comments":true,"path":"2021/04/15/linux-openssl-update/","link":"","permalink":"http://www.digmyth.com/2021/04/15/linux-openssl-update/","excerpt":"","text":"12root@stack:~# openssl versionOpenSSL 1.1.1f 31 Mar 2020 download1wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz 12345678tar -zxvf openssl-1.1.1c.tar.gzcd openssl-1.1.1c./config --prefix=/usr/local/openssl #如果此步骤报错,需要安装perl以及gcc包make &amp;&amp; make installmv /usr/bin/openssl /usr/bin/openssl.bakln -sf /usr/local/openssl/bin/openssl /usr/bin/opensslecho &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.confldconfig -v # 设置生效 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-10-08T09:51:01.918Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties topic查看1bin/kafka-topics.sh --bootstrap-server node03:9092 --list 对特定topic/nginx-access查看详情1bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic nginx-access --from-beginning kafka集群界面可视化工具,提供ZK_HOSTS变量也就是zookeeper集群主机123456789$ cat docker-compose.ymlversion: &apos;2&apos;services: kafka-manager: image: sheepkiller/kafka-manager environment: ZK_HOSTS: 10.3.0.41 ports: - &quot;9000:9000&quot; 总结参考http://wiki.eryajf.net/pages/3504.html#_1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%E3%80%82","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2021-10-20T06:53:46.680Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2019-10-15T01:22:54.000Z","updated":"2021-10-15T10:03:08.604Z","comments":true,"path":"2019/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2019/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux磁盘知识","slug":"linux-disk","date":"2017-07-15T01:42:54.000Z","updated":"2021-10-15T10:02:21.819Z","comments":true,"path":"2017/07/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2017/07/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}