{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"升级openssl","slug":"linux-openssl-update","date":"2021-12-15T01:22:54.000Z","updated":"2021-08-17T09:21:09.046Z","comments":true,"path":"2021/12/15/linux-openssl-update/","link":"","permalink":"http://www.digmyth.com/2021/12/15/linux-openssl-update/","excerpt":"","text":"12root@stack:~# openssl versionOpenSSL 1.1.1f 31 Mar 2020 download1wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz 12345678tar -zxvf openssl-1.1.1c.tar.gzcd openssl-1.1.1c./config --prefix=/usr/local/openssl #如果此步骤报错,需要安装perl以及gcc包make &amp;&amp; make installmv /usr/bin/openssl /usr/bin/openssl.bakln -sf /usr/local/openssl/bin/openssl /usr/bin/opensslecho &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.confldconfig -v # 设置生效 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql高可用集群","slug":"mysql-HA","date":"2021-08-09T00:41:54.000Z","updated":"2021-08-25T03:45:03.465Z","comments":true,"path":"2021/08/09/mysql-HA/","link":"","permalink":"http://www.digmyth.com/2021/08/09/mysql-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"prometheus 重新打标","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T02:34:38.742Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"","text":"定义在job字段内示例11234567891011121314151617181920212223242526272829303132333435363738394041424344# A scrape configuration containing exactly one endpoint to scrape:# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;prometheus&apos; # metrics_path defaults to &apos;/metrics&apos; # scheme defaults to &apos;http&apos;. consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;prometheus&quot; refresh_interval: 2m # All nodes - job_name: &apos;nodes&apos; consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;nodes&quot; refresh_interval: 2m relabel_configs: - source_labels: - __scheme__ - __address__ - __metrics_path__ regex: &quot;(http|https)(.*)&quot; separator: &quot;&quot; target_label: &quot;endpoint&quot; # 添加标记，值为replacement内容 replacement: &quot;$&#123;1&#125;://$&#123;2&#125;&quot; action: replace metric_relabel_configs: # 删除指标 #- source_labels: # - __name__ # regex: &quot;go_info.*&quot; # action: drop # metric_relabel_configs: - source_labels: - __name__ regex: &quot;salar.*&quot; action: drop 示例212345678910111213141516# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;nodes&apos; file_sd_configs: - files: - targets/nodes-*.yaml refresh_interval: 1m relable_configs: - regex: &quot;(app)&quot; replacement: &quot;$&#123;1&#125;_name&quot; # 重命名为xxx_name action: labelmap # 标签名的重命名 - regex: &quot;(app)&quot; #删除app这个标签 action: labeldrop 总结drop: 正则匹配成功就删除keep: 正则匹配成功就保留 relabel_configs: 抓取前的标记，针对target自身标记，将来自服务发现的元数据标签中的信息附加到指标上标签上和过滤目标的作用 metric_relabel_configs: 抓取后的标记，针对抓取指标的标记，用于删除指标、从指标中删除标签、添加编辑修改指标的值","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-08-17T08:39:46.462Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"hadoop安装","slug":"hadoop-install","date":"2021-07-12T12:51:25.000Z","updated":"2021-08-20T07:11:02.012Z","comments":true,"path":"2021/07/12/hadoop-install/","link":"","permalink":"http://www.digmyth.com/2021/07/12/hadoop-install/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"大数据","slug":"大数据","permalink":"http://www.digmyth.com/categories/大数据/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-17T09:15:54.618Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件12345678910cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径daemonize yes # 确保redis-server启动时能在后台启动 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX1+P6QbGkHfkDWMmzVMWh0C8vM+odUm/mSwhZY096m1J6nUgLJckGds2YTaUxH2GoV85WGuR14af2cOYe/NpPU5KsEVSwOZUSqh3Qhx89iJlnlo9Eci+JEY1VwF6Xz9A2xnEWWvQdw/+4yJdvIx5Q8f67CunseDGIFVlbDKAiJOAhdJOOQWANmFqx+1ielYADvRttNntXrgxkLXhZJJYRxj/tMuY9VTvruz5IQJZAqIrBJd880pYoOvadvYijCl+4fLU7r+/OI4bl/PS9kTbPJGpZL4K6lCB6x63sRkaHDUOnucJko6C025geE+15eX++zYdGpr/8xwkW8asE2GfElRu0X+x8SItgH6AQUVlUjjVahvg9vWDI3nGmEhe3KxfVkUizJjikYq56GmqGC3cc9MW4AehODI4V7ONd4baioY/8d/2+vG2FzT0PTwwUC2CKWIKhZjeE5WAI/ru3Bt9lWDWDzzsRV6Shg7DYwjkiRrtvASmXQxzCh4hWNfyIbG6ZDz/k324UHQroWcSJXj96fGnEzj1/iDAkVCGv7AwS+D0LaMoMU12YeZ7i5uyLjK9ejdyKYrTrOXf3QOuiXdfa+NGUDe3z+8b2h2pjUrDn/Ce9xtVulkHUITp0aKcUDtqgYJA2PWDXTheTApD2aR+jVrk17PsbcF0wfvKsja06GntjKw55W14ATdvzHALOM/mFizpDEZy4MyAudgParZ/Uay7tnmRvDLJ4ThYKw+ogy+176po51xa2Ioy01undduHe8l4fvh3biL54w+mpqVoN2VUS/kcnohFzAfbroVaI+QUZQkFdyWdjUGS16A/rzLbPHtt8oxqr3pvMOZymuh69FBAgl5rCKgAk0Rz74YtXQSwNrqQ7UTtVHSYENLf34X1Ax4n7s78nzypRMivAH1tVP1THg2/xJFEDw6CzwdtXdQy0UHEolvKTQtGtIHfdcpMOTajq7EDvLLgv4Y49PHWDC/+JxD7zvplbOVCqc068n9J1h8LuanCdfkMR1EPSFBFfVhTlaSlSN+exwx39Pxk+WiGCmafAqUXcQ/4PSoHpmjPe4eZ6IM1TrD3ZPYbo2hoWsHOAh68wldK2edO5XqBzzj+D5tWJ8kVabzfOkOufrVifmwJAmaBqvz3NJk95j+M9uIvSxGf3h6IdpqzIB/6jvxaXCkn5CmQQ58pEADEafnvIMNnzbSnO7d7gRK2naIXFynpzFTc4C9qlFOY0hoFMyvsDiZ+7+qnVjA2dZCKsX6Msjk+nJXBnrLehY/I2/KKO6lNpZ27AhvTs+UfrA1M4Vl5by6MdxfPZBIXnsuAbw4hwVhCGLzSc/vhF9T8JKupCfaT0w7FJ6L77ROBaUVzz8FkouLLA/uCs9QXYzqV1KVCl9XhtJJS2ahi+PLyz+lNWRtMZhc4n7a+2rGEtAx4TcV/SAu6MA65E1vntG2jpK93IOdQ8NQ3zGruaKFFMgtjjUXQbf5dwxeR/DcH5U2KN4IQvVxt2l2dXxabhK4fzsgoVdKlYmqq0uyS8WNTEQueogg2jiI88Im2arMATeH5aYoA0spoY0yokBx2Olqdh+A/U2vhc+QaVKbpxy6oSJIk83Ph0KSsYF6xacm/RRwqSrRYzwcf2FaQubpALOQ0aY+AJ2TDKEgF7KbuUSEG7zkkSEpMIE3eLVXxwSmblNPGP2TEJa5lqfNJEE17lfesdt3dYEatpoGHFbZGn8b2dgoVPIy+BCNzkF07mHcfvl4JYupiL5JEpcYBhkOSkj9UJGJ7JlCFyww7I+heuJ5Pkfrr+uKDWYWqGSdNDxFlpK0RzgHF3al2jNpMXUb6GRpi4g39OLQ781ykAlRmXJK9FJWZgfkklQE2ucD7zpOYOMaMdI7sZ4Ke58VtDfUIBCVdd+XycKPDzp2n8Bp+uf7VpdTR9njNquj+hBmiaTM/2dbu2xPlhU9IC5y6/I6X+bkckhOJtvR5IYjC3YOXhAoctZczKxutuxqVA4X5fpPYLQt6J91j5Ep1O67ljXAlLwhxa1C4YuSzTrIuskP+/GKZBmIfdq3tQ6g35TH+2D0LslJqv0sDexLmyatmx5Ee4iy0Z49XGoMkNG+U6lnwvrHYrrHjuVQmZP6IAXQgLPhPPGyRlQYb8VK2T0Jm+39PSfhcaJEeHgFlg2BHNUfsqQ1OYsJW53dT1/0VE9nTleiXQUO0i6ZW3wjo1qN1p0gAEdKNoPhZJKtUApVGB6xdeF/O8POdN9MKM89vfchAlihDcGG0JD2/rQUQGGvlaP2a2IScF2mTF2xm3Pb0myq1C4+Z9geIq79j3Kf2EIeot6poIov2o5kz7RtKGbtxl+GDztZgUo08Nu4Klr6xWkNbjoFQ/Tw0ZDvVyn5ZEukAzARx+1YspYZFDyDKl31+I0dwe9q+2jbJIEv7tdfgu7HKVdqhkZEbF0uJ8lDDU/0lHcvzrwn8DCxp9eSxbHDo6eNEZqLPqN7lVmhAq63PDDakJc2rx2NwLgRuyXHjh7bJ5hGqthH9zJ8hDBKASt2S+OSTBo8r3eUSXVrLuKWm0vHHbDe4X4jFyG5K3FZqlTwMVa5QdftV2rRgI2NLRCRmzTqmZPZ5gxb725VwgFRk7519Nc4XwqvInpgBc4zTOqCn7ejZ4vkBXl8lsp2jCNejsZhVK7oGXlXqLqzRi1ETMWPi7GqhZ9LJLVFrCOg9ypbUfE5OZfxv3dSGjEQ1erH61w/Uv0fdApReu03Nr/sefToi5UkZ0AUY41aDmaRmIHGN3e2VZv4ZIelp8Mnhtkm1Bq62k5LQiRy/RFG/3iuU6WfA9J9EuTKPziQ0wfoGSUvJxfmJQltVi3SvjfW65Uavl+U9ZZOrRDu8fovIN2r6VxXVtkiqCBIWzymQcvPZAiw8Cr432MiSp/OMLcOAMQMdMKzaEf3evaP/BnEZriBFFAq/WEFSpYwwFv96mvIoifSOnhSk7SC/OTwEtv2xbWy2LR4a4zcR5wJzWzTYeP97KLB1wTnX7y+haSIkmwU1VqGTu+HHJwFYOgBtCZ3QPvevGBRKNAB+uWg3IlzohnHvTOTVE1wJwj9Kpnx5GxEp9UCS2xe24JqGs7ek6tE3GhgSAKLbEbTU/eF41zBmABILaxEagtNayhT0KQWjTVLy68p7G1EOKJ3BJjSnquvIbv7leos4/wKBQRs4mvk7AiUJnFEr3ta+KoAf22Nxv+2fHukNhylIGv2aTUxjlH8l2uZYLGylxO07qxggD3cNo8HB8tjwRnkKI5PnRFQzQIhyhvYHObdhD3wShTJrQO/PVkP/RUhUe1Jbg8E0I3KdVCoQVXttktenvfvKaq0sNulHxICYMALoigwW/zixyEfO6QvaRIo5fBJpEEnzqHRptPiaOGI3pMEFt79NSMxfX/Fh0Hb3dEIZk7avg6nzzM9KHRraiUHWWPZeAL1GCma4QaZAQh2VF5y4vZ1p8DPdo25jSZ8ELtWapoS97aMQx+3eKJvX5wZtvzzQd26vF0hVoYiS7AvcxgJuA2cqYe6cJla740bDr6oQcfOCunxzSeX2ESXwBETzCYmuEcF1fbdB9ZVYeK5KKBI5grAfDT2KUd/Rl8dIGTm0bBhjC65ITW3p5zwxLMp8bRl5WgqvC+d40GUZByP0SLNRYFCrvt5B2MApGb9bbCJqYEf7mw0vXMb4qTr31rhLk2RhTsWe0wplLgal+Z4dy/vMqWiohqqQG6nWktePUCgMh3EDDUJOWqbyQm3BNkybjIM3GjJDqZmSPsxwwHwLmLEMxwkAXoty9SCyon36SStjqCXk53rHv/HnF/vH8IEyPcByu2fWcPrKvJhTrNAnxZlzOrbS2nsHSJ7Xik8OgeWR9I0cmWQIYRo3N2kXv6ljIukLdX2do8zHcotyU+SN/j+DIhtXxeuIeUdJVurrAiq+iAJ2qkXfbO2x4vsI4vykunFERHvqsRz4yhJSQIo/lEHHHVl1jDb3HqlCtb8IIrxcaI4YLXA6wbSFPI0PWMTIeNAQIvVaZ0ZeWUN26taQbwAG6JrP1fro4CPw+oqADt6Q1Vu99/kKt6LtWil79ROElBp0gZxA3r1VL8nbIQp1vcB0AYIltdUE15lLYgdcilg5dTKNESHCviIP5dNdXASnqzUYMG2pBWX2VQ9eoPiNJiFLMU2n8qmfmAfNC7U5UlxiKpTxhB7/0VueqeC3CjcaTvsVjyq2nk+3G94FU0PlRC9FOlbUSIGWx52avlFpaDNAcwAa3cIBMwjO89VZolzlDIQsAcVTVWtYoHgiqJrbnaiWOp8BbJXU/7grhZZCdHxTgowv4Vaz3EKBrq+sff/z35j3gb2OUfyEOkII8+VYjteX02v7dye8GAAILBYXalaLstsN28DjMtoc9IDDNECQV/JEcn0D+Bj4TeSJeBR83t/cgkeEkTEObRWU3oWVK+0aDs7Lahkk8lWZnm+FZHbkHNjI7kNruovXPRy0S6SG8jmP+Ic00P/15vbg+Uu9v+d3+qcgDqkOnY2myNjBC6ZZytpVkOYjNJi2lMPIQLDhotmt7kuHC7Wn7omMyehzE8IR5UIe+ULJCdzxEGsoGxcg/W4e/4f3R5WGbrN3jCvye3+fctMgxzedXYH9MzqGs0glv3Hwjypc0DsvP6yTwY9Wz1GSoSjkiDdW6gCwtqmank9N4HwCPKAUgZxOWPVa53k0EX3dRcUEE2/IVkCi7CFeksFPxxtWl1jPAn2xfSjbkYkP9CVgKxyP7p1y2WCQxLW4jtNd3LaJwSCSYiibEeITKe2XQYhTXwX93RxdViJVzaZNWO9Hva066hkbI0oUDoM7t8qdtIXbiuNqB2zehDUBFhG3UDpNxXShgH84auEHH6x2VBjN3zRzty+fmrE9yPlk3OzIYKdJt2hzXgEWGLOdmOOezcmI6YrxzY/7Z4sXHFoNNLuA27AfXkF/QYcAo7dOyvnZU5lDxh5C13yQl/brWMBgtl90X/qrmCY0lCAj4j7i3tDXSbUkl+IUuOBOYqbxYLLUzb4GIWSHo9eADEz+1VceAopDOC73fhzBQtRCSy9E0vbgMlYNrMtr36Ws9ehB6nypi4fq+3ePkAd9YJzhOUlmA8hjEtLDtbkY+p4Wa1VTldwGR9BTMh604Rkodhlu/m6oqeqiSlws9XGN/Fc2LBIESwPlCghPGq5PlxxBwAtfN9zOwsrS7SVZoIIJ85T9V8GoxMo5HzGZKwsYqsoU1ic/cKwPvEsJ3M3PvBW0Anhm9ijDC8FD7/zruK6O2n9KK9Iq0Fd0n9OKFaffiZYkSSZjlxdea+r4Tt+PI1ts8BAavdId+2hWi7fguYrZCdgTer7dKdDcu3qxndP1VNQrEttSGCvQo0/I7SD8ZDVt3xJsyCm4Xel9DgTdryo6yrEp3J5gXe5v0bqJnlnYo4iUlyZZXie3Phn8U0rq0I/rAQ2rcP2t+ttsjU7qpTrKxTedZfBAH3ssmBk6qYu/JnJaD+w6cXDIahgvYxMF1fEYvNH2a8fGEsmHWK77stMx0uiJudzhtk/3VLq6T/59x0XqL0V3ViQ5/4ZTbKd3scwDVdtQNTcJRg8JX08sv+aikNGa/Tp7yvbs1orbDGy0yBI9+fYGGC1gBRtkPak/KKq/V0GkZDPxfWJ0sqle3ydGt07OpLN/jsrMY2nyfrPJFTBm2UQAKFwSDrZadiZ3m0kwt9BOYiT4wqD6eyNhvI6baK7px1lXjRDnFLu2ouUZRqyh4e/d93CYdTeccFx0JnD/TqiwvXIy9noTUM8oIGLhM8PDoKkR9uoGxvEDA6C4/QvoWgpe1bvZVxMA2eNWfLnRZM+V9EhxiI3H7qw7fAij4LvXck4yBR6gPZoYFnggcuJQSaptRSdQUQGAdNKKWc8Vk/kL1IORRjWTYvJi/RWLwXqpM/RJo8dk7Wgu5qPGC4hJu/P+bEs4877e77h0KFYFgEFkhKQSvjSAUL8rIHR2nVEuL17PRdDIYI1cNaRPb7cDrrEEVgG6SxNFogcLwKDXDPRmQ4YouA86d1Idu0aCRytw4IFpzn3G/paqsoFC0+0fKsza2YtuZ2KnQGpbms01kxRIEHArw/cjiYoXCHBuyqM7EIK8r9xHV/c+/F10TyHv8qh4Qzqv8CKGLji290IgGI1YoWz6JiiYF9LvyBAdesO4ORpl9kC8LABIzUv4M+JUDKpd1PVr5BrU0XtoJLKxZsAFEhVnkKYtY4nqnrtG+7OI/RJYr7kmy3HwjAxi03oV4cawbN2IhAPJZtq+tQTX17SQyGVmF9PH80BNZ5EAjToaMgoMdiiTN4DR3kEz8KMjjdN0KRc1rlm/OZZG+Pvp7bTlzBOaUXnDCO3K6KXsH1yJcVFsokFrzvkTqPfnnMSz4EPU2fYBo6kmRDyBzIp705fRr654ZnBrmxdIS6vIBB1uhgcW35SfiLqh/jBFi5FcK1gTW1FqJ7MqhqWsMyncrbYZtCpDFkMfV6XSFZAA90XiGUovMsLf0rP4cF22kGVPg+Aj0xuEcpPluL8/CgKyvPjSztXLENsNRbLL6NZqtUYwvLh14enDUjBZQpMYz0X8OoV+gi0N+S7b2iU2JnjL74GohvFFUyZ1b7boMjzYdDg3cfnlUXLHzAXL9Tk/6PUSPQ6VGMTHKgi0eVTd8keLIHeB9ygln0aLqQDPB45pw0MvRki6mjzuyG+LcmTETk96eF9Rn6wtgjj3mLQoCjlRhpd4TmM64zb20lpubwahfYhEcUmvnRenvIuZQDBJsIyQcAC8RVxmWDjFwtiSH1iPfysduL8Wi19ztT8MTXoAv4h0c9C0JE/Wywy0k1LHkyFf+iIDHKEu+Wqd4F1mVMVFYZ8t+DOsSI1J/dbbTnx00Ba8zm5ef0g34hTKYwt4iGWXWMpbFD1m/6nYMj0VZAaOtE9kzLNNMaq8NVMtPY3SSOTqQwQsL5d8U/akFRz2f5np7q+ngzw0nqC5rlgPVdf++IkxN4zAhq3z+96G2sSfV89xIxZNyyjqr5b7ekN7mzPy1pOA65YdZJysCvZkQiRKCn6ggUoQm0pFm6xHUT9SRbkZZrj56OltQuupJhivgMEwbUdHpUJrVzYGjfVnVInh5JgQzXvscjPTdWCoieRCx8R6SOVRZzfUEO6CcMl05y6n47wX9RgBXDhv6W8jtGO1s4faxK22w3+/beuXcxrSS/GwcWk2EZOjpqnMeDvNX1W4UEiR67h+Z8yBLLAxXgeKWLJM+hJUBKSOitxDTgpSicf1+Ddo09ssn+kT33bSvNOWPEL+4ZB9mbs3yJ7018q0wKXVyrqdkdm0ErlhMF7okekwLupRi++nIa28mx1+MwXP5D4FiDQD8a/jiV4AkFZOX8LpkyX8yzbj+jSH1GzxY5ResAbLMD1VVHlMX7t04vbk4JsO7C6bbhtRK3i7WOdrWkVJvxHwIhbf3bEkYCO6sgtfKr3KnL3LYeFoKml5p4fGooHxe4KLlcn5hDdlzQSKQZttzlKYettkXhVpkyOGmNdBxHa8KYnKDY+M7S1dAjeSbkTXOXFo78aUfGjj4M9NfG8CmX7ubGyvxfJsnXfvoFE+tCterMebFVq4OLkJUPnKeVL+7ECmITyFe2z/rYMGHoi2HDIZ63pEFz7LOegyelBzWRvXWFGjPwZqorPjQ8Og2k24NEHCpBcj7kN0yxl52w8atGaKBdUms/2wvTcFDKNfMhWhQuLNKT6EjlFQgL0Kv5cYYcOfBhWcSTYa+ivcPrmil2YJm6QUrKVR9Ipc5VJhjjSyAu4/eOo5R3pYRzrDbv7fqQftoe4PvcRlUcjf4aIQbiYh+8LGStEXwc6IhXJH3+x7SSXin6/3BiHSqFQESMPaQKLmlBvxf3Ew09WccZmWwYVy05V6aOYwwcUtO85NYwkVfXCQlgL+7/gRX9dvHXMC/DYwNPuxRX81BiDd9lDiylTUj/gJ2aNsQPADMVFZyvh4IsOvSH87kyB9U+0YB+tLJ6oXkPmwS8fAUclnt3GcpKCmH9VQMb2igy7pJqQVhAs+VGUpcKvJ17LzHb1Rn4LXCuzAQ2gimUhtFxl+t6EbYk597sALStLcGytiIBjn5a/TLQsH/WM3+5B3OVzGToGz78M6NR+/O1lUA8UI2y6dkFgqhf6MePv9qTmNm/1Znahil4ae0qiPx6yVqHw3BXxPavJjNHuEPWH/2UV5PfRyyZPFvEGCXEW1mpbzg1m5Cw7YER4ZXuVdDA3O6QmyOeRaGUiY3Ek6xfoM+wMQ9tAObZCG7fq4NXwJhfOquAGGYeAAFh7k27nVQkFNcEAjpkvK14IC8V1Co15gPI+MbF3p+KzwXIg640b9MrK+fuqA2/IDyOUYHyKl2afzIN34d65lhqGe3HJ7qM71Kv8NEzyMFIzubvpX9VLSBSYExrdxV3nIL+2Q6nN3SmFdIAZwoWIh1VN44aLo8gSOfRDmpF4TBAf5NQ/2D0tXhWoZeWYHDFA8mHcjBKAIte1oDj+ccxNe9uu8JsBvTrSVWGpneSmZCo3jGcMY8QOJT9R650UfLULzXiZ6iwprkEAwaskW0S0I45KtSKZOwWNH+Od6eO3a0TSHVw2G3sGCiz/C6iU1Gp/UJXnovz4WRSV5kbCGdwA5VOeBXg2gZKj54btGlE5t+DxO6Vm24rvDyD+wqV2hZt4z/2q3td1OQU/Wl1GBMqhYjVcQ3epCXmS2UgN4xnX8iPiL5MvYypf0tB/IKCl6g6eq/ZHHT9wm9tGHxUBLraeMDV8s/nti7yqfQQ2qzWCBrzwfyqw+bg+DIrMmDdkispvesDBK1h4voFlVndf6MjVM1fMS/1I01FyrDtnPKAwpdqA32+SW5k5cFFMni2YZyRSVSMJ8U1ufb4NaEbshH1GCnwHRZXwLFTipKQPEarcUA3GGY5FAPThTwbETPw7FbO2V5XD7qkt8DspqfJwXQIBkMsKr41nwyNQG4ytLLyPBqv/+UvSm0yv5MMd7StKT9yPhoAlsup/5+WeLoWZBM05tj6LE4wk0qca3yIkJtjpf8Aa1LwomqeIxSpeuNyz5QzW6LIAcCxWZoEjtNfY1kL5Z8/BFn18Yuw79L9agwGHK+wjmRuRYhoRbxGUOUvITl85331kfgdhfSSd9IQ/9+CL5iop6PKeptEHh1HatqOcDMN1GF72rbV+0MHTPGWgHDTLsqprE1LRyjr8HzV5vteScPuG/HfbfIWEc2brvw4aT7x4iGGTBjIUQrobCFpfNemOv12RWjbtG57hkdNv71egbbMV1sg7evNce5N7wxO/apytHONqFm8h9te+j8kjia6j8Yb5WZgk07fQXSbZ5ymGhGL8G7haLGWrk/ADDAvRCVuzq48seHm78tri8FrAvv7k1Eoqgu6YtrAeBmgzGL3tN4bbGuI1+lZV0lOXBG4BOAYuL5iYeQyOmYcEMmtygFZuiQwvx0v4Wkk/kcFFy4R5lPPQamNPOR1pIgeYuORxgsOKDA7DIdmZuKEwSIB1M2x1qDXgubi1kMEZ67xTLdyZU36edLNCTaAOJi4yB6jTXts4SevoueDxhlPesdjrGKC8FZ/F4EGD2L2yOkG+ljyp2b8g+ZXBca2si1FHPbthSUkJlzcTIVkAzAvuE//eiLsXG+ZRkvSViSPQq/mDLazYRIivOqpO0OM3H7HrRXVU3gi6iY1FycaV2eDnOrAlnnafrs1uIaX7jEH5E5VqcuSFh9UFq/jPblA4NIixoEIyDlphCrjTMkGW5dQXqj84HMvVJUT1HAIVY6RbrKMpXJiYI5iaTEo4H1xnc0NfE8334J3ds6RCXohtHoBSGGYYSV319k/E362IFbvKE5TiK9hX8/KpCKuybYE9ACo1/lbU2msfxp74dFvhTxeN8ttpjCb5+eYu6nmdlY0yb3AnV5qa3N3cbkk3GgIUqmDpOaFxEc2p6tvuoI5JCTgVnFBU5o8DtzVM7cCXASVudwOo5itKzRx9aAGLw3b6nYB3BA00f7L/VZuzktkY6PetomTpE214o0uLms8hCVRVz6ZuLjbtk6K7jreU0+7uuHkRZhmCUUM84gk8et4E78DSsZ0JRveey1bbA7UDP2bZ9QDO6M/fAyeTdlvdNufVFATLn6R+8u2P7dynAmyGBypUisMATTL7fFvdqZebO/tF473PVk+6RV9vHezbFIk79C62IEUIJjJLN3An6dTRoWavSBbYtnIWYXI+WyN0CcyDwEK8+8ZDnavvat6IYel5G67DNqcxOwPMEHlLkXYUuPOm47nPyORc4OExFS+1roEd5QusUXivdTYbyk1nfam8SwzU+F68MqPXo9BD3dvCrx3MMORCTiGZp9D8Z2tZ2/m5tZquW8BEdKH09dNeZzT3IsSINGauHfhTIJBkMLk3evv+q4S475oroJHs3ZLA+mRt3pKXkajqM8HyTN7kH8TMtr5Qs9ZmEIHm43VL4ckXOICsctDQUfVva18NgAovEmUELlByKXau+xmSjopXHDbYsepcrem9K9f5t1DbUbADNE3jcot54ytn/kF8CNCPH/mXWLY5kcGzSLWqnrZI7bRoev6qCEyb1PQoNRORFjyFIadFIzl3Z0mF/fLkx3EagDpksTIZT5pLEWm/n0d/1qGFXz9ueD87XytNBVIN0bnKeYbvsyxYKH0a8AndTfvUlwjQq9UM8KZGjBcp4FbWMIgbG4bieOS2Pk5Avvcdo88Qh4HvUuoDo9W8RRA2yLqV/Szb1bA2moVTQfauyHsBim1Y4W3NuR8s9rivFSujxV4ov8AVReOSUqrUuF8LqMGOpieVgwJheipTpJZ9mAiOxgyA8KedV5cDxQAcp4cx7/nvbCB3IQ2rzokI/0MC8lg4FfoTxL0Q0eRJNi5iZ8zSpyQ8peRyhSzJNoma97sEkfd6zkf6BAtXQsgxGVi48sxrD+Vrc0wRCsygQ/lb1wy6irp8x61tZ12nyMsjd9F8IswlZmx3zQ+9mKWlDOExNu8AXrQhzIaxyOhbH9E5m8+R/UQzWMGpdBhr3EXCjq15lEX6oRr7mBVIiZan+0lOJFQ/6H51/V3joyCgkjoVuQoKm/1SbfdSU46+PK6TcdikMmlT2AlMgzZBEhUyOJFqLN/5xZGktqkyd8M8989nQdCibI+IE3vqmA41pTY+uib/XeHr1aVEbhfxM1sD1Ftepeo9BwlhvDxuCkMODdvCa55m5L414Pdu2P3kAMG63GdjbxEJq11r2oG+ukGHyjjkQ3/EEBJ/MTux0oLKwQclAimfJ45GpxzBKYpjc5pH5/BO5Zi5nqLz8PIGKN04StgyVG3Enjs8SqsgxtEEzGytQASIYl76ZsP5IeN+jutxU7i3zHtfBUP5WRVSC1sjRCKBUDjwZ89HUrpKsg4q8RO9kNIcjjDNI41KtB7K+QUkZqA/0HUeIsxD/BMtAqTBD1l2CF4yOwOkMXCLGI5w0EL68Y3LifIlxj/AMwiqcyWKT4hV+Up9yp/igQXyesBvL8ipzNnwZrDw+eGaaABniPBUtVOVPTdJTAZUgDm2T126+bjUmXZSsDP7bykgMm6IK4BRgGwybjPg+hN3NsEtPc1pqpKglYJIeyhD30HRq1IGuxcGv7sttoOl72qAoc+hrQhgQiUUmJPkrl4+jXjyj2P98T2ecaBNW88bd+6Nejwawjc3XFqesQWEQr0DVt2MJZHiVwFLokEovEy4HTvCRkBPNz8UHs86HmMapoyfG6SboN9BBOAoJReTWQGqLCoy2k+spAnGpk2x3i3Sl/0Qx//kToZdm6DvJ3NlW3ojRUL9BQN1n6eymSBgw1/xhn3VzLUVCIkW/AY2qD+X3SCpWmhcBTbjkGe6xmHFGVlROqTtik30b1leFn65RLRHkDYugYg9QpAr71ia+meHVbkOA9qds6yS7AysbMg8I9WAJSs7GpHHfEzXaPWJuwh7U6yMAaf65pF1BJMntBdh0xY7zS3TkDUKo31Tv4TtDtKLCaKExWQAjngAbKKFumBlMJ/tlUzdusul0CvnYceAFZ+07WIo6ov7fDijYtS6zaj94nA3FU8XWEGNVBzCQDypSx9FKZFajshMcX6pGVq45OTIeI44TngelF9sC1nO4PxzfJRbBepLOoEbGRpZZnfOEFABG9ouxbylmQhuBCnjtdBIbZCqDsyOVU2Ub3K73lk/Hax/2f9R8WIWNwUdnJM+atwggRPSh9+hXNFA6p6uhV16UIdjSy+ZWRumhFK4NxchgcOkSI5Hrlct5zXXWDvgSTG0bwh0t9NhuESgRQcIiVSS6kUAj6lhxW5DXJl/yVSnN8z/gvJV8Cr9a/QGElN0lm/qtqaT87jmeeJVluAiGSr41hCEc1H3rX363XNKR4xPPDYG3iJiOV/zB6rqyrauMpMnkkGYfKgtIgbqZsa/IMCtS2d8EJ8nBMddQUUWPh2np2TjRNaIhuBbTTLdNFK1V5IGId7irj08SVIi8KNfxg6CvHmWWBk+KwRPsnL5sZfTUWdu+oalrInjWV11fdMkQUbHqEMjjljFN/x8cK1aAMkfUr511mPtR2ljEXiwSZPPizYbJmJlJ3A/X25rG2Yo6WV+Ih4+shGaaDtX5IG+7E/PVU9clx/TBsYqoA0C0yZ14G/bM630ramG/3iVqiRI0/3yu4bV9npvX/R9V28KsXJ7g/EPKapWI42c6Z+iXla3wyxNfqX7jRlfCrpUimIPg8O53rb8WH6MYO8QAfaFgVZdD32TYztdhVS3R5WFIUdgVNq87rKpyH9mHHI0iNYRpZ6qwGxYViJhOeCF3mL032xMhn29uVRf8XdEWd3sWx9zcYbKQzgodOBuWOQjeqaeYQGLRpIsag+9fuudsT6gYDxD7C9nXWZwlQDEgRvP1IP3C6NXJ272jFjSd/dY1r8rcleoS5NSdIxBWhFH9DJZ5hdHgB0sJVpJs69u74MoSS3YrPJxkXZP4tEa+AYSBl4gvEP+svkZPsYtX43onfSu55io3u1zCDYQxiLQ4t9rFohoXXZCOrXZ1I1smTmH+0AOb4Ub6Y9QvoL7/5Y/riJQZUtZQm4SSy5PTXxWcv9MtJukxtdrXJabJN7Ufj/cLc9he2VAHfogikEgfhGUWCsLDqV4Lbu5QxictVo9t4mE2nOQI0oIeYT7MrKHgnZNUWVP+txxMHuJ80kWa01kiqVEBFmlfl4GElXTPHMtrf2T5I2mZ3dfQM+O0pd+k6oaPpCYDYIPA6moogQQySN582PSZgeQ3m8V2CeNu3vPB/++zAMdUYK8uH+BjUkiMPWCbaVoAb7IY/6i6zTqqOuJ75eT4/2X71imLBzWJZ/azmGjv/l2ib2pfmnBHJRpwe29neWUqO2lPegTG/S+OnSLHnx42ubJ4ZNeK4NqAxovKC7tcWXoQMD/DsDBg8fV1dHk3jx+3EYEbd+qMZ0Vz4NwdJbC4B8AHCkDtezUF0TFZHMYQDhhkY/KBgTWEXAml2kg59WnLFyNoUoZqz+aldJ3bAXg4shFszdqQ4tZbxQLfk1zwn7+p3GeJ8883yrfbpSMy3uMJr6JAcKZGZvxoS7kxNQBU0CPU6Hif/PMnchq1W09iVJH4/r/SCflSIwYrZeioI+1Y9vcRLYIuCRH7Hvsf4v71aj/20WP6kbTr0dralIR3Ldlu5ZXpR6zdE5hJrCe7WHNzMwj0ey64SkHOE6+HZq6i3QbCs2vHF7jlTySQut9qJ30xm8fc+sAOhwpe/DnOLW+j0fxoMfbxLELCSVoeFsscRWCfXMXZxBrxPKkAn6NdIlUO3RXnz9Mcjapy8dufXLjshhjyNDAfW3+pArvd/Yiue1wSliuQg+9VpLOsWl3sVRyBxSywp3SovCvZJnajnKaei3J37O6JRLXLWjuk5MQDWHsRM+A+MnyRqCDWKfLwacYodcKQIBF8uZfyGJMOptjrs5+VlGgoLG+36FQmUmdsJO3iQfld6MF4QbIswM+y4WNj9IG0bkb6aJlB21fKtTkZl2oMsv8CvWRYqW1BnWkv/EhYq2rCFcniURLYROuPNyiZcPushKhOhvUSkmUyKcnCgpbgKGb1mMikhRHeEi3GeON+havUhgXsTAxjk2xyceDzboLazKqduojMHpdZDJmqH3hozpltYtnZopdUNi9KuIsZFudI9OQIa6hMy3fvdo/2hElFZz2vlchzHLym+mCt36W8oPRB/VHEjNNNJoxM3V0xTMno7Zq7OieveC5A69Edrwh9d5zqDddFdkarBp1ADevs+2NQQ/fNngfER+o0DyalfA835OjVC3otcdxrEOUsQbkIDUxw4hhzLX9afYtNYY00VBFhGnpeHHhOugtIzIx5hMGm6mjlvZQqWIrm8dtbz5B1UvNaYJ8ICC95evNhLVWSZePX4VeM6WbZCJgGwjSvvRjHK+lXzCmsVxAGY7/0T9n6noeV/hNKYlau3ckQYyTGErtBJuFry7PoGknmLzNB90YZENzknTl4Wk4LkPnx3xT0x/4EY+cJ+niPmNI9yPxNLKr68vonkCk54rb5E5K8aDxONW2LuZny0orR35fn/7rqwmfa+SbLY0lrSVaCtyiu/mksBP49/09mQiqglf+kEBXgNovbZQ2G1N2ra/tlQgBUB9i0s6K+EvOf/c2eQbPzxNo44XtPWpOTMYxxkAlQrwmoOJDHpVMZcrqqBc8WsmMlOJ4m0WShXYyj3tIlV/B2IB9bS+ced9Yq/5QekFAUvk3k3dnx4L9uk37ldW89AhvuFkfcosb0AqH5G4DpRyon10haNkZz0r1ilkqZlW0FhruLrzg35V5953lghP4JeGWCkyI9CpKfCz26ZzNTLT8wQo7DLrWvdXCaWwaWEb4vAE2RQqBH6QaC94ZimqTpxBGPPovQOWaT9cFJNIgh7P/z2K9G81l4fge52BjjQmzWFEgvjxw1zfEUtbzlI5sRntt+IzQD8N3eLk1cuFheePlxSZyU272ZI/D4HnH5etQEzXr0wp1Q1pPgtcVZHyWA6ooEzmnbVR6Q6+Yb/LO1r4n91qeW5loRh//C/Bu/MFs/GEwDPrNq+pzhQnOisQpxoTnz4NgSc6gPESuUs1Bi1pG7IwLstDDD2fbpBeY6TLitZNk7cYtiRue3UVcQCKMoSlBZyQLCn0cFcuiGhwxMGiHLIYm7eFvpjT6ksZLErQje1SU5pJV2LqTzcw0BbeS7/42786OwnNYjG7jt4Sv1jYtww79LwcR8l8kJ/lylzkV0Fm52uv7CtzRORnuZNpCbyb87vnk7E9L9KX73bod9KZnGbU8TxJTtfItE3bR+2yFvuzSxzmAdg+ACdpde7PhJNlkTgZyrplt4yGlXXVx+dloKAw+iFjq7f/ratiWBJEICDOmSQCIuSPCmZE5iM32b60kZ75MZAJoeNjSuq7WCmqPiyeeRZS8iyyb2m73jo1LORbwqFuGT9j2bWdjmAmNB3arfb0Iq383zfOWGrS0xtKiQpcVcOwaF375Ag031ve+fi99Tz+WGtD/0njVojfDUb2rE0aUjCq8V//OBF52DGB9tTzwNHNbhhxxErZTK6utKW8vD0ojCMJFqs0BpyXpLVDWYqH6isK9E/6AYwYa0jCGTfulglQLsC5IPMNe4VUkOeqG2JU0R/cqufzSv4Lhufis81bOKA8g+FruoS7B5ZmMuyu97ZGgPteZIwpSnqg27QnOqMvkzqD+Iyi2aY54AfCnERCzoyqrdz5pXplpkqYyIbAGluILYc+MEqhruefkPDNk+HXuQtA8d34lUMwfsBHFXKn/vcnBOIijWGjR/95qRP8Oq1IR5uhS9NxAEgk4RRYF5UMO0yblzyOsV/15USjbbhE3bjgAocV8KqPS8Sg9y3qLT/ey+wBU5XU7Nq4sNcxJwSibVw0qVTZv52nTo0qHAncK30oNSlkZ5lTtMlqAtSacrbce39aq4igRwSw2bcGDE6iqCAYvNq7Mfo8B5rrjByQZdG6P9aGthuGuoI47iXIXR2VKO6JNasjFYQJXAdLPPL9ddDnfssZHs2UTdOeuKaaKd/LgFHsCo8qFUgKPh2HrekeLNHsGIqZ8Q0RVEeAhNALqgfUQDeXLxDdXVcsEiDjjRGugeSUF9SffNnwPcv7uZvaJb/hQtzmlebe9LkL2Dx5DUQa1c8/ZkAXUWnePIY4N8iimFlhVxUeUT8TkYCD55grNOsX7aerXKQfnQitUxMzQ4UQu+Ka0n6jOPuOhh64cxI4obO8O+IGokVPD99LDihcdI6L8iqEYr8N++yQ5B05JKOSBdceUbV/a6KBu0iDo5k1FKTMapq61DFxZmbB8EfYbEvC6TwHrTYrn8/Wg1mn3jeTt1Q9PtLm4Zk3unyyruHpIDqDjK/CWOzUZsqbiqV69x1I0bDVIiyasXVIHxwXelKeAleRuCa/2FJ+WhKNtU7Yqs5nwr8jwF/ebhXLt4mdd0eqdTjNOFbqyKJZ+O8YgH8rTWMx6Vlu9ordqJHypjHpFSW0NqOcF8VR/lH/gcqyB92kekpW/O/Whq+nyuhcD1o/W5JVCIJTwDK93JjLhne6QNgM+YdBf2dDeDVTswqqQypBHc7RjDA5lHt9ZSgNrXsqkmmiPZP54+1Xjtzk4gD6hm5vebjJbwSKBnDu+FEesAcAPR3B3qFpRcY2v6F4YQbR5gPStM8rmtsqu+BdvEX1QnJ0QYQsZggP9TtzeO01YYtPIoXQ4GqtyE5zB8pwOIGxl09ppkWC8TN09YmhPNF2GHU2plN/NH4uOp2ucOfuGBBse1lt/NociyNDG7DgGbd1PsA1EA5yoOfrJ4+zLcqGeupPCLN7RcosdoK1v9yFytW2m8TDZx1QzJPIZDaO7RGwZN83d7o7+W3pbFzLqbfofKNiy7AXbIyCKi19c7psHbF554Mn++pqVqImde4FocUsRk+K0lLXw+FwXcaMDSiE7UcfGEUj2Lx538bCMBXP7umM3sgxB1qLL4ygKXZ7GDeJlmnj0ymdQHMR8EoyWnr56QuhOc9kqr3UV2xah/1VoMzt26ExcEtKNDIBWfv0QHZ7DyFSe7kY/D+gQeZMdib7Qh7KrvQCblNy5rd/fiFu+t+PLwQiiAKP4d3Nd2GEcJiXWG6Kfb4NOREw3sz5DejgHVSbTz+5WnSd65x33h2uD67jS7Orauc2jq9Yhp4wKkoFlaVxhme8pgEDEMwM48B9lEJrh/JiopoQjG4q6eXTIIqZUuVhWtE7miyUAhIMVHhqx34czFJUloRHXc/4f3EdRLzSRBW+Vy7w2j2kKtsuaFoCz9ZgeyWdH4GSIm4QIo6dZJyk9gFkruItLPOhfVFA2g+ducgVrL7mkS1asxPxgehfzqot/sosmJUJ1ohgLvz7KQ4BtHpqh9SW0lwFMk/6T8uIGLUoBWwRW+0uz1V4Gcr2d3iAYJ2+Cr6ojMWjhzmAL5bsB/shQLr4CHMX9lCS1pnw9L3g8AWDhvYbBkjGkZiEvCokRHgnqQte5DBzLd0Iqj6dXJbJHRWdKIFl2dK4/PRLwal5kk550tuu61qe+JaGQ7YnxTnraJ59WPrcmbCgW6Fi+YWqOlxuC9dKKQW7lj1X6ivY55i+7Vzjyt21pYa10CB6I06O12R3mhuzuR6R3kSAtMQkvq1aApaqXNwdEcHV4XU8VD0WjFXWQSjgw/Z4sdHBQqLbggt1E7oYylliZMWzpSdcIm1hMKprRIoOjukF92T5E44ft0H5IY8Sdzc0afpWrIxt12JpcOmILgNlUnfFhi29dJv4jfGIeFPhHGz0OEY5SVWfJKtU4vYpLgWtTm9E/sokIvGC1+iO0xEOjI7vaFO7FNlXNrNDytPsB3xrT3Lj2ew+S1tzLrWPfJTrt9HEnR21KSR+/3miOwbP6MALMkzKIyrjS7/eHGf37bQHAKBtMeARJJkWo8fXW5wjsjrGvmiYOP0S5Imab4NB6eOuu91c/iXZdxgW/5kBZz/vqT7sKoM3Tx6mqrSSiX6aw9UkTWJh1qaktNhSe9F36jewKGwPqh5PBtTaghGDsiAEqLrpuFB6hjRFcXwABD7puvOS3JnelJGqpFEb4Q9eAZniNoFGJATzjgFX3TSrQgHX+KPOQ4bnvluWQRzYvBRwjrHCDn9d8FgHzTRxJ0SHDwirS1GQEt3Ymx5EtsSBXNgcGSnWOQWxo+vNxc4Pj0ZKRQRVI4VM/MjMUsoYp9joJmHZhF0Gn83oQ4lKNKqv0+5yLzKOYwTZvQEdAwIIgezE+otI3yIdp1w6XSJf+nWzkNsl9adVfXoo7Au3dvH9YFpkJRY7AZcI2q2S48SWVEupVCVg6iBkxwzKVYSfkuHhbL3OA4RdGQSeQ01UVW6z8ZfyXH8zzhEUl3LTksE/j51zf/R+Anz+bTlJ5yQrTSMTu9kpBA5MmZKAxyCqSlgnXbdV9flFjYiBLtyh6fil6ohUSQJRkAiGbYNgumq06Mbz2SIx1DYcLoYNNpoKdzvo909lEdepGi7i2w5OZAGxmrInkYFZoB/xCxlhsYX6iNJdX9aZb2v9B/EoDguplrfqMiHXCKhQI+TIJtWzQsU4ODYj8WoXUVSpOMOn8z8tQpjMpWEfzr4suNGr8EFLQyFx9QDrPBabTrUuFsZiJtTiGEWZUMtomvl4LKGECFMOPY2UeWBGLSgjfquRI6oG0xWIZBm5tFTqqR2cVlPMVghgP94EvmJTDOW9cziucEL8gDTfS5jvPOBM0q69ObnpbaCHlSMRffEjza9SbPyaYXY3ozes0cuTFJdEkYPYVwxA9he4Q+bk6b3PAxU+9Gul1/ILIlCE8sWJEbLtJQ3OFm4M1TpSno5tGIEs0vrQz9gU9/95ScRoBXDyaqUv9d7HvlaCUyRe29n8H38JfJf3LznIp1Sp9WEVeCvIikX5zcG1kxtwvrmXURey9bmGRJtU3FPwzLZloH18YXE+lb8TP5fGilYvQ1clG51HWCqrtrHjvWobjW73naEHHNe0x4fWAQONhxjrrEuexIXFbXsyE5YIP/zfCMX2oLDxbnqr8pg7K4uu2vGahEcSMK1sbcY4ilGlr4jfDxPsO/ZX/QPZD+45NyXJyftptgCw/LkzMdJGt0oYi3Rujb47xC/2Qoaw/u0bCsAcoxhuBpZUfSu8kFn2sFwt9Titlqm1QvX7VMDuwOuxiwvHGuQAAiTORydIh3pAw4wTlo5gJeZqGL0/Nqi/yH0WseHDKjGr0j/Rx77hqA8e1Ra0oV9PVj2pfIuctHtGjF7xdoqSMTB+YROOZTt3RXdwB4ROiDDr6jSZm22VAcCoYlHRiWKkgftLOwDz9tt8AlP8ql2JJCkJZvloRS7heDScfzCpUdn1DH87iZtLYbyNW2iFk3c3ODISb08fIh66xPeWb4Hv24fYR9wq6obczpP56EmY0jBG3AW1RTiiJgkw1Yd52vdlnsZnWlWEgQsjgj9e0ZzQ0+IEgID0Lpr19459LMPYWuTsFe2zFINb6z7d4kK0/pvnNxWxuPRvHDqLz3ei0fhwZjoBZPk+Std5Yfdd5nK5j/khnjfM/QJHqLfgAyBPvP+dAH/CGvhu9NmXIAbJ6G4vvrkie04USpZ6ORii193jUGL1maDTjXwABQV5v0Rjx7uI6pO8gbXd5VFLyPvwPOhEoQrEvTizdy/IQ0yssU1SeTaFXCosekcVTEooSRIo2ec+QeZoTmu4ksg87jLf+mOxNlK2yiq55fwRYmqVkDeAbgUl2v8nEdV2yOBHFuk7vamP9DfA8PS49zq3f9A8bJaHTH+Z6S1yHVQLzaNXRZeCyhFoiwUgw5bVXUfw0qEID6ffpaZ0cPMG36YlWZdGWrEV3CAQUNgYK4b9i+a44qhiJMLnj/0tEwVKin/47BfuycVyI/4rQUR77Hx8+Oz0uFM70CSPHro3t4hpW0xamHr/Gt8X0at0kmMB0P2w/b0wGJurHbhZDEDNvHYSMMNaqzD4vH9riokj+yMK83NSDLTWKG9ZV+s4xsn6GFpKhvBsw5e/Oy04i//uLDNIDI+ubfBaFAckJs2RAfsJC9Oa4OSHgfWShnUFGX3AEOZ8tN3bS9EOh5E8nKo3TOGfXuYH8ao6Tc7UcVcYwXroQjPA0YnEvhD+XofjV7ZekYf/JL9LpMrGxqn0xvfCAa2Me5WPxA80iW+RW+me4l6P4X7YKQ4gO5tzl4KNHiIgKgjRKP5J+kR0iJEkDKcA316g59w2OqxAtLXVpaf9iJsZf9AKvRQcUMX4Ky8SDkNtoyWc/iinL5ymClIuKaBmPlIdKuEQcUKA+YtWIT5xoDXl1ZXfKwfsby/NapInIms6uU+ttsT7FTvshdtolNcxtQyjO9rXti9TLCCM1fmUxX3P6C4rxVpt02a6pkLKdgoRpeQ/Khie1vyZmZLw9tsmTCMJJYwgu2rYqSyNeiLDgTjLL2lOxZt/nlA4UXTBs3rlG9EBrUYVknO4Fi3l6qjZJBRaZrNpHsxTzKhM6jTNBPalPIpIoUAHh0vdqGV3WAbhkCJr659iYRY8f2KFADyV7Ijno4Y9kZe6OIygHaIs2uAeXKJgUbPtc0elzrPwOrOZ1EgNHW0fYQ8kfbbbQRclvJ5HAnPmCsAP7Kelyjhm3F0VuO0+q0k5MOxh2AwKgqY3NMiWpNYEHMBid7TADba+SRpLpWgkDCm5GCtBUAiXWRilwp7wfPtSo1nHSLsvR6Ej/tWsVSne+OWw0OHHua8eNVWL/O8JsgyHoB0dkfh7E9GTQXQ/Z5pmUUVsoIr1eLl4gL27gMzav4LhnXmNDp0NeQ+ZBw0r/iDwo6enwGewoMjMSHlA11puO39PaGlWc+W/CP4Yli7bmF/cLnRmkD45+eI2zzztRKSPNCUw9J/grxaJaxPn8usxRhkepXrGTMZV/JEuxKXVX2gs21mAoqJhv37gbiGdogezvQ/ur5oqG7NvxlKBK5USfy/JNSFKkOLLNQdUhTc6QFd9uk/jIHKICAD1blkWuQj255fMU1MXjozz+PSoI4wfJ++jD1FegFf5r+wf77VUejDdnBDCHKqOthK2mjwaOQsVXjuU4M5GEUq47Q5y/Qlmy/YRCnCWK8k/okEjsNIcnwOK4dLhdQ1ZmblpsulpVZSCPWEkjPNJ+mzvjfbbnuIhsEmRXLbpIe5ho0vYofk5RmjjyYgMBvk5HfGVcSDJpJ2Z7+pzF7/cWL/fYy+sAm6nNMk328wDdZ5J4md24gZICRc52YgCWG5oK6bCnSuHQ0zfDKlz5xyMA6hCpBG/y87rFQhYmi51KaWISrOrtvWWzF2Kmje4b3reZ4buLYvUmJUlMKZ1Oz2WSKPWPNo7ns35EOFzX4kypi5Br8NkDusqLkXjVAjPsuN8yCOBPNmyTxcVdY6zOawlFU3JksSzGYS2w16ZWMMjy477SjLiRxl9k0DHTkutMr564UAhCHAwkBXvzzJsyG3fMACzX2EGEVv3njNbKliDhwZmBZVNGwNbrFhiDX/BAMYZMHVQ664qf2HrsTvukNPD9b1+enoYNpQBRDi1E9iaLGElDS9awJicnsDok5Kv0WGBUBg8Z19rr/8GaShcMKGeuQ1W8CNaXdcRfXLTs8wwl9uSgOL8J266dH3yuKLPVzHwpKlYz7UVlAph7/U4SxEhYzNpiQS15ID3Apm+CSCXve/PxGEiyPIC0ozsH/P+A1WaKvru2y7ijHzcUauZtGo1BoJLUlqxDEsObeK0oLp3bPQcoP9GqYqMIBsfkEV4Gc0riJCJSYE5BPJCmmb+xYFvwEtvGgA+ohBjUxWUzznWLlHaErhsTj5IH1wWMIIm9B9loTIqEPRSQrLSk85NucqNr5WYkQYBdocgKfy8EmZu/PdWrnP00Pwq3Lx82aLpzNGF0p8TRInmXWiSpK0A7nBiUnDn/SuYVvqb4pjPLJx/gP89dJELsgaIb2CVLK5Gyk5WGQ7JoA573nDAhkwCAHkwg7CkKNok57Gs3OkWxD82eN+3L+vwXm6ykB6XMTrJQrEaX9koGTffMTzR4MJiMHty5rnShRh5KHgpD2n3L3OAm2MoYgOOLsBPDD/cNNhOD3I6GWc3PEOZUKOGLU8BKWxzEB7w1lOhGMh/E7mhaI49nzjnH4knlM6iGhpXQ8MC13YXd0UTTlAabbeA6fE5dlkKFMC8GKGXG6v39UBYDkzoFTtpcM7rSJyXSgNjDlsNA5E6H+RhXrYyw8l4Q+CqE6MwyVAfAr5mtc/LRGZ8Z/dHrNufMNYPdRYb7EGqUoUBE2caQt1N1EKHgpVuFC+cTWCseJONjQNIomx5T8duIucrjNwySPw9gznrVB3BsHZphTfOrzk9EAtQJ002yGKTyR+njAvV0rooyhQUL8t5eGge88/UuL8UrKMgxsMZv1ztlmMyDS1OEJQJBI43syNQlIGnIe8sJIVwOoY9ppzrOBHVh/OqaelZydvqWW3Sssq+GMVYOytEt8sBYyOyj6ModDAT0Rhp0dPJDmZabb3nwi6FDTT1pXHPmgU+pImFYtKD5hn3nL1OTdZKb02XpzTLF9oJeW5UVs/NxnbyWVw3/no1QlNh7c5g8M+HB20JX9mo0gow+NN91spYUoWCdjWynHIp3WMOAZPcSW5k4ZlhBuwLdetr1F4Or9HNtVuAn3dSJD9ws0lRadVvdy8rC81gu4PSeFoQ7CI2Osy1oQtGFE9/xCpMw844ZFd2H3RNCcUsmcMAnOZG7hykQx1wryGKYVWur2BagIGLKpNia11ysKzPDJ1xNZt317Q34uw2OPrGPB+yl31FuS6OQCaTpj9Dc0Q4fT0/0zy9DIv2JTLDtG/FPBjpSZw0wOab3FH54M4lF7ecPtDhunig1vcUiJKDXzpPRT9tvcqJfgKmPNar3JJZzFFXonegX5VHx4ko+nGC1ZnUi3qNDoYC9jGUQ2isZ59DM99vsQQ0j6Z18S4N+SY1JtvZtk9mjAjRfe/zfs0Tsnu31u5L/JKgBbHOw9ZrK1QgyqQmJXABApQfR+SqsJm8fe9nFv71xz2NB0Zg564xp4Kk8FNXCq+F54/TCKS/p7/yVgWaPoBkbUp0iazxWWh1ioqDyduj/DgL+SbcDT/Q8Y6SqqE/JG+oiIxalM3oy3SziqDJK/+UOqaRivzyqsDi/2lpkMAPKWCrPk3Mp/FpLEBfzxppGZpR1t1CP7kyptshx/45QkpJMq1kksGdOBa+3tRO0jKzYQDKT5LSGZikIKBOyen/Cz4dXLK5KY7XpdO/Sqy9AtvBmPJL8lQCKjY1U/23komgP89jugjq2uJTLmbP1MF2CWJn60CGXkc1IlmVeLLT4TPikko+w56oaFwtKsdME5MG84y7alI7umQKkfWBdwgfLGT26Bszze7TaWHvK5OIo/Pz4/wGNr0fvpxfgwPJndgpaW2pT0H8w9ulbFflbYDYkX2HDbZU8C1ref+lsld2QKXfKFCN/tTpNEZRg4cPfosTHsAsn1JBSr/hfNHY955L4SvNQinPa1CuBG+f3Jv0a7gl6eAxxHIXzhO8m97rHm00coADgzyu7VcUQY2jMLjo0PwIBi8+88Lg3lsLbvrcDLVHAZelEcafT1VtgOOUK8fiFvSL02FNW0s7YnSYlEIGAWZ07+11w7EynUiiVexCWhwuOPcm/ZxsWT8EfEpRBLZJlItg5RaU3TM98H6QQk7KEzyVs0Kdi3q+z8QEBkfB5CWPyg+84WMIJaSlJ3sXXZ/U8WJtELB2JsIXvr95icqAvHEcqYJ3FUCocrqkdi4hhTL4a81KMHN+i+qJ2BZPoNBb68SKS6YzT06k2GxaZ06IEoxv+nX8rRcQCfDARWjEttEB6jD7yStgG1B2ydBN8BezxcPeJmi/+PaAm/HOG/1QN+KhUk7DIA/Hb9Z6+8jq4pBE60eeoh6qalRN12IGzyBvqDwt2K5gDcnz4vxtN5osoJzEVrLfCFz1c88Wy6koibedZsjzgY8gwbjMe0/5NwFWlQhosUSr2EXEe3QPxOyqartyDy2oDylqq0QMYM7m8eKb2EvjzAxcFYUC0TJWDjrC+g9sL1ij4zGymVWx3La8bQElHf+fPQoyMsFfmLfj7+UMuScX5dEYMRvgxMKreneN1oWbDF/EW+fd5yF0Wthrzj9LzeaC/4yf4vqKebc/VE6rc2n8pCUfssPL8gre73yrhljkumyCqM5q+Vo9k0GyL1RbT0R1XnjD0lH694YaphgKg81imXQaluHxJrVDwRPShJCzL8S0EBNze1xD1/3SWF2mnVvFawbc+N3fpuLn4PwLdzAgrAHvs51DZkuOwQM36qT043Z9Me9+Wfd/atbsmblPgRFK8rf3Y6Rq+TxywhbiSN1LQOkiHPWsRsLM9qXKPzpd6OQAOvSB2aaXg/3JY31oEE9P/EimRgvI1Shl4qHsrOpPc8Q7Q3byECo30Zzg8uMjrL65iym501eQT3gA5c5sBd+b77JHJFXhPjvBHR0d+mYXbWjN8wV7IWqFtvDrjwnuCMvRYVP+3RZxbZjELN1gPhY8BVTSes4lgriMt3gf0LKYy52gobnYuKqXN4aHPpAYh0pyOYyvKAtTOgkFJ3y6DcH2dX+KLDpdINadDfeXh0zumP2xfDZUFxElwZa/e72+3eBPJ7BoQeEFov0LBvYgfN+fNAoR/N9Gn1YFXxePP6vK28NLHM2rTQQpZ8y3mSzsyw29910Cy6RYpSjX9imCjmJrF+CiMnnrfA5R2yeGdA2xKGw2eg9PCNUHArGM4Xg7dRHokYtDMEGV3CA6Uvpdz6Sia6s5YY0+3fdubCSCP3cYPkBp6rwvbygsR/+PeSXgYfXX2YHJ576gB6p3U73dVLrnm9REzc0fViZjfUDg0aUDAgfkdkhKN45HMgNhkeMpvzeSalrm1CBupO/7HPJasAUrruDfEbqv2kcEdyFGrsgk/AA0NKCuwTeX+MCSxoeeApwhMTLF7Fu2K1N4bFjxTelsIoCqr/Sv1zLUEreLcAPsAiKz9bUhKWceqZmJMdQo6o0Mdn/0tJeSsiXuPp3+yRZRrK8dqUE1UIopxZxZARgSM6S2k6lkNGEVN0WIiOz3dBDXAIF3CI9MLcZpUVQwhvGEt04YVncE85j7ahsn56hf4KAoPfJGHr83nMVmpdw2k1zr/iCiEfV3lKlbWyl2Z4f1WVAM6xr2smotUG+Fjb3dyMD0pcqrePv6eoRb86DXEoUfmMYy0mHM7jH2+dicKDXlMDaXm68kerPWr3C7zsWe571BqagVYruBOKHgDDb2uffo09mgWqzNeekPxr/wxyDr/xu9HMEdMYLnA6GpP3dTBKkTMVh+3JhDT6Dq5HWUyICD/ikYeFmtYb6G6zLSLFc7aZsKyTSaPZnTowaF3ObobeTqzHdTJBCVy5dduixuF9D0h3tw9wsTunSLyLkCnsX3bXU8VqBKRDIpLokUTFMUR2MmzgtZJ4bh5esi3vBjv5DhorO8GNw9quTEyVSwgQIG7Q2/aClHEeagL6zXNcr/6fDf5fcUnTbYUc5mcUGENG6J48KW3am8nlnjv/8z1b1u8xxBlPfKGp259T8GTH0FlrLP0DxHXJ2HAO3i67SvN1kU78euvmzazx4vM9Smg4Vy1ekStBNzCMTRbdQGZV1gOURPOFZgudRc3t6qAi9owHSIyOKW+JrSzsUX2/f9owXy8YYcVPEsH1PXonfnA8DUp+v1cLUK8ueCHw4iCuwgSXMNvqZzjnNVXn/dOVSD4KG7AY8blT/eshZ41O+KVe3E98EweqbgjmhWiB2qBP1zUXfUd8QUmK2G9zIlXDegYyCbGsQYFm3QcMfMVBSuqgCtWTgw4uHwEwiwzRVxZ14qpZ9yW+MJsnhyuM3L9qJr9K0aiLDM3i3AcPXWfFczBDjMfgsIj1gpjwcrAvl5Oj71E+WTqO8H84eMuFujpgOxFHThktH8ocn3r/U3pBERpouBORmotjE5qh4P+wLPQzKz17opH6ZH++N1oGoYKYJL8JMeK5m/M7X6WdKWgyY7LojuAHyndSLE2B1x5bPh3PoN9HjqYpNncyXvj54NDaUhJrSAVGJrpAp1PBsq0J/P9dNXNmaVaf5mHwIypY2Z7SKlgcKb528XFwYJ1LsVEGynM0Kp4Xq7sdln7X9CaE6MphEFyVHz67QU1Pt2BI/+DO4QYmUtIdENzoiCU/Gw7F17xQ+T4ypDUfnXPVZkuo8A85Pf08fSA9WsidWuH1PtGr5R545E5tPr47TAR+Br4WLrnuQsdA2zP1+QwLpE4ma1UFXIBC+gBlWFMl9rE/j4BOmlDN5K1CVaIVU5kIxUVPapjMgNTrGPclyMkroHPgjjKy7KNbH7YgvzBBiR8yrZI/VeW/OrwGADjtow5wK9oMyztmAqwpxP4jgNsZkdASOYj81RwBJ/fEKFFhhZEQDtDhJbOiw4VkSWyWvm0jpvFUeBBSY1uYO27ngJVJZ4Fn9YYxsfjlKpBkNUDErtCGvdm7JCZ6AQ5ZS1bythKUuCn1ZUi7XuofyoHlRmv+Z3kHs1gx3ChJh7o/Y8yDJ+mveQ996RfDTtXSi/2Jpc7Y7ufZOkvF6t3suUBYWNJoK2mt9od08ZZmvEIXVHUalEyoZevNYvfpgHxy39PuPl5s4rJk5qW7kVhzU9lo0c+0nTbW20ytScdZi3FvJoKCBiD5+OILZPRV8koRlg1YE43UV8Bo3rmJKeHq8KSNH5GKB3u6ZMouKQGu0RnBG8eMLn/L8mZp3S+zokujThUEYHPl6116WSzVSrE07r8BO+kuX2gcd4rkV37ztJkmBKnWPN4+QkhkxonKvYIaJNYoHkMLDP5ZdIX7IRfYQU/scC8ZAEupmwdBfFYS1laYpt+kdepZK0IkwIjki/oPuPGbcbTOH38xdRueqlS3ao3MbtvTkniQ+J0t9aY90n3khMGBejiISQ2IQVQXw301lt4r4rT7QzG3g79uHPn0U2xSvBLnrMogAxc7c8rYAi4SS/j7lxBV1QCTCXpNZ2wZaY4AETJZ9/Vp4d4z3CU2RGSpCRvH7AUI7Yb9Ga9tgKcKPkmQQvJqx72VoG3croIc/xU8EQXWxtG2PxIbU4YhbcAUs6e/9JNWS6jqRmErUjhYkQlvGLlXbhaPXtAjg1QwAdKzKaMZoEi4rU266U8OKSEUe2iTtd6KII3s9o7+2/3i+dIiRlkDIHjSURK0ke91R1GUYIu/aXsaMZpNOEmW2I9FB++QasOC1PmZjE6h3fOvFh0POA9I/FJc1wiltPsmZf/ilJVTuFJq6hCA9m45O8wzAmCwHPQDmC63PUrRH15r8vK1EALbqEElaIMXYuqQq3/6hDxVTU5HAYLGjSbD9PPh/c9i5sdOot3Q/Xc0xs5QTEsfHxl/OUDRpRnCCJdoTXART9r2mpKwZ5Ipb6Dp+FZ1kHyw4GXAF2HgVoL1E6xAxQCZjrK2XusgcPS+0bgZ0VcYo5R0sh3Cacmc8QLGHqexbsO3nsMoKV/V/JLFCYNAJ2Fa9889SUYWw8O+jKpRJXLkvjkiZOhSFYt+O7BnBbuOi0lqz90BN3dCkr46TWewxrbUCk+PgEwKIaz7eT+fYi3DYF9NraUV7fhx55KqrzxGxyzXWO8AJZc10y0rR64kUk+O2gtbyLApZQN29EBWR6cHsCS6jekHnoWgJ3K5afMvcLAb+8zt7io7YKz9vepQZMhwlfZSqxGab9HUedL0vDyeUR9CnkFd4CWAp60ol0AiemTGrgOe75bJIH3mEnf0ww1UB1EUsd0XsCdIg/q8WzCszBP4NRLuh9u2Eb6+XvAuL+CRXidFr3ou2aIhfsALCEbGRLzc7W9qpa54m5XbpBYP1eXGbnobp8wVstHZDDRUcwNtfv7dI93QvZUvmOWgLCDlawaMjeDAQGnvrSLWIveze8PiX9wRO0tpi8tzqNT72rr5/MLvH5nDlXKkUdBirskVJ9IRWfEB9b69d/w1VQjuqy0x7a9XVol2Q8bJb2KcDkFJ66OQFvvNkvdBVtkbMSVH3/rzXyt8sNmlM4jpv0fsJHWXZqhTqPNuWuaVSouw6tLJQHzScP+ivbsK4eu6qr7wp2lbqqWVXvG322c1hrXcL2ISE5dETPdGW9KwGJ0eDfYYakdbXhnDBuKRzIlV2swtNWVcwbPR82G9fz81U6t7sQos+UcNAABejYUbQpqkbPPTuDxZpG3AEAR5LykPhM5+CNAX+tmtlHnjzIQgLVTj2X6BwKVv3ar6Sjxm1wtr+OSZ4MYEeS0u8uIHJLSgOpw/k8Osvf1TxIJnLbsfrkjL8qgeZTRuaCHedmQvye/pIMKi4gp0shLdykupVzilwOc3XEgvQcK63OHZwh81vLK8I3jAWq6QwDoxV2xw7dVY/pB9a99J8GBR2sqh22KylbxIWYxdbt8IXI/BwrRq5ljNdkZQ9aQZM3xnUBI/uiBEsbxXGflurOkGdDMq9TrN5dZsiSv7w66wbVXpa0RbGo5tc70/CgswwSn0nSEW8E2xTWslQN3rAOLWzErCHRR+0gzHKNQ5RCl3G93DW76PLF9oEWy7HvQwaD/qVa6ybtA+dtGqpRqJJQL2en12QhvD/dQDb31/8154BVol9V23S0amDJmO5Y1SjFmd1/KM/HUh26B2V9/Vb96xgl05f1AuJ/ZOasGnKECfRWuNeFql0zrSA/005kMNP6A1dsZjczk3/FVluli99OjJifnreFBqSxvT5+Oo4Avvsq1f4G2PlLIzOVv/zFT1Wvv+ZOjgEisScM4J9Ya0nlL6NC9eGejszMOhpWKaCU6GClRPgutbGOTIb3hXXltmtDCeavEZ7WvMvyzxjCzmp5yDwrb2QTYxLjc6y6CdKiaT1nPP4FzTqK2xQMFuwZGCO6F2VQB7oA/bykN5fZwKuwARxU/CpClJb5UfKZUuH0YqNlQECLybJok9sV6tpU2wR+Pq4Iz2EfPIF8ZrJK73EFdpbzkbhuXTpOE1fJmNR0nxwjKRq13TKmk+9clDxInKQBMK8J2zJnqQGljzkp7toi2j1dv2rARhLFQ88eiPGjMzwT58nN9mPzUqeGzFWR/CTR/7S0HfOEn7OkFmn1Ial+n2glS+o2DTffmz0WPRLlASd1ckMeHcqxm5Ci3H0hrwKaJdeu+J00T7rgiQRxhSEsDAwes93y2iDr8vPsPtKsKtkETjLImxoSkBvLXI7Uaz5rwdJv4OjGab3+fYgkwnhLql5VMOiKuqUlnbdDdcjMGLHqeZk25ST4DetFBgddQT76J8N8YiGXkGW4ul1W6i/ohgA9otvdk0M3TOUOPIeCZiMn1qIPTTLy8J3iU3vhIJcePl64q0vizGApRhh41j/CtsMx+5mcjy6aNZPdVK5kT82sfnIatzf8B9SVMXppj+/ywRQPPyqgGvBgF4FL1OQTg+LyMtklsR3xqQk8ELnpY9NynH0rIA0TlMYO6WjspktRH3iC8nnECNy47+xXNkgV6IoGQCZGzTMavIduAkyGTPtuvbPjg9RIkHzpPRyiEdApHKIsF7NoAeA8Pfiz4wuacq6vqM0ITi6NVuUD4KYedyGzCGe2O9Y+dC/XWylaU3UafMCE/A0hWbeZSNk8uT2Pqhv+tVJylqxq0k50MCDcjKV+olbGmzvwOi4oDRjv4Vuz2CU7FJryJc1RFeBOM8g6A0s49nKARpHERuAoaHIG6qvCAwh+U+as2LLIuLJQtMXcUAZXvgZ4UMxwaoYYSBHX1Qwko+cUrYDGOffIVZyAuRfxUq7aopWNsVO3WpE5jxQngleh4tjBDQnHu7NOFrBxdymdYMtbwGUrBXN1MDX3U53h3DshtXXqjgUWTamNSqXpwHNaZiUZgeVvmBX6xNf6n1Ao2Mb89zFwLukdlZlw6SqFsotP9xWjf2DSv7JWiKrVR0v9xNv2giE/oeCaeaZCBOO1IrjY0kDdb2ceTSlHu7WHBTBbB2zxqazaU5/0YuqajRA8xEUAL1gy216YTkbpHmdYGJdsgqn5xQVXXhH2SJwOdCG16Dw3m44HbvBPk8m4SfarJgmExWjmrcGQn3h/lasw83mA74a/NUdo/0eleuZL5Oa8hj6DXkYQhROHXFTFP+SQESflUd2CMziAbzi2x/MllvfLk9yQNrJXV89XC4nZJNWwVsOIqxkM/lxwDCAz2wQa99ipvX+iTkWGZI8Itea7WETNo+1yVaRpCqcs7/gZdynzZAh+u8Gsdspp2qvA/bW/soktvopPjtjD5IkumjIJDr3SxICTsyA2YGGf0xQTDv5g4vSRP7wjYAnAi9jv4uXQFymePlM/9dC3vEkMClWW14xlrX2wC5OPkrrYXVKye8YxJEuvEgF5DLfSduCcV2SLIVb1ci8z01Q++WorMbqnsLHZ6/Og3NV6U0L+ZsiI83/LaN+uPXzk6IuEGysmL3IqkN5CG+lNdW5wS7Ku0oHowPyCAtVT1dQQWVtJR0c0iAsm/v4xO+RSr1ltTSUTw1pF8sDvFrnmmyk+5hPCtsU7e3+nInMOrx3t6dOjOr4tH6zkq3W+p05GkVBcZrURzbuD0QANvfZkumHRGWGKVYbcTz6zYYVyX8fdUzVlYsWucEwELw9EyuMrOoxD2hWbceItbgsCZ4aBCTGRct0Paz4uMglKA/QcDB1NJ3/5tkje/AdIWobiFFLaH/gluIoJhW0420ihwTlaoSLfD7moWmSD1tIieevAHJ9U0KxwIsKNIde+lA54yXlaVpx5PXaOqziD8aXN8Sivfnup9K3zKh5Mi7U1cd2gM5XqJD/cSNCUeVaXJZk/2M093uM4F/QRx6sB7+7zZBz1oAgTIzN1OY7fKqeN9lZveOJmTaWUzXSFSztbDCNvEdctuqizkkEFQs/Pc3L4cOBwnn8D8sT0nTSi7Z1lIRoYQOUjyeCOxXGohJz9Q5jD8HE3ZfFrr02HzmSjNEzms+IgZ0MuOMAC0HsMZk+ue7c/U5rRiuKznImIGOxZz5pZH1xqQLUiLfi+rSid1GP9cM36FecjE+w1mxWjBIUBkdaqq9H2v/VO9y9ertIEQqx4CO+2Bl9KFgJgtbFPYNOClYdnA6Azl+B6TugskD00MsELoKe/4iFcgv7JpWeewHICKmXLEEsMbyDxwGIEPtfII/bOSofcb7k8Z5LLjHscCV/1AIDB7tfF6iezYon8w96lXuYwuVLKIPd3+6st0m2Qyr3EWKfIiHWqOF56qhaRqklhrzCpBtuWSyoakx9A8L7yK0ruFR2y3l6zOftl6aptIyyTrl7TA3M/Wsc/d6d9bero2B1Hp6V4ceVsP18yZeIUvGfCA40mSM605+zsB7Q/zKqqAYroekFfhrtTTReoi5iMejbPx5oWc4ED3a4XBTlJzdW+h1WKgSwBojdxWijemdp5y6Tc9+71MsyCCf+dTXFmsaj6eaaRrwCVtK8GG17tW33p2enxDKtHEDi1k81akwtInZjyeCteYH0oGVfmReA8bgaQfvFhgtANDbMYvhm6umRzgo3H64H42dDENZcbkGyj0656Lj+wuvphb05EIpWLIEqv9Q0aHT58qyvtuqFXRoQgJVJ1OPKU76Gtxh4C521K/ACfrSgRaFmcKRBS41A2HfvkD74bVLppP8N/KgwOhcjtQE5o/PwrVY0v2NJA2eJF17JSR3RkGDDjRKo0SURm6/PPWPcsAUAiDHwjpCLMwo9E8/bKTIXHKiSjWfw9WbUu1+5H93Vp+BZd3iFqYyty3LkKYIIga9pNFp0n/B5T71HwgVGgY7HZrgCgCt3A4N/qu6X64icpOxbAJ2LazH+vJ/5Uako5MyVWcZPNxjtncw0ECB6jlzgWE8gaai+rD4D2nHqipejMhJdLuZcJd3xSY6y5gifizCgv1t9tKm4fFMNx2JdKtWrpkS0/wCMeZ+HrKHi2TnTsdyeIEKu8RKz9lCLAlh9CTCBANVcVsGRwqTf4PuG3cuRtcxxFvliDqzD5uQS8C82Fr/T8UNgwIIpnq55qmHdtVpgkXQy8+860HaYtw1bCtCeeRgo4dz7h+ccKYeh0FKUZdsT30qroRoY8XFoZbLMbFpZBYOdAe7D8t8PVLWuuknYVYtqErp6ZhIaesAGZArW/iWz8f+YHUrFRAksmyW1pmk0BAxBVu0YssCbaqHyagMuY3tMNqXyoRMpaqmp0lFDhRnSAewpWBksmOeEipaEg+qwxAG+BseheHSmN9BBc2Rsyq1QUbweXh3bNSlNnq1JDE4XzzZB/m/Msm48tK408G6vHFb3jvvo0dxLxXvLJffy2+8KMmJTZHNF6VDEXPZGtKRBXu6WS9soBo0W3+QuVR/nL1ie03w+1u4exQSJh1KC3hykLSNP4Jzc70Jyi+1ZHHrKd+siCE80cxMF5Au6mwYxV47o3FNCsoMm9adP+U4ertBTJmr3vvRq0Z3WEe1/6i0GpY0CNsgUbC2xM2M9bdw/TnmnkDWys7XwzylcnhFzhvFCnW+biyLP37zaMNF5UARirYB5r+Wa6vsLv1kdaotA+XpjS5fVq84qnvN8v/nvkIEdXTKxF7eDDL4NU/u5rlr/Ql7ahRML16dxwphAaqH49KVePlhiHVcC0NUVbWPqT05lYPbCqgkorPo5KOG3e/y24SwfKrJPUBKG/kwwHyKs4Ak9SLbvAvECTjG7MS7/8cHJyxPNLVPVgxVkoX0eEdrjD6hCjv7Ft06r7sbhR2Gkv3lujMRzjSDa16M960heFg07PoULdQkaybrbkV93JSJp21M4GFKG+epfiguKDl43odzWIfI1jTKBOpkFvQITWvn+mrH48w17ZIoMPAoYPm4y+XG7/TJUA1cmtASNHEmNXmznjhqxRHmbGWEngtZ9JPXuQkKF7V6ukwEHZPvxq3Qshxm3M4ByezTBgN7z2xKr0aWS2ZCf5xc6Xvxd9CmjbWOl9B7fxUqTeXW3qJ1i4NwNJQ7UddKiuHyjTLq3oqrXjbjZm+68l2eY5uaH3IJF1nwp2arEw8LeDgMNZXKS4jyYGJK9cUrlvUzroszkQgGf6ybXwLiSPSn/M9oqvWqY5/vkq8Dh3zsD86I+VB4N+PEphKsS+5iEAuuqgDuCeY4ZkRnhorxruD2L+88QWitmI369AjOjY5wubXlqu6dpiGQIV5dDCWrDuBVgXJp/340dnnQGiLgfSYkWcuLw6nIbnasrdt8VJZWTP7Z6CBP+TGA417JjiQIpXPc4Snr53v63ArtzF7Sd2aQJb48ZVf+t4/TWLZ3rGCdUL+Ex09vMV2ZRnTzx0iZaDR4DoI5QsT30TgT5xJc+0wxqxFcMmeupfKFG2mATbVprDZxDSHhRDgoA2/1dHIYYryxaSLWkY4M8OXfhUy8sjxKpKdU0DN08XqQs3BNJ5QXfFZ/to9O0or1UmlJOCJmLRxnITokPMlasiT1+cmHSOyuao92oTmAsr0x8U7VblcDpiAdK4DOaGH3qJWa7ZATi7Q1syoCvpOwPAA2QE+Q6eg5KK/1uTB1I4Awvyufpstkfx/83Hrw5DFlYwi1ALhBHC4+yMrbT89fQ15D0ZmtMcwJ7sHTorEmzaXMXAmUWHqbhaawypB86FsHRgeTF4HjatUf75KBgPKYfB2VMUd1vzhwC7vKfdD1yxojvWKiNkOwv1D28jAmmlO3sLiU23Cv0kJnUXFcYuPYlQWK5mtc2Fa22LhBgURD+Df22q4h5RfG6Rx3bAZp/dP1N4OiGWINqgnu1AzybUn3rk82RIS+anhSpM8ggZ62uB4U99CL+szw5gfnKBX1TX/BdxTwSixp32CVApL4NmBqzowVNulvLsA1u5lio3z8ucDJKBxC+HgTiK00KI3JXoPI/cBXEH6OqmArx2B5G8TNlyYiLHHw3dFLCs/6a9YCREBDi6xVWFBJr02Rj9eS62CiC+8jlwOEt6lowgBJnhraThndE3aRPu4GhJT4HfEDds55idq0kvzXtLj2dSM5FPUYWRfWz2hlLQNTGpnqBFQYp1Yga4XxFhhhLJYXGNOQxohw8wgLDIvPR3FrmxcI1v/RSFxvVBp09CRBiaMX/rdYrFEUwz/IOos53+K7Ux0rMHebKHREY7Y5APcWMG2we2F/gFAXsRO+l/T+X0T26ARjHW4mWddxCqWVpvxw56n232CNWfkpwDtwSUlDtZ2JpEljxm3JXgUrf/acDqLLi0kcfm/oNvrDFkuicR9OR0YUBqGO9eSqYODLSMc3b60UTt568UqE8hvYQVap8BsHeEgU6OlVyzZGgp6OSN1XNTV2MmbKh/ba2ZvPJJV/mPvYrVLxedKrykRI4TeDcYbQ4J3LnI5t4f2GIIbN1104QSvrC0qMFqrN2u67hSDww0koqmcWIuU0xxFVEInc5gaVma5fsalgVnJwROJwhzbfm1Rj6WekNChVGehxWj+mkAwz/kAaTf0TAWrI5vFsP14OZkbArar1KAoeOwqDFkTHy9iRSpNwRJSdkTKWTHZXQwbqIGauRwrtFGWlgWWud4Dax6XnpQy1ZC66eOPok79HOMWG1+i7tEc89hU2ZJC9FLftr7TSom23j7loOAzUDaIcLRBFoJA5UdMY0hs8mp/q+8rvx/1h0kQWc5RtGC8xbw0ABuY6uCT74wnql7311AcPiBKu3oqsl9ExiRnj1Xl/4BTtnOH3VFk5+DlRHezSnUBYbd65MeqUurcoXyABYhaRLRRtJS0YqRRsRRbnyWpbmdsPuiqBqgsd9ti/bJDAr7FycI+ACFqNKxufL4lUG7/aIF9eeahkkL2dcKCxdoS1cmnM28TkxNK21LcFjThhzar8n+HXScCOvJyJu7RpXhM4AU7lsXoMiS96bHAzC1StzCIRKjrxW7qcxQEFKV8I2ObnjQ6BYM6PGnZ3Vs5fZOKbPJv1do6rCrg6+tjwcsoHijJkmguAa/EIVnYXi5VWh9m8KmkIJL1umzFdqSv73iQs7879ghYoYoSmIJ7tg4wGNUeZ3RXLi9NGOYUl/6uAyjyBIqL9gr/M7/ME0kqh28Bc0/Did/G3ez2gtkr7wvCZP+kmOLMh0YC6mBs4rlBfF9blwYTxqpvcbEDQNYWsTScU6+xm3dt6YCJOda1KvXsFY8PP/hKPUqqi3WDBj6xXCjmbUV4cex6WqzSB4RZha5aWqLNpz1RNxpyxJTuCiEpxP9yxGALOm4AD+0ATeaVVveWhyIE7LxLGtbE0bcPGM9PpNFeYjEbkpHFgdS6JeQjtTIwtBjVM/8yjBuuB7qA0oRHXmQMTEPXe/79/Dg0aea/vfH2M6fTQUqw/wU7ZQL5YxUfo5u1mP6u0cndS8oz1FzQNCED2Uy/wNhBoLTrlnTp5fkZo9ppbDJ8/KXbGho2R/7vqp+tF6hoYbEGakj2xkghxBM666320+ZXjvOATsWC2TMmF6ZWat3DmdfDV+7eUlF5hyuZWVYrASXpMeJYubGdRsmPO5lsM2X+GpsUVtxeoonWfJm2YRoKVd6kwMPtuqqPJsjnvn8fO6unJgLlOOlQnUjHS/qFMiCrQcteQ8Qh2us5K2skX0Efk2v0EjCtqJddO5RA05TBZkRI9Vn06BWddKv1OWpmKmABIy+h7ZtfBkgrtyq6GidYivvvalM2iE4uZ8YIK9SPJrEdg0tm8CuQ23Ite2ewZMXS3POINxnh2+ERV6MmIX4TKbzoF0pp68+c5p7jwONlZUbP/+IHKxsHnbwSbQT5AbSCU7o5CX5DQVK0EptxZjQdfWkS3jOzjN+EZzxI9C9V8EOnrZkvmiusQhAiYVa7MvIwnJPWy4qodt8C4QwCM5c6cOc/7KUX2dQRWJa6EGE7P/Z9zlmCk5xpoftOFukRnfbe/dIzg/aIjWeP7dwI68G8XPKylkMxQZMDvbbe01MbjLieGlT20HOrhkS7yQTppQmPC7cs0O2KryXmvypwtMz5YgtksJAnuunc1KLGjAGa9iqR/DgsbVJY2V2FW94yrty8eQxlGHNHPpBPBofiMAIXAPEsLkdbdG9GnZAy5BMa/7/8rFQjPSpqZhU2KU6seHYivwGCaTTvhHC/5OlsDi9mNROwqriESNa1AhuJzeSJfDIRwdiNlZAxv+npjsITNc8PMTXfw2LcaAA1ePPZhBMUeHkH5BSTlSK0ALWyCEUPDxuMtVzAbTalNXH/D5A2CecMs8B9QE1Fi297SlokBMRHvCBNUy7prGwR1KtfIwS+QwKM/dlAsj4XwEcQHjteGi0y8Qw5z1sqxX14gjjwKU0SI1BXc6pKiK7GrSc353CflZMsz5Av4R3/Xnk+hR2TukRytWPW8kjDCvJudTOUZEhXnxgpx3L6XqRAIQJFbmMcev4GTmnro3rMqItPcLjz5nsKAHUJf8uLr1FSNX2JdFU7fZFEb3KlCWamFeG55dJmliEsNjJSeHTXOEUr4PtjCBungyUQWghJqy1nQ3UlEe7vWGUovX4n2hhxdXTuNfVpsd6i22UwdzZc1fyPHr7KIpryVCMRe56uL+e2V/du7niIaP62NUGRGAxbh5Yn/WTMd8kwSv0XXxb65tOkXwyxDF5AmisUk6IVZQAUhBCHqHAf72QR5RQtqQtJcsOF9Ts2uSchRm6sK++KysM9x/yag84ZWSVtJghmAfhvPgDP0V59UumhXgoKtFh6HCHL4Rp83bOwvn7+K8TsSk6kkstoW6lYoQy+kO/H2lwNvcA+5ziDb4IR91NxNkkcbFBXZIxPsCRAhtdb/y+IA7Xaqr7T/r641BfuWpRsPA3P1lSXF/am5OtudeY8M6c4otY5KBzzm0BhQWIAA0nwJc5PWVoESRWxqPP9nVmPPf+KgNFJaSqfi6T4mJm4l+EiaMKEyC9O7OBF3DKXQQ93agU7byfz0FaYvV+c2/llk1rBYWxPMLXFIPnIq6uYhmBZW5dbOHhlwcnIJd/mFgajJ6y/TUUE6GP1i0hTOcQk3v+WVo5z+fX23t6hJcp4K83jTMgL1/VL+t+Ej3BZpFJVLUaapZJibyMBnxnV99UzFRPBCUoWSZbpIQkt5y9u++oTAY/9+e7lYSCmmJgIq9EjJEq78C85wkny4Lu08GqocKd7wqQJizF2gIt2xIK7gYn9Nn7V12bz+CrIyZoYe/EBWsQipNQs0EqXxEsL15EcQ6HVD+v4cWyo7x2GyRSA4VQX75B27lLVaGUrdfIbsyDfhocWO/a4en1KnzGUyglHfNRvKOgaRxsaeXrbg/Z2Yl31Nw4AbtNlEnbSv5ph+6HdTjbMMLyk5UvGZhtnuA7HQNpb3xektkd7i+DAVZVLm3ibYAEW3g0UAYFKUI1is9cn+9r2Qw3c1DgQSRjrkgqsU3mSVW9ZGKixN4bC2q88LznvRYJOqSqhI6fV66ZGYUQ1NBZYMq3fezKaWpuJSEnADBcevsyaAixW3vkwhePTCZ3dOXHgXn+xYV7dZQTZrPcboIR+n8cMoPI4SS02znJkiPDWVhEXsrhgjyXApv+GfDX0UPnAk1r3VTx3skIr8z72kD8dvy2BqlkUSISr98ltoaVTQ9Fi6Sswj/rpKzs9SXuT1zFvpxqPNJkTZ+PPgBdYI9Q6/XUgjd0RiWOFNJJrJPKOez/mg9jyQISt0LleLXu/nmxjT2MaeNLD9Qk5W+3JuYTo2oaaRyVkAZLIBQnT1hWHMx9xOnIvQQ7yG8PeH/K75feH6gknA6XqQ2U26hdCJeUcyETrFS5uqjlxpIqKVcxHZpEbMU/rr4n2iX7ROzKqNxt3XpwYuPbiwKmOZqenDcRGW+OW5jb1fUxvfrEQ58zoApJEGwhaiPUZm+oDQ8v+5sY6JtPjZLloLqtLLTP/GBEeBzytyEwiqsO3kBtRRXEHMN1SmQaZIUMNssa/TUVjHqn6hMgL6YnVwKp8Tr0AfL3/WTmNpzOd4Nx9YHbX2/OV04MQ/LGv9+z6jTLO3lhMpBWCcLlxyXVdIzri6NwzmoNf741+UqagJ4KCLJQtiNaDCGrkERjDHhSF2XTrxVxBkP7Njvu4BMDQcyuM5d3J2ydSWbomhLUFwgaMKK6u+jkVMitXpd7SLflELNiIY3a6GJII43VBJKLn/qCUJ5FyK3GObk1fDa1lSR/uwGm5i8I7EtX9WTr1SqCbPfm1bpnLWXlHCQS5sBUgKrUuCUl+2jjIcdl4vmzkIInKMsib+32woTAF+PYWqs57PsXoIU4vbmRgZiBOrm4yxv421WCr2RgbG5sb1Q48ybjJ7tSTmKQ0yOOjKCDOCWbJxBqiEawV4ozltuxirNModS36sg2ji7qsD4Yc4Cb3YJFnfnCK2y+4N+Mkh8HXIBszVZoOEyvn+ESTfIJ67fNuo4BCbF99zDbwLEc1uNIdpk2VVlzI4VFGmxsfPHpOf2sqhVfd7fUv7fEfND6UoXCuosDAm0Mdi4+5zFRpRJjzXeucZoarrEKTbG2bP9xVQb38KbuPHepLeKMJEgUe+akkQWSoP7ozT7oPx4hM8MMlvu1pnA06AZnl8sXLeuEM4irGlzXGaBYJJdWNdh53+VhABupbVlWH0OIjHb5Ei7F613AnFicm9OhsxeB8nMJnqyqI14RbsH1Js7o0qWhGUbULnptN4DtUdE1XqJFKuIMnhzWu2TmUsSOrYDotF6bPpQhRegAvfr1ox0JHkGmOT4taLELMydLPZ4ISWpWFDifUN9j2Pyuxu5eIyuavDF9jJbHC0YuURLFIYZhqjVFIJ2k/bE0hxlVr8qg60s835uFFRr0QP8bMqgg8X0aWQcz9WES9PjPZ/S3uzGYMQLaA6uKtZjnXZ4SNDj8veeTqqo+vPPYDi9kLqvBYJ38Ne7sA6cwL/OdkdJZQ5q5RyqNZB3HTiwzBso+yizhQxCo2tcVEMojn+8uCAchNH3Vx3Dj2Jswvb8ubEh1gc/SfJAE66slJycO/LOQASPpr0WjMj7Z663pcYLC5JxD0l//FRYgjfUOpHcW2Z71mTACc23LOg1VkD89xWTISdAikAk2o4q4GHOTQUVjmoY2ALjRt76Ta3houkBKowA+DVy8xFeCfFXkh21GWnD7av267+tHyIZWaOZ4AUdAYGMyVzS0Gj+HEuWqlJAXx/Tq58kNN38kvBPd9EKKCDiGnn7DUJKi2bKmaJrLQ4c3q0KWr945VC2R4Z1vEM92N8qoaI1lpNYVQWU/pnnYwnwb+RkK0LgoxanK/qAUIrWiFaxe2GfaDuqbB/JB9tjWzbh4JlxhdSQwJpEeMhuBvqvZf1i890nPYmYfe1QKf/4cH6t3kB6kHLLnwqt87gVKg1Bi51dDMsaR/yweIdT1YFPmN40adtbBeoQyE2NaXRNRlbe1lJ9HUyCGv0tG/M7wpE59vV9+bAYgTews+F1wU7DwSTU0wFwhrr7znr3xBwUkvp93J7lJ7Ox23c2TXYM+g2eDNsDuBvIgJdYt2w43NGJyiGwP5e5sqyR0EtCSGx4SnATuzl0tzrTtEaHoiIrJgqMm0nvSb5HdWPGl+xI8zlbsQlxuJUKy1Hb8VCevm2QJ5aof3KBo6wZy5/tRQVtWzoNI6iUecfUN+ugsgmICBKVoeKrArlm6LzJOnG37HMrzXTf4r7K4AMFUpD3u/uYHuzplaIfCgbt8BC9YUN/HXtgsgFed/iWjoW38HVztRRu7Itc2c+K8zratyGqVd5P0mZjt7Q64PLf6T7xfRtGrRGJxRvSu6bcACzS3H7IJqah4Pnwmnq/a+ZNkxgL1edJ6ZlhCr9pb9R/zS7pMEcZbMERyKMf2pVgIibP1ZMo9jHCUXGoh9UF4oRBFEcq9L1KpWhLE1+2dKulpa/p10QDRM3fXw/rzjmgogjDE44a3OTBclW6WQAjBeU9FmTCVIsMKKrETrzbYzYF40Eh3CqrzgQM3SxzoUJ7k2+aWhAOsG/tFywLgRRsbXqYa3VODuQWbZERTUCZWBLC4TtiGKlbev6iSdPz6ENtQfrXExo8D1ReqLN5Iw3fdJmC4PSbz4hbOh4lVKCv4qA+7aXSaoi+dh3CBEfc92M9uShK2C1zvQKTrcPnkCY4XmfwQRZu52BSK2zLhgI48Jv1FJngXa63b5BxwDcSy71q8GIftlg9rjPVNa7PupRABsU0OwK+SvucVzdmX20rsy9PEzxJQVHiUwNC9ZHwKkEpcJqWw5Dy3Cij1muPsPEf19ZitAWjoJr2ZcfB38h82ji2BjygMp7B9lUYQgnECgBcUA3ht66FDcHs0thrAOaq2iRtCRXReqWxjYXk8rJabRIVwJ/7IszUTQMAqhp7N3O7kC2Zv0lTqpiA4uFvhOWajRmHX4QCLpi4i0PDoSZWX1aYXDugY0FYN0JM7uw7/nwA/QyL6nB0tTcL+K4CJdTD/NuFQbewAC+71UJBosVJoZmdoQ7JS52NNrCIHD4FCHI3H3TYDp8uK2VABkSJp2PEp3xlv3ErhrUq84kTEuwDab9XHOHP+LGuuMtCqmiDK6kACsLGlLmvPJdhQXzBSYz/hiJuR0I+l2wOjok2RtiSWHri2cG0TvKgYgZ03A0WAbHTwuInXcJEUVfeOEDFgGIUE8KmrYIPmNUgI3F2hpdDdtURMauzgkIqW2iKF9V1423xjdmvAfnj0lhPFwre5atuahy9iZ23R9hlsquBr0aseFl3J4FD95cQ4ci/03XvRTYZVhYYKGaHNJycjW+oYzijAuHOTwn0xRNCtMSPRZ312Om6x4a4ZUyaf3uBrAwS2Hbp0pbV5aZ3H1eJ0Jddz51AC8U5/2Dhi5lHdyjQgr7p4ZFEYj6wYCHpFc2+tmlfbepTQfmM9ngY6N9pjObde+x8gNEwiLBg4ka9XFHgFd5r7WCgJE7HJlSRyrJXLdzPyL4PIjG1C3ZN3AZcXXbGHYEbV1dpRIZ665Fhz6832jPmGp9Sadt/7/wb7SvRDjyWKUecdEc4rLjQzKnBsA7Z6/VrpfWZGgGtnuf5rNWca3rc5uzHu7ggljfoBVQZulpex14qcukmFZdToL/5TdAIsgeqv1Y8n78MAz0G53RLs4HQOP3NuZWW/BvjfUIaQqd+nlICzyz2THowjR/yU64sgopzm0LvcU2oV1fvdWesB05BDSsomXkDrokGGlWKNdP2TKI5RIafFXcrudcIwibJJ0+MBe/FwnJpxvEnN9BzZMOL6IuyyU1y3PwU9b4nV2I08/N5AFkk05dCkZCEpWYDlFwOAVQCtt62+8YiyOA7uk6o1IUG46sE96sx1GQPP3xvaFRJUee1Dg0ru1MxHqKsruoXk1rBDrXO1DUK4wb4RNo5s47IBx3unlHUij0HczWPMO24e3VxAWLBcDFnonEFe0sF1PFGX7zaUr5xxp7B08i3Hprtp58XW31QjjeotnYZcqR/LP7wvbs4mSAPqoayA7zYlNBaN8G5bwlFPfltYnzLlM+tF7KfC6CnUJ3bZFiHGOU39j+BE/XNjn6YJ6dSuUw4VxyDeVhDpHdfp4eqBGQ4pt8j/TY9MKna/p9mMker5vteNpRpMVKi9xqntLurOpHh4cmYUwrItG2KLHXCc4ltETokNwAIz+8D/LpBea84upaFVBHhxd3JIWbh4gNX4FVfMqerhn5ssiG5406t9C4i+nrYedRh6fc5PnvUNsFe+XJ/upxKY0cSv8eaQdYPiLpei1DBa066rkwD6wEK/H1cDikV/5S20cK90ETQamuv1IUqQiI8ZrF2aDYUDaIkmEEXvHMWOQYZu+LupZzbWxctCpij0Lx4fcOC+aBHPlbMSYJDntWBa9WoUuvOhJDxTfnIxPpPVV2K7WJ8XgtnhYz0Tvwt/Kr53Tdaz3AHBrp0TmZJV+ox4R5u+wV+6SNeI2NqznmdYkOOeLCF75rKCoLvHRO6fvM1iuH+p+0EYpnqcZ+ffI6rJDZe7PRpFtXQsMf8NfNMVwslKQxsCX38OWrKRn69EPHqLElyoak+7uBpqnwMiRtP673IKgi7ibwbFpgc3WA4+TQLwDiePnasZ+e99H4gG8VXeQMwbE7T3KpoPR2lnYPP3rbIgmV+RsKY2MoY6G5WtATwtV33JUKOqiVV5CoNDx4TBmpbBUDnbMB2Gpu6EuFf1H6lnMH9thePhaXToG79oHuPxZZte2Oe8POEyge/o6zuLYokFn4qNOUvFguaebgp4+742Uxwv/2ajpW1asf+c4qwqS45aT7CX5cRUoGjbBx3SiGVQsDdKMvRyth+3twbNREWOEh+ApnCCzaOuogn0EVh+YQOowUHX1SM5lOuYy1BwDP/Jfy5xA0o50bOreqN+gf3Kewdhhq7xAFuSm08QRJb+kXGhkWb8bjRYxMkA6A5LusUatNpKxBBe6X5NyHQgM0+EhcCYrDHc2lIeuYhbC+bkkx5qqPfT6Cvl/TUF8Z0QsqZdhcptYn/ghvu1yUn2yOiY08aGGUd5CW8w9s9v+1d4Za0wrf1AiJv15nvQp0U26ssvZgi4f/znVDx8f46u6SF0XKRXtvdoXRkBM4VB/TXFnAAPJjaLrLoCgd0+vZ9SCCYM8Lxjbx3Zf0CD3kM9ASVC54mVdDue/a1uTpVdzmbwyxRKsA1YRSHe4Wv37uTq+jPhVbQCb9QFNQzw0N4d6j1V72c/CyF9ybF6SrEGFzsS9kENEJxyoPTSaOiq6UDYSKOxxbxZHjRHXAq2ljL8NHls3VlpLA/m5dScAx4VpW0RfYUkDUwv4/lw5h75cjlJ9zQi2eJgG9nh1hvnTPpkdltMl/610U6yka/RmjsCM11sxnKUDik1l7QRMizqEUb0PF2dzcLgOSZUlZ+oAlE3uWlU5Zytf1L7ANTTI9vkWGr47qpUugS1Zbv/Cxk34MQI4Ct/XrGKrriNhQXUvU2Fb4s9InGdldN/ZXLYYV5IKJMjyZk0/ukiAAe4o3NvTOLnedXsRFv6xJULqmze7LBg79sOyKe5U8H/r0XmTKdc32vqysgiNAfftCeQsEgVHiQ42AMO8LnC7Xh2U23DrEAwswKGExE7uIKkK9Mf86cEVAP/9SwDbPEkjU3OjoIHP7wIL0U6rPbJWYLi07bBiMW3wy4nF0p2ZRMs6szr16HMw25bn6XNBPfDAZcs5R6+5RWKW4GnQFXf7gOyq5GZMdS55g08YGEBthstxhTShif4FQLk6R0rq15MyAz4BFejYwQLRkr5JomXO/Z/zXR492VFYAiQtk6/+bS3/3CpDuFRATGyPZ4f3hO5MdyQMykbChlVJ+HEoA9TmVHNkC9InowQAOE7vSVZ0edxcRwxvJEPqgjAp/0L8TxQavLTJDT7QpbKbDoYJ5AF1Gs/VcGFs/dLtHcHgRSjIJl2Q3t3j8cr2BNDloBSKnOkBi3H3YF4v720DJr1GWaN5ebfSZX2liqjnQRUNK/MVC+8TRTjroa75ckSsrcrjlEEhNWXojxPhTW4eTCc5ZLXPCEJZvHaKpMLgpaZ+SQrC5Ewk24TrbRkdbe2OeqS4NL7f6jBePYtxgKwNVxq6taMbIGxh82pTbToBgMTim/kFRs9xM3Olc9W67ghB86vZfV9tVZuQLxrEBgTKj5f7iqB7g0amAsoXJ/Pxwlk99CLTu1p/OjUA3qodQVdp2Y7P76W3SGF11t30vOg6XldKa5klrz1eKboeP/ELtCzbsSpNuGY6St9jH58gHBe5x1AL6K+Gqaf4NgE9MosBYJAX5rMvFgvdedGioYzencagpeaUPQ0T3Lf9aNJ/S6BbbMvYYeYfeUkwMtRx31r4geVAW4Yu3r0A94DKy7dFP4zer3u3qFayVgVKmfBW+tnqEaNrDDzHnkwwrmZ/fdASMncGhb75rMuAisHBXw54fIZLmAQz7QKimEHXUEHVT6NKFbVuU1aVO5s1NTz+hYesZVH567u1xx2oBjBX1dwaVun1w6BkzF+JLLNAQAoezX9K+n47qYFrf2/LMLquKZVB0+u94YTgFRsaYPW1JBLsGH3Pa2MkxyVHXKzWrgvCThcfuiytS22gC9NpJ8h1nsd0cY7SR566jkVDoRS6g3p+2FUiq2RycB/Ar5BUDyYAi3K5gZd0DpzNlJithYxbeKBq6nvG+Z0wqQig4RL2DWRYITWGyJmxmOnIgJXV1nT/WRorbQZqOqYgQ2YT0ta87Nv8wPAhUqWF2CexCPXGb3Lp+jmLXBljrnv+MuaPAgcMbFY0NHOUvc8hT0XYi0ce4jgJAGeORC5ImeceZ14f0mvqzyMuXThlYnA/V9q9ORgFg61Gg5PMgJxblV7gj6dB1Vz4aTWdStKwuil+OIWFfL1S5t3BMKS/qrK/b0lT+u4pqcCYDAJyVxow0x2WJkFJhebsf1oOVx0+WV99F52HRVabkV/pvGzyyB36PYu3rkbC2ggcWvN+41i1g0CuY8a8Y/J9FjGtdgP4It+gnBJi5kTjtQyCQcw+bCypU7tBec9M82U8DOfgCIFMPG3Gz5s7btrG7HZ3JVp/MmbknTM2T0hgb+z9JKk+0tm5BfLt5Zbv+QoLsO9ifpcsZu2vuzA18eNJQnd3/Xl9FJL+RBXSsdeadutYxSnkMpWjWjX5EhOQk8s/35LeaoS5SxvxKQSrSZWRn0Kz2jaBY9oNQxklUvDmRMNFdLeAWQmOph7kINr5tJSP/CbgC/zvkqRqRUF/rQRCQBVRFqjSiTs3Ct4SErJgUOcEygTVAUTrkITD4HfGdXPb/yPfN/Rp7N5KxiaO0hydzDsDIjMljM5u4hGaO9mj2N6ezsAbrFnDwt7t4LdkYI8dsvK6yCHxDJT7DXtwXIYFS3BsED01kpfa2ZbBzqC1C+lpy3Q7usjx60iBdG9y3jCXTK/RSje6TbwsQCrVjtqLDoVht7lnCIQq6S/KY6Wx/X1UNYDsJ6yal+/QK3LaI7ZcfeCFseWFvqkWNgsHX1nv+jExXQ65I8lRKUfR6oxsmKRVVie+BwBp3D5w/FoqNpS0JcrYZXLmqvstvMDBRgmB1enSsOFrqJ7e4hyuYFehzSAHkRVhuqp5b1/9ck3viM/JI4y+mNaKBTHG+5KGw7rBa7PKH7k0N/DUF5kqHHryYfkpczdrRZmAe5n2sVCfATMV1XU7RnTIO6kzRkRbq3crKTpQxpu9MmIZNAHKTeqPIuOn82bancRt1/Vy9hYywT5HjncnORXfaxxvwFQVosq/lKxJCbFQbjo7Xtk1lRgdmhyiexc9nv7uaFEvPmWjUVZioRP8otQQaXLcXb339eXs547ZxlAGABs6jBXpXqHwstAc0ip4c1vJ0RBzvLDUIYHdmgVIUSCj+BKOg3jrhzQcXHlubLDMPeREa1HPxxaPTMgJyNeuICdPbRb+K2aDlkgIG1aeXWF4WVhkEMXJPzCzi06CnZMzojqSRVekG10fzzfwPtgsqfGzusL6SrLv4o49DfjRsMrN3JyNElvOJNcWR2UTgtqT6jwdb0qaK7w/4jQqjcpYC1EZmO49VuRNBbJ/uhXBrJ481o1cTHlqBjKTNWkXt/Wgbfs1BIpqfbAKVk+7N+UZfh64BV/hb7wrthkurjFsgDcWrLrrY6CcYRWAVv7mM2RKRhrPt/ohpf4vBopNVAGZwzenshb0pvAKZIbNbj5MGYDmD0ArZCNApdi758j05bEBzcCMrJyqIvP+39jeUsiQ1JoCFQG5RzBSd3pZpCFW3zDteAcjs49+vvPKNPFSvMUFlEQi1tnse0eIZprganiAUInvwTWqA+diYHSjvylYsWP3ecbVJQn79aOQ9eCQZu8aoPizBlhGQ0Kq6Isem0Wi9qAX9+L0SLxP/RLSxm8oNOgXiMnf3hXqi0ha5Yjx4nahlptvjH6cKnS5utXYzdXha8/Jm8o++JnzsutixPmQxDKQhULiuQ64MasD4GQvho/GMTdhYKSACx64Jmqo9C+7ftSH3Kvm+xeFhRId+6C7H/TK7YazUY0xjVwrc3ijEg5evZ3f/mZRVT2z6diPr1jofIOA5K6IgJHr+B/91FyXOISxGtHrvUc/5yiRdj2gNZLqHLqfOh3iPOgJsMfA95PVG9m3QJBgCOkoXPitDJUoyJ4Mlxw5kFbdK6IjKU0VIOkVb1e3YIbNor4hFIs82/njR2CT4LziTsniT4nR0soHGQiiEvq7UL++DcsVcV1spfiG8+79UCOyd3fA9qyYQxPlmB+KGpHETt52CNp8jOmLOrhs+o5FrI/RMop+fBgGKw8gMxecYl1WeBbRnkoUIbImpxhbFOFjRC9ud4se2r+TZFHVffi4Rll5DPl7BgndLzow3gIuY6qza+L8aIomKcyRMMqEOUmloCESH4DxK0kqd4Kv9Vq9i2WtRunTkuj+0cH3ZU7Q4dgxBWRM8SSIydIlA+jrDMEPKpbSRAz/4atLIsDrIvad42/6T813j5tTAKfxwY8V+/rNCfi5CpNLBkV7MtBlzI86ESMOgwc+2tR3WBjQipFI9/rfmjIsBCJ1jwbI62zAbstD1Cw8ah6xs1ToejQpbM4m+gF4r4K/OK8xUTEBh2vVZNP9Ym4nroPRS098AoADoFhySDKC+XDsJ6K7GCP0Vs++5kPSgXKII+x9fcxpEhktb7xFzTogzlh431DQMsZb6b3pRV+5DQ32XoDTtS1eta0kl3qHa6ua2lLC9pqxn5jejyU5wWUeWaL6xWkDLnjqHEYN1x3kVx11CQ4MFAfjuWD8iO2l1FuocxRC6uZfrh82Ja01ZllFHkGylPnz1GrNUNwfk4uTx6eys+5OevrPi1yWvwU6ol2pgpZY1tB07Pz3tslL6BwYmNVXKN0W1fNa9g1dw+cwcJkBvhRJIQ+TUDLMGo8gzVbgBu2sTVooGTOiGQYiUr+HyeFmrjVU5UY8cn6TNvK0Q/hrQq/B8JkHL6Mvrn9kVo9D2+ZTy6pLdQ75nUcN5cvVt4xKEIfdO25g8w3TET4dK1Ew4ZnOsupMRdLItex2hdsufIdZ3AYj5MaTSWKp/Tw3Yd9jCoQtwE7+sf2CooGC8WoKsstb+X7d59zsXZ5002BnRk/5zEw/3YV+olfHS58k20zcHYvleQ7NejXLDWOeLBDE8vEOgUuZ7T1n10rrzldbyj8NLIFs7SYafMjcjD7uYuSV8k6+xt2zv6a2DD5WkjdpHyeyxeoHGvx5DveaTzhvJpz1sVAo/PuLa1e35AIf3+ZZxjSjL/7xAhHjQLbOMRFviqmF9WOWg6Yhh8g81OVvsD7ahdgHebXntMOinkLL734RHg5jg0x8KkODoh26eGqGvWKASORqO+i4bNGV9swlnrE+aChW4xYxnTibHxVZoxq2gkeR3RJJFs/kTKx2FT573Ysdg3h7LPtzWG4ZbYOhCwHfbOH6NF5DW1Qf1mY067dX2nQQxuxCsmEfdzzrLAMDoe5xhREe9oudLC/tiNc7SPPPW1Vgr6KPuUFqaWAarF9Fx5kwPcAWtoOM0d1FiMdfVD8xsorYvS+qd2gNyeIvx9l2A+WfJurCk4E4Mqf+86gHxJWEcgylf2fnicI5HWDXkmFMUuXErxOteUYBFp/fcqJdp70ijbSQT7af1MSYvLH7F8HipJ4bf3H2Z3WgzXOZmDZ07QVoUpmwTZxBwMG/24ax2CiJiKmi6macFDVpoO8p8flc2Bo2wKj4/mNY0GXxR+Kaz+mUPLiV/7d+9PwK8roS37SesB4UtHOafaeHoxzqOxJiM6aMtvsrHzouCtRBXZ43KKaT41i1rDoXMnDv0ECmaFHf3K9raKDs2KTB9chdxzd/LLWr9DgV/DKy0QC9pJLdQgu9It0lP6frMypPs2oaklUjk7NBedWgjzgLeOXYm/mohLr3ij4GuKUqDf6wFXKOWeEw21jSAxvMFbvMbEvYGRPvmvRASIA2N+7d0T0DmF47lBqSY9ecRcO9E+kbbOv6L/Zp9oA+2diYJWhFOwXSBp33avt+LnP7n4kQomuod1+BEwGQddnErvup2WhhxapytZYkJUS+OmDlUR/r2OXVtmokyI9ixqBZ1fkkBf1Gp5ZAujmmt1FDpLZHoNGbLKPRZP5yfQbbwv7xzkvIzfBG1T9+yhzOAnYXoyPYFLVpPwkdSdZRj1gSAhbruzqNXXfUxS0DtAFDDlqVvdTRVTp8++vJqv1rjPHleuaCv2D2SmI3FTeO+M41xGIK819GYE1TM0F4SU1dDlgD1YhiUAe710ObSOZ+T774eKU0qwQVGKWGigdqzqx6jFBlzoNGNOQfjpqIzJ8vnyAxU3bs/9CY4MeQsER4vel7qoMUlQR88nBgVYsv2IN0VEhY3Azppk7tB0kZoViTp+mpFzPCyvqKG7yqxBiIfGYe8apAu64ga2JZzr8YbEf+q0TXgbOkXZNG/GLvCZ9F8gsRon/RqYsaj2oW6TWJHm3zTzQFDdBQmiG4pXPSyjWBwrbN3cECCPoXJwfN9Xmj6Bbiy0Z5cVjfnpBEr5kkVSyav521LaHpvohuURwa+5cDjXST7XtQqZKeNST8t7rFktQTCbZRnzfRCBRi/o6gpp9uOWon5yMtS/RGBOb1BQGUsb+fjxnL0gMS35xhOi0bYr6htmskik32RMeJ+cJxrrLFHrEp0/zIGJi8vkG8GWqtKGRu9DmnDFMjKnUWJz2YrWsmbRBA9Thids5bDKlaa/9tMp75V+MlzdLDny3LTxnGPKCRMgUzW+2OxsxsnAOKZdqCKETzmBlafRX1jgUoTorBAVUd8cfQLfchFO3jn7krR+NlL6yCWdKnEn20mMnWa7m9F6REIk7FTRImM33Lff8gBUCc6h2zEn1HhT4Xob0ah+s9FYEphzO1QOX8RhfhDrsS+tvlc4j+i1KHnQB3fGemsZGx1iFr6ezFc5+l62asV2WVVTyyHl6nTETdHhdhnWooBanAWRk4pS4HD68TXw36lVTMPJt6F/8qAx8ZMF4ic6G4S3GQFmyMQNVs4uo4Pjr0dOUdgIJRCh/3f1poQalYp8h1EPxgWl+c/bcqwXPnMDDOAC+DvVeYVspO+0SiteoAJoK3B8TMbcI6Pyb6ULU2/pv1IFftQ/9LJULifxFJv1H/iCKld0P1OuRTXcvSMEqNV6yMMnRgJ8MGrJ5pKYls1IicvaQt1I5AZFtFt3bceKbXAXLFkoDPbFxOci43XJGYniIhFWWa1E1aohC2CwqbBaiceYt8s+VhKBmV/SVtbPvsGvGilwjtbA11UKWKDuJCg/JUTX8/5Pn3FFNrIb2zC1dHNzQK7ZO5zvruC2O6qr0P27yEyiO64MuMJvaJYfdtKlTXQE20ska9IPO6HWNGK/mNdKeb9gENtmOqNJM8hsYqHBNKUYo7cg1mAtsOo5aYdhDvwnndgFSG8klbQcyKyQta+ox3AfFMDVKdMYS2fKqbtk8qlACIxK2CZjvbE/+ZjZYXgobSorPpJ/1d0bsnZacydWtPwY/NzeQPCyvL0r88gwg92/yyB2ZMPnoA6Pjnr6FUUXiHYq1sQE1Tc3gTxHKaDhHNs5UnG2vdq7NoCIN74ggBgBYk1kw+B38RcWcQHMX6ON1w/Dr8iDwjicg0LwgQIUY+A9M4aE1hUef1+gEORd4o4a3alUrP0fhcRTT6chCQpBmDh5ayUUHtUBEwyxMuXR9oiXlHJgaECYEgjTrqysGJNx6sd/tLLU1W+OUpxGzn6wA/l7rMwdLH+GkfaDLc8+OlrfQswIyq8byOf7MQ4CU0+zRwCAH3CUkEgOU5o011xkQ3TOK6RCTxEcE1ehgDQ9ZLZQAx3+63NKSmi+0cRlLRJA5b4NVumX4uW4tO53u5As6SiwPt8JeCXqA5W4m0EPsyfhJCJ86BlHUL9f+HgmKj+qQctRBf/XwMtZBq8yZL6EwhW/zN9luk8IvscP47BQ5lxkbTXbKYiyBUIlMaKcLT5Fr/SzQ+eXkQLYLPJi4lsd7gUaRphH4t7ltHe9D5hkOGd6n++NmEIQ1rshlHfqp1LjOqUbQ7b0aHscIsSimV9nkdRHK14D5t8wSpZ3W2/AwOY2wEybjmgSVNneOf9FP83bU+yHOHLuc0+YYxYU4uNZYpFxvTnJYx0BfF/UmuUiPTdMCoR/4F+ARSDA5/Tbuxu4ldLmu9fo1bJDLd652cxUa/rtLG3NA8XaJqD5qd1HhlmNN79CYUBDGxD8ACZ109I3TjS2b7lIiQU7CrvmIX991V8bvOPVN1446qfLqo1EtJ83s5mGxknnD+bgxNkogbATOuyYKWvqkXJBg/2WNn44lmkuOQ8z9KMxx4lGiCFGwrniHk5HAfOCCircECxt/LgsI48mPv+VOQ8UOHZj1aCjiVWh/Vs4pUKF1U5RfyWzlvyqW1JlI3VtkaBZ6YvKKGLNbsluUr18ZocOvEz6aNgvijSjTLWciyZcIRRCKV+gnTbDD4lLgIktPSTE3WU6M+0Sz3aE0XucGn7mjnZzcSYBQwAXaXG8CCDPleaunKUQtP9LoPqUZMbRlPN+Vv3u9OaA5ulG+IYP4EuTFeKq3+xKC2qDR9heWx11Y/A7/IR2i1SpYUO5Wc6uOl+PRdRqXVrAeuxvNq8G1ye2PZIp8o6G0xzAq1PwdrZ1N5j3/8G9Y99+7+74N3zln7mQ3/81PxCkSgdArNOVdPZrYD7oIGywlazxtfsnQOHzvAW0R6Bz8aBUS/6fYOZfngPkKCwGIZLdCqCUqX0v2XvE1smtwz6Icl31X6IMsB4wpYINqgnR7xR5lZUsN4EsyKeiyFrJKpHYP07LT7U92jAJZIEeY/Us3yFqr2dLnQg9GcE1R+hbrMoeLDnOU61Dbmi8iOdX5LqcodNl6s/6+gAtSPNlfIv6zoZwVWRcxESGelmKEpKxEm3Qpd2A0xysy1lhiWUZOJujzUxShkW2RA837bYzQJdtWsWEiSYzEXmIa6aZzciCuAcew5niefgfiGKy+KaONLuIjgYPySsmNL+LSV1EQgLZhjVFzd7KiRnSKa2/J4SdXqKCBfhbse9oeVEV4J5ItvwkQ7WpnetzWywndMBJmgZMfhzpIGtkB1YjeMRAy+c92gcGp89xp4+tyfe7bgwSCP/I5HPidfOX9NQQ+VT5VpVV9B9eofjLR/g6iOn6L8kaFsC7N20HMIcVxTntEE/ldl1CUuhJtv5j84tY4MWIVYOaD5eY7AwqpJleSVC60e7Ztg4w9Salw6GmUAdJgxr++ZEFUARJbzWWVpMcQxYPAkcDmFYj2lSGvJ5uOrnUNIzcuOfylryu3FwvHqdJbmO6UI80h9QcCCStlT/gQAdUPzuvRNXqr9SNx8OWRa2fOCidqS+LToZr+pFpLvQ90SSu/QHHc8igdJlusTQSPcEINgRGUTJ2FXNXAI7ED8oJYrCGr9uH2UvZ98mPYotoh2yDq2O7potKaBnEXcIDQDjVN0MVcLXcAUf1Mkhkw29UrxRbESkIJ3HsuKehJsyb2xQ6kYZFygjNpHk6g/wsgB2qB01/So1mO4N5kLhcI4oaJRuschmG0nGcOIueVnly1BxRcHu0g4l2plaEOrQMVkaSYK0Tpn0hl5AAnKuvSMwN/6UuQnq5+qCTFNFzpCG3SIXgNo1PutVxUkDUd3yRnBrtwYsnMMT2qcPPpYE8cSLYB9sW2EaTzlnlNAcKCUasMwnYy06tJw3q1v6KpR8Im12l1vuVB6pNM/WpMiou3lDRyxGR4fHI7NwNU9+q7jbLpUzXA/wVebUGsnC1Agb9Lfw8QmAYjN7D+MWAu9FNPqOPQ0U3LUD8LQphS89aSAvUrFhm1/5VPsXHFEH6LeVxBTUr4qu1tKSmCKNMCWDhDDdEfW4h3R+ldrjdxu2sL2+Jo5jK88JWiXh0yLMgtgojk8FpSt7CEEsIPLMQTQYhafAMcJjpvt8lqqsCLsw7vozIIiPDHDHeOCXP8926vLLXZDTDdO5QdM+CDiQy2DRCxuoi2t/bdJ8MNBLxvMcoVR/FNc0Y9T7yKQ1TRUfP99Ex7djgO/oeHmp4jLGpDCiN/VYgVO/8qX/+XptLXEmOy6MDtZm3QM+n9VaMK6AqezxrtQU+VX5NpeAWjLoOAKtg1b5wVu/5PF9GppXLsRN+OwTukjniYhaQqomxAAp5Y1FqifChm6jN58wZk/o0KEZshBFeDhq7SJ57IJze1DnfVLGOEEchisqAAwuZcx0Wk8aG77Z9jKMle/kNvQbdjpxGQQXVrSYaMpeUH/tUR4+Xvg+DJnxUJYiFivYVRFEz1tqzOHnGN5138SdpWMFjefUly3uuZh3CfxwTSvVI8p3rMTrVEMof/R0bvWU+BYULfmcImcAXOOOKh7XTIvMyq7CnmFybUQw8L8LQNx7plUtt86SRfgjQyrTy5pOxdr1NK+rMsIy1y6824Gv6+0U1ltWuksoDxx52sJ3zMkzUWW0Db0muJR24/PII5OzRSbpi7e5h6F5QSjJAdsBvul10Fk0qC5NhHyyuGNeeqS4d8pifsCcFApCcyjvFsHWP+75v41m/gGNwX/zWKVqKJBZTot32cg0I6bBGedThNUJU/EHSH3KJFtyb1Dua7m9sYwzTB7WURFF8SRVT0HD9IhZyFYyJAIlkvYbk9YA2jMZMrbBtCNAeO0VE59EEtyoFr+D8lSipFXy794JogvqxJqkzj5y8oWQMzegHAh75DrC01Imu3sTAHBarA+W1G5WVsOX9W34/QbaEBjDOUjb8S/Q0AXpXgKT3ZTN0Vz6JA9wpxdWG+xAtwL1IhE6Vh/lRC4U577yUGp2mntpCNMgUVfSkwj/sC3kBRRE/GSqyPI7Zdxy2R4AAEt2ij6VJNmssmN4w/9qx+Xn2Fa+/eqofn7rspJtO7t/cM2znc//aj6fl3GQK2uDkKBFbSOAFLSXdi6306kXQ0hceUrJFpb5ORrEmZLhNzYqbS683vZe3E5zyNX2CaWZMlG3y8f7ObAjsvpzqGJX92TUXRwrIZm1HRDazng1NVM6zCw1hs5J/MxJjM7LRcB6o9t+IO2DQyKq8jIpf41HHrcygy925Ep5nIExfrrnRfj5UVtcOJgbMYI8QvMgNOVMLyyTdKPD9jYrGxn/Z/1EBdvdEpjVOPBqObFRlvkLPyErjCtH0ht+4NATWAOdy78IBwvXtM6CWBATfgXzTFUYe7X3POiG6xuoccTkp6oaf8dOGOiY29jWL1ObjjFR0w/rESWDLKmpgVXWCH7E5rwwnK8INZTTTKe7PhxnLXbQBcGP9zYgpH0Lecahbo5dWiJ3LiTFn+d5be8wSI1DSGCZelwXDpRa6ezF3aJEcai1n2jVSHyxpkNgQavcAMrY6SgmDKmWyTjH2+bZZx1cICogZJKqF8Xc3rutMgVADUt7L4habHAU6kGOf1OXWoHgEx3S1Xr7OLKXmXTq+SfF9k3pZEvVn3qQxCUKOafXVR1PhW160/qE2UmvdC0FEg7AIFkUGbIQXcWrlPf7IYlGqOqiU894gO2oc1eMTnnEyppk9cREape8VgnrSiYJJ8uhemdo02bDYnm8oHi+XgSDFIl0uOKZrxUt71Qs06Md+rWBMM4pt1Ufab9iPCQZDJ7yzQ02sl3yw1kEltGgLL/6TQYIWdig2MyIvTkoGacTNoA3K9lZjCSBe90VJLc2a3vJQFF/6/+cAG1YOnWNQRqBS68EPVVbuVjyMP8vMOWujywrDPB5GeBIIrVtNX0FAgui0yhnov3RCUejvQod8i1KeqW0tB3Z7pcs6i0+RT7iYBt3f8R39FqvVQ2y1Bsw/+aJGDxPplrp455Z6nPNVWCKnXWdBMLW12FMQo+c0HpkJyKf/31VK77564y1aOFHHEWIjpt6CZ9SiPxFTrsla01tek3Gigel0SBVOK8H3p8c6tm90XVDYdNcXFz/OJJ7qzovtwFrGs3YWRodkNHPF4Zpo6oevGPovq0UmWYcYqvRgVk3REm6QWMj7YBLBA0gQR1qAWrcO9HSxw+V6orihlFy8dy5Xl7ZLysCGEoEzoV+Ly0tn1SjMZZhuT9UjQ6i0ijE68xbTEUt4XswyvSgDd+dCZ2AYsIDZ5s+BfP+T/vQq5qFGlmJBWdraVqOPswFnwTn8/ibOhotsG46EXezzK+0LTsG4g8zT0Dv3wJpPb0gqe5rEO3B91Lwn47bPLR3jP9QEygDchp9AboTNZzxbTGvlGj1bChTY6U/51WwhOJuQ+ANCmIEwY/z8SwV/n71fRI5o3/gEKVeGgvJaGeYyjm0E+COE4U2FmA+f9h4WHZZUmGho4SuWOsv+5vb9O387+9mxX4qS7prDXstutTdDJHyumdCUx7lnOYySKLxF9crPvgpSdyHuVH6MmOj/3+Fv0reUpopVeMG05pF++P9rDOK7eQ6PoJOsMQkfJjIaptlYzIBviHJNmTteQDlGjxQrTeklOwbBUdEUEiX7LCIhwCS0E8RgqrOs0jlZdjCwBuZ4juHNN9F9ou9R2Pdl3uMVPmFJQR/RDmplMBQ/MYS8UzaWsJeJXwzBYN9rEgnc2D1HSrRIPJrLm2lX55DjEwdmj/rJa+vZxDyE18KFLURCL4UkyZPoPTnRNmy4VUWB1HhDDjYj335RKY5tBG0BoIvi6XY5Fgw62g1k5KnP/4RLMVzKWV7DK10hhl1z4zD7ijFhw3jE9/LCU11JzLucPcBLgBVPPh/JAaRZflq4EAmFNZ9TBBA2Gjm4LfHJ81tB1AisT/+g+OdtgI6sJOeuBb+2tq/cIZ3+6Af2/Fybj/6y8m3zGW+kg5UWhz3n7npe6aeIcX+gE+ZSAJ0eG9R/6HFBc1VgWHzwppLODstQZ2KKXSIqwujtn6kf11Gqae21QYSwrBOr/Smr49xe2C+DnJNHAjus0fNa16h/qn0UHLnsQCUyy38JMbPXhQwvz/SoPXekMyZ8NyI3J+p2WE36WNQxgrlAqNkI+jtc5wkRSkdbq+ZUM7FR3/mt6LVYkYcMHw8IO0bLdnRgJMw1GG4vNnwG+zrvkNVDBKlQPHpH0nTibt99ewgln4iSUvkMUMy0l2wuSgB9OiP9JXiRB3WmQxmWQF78y45T7xe7jW/77ZFu5pFAAJ5FKOL55JLek5Hhm8gnOXwAcEl69qiMHvIaa9QsaEkNL6agccjVI4v2Jw89iSDy2yxMoM2D/yTToVq1HturZhb4TyrVSsMVXvSwpRZDarWCr+h5o7s64U6dbOZTuuMCk5GNw5J5GwQ/xthAPKnSQM8jW4xsg1a1lbU/uEicm/zaHr0PwqkcMymc/APJ/7lJx7odwE31s2jxVHCtMqNNNrEXrCm26ixRhyx2kygpEqtrvfNVaxeNKds7EjORJLZb5RX4k+lMT4eNn1E8Z9qud1e4zG/5/q+I6iMaCB0DvG7wSqrnI1BmUD6uYw+p06rRLL9SEj4/CgUPOR3jsW5avtkyPcA14tcMZdXrIKSogjfoRVb7scl3o52Peq6MRGE9ejE7OVzJutqjL9Q9KWAUGdagv9BLXBvn1s26D4bKeXtY6VDKm25SwVXBCRawcN+C0/blFDPWjhT4wfxqIe7d3WezkquHhU5mMeiRw0O7K5Hbm5Yd+vppZ7Gj7IEru3z2BWW7U9Nnppj8E8ij0t8lE3NiFZqawHzaBfuM8+dFYi/+D8FQn6Ao1ZE3/h7sn+1Nw1M9HGWHQpWInfEABgudQvZH5UnRvSDE2HA1Y9YY45Jd/NdPi1YgcyHqlSRGHPR6JCL/38zbpJS/mEhObGGyR99C8sQPJPv3xin/XmI/6H/O8VuglVtgik1oddM2s9aSzTzLzyHgpkyXCFM1P5cUtT913YksYejcsuSf7VVGsYadQ7K2FkGGWZlQNy6Bj3ZkXsWchY2r5PzB1e0mtAYhqabo5jfr1TF0FTsKJbIuvtscxf+0or7VDKqIqbahZQF78wDfymyok7QQlfzAf7JJn8cmmu6YHES5H2cf1ZtTqzg7vhMyyKJgy1fLoGozpx3k8SyiIOzl5ncQYdAv0WLr0RHG3WoJd4zEL+GE+4N7F2ap+5T6FC30YIziYeRn02/jOg42fbpnxOkzMYT1S6tOiRWx2ygV73aFA13UfAPP3FB1FZE+qXQpmPoy9eo1iUpdxom+yoaky8B0ZrH7+vB7sNILb6HZqbuqxTFmkdko92YGA/N+Zq+78dSAFN1+eUEcdN8HxsjGmnLC67kWth4QBk1AGYY90cwbIaXxzMF4Q5B4P0awZTMqnhtxIS5xpOxNiv1ZXctOYSXT0RYwR2cPuXnzuIGqouJf4rP0kSjBg1YP94BMqQ+JJ2R+TOiByWvNhPPyb9GpR8vtQdwZFuiGBhr2ZIuYyUa6K/1Bg47XrwAVcImQ/CeY+5UjrBCAyurbvGKX7ahiTOSedtiSNg9EzVEPz9j7YhN4K068gZu/KrRyU0KL4iNwes6h91wNVBXw7SuQoldSd1wHpV2yBYlTBhomJfJ/oTyClRFvqfl8KvX3hSXNlOMStuwbSCLmxe1s/u5lgU2gXZNSTVSTBDB55kGuT3/nJQgUYJ9AEqsUwPttX6z0r4AyTQPnWnbCmxb92yuUM2X2VbOq/V9ZrhWDI/DYoDT8bBIsVPsZeyl9KyE1Ptg0thGccAu9gDvsBSsaksyFvJglrNHaqd6Ti+jaquqIlqWPJNkrWmgDA9ur3mNgmQ0qkdRKagNvQBuu4pW50VYIdQ6omWdCT0SI7FMq4A+xIG8LDZU+2AB+Tc7HFOdtLUVCtd/Hrqc/oxbzqAZsuyEgaW4rvPdJBDFsIK6Q4aivYW0qe3RTqHONyKVqI1am6InhxPQAKyRlgeYh926mOCKjr/hMdDZ+Pobtnj1HfybutsI55oZrQMdJCBrekyaAfP1fpiftYjbHSV+i57nn0BJfwt5dua4R8auReLb8bFLVuGIpcFIVTX9dMEAtBL7Mtps7509COHOtKPqwFGX4abYToYe7ap62eK7pBX6jXnurPpR2yvrGNZICsYrjWoI+lJLwa7Cm/RZESj/FxmXE4M8bR0KG6QZYyXZIGSb4e9PJdEtFvI70dexYT8foRpMLlTPoAutjbOkZmCNd5joWFxy4dG6CZ4l1WnXUmYZ786DK3LJDFMDU2CJQI52dmFNbQ2H7QPYLRQyCWAgwSk591/PgOQW1+VB58YEpApUpWSDRN+cAvRO56WUEL5rwZIOkte9MAQY5trdF1/CQo29MYH5xJGO6a9Xm4x4EzlCetBa8IJe+25TuPRc0+RrrTxXEsK35di3zHpxyNKxup9E7/mLPIBNUbKEhSB6yDp1r2UwYM/rbIbtEtwIkbU84iRlhkKRHpiavEyjVYArlU/MiEw43m311Loj01Fbd8jrzU8p17DlhZpsfsud2aDM5+GF+hcqUAhq+j0noCRPcP6Dk+VToIoAz48arlBLQ+KqL+hDYm38mQ2tXAvuDvQO4msDEg3U1eRy89BEqZhfjghKM1QF5U9dIqUxvVeCrnn+tiGPU6O09Bu9PqWKpmwu1gh1stGhNwOv+qiv6e45+z0U4mD0D6JNEATnxqsy+chgB7C2rTnCewOf3M9qz8FDEJ7SZExdBxnliG5yL3fSPMABSuVvc1R1EvE3lQE46XKf9vmavnrMZrlVq52w13V56Ows2GH9pV8h9Yzmp+AcvJx93jueva4FM29Cv2p7DV2K/sHolbNWSA5gtbHKKfsvd65aLiG3MNwmuSw04O6dufVIrZ77jreSjb4mOVTbrYlG3HusgCzjHB/YDyTWCxBnkv/q9frlo1hsh6KXeZT6tujT9tsAbxGZogJD+W/tZtKJMLohKDzeEXAVkRPq5FauWTaC1ULr/vFBukStMHoQjCoFGbSxyuIqQ3WYXBy/n0IxgN+kZ9KZJTXmJYjeTumGEaAWGlN4Mj/FOAKDgfurj8LdEeBi/XP2lno+C+/LwOFBpTBqouHjS5TGhpqHxq5TqN/bMIOzKQKKrvm8FkBn4JmEuCGYNETdI0NRJb6mn2yRrTojahUojgzlbLTZC8ERIve1+U7/mdJjfMdYM0kpfpYtE/QKaA8F7Yykv0Sd45qY+CoV8hwJbQFZfKBfShvhU5q8ZxUvutolXqd/5blcy4iayBAMXmZj+r5hef1kWKFgX1MTO1+Me19868w3Qz0mc7uPvBJsir9e8mFls6E8EO5zg1TpmkItGXCC4TmqdKsKdbyH0Chlfd5MjfalJ9SBuaXXoNdVztyXbb9lFjMiCFC/QY0hq2kgVUpVQS5hxjg5efv36xFmn6IvZ5H9JYuxPch4qBoc7f6utAu/m4Xotw1+0z+ayNCG01HoEQCSKXCeUV9YdNu8qhAYUg5LritEvYgvEAuad1otb0SKZVQknrHQ7IQ7gjiIO1x04SAjAf4OEDUM+vRaucJq1dSg0kBWZTHn7gzgUvBorc5mkNcpCFCgLODyyRa0mcUy3bcwCLAvk74uQoCaxs0kAKRPKi5pQXzLPCUBYVnThaaUBXuVawjjrz0PfiVvKAk0EoXUd4oUhnJb3mvhJO/rlwctQ6t2DQzV7q3BDAyIieRqricetVESLaLL/Lv7xCrRWm87XNnhvkT/TVBdZkoDvl/C5gFEVMQBJhItPTT4I0/GZ/nlam87zF0KuqDCCEF7w0dwkfRGv74Qj7Hz3zNJF7eOqVEDi26cugh89p4Kl+FY9fbxeGKlqMF0cUN77UbzUUc55xl/ZYvRmAiHS3oxXcQGEPU7wk4YjzuDNaoBa7j3rGZ+imUWXasbizkd9BgMcfUf/oJ5p9IG0OEgfzBYdFf4talePXGAzHAQ1p6EPi3bzL8GBj97rwvZwkJa8mIlSgQDxW5r1/jNQJ5O2J2xR+W54CF9gxpYFIo9P4iNuZ7d7e6Y3AwG7xOCc0hIK1JE1VGZssLfHWCf/1MxSQe2DUfTPeVlBX6cM1K2BUkSgF5EvH/bl1j3cM4JJ68dPIwtpUu93PVLjk2uEBRkYQDlZ34ktLIPrnxs17G1oPYHH7oA7B5R2CQs4SqLeZrDncIEaZ6j7yleTVfQqyUAlQqKf8+7oERw+FUQKHdk2HoBJ0Tjet86+hrNMLzqq0IL/nzVZwAGIlE2lA4EYhocXQLMeWJfh0ZC8FIbVL6cvM6BTsvdjf+3he6p6ufo30fJ64G268hBTX4yPdQYNwP5+LUDTyJ17sd0tTa6lnKdBHEo7L8Dpcio1VrcV9Pmf1CQKeE0IXvj5AlcVZEzIc5qByBIpi5IOBDHuEY2/pwAlBDsc7sfLsAXaJ0B5tzOtnOtTeyaGtk6xZbEbpfc/uhCuUoIl03TAqhzwy0wk0KgWrvkx8T56TRKdeuaB0O9y9U9NwyXZuLyW4xX1XiLCiNFrQs9iNgTXsG3y7tXR4bRZaVNmgNBJfNsrsKOS2maEqOaOOr8SqQzqgLuiVtxFonKepljwIlWj64C1X0ybsByoxanZtCNqC1KVeJXczWTGZjUah1qmhEAAcETUjWoYTb+qnAgxRbL89HdDx7Qw1Sn1pZVJ86AVvAIl1u4/bXge/gY4TFVv00wGN/HrIIMJI1KBRTN1a395kKIJewtvVW6SLTxTfdNSTLI7b4Vf8RrRlMfoEc2JQK/MC91dlatlyrvfnvPrtnaxLKLTeoQwLlqt1yW1fe/vj8AKIj5DTn61jZOgdKVwJsV/2wjwd8UoZVXZXd3uYw3tgoNlIyaQptjKIUMOpAlqda8tgP2xutKUxmekmgi9YypSQd8QDl70zLO29z6mjbURpyvoSuT4sPQYKABG35Uwq9dnUJtA3kV1IL0rN4jxvL8KJt+ufE7kEieY/yHAawWl7ziGwrV4FzpU34cJaJqGFiBI8t7c7sZpEybSsprw9qd6o1ijA3SiySCxnIcgtPCqpB7WHxcbcEzA/oL619hGEozp4PGSz4MUl1jOmS30MztmhDdGsIVOSaVABQXYRv0Vhq5yUw1u0HIgHDuOJf6SSldYRi/aNRJYeHTxxOS1Lt+wMvAut1RiwvWUPBLo+05cfQNujUm4kpdHaqctx/Fr3ozbHvJtcdBUTTrVLXpvW3IyTur3Cw6o3eViBi8okRP7QEhDmJKoquCDKVCIaVGAbUkr/oaXvy3VYZ8UwUSkupZ2zaIoHvnNuJDu5M7KMAqAB3KYOt9Ro7+Fy5TNoRoyRdSIz2tEbnzWINF+yhwaiFR0T3VI3tVTlBgjUZRC+Nu4M796ebY/ZTqJ7u81qf7R1YXzGZs76Q0aoHcb2GiFLy7ajO2/hRy+wegYK54Lk2+eI7fQJPa0LIxfu3ALSx1ztPOdyZ864Vr4ExJ2zKPUvjWdy9N61i3DcLQUeA+bY1H+NUEw31aJvAazjmG01Zp58pgJzNx9D3ojJ9pwfuMq7fwud+uMqMUcrjIfmBzD2fYIMtme5MHeSmewLmfNGbdZXzxLAI5GAnnX+odDTZDyqWB4pzDUt8vI0SCLyuk2wFFsUojeZpAO0jVLLWj+Ig9aouCcYmw3PuBqo5oCR4+zvUGraDfQMO/Gs1TL2VkzHZ2KyNCBycxTqkEz+ZMJLcAMrmC7jFrkFBSSJvfqONX6FJ9ZPetfrNyIVdp9dP7Sk+EciOPXCRq+BRSTWxJp7hqmqVLkPO2SIofzzXuRP5MIKcKvYs6X2M1l/EMFcfIIhKe6Mr6Fask3zkmeyMIoaWJr8LTU5gCJ7HQvtL5rba5pMRmjfV068luGrA8jhgOEsesRPFHfXgh48p0Td28qdsiG1WJ38EJSovkEYcJkohv0kPB4MyzVbm9Bfm8lsQphmbyapBBXMxnshv0tPmIoc32GkincdZd2Mqpd1Yezh7MNDsEp45ogCUOP8kSg6QmTMljsUfPJ4Ok4d6qgyhtjAueLsIC4/3JDEosqzYjg6BU6GVwh+4VyET15H6eGwXJdDp2RKIzET6+ZC+yV9eJLjTZQ7nBA2lH+mKJG7x3fMJUHVR3joZj3pP7PNyMXFq/W/3Q0/U5PCve9KWNoGYn7OHCEOJoLKcFpb8VUg9Pxq737GqgUfXSXc8UhJMcA77xhDPcozmrRiviGW0FkKdXgfBxBSSEoFGFTHDxOBNxRnitRg1agsoHQAk91EmhuMoNr7sK0PPdOzFfW2bYlqEmEtMgbvlhB5SEUq2u2YKR5uLWUQRz76bZj5M45lWT1dKZ0f6RvTr1TrqPqFQfa0G9GkQAgWHV24PQT5WxD/wm6OdLt12356Gs4zKR/2FtS1eg+LdpRhyM4BFE7UetTmSzZUaM0YZENZrwA9/ahgRvDLKXLUXzQJl2vURk0ttYaoDN1CJbgSFnhSqzBrMlM3vS+1ZFHqSSvcTqajZlgElHYqIHLjpi4LEY8RVQdGZhUmZNhnQ/taVd0Wc5mIi6bOhrmpJPwsqU2Um/7pL839hC67eg79AeBoMBC0fPmByejgLF0MUZx4/UIEZ94rnoLV08EMN02br9ABA7vMZ5yKvdSMwfeLPZFXy0WV2vxUajhLxmIUohGuFFS2W0tZa8YnE14JlI237EYzuEpojO928I1TBvhGSzzU4lCz0mrDksNhxa+/S5dO5rJngVCEa1kP0NWdQR3xkaQllk1pLFL1ynNNahAC46JMxwSwLBKGQQ6+baqLadap3IxseWmzFCC53sVKgVR/6GDX7/J7P1y+KrSb7gcI+PBGA2KfKGF7wD3/p+8uzsLt+XF6IDejr49r+tAz+k0jcmYrB1CU5IuncU2KXfCbyuHkdO7CLZlYOVMDuOAtS7zg2O5A/ArZQSGppXxiyZ6r0E78Yh2cr6a7Jh/87WjzJEYlDrmOoEqIbIhtI/H8hurksaufK88VK9tFNOLiI7yma/3KSHM1ADME3HliwkfUktyI474A7hcX8HIC9V4pzh54/teL635tb45+fRKgrS44wAbMLmepKGlTnZBOZ9v3q2z7PSaKLelwX3+wqh5gbfNc+/7aJjttuqYQs8Qn+NOO45ubxg0J5yjeldQdGoL6MlaxM8dV9QjnGsUJRxjd9cbWEfuXjdh46rSUgZMQpQNrG/e4d2xvRwY0MBx2a3ACwGs0CWHu83bnOUCj1YltGCvwWw8evZS7qky+HpZuaof/3xNKkm3W8lFPZwY34aGqJFYiI1kMhvJKj4z7KhhNGVxGvF2N2tWQUn2gg6ta6utvA2MVRowZNGxmA7TqlJwR9ud3kUYaxscvVaoNn1IT22Tx1rFTWBubSHuAtpg+16XrFXcdegWhNbWI3xsygoKJiDRrnSP1VlgESBaDk0GYPNSzHgCEx0vPibKm5Ig8Hte+7GeNY8HOCju/As5bH3LDfClfZv7JV5eGWmQ/W9iUfXYqZlKEXj/ERhkn7FVi/nsG3qKVJmvhc1SRSzuhR47WFWXzdE7rPebKN23dqZwx82yeQn2XCrLz95xvhQREIknFUGpgFSApRPSZHwCOxTu6psVYgCArGEyJZIhbn7xCWfeuJ9eHEyifDgTbWLN/28Rpm4ADc4SXojOM5X+kAjvZ2UZr/T0tnRs/X/7SNxhUkM+CU3jnjxuhsAsaKUyb/Dq6peMD+5Pfx3dZScj4Qw+5pwvneXriY9M1qBuggKU9fRFK53dxPhl1ZRayFY3YLuoJGcb3lK+BoxDS2cM4ZXuVTvFKzLNrSFjD8iqH4iS2AOqw9yHNVDCD2K3x44iFxk8S5eC+lbsNuQDyPlzEu34STJSBsHcXggc5+46eprG6Pe7B7RYe9ZWnTvm8NK5jC0rT9EXQFI4YRWXMRaRPY9U68dgGspNUWYln7Ow7O69DVSEls/Civt4d4aIsz9t3ODzI3+xt8FUkmLqSBDVK7iZx9nzxrXtWfwX8V0mF9YO7e7sphj+76h0X2LP9kZAbkQ0WriypHZS7ku4e5lRURtDM7rDj2Ml4VuNboUeXpCyEm5e1cflFCjjfkcO6gdADlHe8SUnvKNgxAbSLHCTJEYDMuFfJP37BbZyVer/IbgpDFvMWXWOs1fTs4Dz4M7H84KNrUKnO7hoEDGYDZh0s2s3jsh1My7GMOsb9wKCbhgqvd+qCa9zOqP8Gr/YpnJCXvoK0qAk++t9wZ7Hfj8kwOzy+h2JvTeqoE4TiefFR1CyPnXg8C3z/Mq0lc7nBuNdyFB0/f+fZMTuVNHANH10HwmQqRZ5IPPMXfwI1u3jZLwktwH45wZkVjELFLBm2ugRnRSu5n+vQ90PKu7ikhmYKZiNRsOXfkxupbT8LTgOi1aAq1ygvVZTqdq09Vep5mNaJKdLJvN61yZpICDQOddGtughhwP80zY1XBXoVtxSNiifMcbdjwYC/Goi5H2PtzX0KQx1+Vm1/AuX1JChuSbVIjM/4tdPa9ke53ZKBgH+fg+foeiTolcYcuiVKyQ8DA8wRTc+kExQQP8pVZ/a3KIS633eEUoeHAX5QNnMOCpHrZoE/wR5MLCKYDZFOwcR9SdzJlx93NEMhwwMjNmFOLfWIE16TsMx5ajfamRYFn3h3JnvJpJX/3v4ewh/SRAdpxbUxuAb5UqdbRDS34ZgXfYKAn0K/oCieDBX4uBwYOh9ZlgJRLnGxhQfEcj5e0YJM3AYtFzq//BEsboW1DGFrbIpNLmUl4YoUeIEvNl9kCk8XX5P5z6izAfb/aOYFr8lu1d0eBiYUvPffxM4WrrPqr5r7tSUFuV7HHE6cqKK1AOvqmeH1COhM7NyhWObsnlT9C6DaSu75KZ0UYaj7tvLVdimWr+ZuILa0D1WUKC0saRus8l7AYhRxxV3FR/J9ethXa0cHoHpK083Ov5BE/Kwkae1IZeT8EdRlc7zJ2E+Vk8MtTfSNqOix7RDWZ01rs9l95vyDDW5lFTOnp+Oxs7JRxeFPVeQwsHn6TpkvlfpUpauCYaWxCh+5JSWr0ssDDb/U3ipokAl1RecQ+qdXzCeLn3V3jeM6wtQP6ZYUGJBLvwaX6vLv/uS/DmofCiQ0CKwIRzNYCKPnFMqDO/JIpDDeFHK+oqWAPVs5PXMFJ1WNc4BRgfapGXHsGZ2NKPbxNKZJfnTQ3jiuqvMVwWEcy6Gb60fN5q/7mSmRuZ1P7DulVbO4z+aaXVFjbw1tPzC9sysGkoXZsdYsLi9erH3GOtJRW0a6kw2DCSnfpcgqqL6KHSbC3GjcpJ1v4GVN6gZpqPgTgfgAYEmp7q4BKxl7PAoDIFkWr2atxdsK8YKqxc7Ejwe3/Is11KcytBnGvjCTmeVo9t9/EpnQOm7JSHn5nrxK4jjiBsifbT1JpLw45DMrOHPOS1slcc47+5blxmWvtqpf/yDyfrjdvDMMStDuIzUaemftIgCMNwYh6xeSGVBm7X65Zpm1hZROKA/m8InpRzifKJMtxZTTRz7B/as7nDlPA+G5UUIGeyywfULs8Sg2X3jesZ+1gpYG/Oyl7qUN8Zf918C31d41744xPpZue9E1TPrfqzlmFtqLstsDpDZxkotg6foh5ghIzaw9S1NfByeFVRKtSzwcKoYfDjpFokk7ckFwZmqxj8kugWOWVCssiNCFsrY6/gwHyBchyVFfRa+NqSp/BwMFI5qAHIlClBCyXkYOjpr4XFnpsY4u1X+2oN3/TY7NY/GT9lc0BJnqTHoIrjh8G2Xf+jXBVJLHL4qOwgStt/OBGHexhGzhWiFVtGNWykTTKT6MJbweVoBdF/eUPJMklsdJKWc5MAb73K3KpUm4ePt+Vu4+aew0DA+uQBdNtSrdcyOIz3ZXAOEJJY1pdi+FOpCbwG0lQRwKLQhLUGSsvB6OH2+2NO7SKkHomzrv2oIPP67yuwuJhisk+Vmcj9u9SvMxtYxLSGtrVBg8JLXFj0s1s5aZmr0EdVHbYRAX7PJVaf7xqIT+mHm1fla1VS//BXDKfibiGOjRiBpqbmYgji6P83gFTl0gF2s2TLFkZPU6+fMeLOyisIuVuqlUn9+DEfXuMZyXRXdYSPBDyB4437gK5GEmawwPclglv7CkAT1uC3bEW6FDZ9ukej9AVk4qd8eFWyaDQVvtUuA+I3Usyue6kdDBLtiAy+t9ofur98by3PBv5Im0ilXjee0Pr5QDE1cy1/C5CDjmB3S6bOwX+uWxCXnK2FXk/qiIQy997/mlE8bwFxJIquK3kaLJnB2Fe4Nac3aNZA5F4m4F4OgcmevZ44cmVmYkD/6ydJHt9UXigCRj3KYJXuOyAVu8r3US5Xdwt975PNaysQiD74qt6iROzpvsXB3pFh2PT6j/FkRvIZfdy8LcSwDs2LIs3neizyJvGYXu2cmtDEXgGxYDLRhSnaGD8n9GeaT64xwbK77Zb4mWjnbzmXxuwSJwQGlb0k5Or6AhGiqKJFotjyYj7DAT9jJhArJlmcFG2gLITLj5frybai1kBThCUaESk8AufVE1nH8FxnCVZR1wuFeoV5bQ2WFmGNzaHjQApUULFJ5tFt/pwhXNMT+rJavLE6JjDvpqbPtRYKQJMh/iGbmNB8VsufhK8ZEiN4fDmn2EO87czFAR8f8bnkswVOeozCl5BxWhZRUwWrPWKDY2FNqwynCFr+VVGBr1bj/IOiM6JZsUWyMUny/+4ktPhAyrxX4jy8Lg01wnPk25i4TtIuKlQxcmOX8GUWBO73w/LzxfWUj4NvTeyizWKw+mqyspAmXh9w4RdExBU6rDYUmMbTtUGeEy03MoC0cOYsI5BScB87ObPFfhAID35RadYs9e7xXXRsDgKxhLfgaHCdYpkLEmXCv4fOEXEqR64qqcxZybz7uGpWFcxfizXrRze0CLEb/oapNiuVZ718nfgcs+0iEbxc4yzulfZmZUHvIqNVZKjQB7oqSRN+IRA1JijyrY0Cdp7Hnd8eZs1RgM1gOo+j8vi19xOqIx2e9oRmgivdaVWgBEiezk6B94iXdckb+/Spi3wVxjM3Ldpu49NSjIHuWdMro5kdT3ZPuZjke0qsjM4nRnlUbBHg1iX4EdfJFi2J2un4ddkBf8DdjLfsR72tU6ld5dIdvUi+BqvjoFjPXKxnvslqMTm2CIgRCucpLb2y9nBqOm7i+hBHfWqo/go4oZp3ooynCxqb8/0/scxcmsHW0zw57B1gf8ByEF0Nz5t8NqSOq8Sw28ahJCBYWJ7zTkRCajgbrVTXekyhFQHkZY7jAHJTadLrxop0zAw143yCEIWsfXaNuYSEhWG3Glho6BrIyKvIHJgfmf+Y5zxLQbZXyjkV4pAOAncKCCuvPMhzUuHPL3r7vdJOAocTET9igW/k0tPnRXvvMyCZ7CJNK/l2jlrxvSxmABcHV1B1DbIB8PxqX5pXBoKBWlDaK/p8s4W95xwVPgwdFBer7C3ujZ2rYiOkslUhaeo4qzXLzWRNlDbvWp40x+34dNhOHa/vF8jYyvxg3yGiPtoRoSshHTLsZ8asUSZYbsBMxBI2v/WkCpTHK6m458246Hc4W230S1n+XDpgEszVctOZ2jrsrE3mgQ1PSXoDUm/CxvVDSPAxFZaC10LqnafPaYv2/Lrsj5LK1c0tQ8tClXaw4UtHugRPENvaEqgE7dOPWvKOJpEd6l7s0kxd0X/GSObUwSgtmaRIPkrEpikES7FD1TCsVf+c5rYMDDSbuy5ssRc8x8gF/fLJx3GZ5AawgEHi87Kc6EwQ5eoAONCDaopo6oPAUlbib+V+myFXym1gqGz2bl9Zj+2JA+Fs6Dsgy1Xyg69HOlb75LH+yG23hBwwAKDqNbcTmapy+AmjeKS3mcGJ0lpA1w0rLhhRI++X/JYDuS0JQ0BHAenIvBzSS+7oC7LOjIukTzz0KBK7cf33EDoL2EjwLTUR+2FWih1M5SP4JdInkBn9BOtLQ2BvXLBHSho+N7pk0Ht1EJbSTdiugwXXMZbJXtgbRiNQwODhrp9umxDIEBzuyz3amxuIsrP2oASEdClJ6Wh7WbJ4nplcywr1EIr1lSbuFa673S6gqwkdeIpwmv5+rqsr4KYUAXeUu6FhZtU5FkBIxysNn2+YCAHeHCMQvP4KOWYzBE5pfQel7nzoewmmm5XdgaR7RXBmUIcF6UtunXBeOGt3lBVwTDyiLI8rrJXDV68+DrgGDRqlUmCHqkxUnLtCutC46r9IGZRglmpnZ/TQnehwUEqLpfngl157IcexLpTD5n03F3Kj8Usvd3LjLV0tGzlPJiqgc27KnpvpkXpRI6vZ9HdT2zJQCZiaBfitgBjJSgxww7Dp2ldJyofcrb5CGoWLvaWZ35bU1e8BdM77YvIZeu2b3ECI4NQQtRsaFjvN+7bo2/6eciQ4TRF2eIYQxOscqLinYcLdwAZEbvx/sZKAt1WfOq2rqZbXVj9YkAGXkCRiX/OdQ0Ch0zQ/nsTJp19MmVcIfRMeXb9NrEaBOxuF4P5KWctggdLZBadut3fSGAHu7vpgD7eLfbVvG0UhWVE6fugicRYEYywN/8dLRwin44I4o69PKrdocupbbWFh5cBRtjTM2A9hIdNPSzB14DmQpPGarUPnKWfe6FPAVmMNUUU9xmoPreZSC6xTYRn0wTTocGOrgB/Hiph3Ni+OeU9HJ+KGxFS3ntoaWyqDXQZ1nM4VbhtK5YoEoe2KUrcONZKsicvMV43IwoT/FhONE582qTCbGIDfYW6MgHgC+0bbT9qwurPLD2zt7gwbToxEcd3lI/5dA1LXR3/60KApvnh+fase2KUX9UbqsBPG5v0MOhlwklW4iZztaYlqe91Mkiu/+bh83hg1mg4JD4aahHjYl+Yn9AhhRaNxL7mlk/G5opzVoEEQvG096gFpgsF3UJCkO8IASI/7yq6ebj8ooFD0TZEwVPVW1smBaiPVDiRlv1Wk9eGG4xIwn6bUNRqNz0R1Ic/8SPmrpi7va6Tn9E/1bqIvwVnogQ7ut993bXY5wwUHNRxFrNNHooipj5t775P6puwuGEEWKEK3IOwXc5fB5qu1/lpcijEoatI0WfNyVYsZP6Nm3wnqfWJ+M46aHx1wNQVECI63kmuAXbEn6V4NlcQ4A1aarRvnedkv5bJthik5q+BU368K2Qgc6ttyOy7QHg5V4PBiEm4Y+1L+Xtvz5OjNaP8r4H7qnco98meZwlZ60lvdAkHD6yLnYExPAJv0mYxhPnaaheWrLoc122IB33E0LcrfiRLtqxSLo5//EeluxgqoYDMlzn387hmuwSKn7T/BJUP5BHvV5Gol0C9H2dKE9a7fguWcTgv101afTDYZvUG6fxMdxbrJ4Q+qKeU9S6YArQH1HqkNKmsUK0r1Wmg6q31ZoZyq5PRavwMfzFSPQsT5xq9EdFarqZqUcYWNXkBaN1Cdwqrhb2yX/YyTayk5KxhpkXNwVBYR0S6uK3AJpasEpR5OeDCKh1+t9eA8/5zWumhbPumobOasW/u2DrM8Szifg0fLjPH+mq7U8zpMnib7bNToYUTWgUdGsd+jNVkqAIgJEJf/1F7C/d7p7EncQuDSmmrzjz7qFgZHoAmFtaS3d6Mv6ptV7fp4FebFV3bjsb/2PqOu0O34EN2R+KXduElh6Prh5ROeQee/cpOLqZsaB30qGJqA4VZZix6OA4lHUGMMHfFP+dxuR94MQcbQgPr7foM3d5ZNzPwjYDcTDOLGlhylRzEllrdXnwgJjhRj+c8qb/Z7ZnjzgkHjqrEvvaSNLLFv+XZJBINT8KgFzRkcSdCdaUkvVIMJrU3A5OCvid0yAjhpOFHaIRQ+nHwfVPKH5IkQJlHKpB+wL+jYKyihqpw0dD7ZD76HpN0EAEPJGVcXuFVgOmeqShrCWxmdGA==","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}