{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}