{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"prometheus relabel","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T02:19:11.510Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-12T03:57:18.813Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件123456789cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"linux","slug":"linux","permalink":"http://www.digmyth.com/categories/linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX19rW4rwRhBHrDwlJEwnkFSXMN7YxF14zPIcaZPODBAkg/r8U76Pvi/qXdGnbSIpxcFQqZias643rMgvpBVLL2/CuXWow8zXFyyxxbs4lgVzv2WbCuf7XxiyP98ve18IvLD85vu9RCv//m8PjH82ouy/oTcJSOaAe2RP88haMMMTLdGRGwtPggNzyYFAkiYlMTcclsTplCGhiUFvSQ8ZXYp1jt7PNOHF7z9eOHZmOScAOgfNGyanoirWoGdzlzlPZ1UfvjrKLzdlwLsthmMMZcGrqZydfdVjqZG/cXsFC3VwrzzrCe/y90Kx7FHNlu3A8VsaEKpUp93Fp7fXGYED8vHIVV2xAvVw/2cmaFZP7NxoMHdq01OnGZVh4tvJoZ5MW9QqaNOMsVJbOf80CpkKokNmMdJi1eFOw/P8X9p8p/VAlv5rDrFWcB/NdB6Xda+tzpT+ORfPbBS3zLZf9LgyHVYBBlwFIr7NGBBTkq7ndftJAwLrM3Lb27lL7jiyYMJdOyjswNw9mOUFK1dm4xpGQeTQyxVBD799yC3xl1VN30UUYGKyQsXyFwUW9D7QIRWFIae6T9f0gWzhBmbBeFD1mSzirGgk5sGLys1aUvO9P4TCMoxujavVh8BwoZmPEdO9xx7Ad2rrs3CAgy0O6iB0lnxsIDv+xAd/e1j0DyhUUjPdfvlRLjtx0GsO2mC02y1hFKQQqa/LaQo0VC0W18N94HKNeMVL+03nFy/6CR/lIoqmrmkRfPvCbD+DafJNJkzdlOp4jYA76spPLDlJP1QHOS3njRhnjq1LpM+3JWA2281KsTDB5q75346Sh5v4Dk19P5QAcfobCSgCmb7ynnQV9ugGMjW73apbnM+PMhuz9VGtrtFAH9rsjwgATOJpJPoJa0YKJVmNEBGvCwg+//ccPuhGCpfKJ91FC/1FLeSIUEAsTtMyvrwXybGHLCZl8OyM3gbZKasoH/Mw+UvR89YZYS6QbFc2qwGliKOPeDPxy0bvkJ4fwO8yQinXOR4291VIslc5+KHWZcAkznTHb/R2WNgSNojmeJkWZuzi8hn5XoaIK3/LumrEvvA7jMLeqeBDl/IuQ1jfSYJOwy7/CwL0K3wADRyzTc322x35vbD1S9e3lUhR5oj/UZW0THQVQTzXO3f2/yeJ6LY6fuufFVoiXGPILwGxRC0W0ZSd+yI9f8LRmv0E7nSamIKqirYMiJ41VRIin5/80Sv17cljns0i1abMUWFeqZh6dA8fe8r6VKmgKD2/xy5uosjGcJc8yKnr75QGc4H77zbIDkiA5C9oEKkM68B6WQi/svg2tzWTKQPivpE5tqc+qYZbAaA5gYTUT1WXi/xeGN7ctXkXFVr+pj3SiWXxLBoWT1krAUbUdh0aF3mBAAM6/c551nyADE9IkXpfx8BLfYlxKwR4l8Q93TFptNWfPdVyLXME4Y+AP2Q3rE/KsIpquomss6Cu0eqvoanUzNncqjkku8Q2N2t5uJGPGgH6J7AusskFwWFDhF1KYdARa3GUQojMrJDmqQax/eExZ/ToLNI1SaqFPx5oDXvaDBcwjSrL0J83lFOLLq8Wy5eQ3TQTb1KtdJLrkHtOOLsJfNIwfcBO6R5BUH1qpWyU5zcnbJQrKr5p3nEEC5v5UY3RTYnuIJabjsD0uYOaIrZ4DGP7P8uO4M5gDpUxZ+Vfmvyvn4cO/9G9DCCgwhwwVUw/BMVq6K8uJNgFBJhJehkDeL4KIYs2m82WBumenkyDj57/MMDeEffwd/766y6y5v4TFEhglFdmr42pmHWitONz9CJGcDVHntzo3LFcshiZSg4GM8CL41PNQhJKl0tUfoJwoDjrPmFiBsXxJ6bk1WMj8GPncE3rC69cnxRqYYlB1qkJCvxLmfg5PJmVuixb9jcR27ST8jYBaTiOZtKm7EYCqn2xDsUQq+0Glq3nH/BKVRVkcqTgIYo5OXqSoE4t3CaRGF4c4Cd1otv7Hl2R0mAvZlv6dAwEj2Po2VnWo3lDyjm7my9AR1UGRNFlJRfsBXI2bQyKY5GXvxn+jguB+D2iKAe79EsxrHvb7DhO0v3sJvsr2cKK+X0GZiDGVLjX3fL0TQv5qv3GcT3Z99X53i5ltcUOglDBpm7pBvRuOlTvpAIPqwpLukD8saGfHKeTr4jktHUZiYb1k2qKyxSAAko4j6lXmxXuLaqhuQ7U2bgwyEmA/8f1tjjpQVnhz/5a5a3YLGNm6ePtFyulIPjpBOKVvMZYq3sSmbTmtmy7ncs/ySPRnrLuDY4VZypIQB0FWhggCvqZQG1Kz/EKsLqcIhw+gH8vjo02axSSCjFEt/LcgQW2kzqnZdynadAyabwPSLFEt17cfN9WAkbULT2mXvB3TLEGpQAwBtkiEjOeZsC3C1ZxKswCHmztNoBTRnyZpMFcxHWdqMCuvepJ6+FgvJhcUdt/T1YYgznTwKPQxKJBzULReuJY/ULTDq3jZGYDYs+dIIqpOJmSKAFOOaes/JLMVufrh7BTIePddbIPa0C+HJynaBraElK8FdStvM8oBuniYro/JBlF0VV6ebjCnQfzy8yooPo79UZ0A8xpoBISf+Ug3Pl4IHMn76fPsN55CbElFBZ7gIdJ625oLE7/YPu0LgsBRsC/e8hr2mmnogry7kuEY2DwTUBSt4IjJzc3OOfgJ75oYH3mzrrun7Kj2uxEo8vwTXRkVx8RA4M6IRnLGUOgOqKr7VZZ0kXzOOpatOINcr6WgQ6P26U+5fM6jG4sUlGC91PcA1NwDhAgJeJiYfOhEuZuDe6bggS36/UzqouryDbRliK+Q3q1JjoqYkrfP1TUUFSoy5/hgUOO481QrGPwm/V8IUDIogxj9vUpewSFM0dty2f9uC+rcG3ttmqZ3/A9f/ASqpip8nhHnd51taF1sd/Sa9HYKPK+TrMxShaamuw62cMkAJJLILGVUmxZcEju+1SzrQFAa+rgIQRSStVe1ev1sbXyuldwovJ/b9dppnRJv4ulzfOEGPZ0yGMgrBSeNDqJ8lQS+I8imPcxirezHlfUuJIt+XGLk0i+HrhozZOiH3BTB0liBYOddozIa8aTuSHNBjh2hlT4pC5PkOq09JkzQZHkfwSZgANqbyp0zDTclzQuaTU2ZV8fTZC1uFZLGtY5Z+wAjRTpiXz+YOq3ykBh4weRCHqkGoL+upVzRl50MQe17fYyNpy9k2StjU+w/Rdkf82XUSGM4Yqb9O/pRlmUkTe1RiWlRJUwfkRO3Z5YgpfpaG6VJFyMhEpLyKsQ11ejTkECjt7L/qt6614kufl2WXdNjBDnFYnRZUNY14k2mNSdF2uWDOMedw3dGGG6EPPSKea+wVAtEQO/lFwJB1VRTOZ6+5aOilmyo6xupfbGM3jkXHix17nIcGxAUmMHFVjIiqZBNVQmSw/TgUmrnd0knfAXNaicaZCsZ85K6TfpS3UOwfWZykPPp+vFJeCeVg1uMhbd4tEt55YQV8W3PrbW+ZpNasZw7j71idEL2xte/rujguHDXb5u3LQjxTDulo7UihIyKXU9p1n6qLzMf+u9tr9vYxtAva7V/BKBw0RbMqsELu6/TUzy9r08hzxEhUlc7lymkhXaD4PNRJeAdbM4GgdqhnPeC8Hu8OvFgbZ2uohhMOHBHSznxinhw2oxPW+7RBxQdE/pWF87C91c+ZjBlvW3LYM70yLh9L96ay8XSIGGU1KDzEvw38WMkTkBXL/4wFW9viX+zC96yZZchXYvcLky4cwxd3ptp7Jps9n47xnTzNKPd38dm620b7ZVBgj+vauYqZeAYpCL+YFkIXG5wHYwbD1LgDpnoQtWkZlw+6uR+jYT4oo1zCcGuDX2jQOCpIFRPOWYbBzFCfWMPjOWJW7i3IqO2weJZXw1ZC5HF8hRJT7DX/aGj2GLS66GOhkDKcIZIvY2FYc2za4zwd08CWCvzh8cUw/V2sTwOjLyJZHsyC9b2BR4AA73mizVwPMFjtykytgEhnWRsYo7zzWXUmfFODdMWW/DMO2c0F+DcXULivQ0zdyPuP0PwjalUA/safcpIX22TkwvS8sVWpgj1h9wrLfwprUiVgQQ8TRCrZPle+js9vdAfgoARp43qsW/egWhAT4cc2cUCmv3jEVEAZdCYRVTRHuJg5BQYeLfqMHwzmAxZhixcEIZE5Rh0C8A3f9a4dbJTjpOtPGeRCkmuYpgJMkxqM9AGcZiphyFUWKX8mGDZuc5xD/2D1ndB9B2ATlt2sQxdJLev8WNBGlYzJB8heHDeD7JFX6e96Fffbn3DhpIheUqDiKK5Q5Kb7f+/7019fpqB5h7sOQIutLIGuYSBn/kaUCJSXHDVlPWZ2T1IrHArvLGG3KIvE1GtW7D3zEaDggzHtkBWHqOut/lb9ZY3RUkmCUfACnJYtEBq4heJdsWVoOs3t2yhmqo0IN+hujWoCTvEVsxUHVhl8qyAntNK0Gs+IxVEJ77dXUNvgea","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}