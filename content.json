{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"升级openssl","slug":"linux-openssl-update","date":"2021-12-15T01:22:54.000Z","updated":"2021-08-17T09:21:09.046Z","comments":true,"path":"2021/12/15/linux-openssl-update/","link":"","permalink":"http://www.digmyth.com/2021/12/15/linux-openssl-update/","excerpt":"","text":"12root@stack:~# openssl versionOpenSSL 1.1.1f 31 Mar 2020 download1wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz 12345678tar -zxvf openssl-1.1.1c.tar.gzcd openssl-1.1.1c./config --prefix=/usr/local/openssl #如果此步骤报错,需要安装perl以及gcc包make &amp;&amp; make installmv /usr/bin/openssl /usr/bin/openssl.bakln -sf /usr/local/openssl/bin/openssl /usr/bin/opensslecho &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.confldconfig -v # 设置生效 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"LVM 换盘","slug":"linux-lvm-migrate","date":"2021-08-15T13:12:30.000Z","updated":"2021-08-25T05:58:40.077Z","comments":true,"path":"2021/08/15/linux-lvm-migrate/","link":"","permalink":"http://www.digmyth.com/2021/08/15/linux-lvm-migrate/","excerpt":"","text":"背景： 多个LUN划给主机做成LVM卷，现在要更换后端LUN，也就是更换集中存储设备，业务端涉及虚机上千就不从虚机端拷贝数据了，直接从LVM物理卷更换 模拟线上操作，添加2G * 2块盘做为LVM卷，第三块盘为新添加，替换掉第一块盘，保证LV卷数据不丢失 扫盘1for i in $(find /sys -iname &apos;scan&apos;); do echo &quot;- - -&quot; &gt; $i; done 裸盘分区123parted /dev/sdb -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdc -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdd -s -- mklabel gpt mkpart primary 1 100% 制作PV1pvcreate /dev/sdb /dev/sdc 制作VG1vgcreate vg001 /dev/sdb /dev/sdc 划分LV, 有意划分3G大小卷跨物理PV1lvcreate -L 3G -n lv001 vg001 查看物理PE信息1pvdisplay 查看VG信息1vgdisplay 卷写入数据123# mkfs.ext4 /dev/mapper/vg001-lv001# mount /dev/mapper/vg001-lv001 /data# echo &quot;test lvm data&quot; &gt; /data/test.txt 添加第三块到VG1vgextend vg001 /dev/sdd 移除第一块盘中的PE1pvmove /dev/sdb 从VG中移除第一块盘1vgreduce vg001 /dev/sdb 最后移除PV1pvremove /dev/sdb","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql高可用集群","slug":"mysql-HA","date":"2021-08-09T00:41:54.000Z","updated":"2021-08-25T03:50:37.765Z","comments":true,"path":"2021/08/09/mysql-HA/","link":"","permalink":"http://www.digmyth.com/2021/08/09/mysql-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"prometheus 重新打标","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T02:34:38.742Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"","text":"定义在job字段内示例11234567891011121314151617181920212223242526272829303132333435363738394041424344# A scrape configuration containing exactly one endpoint to scrape:# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;prometheus&apos; # metrics_path defaults to &apos;/metrics&apos; # scheme defaults to &apos;http&apos;. consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;prometheus&quot; refresh_interval: 2m # All nodes - job_name: &apos;nodes&apos; consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;nodes&quot; refresh_interval: 2m relabel_configs: - source_labels: - __scheme__ - __address__ - __metrics_path__ regex: &quot;(http|https)(.*)&quot; separator: &quot;&quot; target_label: &quot;endpoint&quot; # 添加标记，值为replacement内容 replacement: &quot;$&#123;1&#125;://$&#123;2&#125;&quot; action: replace metric_relabel_configs: # 删除指标 #- source_labels: # - __name__ # regex: &quot;go_info.*&quot; # action: drop # metric_relabel_configs: - source_labels: - __name__ regex: &quot;salar.*&quot; action: drop 示例212345678910111213141516# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;nodes&apos; file_sd_configs: - files: - targets/nodes-*.yaml refresh_interval: 1m relable_configs: - regex: &quot;(app)&quot; replacement: &quot;$&#123;1&#125;_name&quot; # 重命名为xxx_name action: labelmap # 标签名的重命名 - regex: &quot;(app)&quot; #删除app这个标签 action: labeldrop 总结drop: 正则匹配成功就删除keep: 正则匹配成功就保留 relabel_configs: 抓取前的标记，针对target自身标记，将来自服务发现的元数据标签中的信息附加到指标上标签上和过滤目标的作用 metric_relabel_configs: 抓取后的标记，针对抓取指标的标记，用于删除指标、从指标中删除标签、添加编辑修改指标的值","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-08-17T08:39:46.462Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"hadoop安装","slug":"hadoop-install","date":"2021-07-12T12:51:25.000Z","updated":"2021-08-20T07:11:02.012Z","comments":true,"path":"2021/07/12/hadoop-install/","link":"","permalink":"http://www.digmyth.com/2021/07/12/hadoop-install/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"大数据","slug":"大数据","permalink":"http://www.digmyth.com/categories/大数据/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-17T09:15:54.618Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件12345678910cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径daemonize yes # 确保redis-server启动时能在后台启动 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}