{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-12T03:57:18.813Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件123456789cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"linux","slug":"linux","permalink":"http://www.digmyth.com/categories/linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX1+n9voNu89gUgxyfh82rivkoT01zvOr3T6FAK7DyhWm6ocdhr9VM1sAUYqfnnU5Jhi/Z0RGuav80gYOqCFZxJAMPQGtoUn0E6uL3TUTlB6Fwb11rTJpr7VuMgvf4ULa5tLgTzIj/Vp48oPE0wzUUATWH+qR5H16inQm71XYg4598h9Xkg2pBlX+eaPlUV5rnRLOeWnHSrEg1F/WIihvWSLJ61JlIhSK9fFeJR32ljQNP4VZtrNfkv/cq+B1P4ARZUide+t6txNv74JCXwimwaC3JP45YeCXishA2i6xrtx8x6CIsCMXvor8R1BTSFlvMbsOuWNR69kEvSnkFk6oDg+rYhFxLU7aBV/Z/b37LNkmxhkHyH9u4iFceygvZb/yNbtDSOUedlunVpgZUPA6CFvZ3QrUTecwVcDJHDkk0DmoR2518tM/HBlU/+2l72Hn9MPPpwjxMuMY+yNZDuxPV0UeHV1CLw4X7oqChEqLAwzXou8OzfZy4sPQKsQ5Wfo80nBOk3Vso4mxeqDakhJND1VxEVVYljyoGs2G0kEbTbFheR1mZFk5eN6EyK6562fKeglUhk6f8xcy9iBxOzd9xqFzhXJEC+nq05yYh//fZwckaNm2qI7ycYl/UJXLWRLdSKNasUuPR6g9txh4QTGanZND7rAo/XgFr/i3OD0Ofqj2fPGd57AWGBJm9S9wsiNwQ91a4Mt8mz8FvmS4MvC+x7YLJ3Rnv4l7jXB+J0NXfx0qMITDW9w44G8XJGc6y9+WO0eVyyW+RgfIkNBLEkqkxy1jY+vzYQ2F9m98L2rBJMUCW6Ukuel5cyw+Lv/0/v4xgI0Ki/HD5ZTzV1xU5wpHrTDCcV+SQY0I6ta+s7Y7YtQ67JydmFZd2jQLfd9wCdEqGTzLHUzlE72hmf0CTLtw8B7t97eda+mfNz2/5d5sOWI5MLuZn2T3LnIYy/OeL/1Wo6ID0va0Eiw+prdkPA3xN2qZ1MAir4W5LeOAOjRG7rB6hfKb8QDFZ8/AElt6XCo5vg/JjhTz3z6+5twp93gIQEhBu/0pvL8341vvDoe8YcRqGFl8hGLsIJDGcWxYQnO03W3sXq73o8dtK1ariUPQL+717NwDm+YisUd/721+dYfrlhgBstT6nTdYhI8YMUJ7lLH+04OIx25taGY57kv8oALt2CXaMpO26hahoWEhoUT2aS2pXzGHTR2KDxlGX4fZBDsRbVM1e8VM8mXKD9SiGEA54wEqifGxb9t+X0zjwEgGZ2I5gQ3KwNWCpXXHhKL2IbLM9PVPShm2DV4JT8b3H8OOF4hPQoWzj0uSHkv/xLgjCd5OHGruUZFMu2LsyIiAJIZUgEMA0qXak1o/5jiixNodz9V0VSwHymUukIO1BZ+5motyvIcyfzqkWp09koyt1rssb1220RqhLejmHESBYVxStNkFCpPBAgync+T62amm5PEAJ9Ooh7+cZKBBXOg4Tut2XJ9lxFcmmGCP4U2PMSvy1DSHMOxHqcZW9auTcAwn2hjIZrotgrQje85FIMIoHkmKtINBrix4/qYP4SIrX8M0pNyyVy87zbE2MFo9VYQGiuUCR0hkAsqy6FlzI0VYWNVdO8zWZcn1OxAAGkkeWpT6C6DFlpTdjFn707JxmyULohdrs7g3DmHXSIo7Mqdy0owFeJ+3Q7MMzZqZEFLOoOkxh3TqsRY75CqAQTZ0GoSTiK+Z7AP0gLuC7jTZM3E8WGbxVVlDvXjxIeElvOTv0REUqbJDUej/o4qVeOFou+emhlwLBpnB7gtf5Rv2E1BN+tIn7NZxR6vGBWQbBUffBpxPhhLR5oiZrjr5z9acbiDuGc7PZ9o9RIe5czBAc12m2LicKzKV0UlApW/YOjIuuJk85tytAfGhawLntsrgY3htvvP20D/N08CDLDdqMuUxTB5Z1DPkq4LnQb847xeMmj1M2wLUsqD9KH5mjje4GhT3L1Tv41barSbonBsRrdpCmhFcF0Z7il5JIuNrpV+8vMPmHmzLuy/VQtM2wAl8BiyX8dBuUFteoUGtBSblN1uylsVw/cWIJDpc4uxWWfym1Lf1X/1ftRyb7XDT0g+u5V9pGJfp4fb7XorU9PFh5Qql8U1xCMX5aDl8qMN26npjz0l+LcxRIWosYIRCmdQH0SCoe+4tdiuVC54rEsxubS3pZbzqFCMClmr94Cx4exB6cR77QwfqLZHReLX75ruRx68/LUcaZQumQJbP9VgXzRdkBh9UC7polaplgiLu1OltxKsbLMNd2eGUIQ6hewYATQUxB69I/ZUBrJ52rsKWLfBrocgjscbXj/wodhlUUNMlm91aiih4pLoiTePPSuOyy+wuD8gmMLCBpzWZkN8LRDOQBH7CLUdntpwg+xUHpNnNqDgiXJKQfO/a916ldFLt83BdYfAD7uRldoZHIhYPjiEusNibVr2bRhM/y9ostsVJCzmmvFjx+3PDGw7PnckAnqvfBgwXsG3yqeX5Gl0tOoKU8aQajCIREGQcg+YIV9KzW2wjZGziIVjVL67Xp0AgU9Sjln+0wt23JGCUBdgkeptGYRAkiWvCfugtpaKo1H0rgiPmv53sPwJyt2YMLo4s4d1op2e229FsKpAawW8W4kDxnLnMmtT02JfX0ksUAu7WS84xe3ZA6G0cjOVnfg/dk9OfY7t+4ClqFUTK94DPuU2cnpyuOqBYI/vchpvyWw8AkLgMFl93UqY/3zxNP+7fwoUpXOhLs+3/uCpikYU/7RyFvVkefaPCuH00uPLagq3S9Car0tw5arn5dOpiOy/P1Ni9L/G30Mi86JaZ3gb6QVZETpGpsdp477XkWk7J69PbLrwLgaRdfD2Bfyl/dhm6OK03JQpSSjrT9KIFkBuIr/7apyT9NmTMmwVYsTXUUbEsiBN0Ygv23ecFgnpelYBxaD1Re6XcxbC7oFDEigSrJq2BuhLgno2LsmGObmoqrl9N967QzGBSAOqiK6C12kJ1v/1AOxhRC+XO4zy2lDwxRu2HPwY4dUtiootK32FN+KLgO984mlyTq3um/JN9h12QMBfIC+cZ6p9DNeZwx9B4eTeYaGwujYQQ7fttLmArZRM2Yl8A2rwvVLsvyQm5RPX5aU8d+2Oiq2+blsLSfgeJrPDuR7ZZ0HkmK+LjIqqhgofgGLDw5dXVzwo4sVk44iVdHwumGazAICpICbwL3ghE4MsbbW/gvNDroxi4jL+iSrLfIi7h/kMTfywjqQWHQi1O4XGFV+jajYeTXnHUE0shg7Yj4WfCx4cXSjM6L6p/zlVl8Rkf1RNdSH4Vy8REtRt7ILAniTsNu6Nmtyjec52Pv73Ne6Tpo0gzhwHxw4RhpK4bQRz2v12DVrY0SDyzW+kT+g3c2oSDid1hw5qTVKyLn0VNCTGfcIJMbpExhTJupokgNhPc3qmnCHm8A7qQi+HMB7irzeSZTZa6gETul1ObaCaxI1HQwwkmYCaLHBHOF9Co6vulxYYjwgHH6njWug5UfEYpvp5mz+Zrd/3XQvwzTkKvBVbgKaUz40KO0H8HKSDnKiv/g2SQhUNKcaguDbZIpfHCp0vsHpQFCC89g/MIi0WsaON0N0c7H9ycnSrs15sAD0ty7Vv8QDTAlzQRQct+RRlSsuJq14RQC1Ta98ZOsq3ibdi6sf5aQa9tO213WdtWrEha5Y9/tqqE7eEplBgC6R1TNxvSxYUHGYldVRjvF8SpzcCq6hHjjOHgKgCU/OaJp+dr43mlytfxck9ymnW22dRyyxpXbvoAx1t5e/Qrd5k6ZLr/VvIX0SjSsoIUO7tZCa8rvL77MSaQhWBFO5lnB8EkBv3EUhwEJK3YsF0PAPDT2d/mlON22hFbrecA8g7tfEZ+4Mq4PGiy3yL+poy7uM/jAb6Ub7E+05YR42bFLEftoY529JQNV01qjz5B/s4S/0U9n7oGxnGwprn+6ykSLJYxxafDdxu/zjbQIRPTrK8eQbjU3duxIZ7o6aLtMKxhgcI5+xwg9KZWBF3y8SODQVS8//taKGrNZzm0+SVsapsnxDcer/vPQPI5T5aaMpGSl/CwAr0nvk4dypp/wK7RQTbcFVLdJWWMUrmS2eY4QH2Pdohn9iv4/CSOECf9q3VYNJqCyqv00mCLOWjtGJFa5XFKSz+sOPP3Q25kpeSRyx5EGUejSfwR4ff0D9RoM8XFH0t2O919RepvyuLzoKFmPFbdYFRyWnC96r0YI/53Lg2vR+dL1Uai3FM9xYtxNvodQVVSIHKXna6bHHBmQi8cbsOPviUSELK9qQ75ZHnIy9CrsOIuz8U0JI+bfD2wytRlZJabn8J4oZeKFgJIlTMdgvF2gmv1XRGHdyyoQsqHworLPwMSTBfwrRJsidwf0ETwfiLV4DAJmvvvgFqXtBpMcU2MnPSR8as6CIi2jVijwWz8L+/Wab4zU4osXtlFNvJrfGdgWn+AP5ddUPFg6fEiMoh45Cpkj7TvYp+yPh3Am2MynQt9tr51GFxcsatbBnKEAkJYTIdvGXdRLCGxtIlh1Xothmh1L1j34qDiTZLHOAOOxHHPldDHOzDmT9f7IHyjQM6kTqzt+JHPCkVCXNmqglj54CDVwXXxZoorpJsYW3GtaddDIsYzj78ZyJRyE9ZrPMUxyvSibZU7kOYzO5QPc7VIT3IVpKFNarxUinpDtlYF3GEfd79V+yZdt739wI5+Msr6Cm7zEogvmofA1jKIhgnKTXEs7McwsiSYJHEBdGpkUQMn62jUWKitNKxSbCLWDvuSTuQJ9Pb39Fl06jYwwpPbo0iJt+EfUj6U+mik3FJ8ZmC2gLADcLpaOspFSLLygNxMQxUSPt7o6EUr0flWICuD1v53bF1bH96pyDzbeqbccDLrS6soZ9A+HtXpY4q7ZWBEJVGzPIS6e3pa6x5wNsW2e/15UNw629jwNDOlinTSmzCh0ZL/sRRxqLBfUb3S35Yx6aebcuzxYjLApWNBuBRZwRkNXbH+Gn6sg0UCwDcFloz1upHkMcMe3Vu2gN0dgR1WSYgGx6w6elXkXXVLPW+zFxfCs0LMo9FMT0yn/jj1E2X64pHK/wXBPczH6u9MP51eAbi8Vjjhr3JXZiP8sBsAW/FkHeOm7utzKSm3T0iGO9xmrWJ0ysEcfjKbKLqHATh0EHLQn90bNoWsmyykOdgku7KxySH+YPKZV0JSIFZMByQT4izmI4HMbGPPXFT8O8f4Kh4m2adKgn6LdN25Jrz2sef+ter2YlMfrpBUnyQdqu7Zq7yiheddUpngorwTgxxbPV5JavFQ+AkAgBD10ldhNsjVcILZfj/6hffsa7zKnxHS125AB5vx5UbQ4CagdOAEKXRSL3SZzND95tnwqKJ3fq7350Iy6PVsmN0B3lBNRkKVsWZ6HovhI0l1GlBrP5vQrnGE3h/djOXGAZDSuKSgV9MWd3pqNuRuSeUW7XQK4fa16Zn502rM0+Ptewv7n9pfMcZzY66tfAmUdH+0Rm05KGwW8C92YepI3i3WiATA0gbS+gdGxdBFSRoh8BMoqud8Xi3SDbOMxQs8EPDsALbzvSW2WDDoUYfLNDgRe3fJBUc5Akr++y9SwlesnfI9Itz4Mr7Qt6hIEhd4Ftgrj5rD8lxipubNkcsA0uu2MTb2MX8RuIuXjGQTgxuxgyKyiZQ0Nf1LcvOiNCh80A6UGgykYVxEmtmruHmHbN5pFUUe481p37DVZh5myiTJSWTzKoMC2+jTLy2tKavVeDZES/5Suy6pRbxnjOWVr7DLHeZwl4szoqF3xJcNw6AyLRWty3tSVBdiVRpr6A0pU3gShVoAmeomi3jduSLVMrcTXXf4fSe7OzPMHb/x9nCqTnAjoHn1HAfH4TgUuJoz02ImQ8JTpZiETmGj2Ws5xA7Z8pwGbAlT0iz7xV7rNxRFMKph52ylIfoM9D1oxOcdA1akuY+BiFKjXEmdwKlAWnZBfZh1MF4rY+eAN5sUyCKGpCdDYL8waJRnsrJnd89OHQlzfdTh3QV298ddYYPsYi2wsMFmq6C3Cpa/biUIWdlOHvN0LXy9n7MTNK0XlHm4RGgSD3HJd1hDMQO0LbWcgthGyVVdMTWbBDl/9Dj+ofg6ylL4BGOvaXK3WdQ4GYykT/wkQ9twdyKsBAAMn3TMQxHtLZKyNyePIc2a7CCOCj4khAtsdDCKm9IbXRVtwxpj6bApQwNRH+NEC2p+UzjV/eLoF4zy7m6X5vf687v82VkUxoNv9DJ7NlmDq5db9+WNKnemY0C5gDPjBykbpglNf8xYDrQF5trKdkY6dK8wpKAAV48vHOJA5uK2aJJx9xBup96lnEHpvEAEsgqQYworUXO4xmS7N4h16zaQDJ1nn7qFOgnvHriputelnsGlJqCUnAkKvhUmdhZ7VFviGJRjuLLWKw2QRN/DKFRQL0XCXA6hYzEmCP4nqBuJnf8y1z/bGo0r7+ZPIyINrJAwc2V8vTyuGEemV8gUZRxXTp4ICxrOPuHt7Z0QQBOUa1+vhwaYtX9l08IFPi3SPEss64ZtVEH2YbX+FBlc5U3aA9FEk8ybmGL0eDYQruXTsn8Xj0gDEmKtdH4lEZbd1zJ2+5psh/RRna7EE/MFcIUIdUSHDxl1JXDvxLtsX3G3fCDlN8nzHhFRd06v97cfU4juUZw+UrbE5OMoOsWDPJXk3ueH+lWpraOSrxvQYo6usZDqBT3py2J53tuT7RG5BJRlTAxpj2zlOfc/i+08QD/y9dk2ph7PksPP1ODom4U1MjMp69exB9/wMgyfzZaGal/pnEN7Ol3HWhdba6Bj0hx+paluFTB16UHkODme5usIGCK0gRo6qb2ihKYChfjtMZvcjpQA3NiGith4j/kDFEhe7BJcnXGd4/tM0Vd2bb21CxvpC2EPokg2V+jyzrg8xYeJTgHJXaGSL2/84ETJHXHvf7F3PDqAXKWi7T8j8koYxrHwSzMpwCnMDRz80VWQitqJbTmB8f6Wrm7uquPgfNJYPHwjrRaPcDMm0OhuvfS3ovgB44VLTe1C2bEWYI407LnnYw6ks3PElCbe0rNo6M+rc760Z0A3oX9xlKBVFysOKqkCI27InRTwaOlAjRcm06/Ri0yycItZWRJHivPu604tv+xbfu7Si/AOaheaVJFiFjaJ7QmFYLqHx9wgWfCGzRWcxoX56XA0Daklf0wEMnpKkktuG/0OwANW/eZNordzWW/RZFoNo3+bA687KOtv5S2862wV1oknY3Y1zUC/t+iWNW/ZSKw8dRigDjw+ODqcqmwFsjoPXoAttGO4SPJtsDBbsJ5FTZsaOfClqKVf1OaidOTKG2CxfvCi3H1Ze5BWjFzIz19b2bbIfcklnPDlwosJnZxmoJE0MVm444qcyB3h5PcnPg3TFrV9xeRW7URh6QqU5bkZ9mPjscKWjOvVq/i9bgvcsjcnzu/woRsEXpK+c2hMjD+GRZB0jxPeyQfP6k0WtnmZFgwrvWpNHKPxC38EtLNXb6Cyhdp/HrYbkVcb6oFopDwACpaYWFqgg8G4cm4r/8YQcFPinmyFiE03DRamsKt8BjimJXInoFa0NLuhOGyZA+UaENChEmgAgXaIurWCwWXMWa9UQq/85sUIFj5PklmMmTJxL1ulg6wuf9FRQk9ItuS1ddRCdEwav9B4KnWMdgbSs0kHoqzANVLTK5Nc8ey3OvteK3HZBJDyx8LaHHCk4GmrbPReI0ocJ7OT7HJPKHZkU8o8ISGpeMsY6rK3TqokkGhyO8rDspLneIXG0L8ib63j+v/qtGvf6jW+TC5T1egPo0xWci3j6UErcktJGXCsIuQ/A+3lTSlIe4dsR3HAdKuUUkDt+qhW5CGqDgs+hsj6kQwGLLiV2tq7gojuWka90cgIiaUWSdbwm5AbVx1UUjKcH54JwZ6bz3gC0muWtLk5yYTWkWSgLWyAg/DqO5fvvTv3hdXo0UsnrXvifYcxTLUlMo6f5DYLx+UWPcCDzh8iu9Q0UR9kGalB/5Cy+FYhtEgh8Tz7SxF5vHT58ojidhXa7vHkJRCx8tHWeG9sMHJZcSVUqhEOPnrM3MQwKkTBUzh5s0/YOaTHExvhPlmL6J65px83g8pAy82x9lm2VImZ3CM+Fiv4Mx6cnACuvTb/TIYyHu8chdwTDQfWLBXZIeMGtZS76ZM7+RUbGDoDATZvtZbBFIhPkKx4SpdoH3g9DDx8y7g+KKbSyxVFybgxcIIgdLyQHr1U8ALxDOAmgq5ivNQUjMDiaK7s/jBJg2J+lXMuloT3aIy2wQR4Cdq7AbzNJZY//+zeeajPkv3jQdK3w6AXMZ9tlhTA10HdC0p3GPVLNTA2fUzCzAIzPYXuGvLA8bjWv10sg5lZU/rmMLnLRtE9hJJMAmI7wu6gJP3vj+ugWfpR/JyeF1Wg61qfMvuRTZg6vtE5+CCNHTgjPKjnk6XxjlzCyOaXoeSAmom3Kk5su1xSn1BPdzCeLVt2ykQpqLKf2Jd6Yzw7kVvlj5xe2ufYp8eGyYQWS/Ynn1yUjXoJnlKLMP/Y2eqLh/LXPrpR1M9u5ur7MBMPxrxt9G5bCV/FbzrKwLSJoI+dJHIfUQkDRVfJPDJ0UBwL0CQQ2JOmvJsQD8Se8pxStui6IpYWr1/pi2QYZMjG7p33kJaYjDA7h1CswweAr8CPh15Y8D5wd1EiLbsRAFm3tAvQ7ILvV1J5Z0Od5Be0zFChEBUednnXxACoCgtjcs2pDwBMIp3ZihjrOLzNq2tMKp3QPLdnHH35/tbJfMC2NFuRrHNe6PYyTuVmM2a7/94a+I3zZQX8t3Zj5RQU0G/oImhg+8vQe7/tiS8UYk+zNBf7763rqBtAuL3BZoRyyE9NEYpNQuin2jdqFunPlj+PTB9f3OZA0cosDTKNNR08wsLPGFxU7YdLzFkV0R5k9NyzMGmyKT/VVX//nZueyKffCD5IAMfAF/9X2wUfhK8Rh0xM6ZSXdkuZ9SxtX0I8To++IeKX+HGtFCPDq7KujAPS3yjEqOZbDrNHhVtOsulnHHCmRomGWaXn19GQwiRRl5A999xu9HwDaDxyQcWHMnHkyuZ3p4kM3jTeubIBQ+wBpU1/RBENs8mqZA+9Q35gd8ZgUAjDWBV6cR3bkFkwQQHnL492ix2lq/L4WfEZMsamUBKJ53uP2GfIXc05QlgUro6mIK+hd/UzUg5a1yfxOPNpC5s+AwHhI4I80sbJ81Etp7DrVvGzRVlJjKa+DiPdGwRUTbPhFolVDiAqOQNWdckDAl7qXVewNbqn2g+SdsogsD2oxZDU54v533IInb218Usfhmxz/snnleRIAfOMjkSi8bqjf6boOvlvTFiNomT4BLtaSdjSy17/tZxaVLSATp2H1S8WLQrZYrD6GvNFxuWNM2+uYY1zRfBkAkvikIqU2BenRrHNaO0/oSYJ0gZjBPtfe0ITh+ylXMOwT8zjZIDKOqBvpAT/sRgazt7GHM4i2qenVEXyFmwuVCueXWFWmaQNR/JJ2PMq0cnqZ/yQ63izZpne09Ieyo1eW7WqSww7MiAtcSOyJotkFWelAtfB0TcCu/4ASgEoDs28bU3/ZF16n+zNlbUu+0fBRxht18jc6Z64voBF5rAzpMoTRuE7+qU58nIPTMRd4x2qj6nvNnUWnC1cFaZ5F3DJFuDo5BXyUXNyvPd/JQB1sIUdZSsZVX0oI21qejCEI8RfO4ya+7UbRsmd0DIUoKPbVl4Ed1ewcpjGMHztV4ZXmO+jTm0JX7uVe4oeC2VtbFVRbd0CgoL/FWZLgkBIJ6/0ibktQFSB9ZNUvsmIsVr+ceHzP3FG6KPgvtqXtcmzsFVknJ6Zs1/OfbLA3Bp73O/IEKi1KxY+Mow6nsadk3l82AljfBB83oY1qtHvbGDKWL1EQLTDspa+DWjCgjax1Ts167iNxujZxxnJcjv2MkN3nAwmXxVT6yN8fi0+4df9lFUWtvQwmy/OiDwEVifkQE+PJfuxORj6XGoay4okjWwsUOz7kYanXXJd/i9tbLH4Q5WQgLiBIhoQ1SGK4jq/VRLjxaY1Hj3/rrX81Ri7vapgGwCB6pXOMlEchiNegKtU1YNuMYa4HgDiIWSpHw23hKmMMOCWW3VSbuqROUZtNzhLbq7oIdYD5zqmYNULydaBDGB3BY8M9ehHJjdf1MmbI0Ygwzb+DNdTiZeKMmxgW3GppRbntyeLhuDwle+NUUP4AtgGGdkt+U4s3zr3pX2jTK7bO5ZUiOL/pEg25A+Z8VCiT9HzD5ezqk7gxlgKuT4MPafsPqESdYEzskfC5lcaZRQv9/u+W4GOX7PJcC9PlLt9xtScOP7+qfR0FyQa40TDQw75ca2eeRSTHZvdkU3BEe5RjgH8zEAMeyfuDVKXDszpROTOX5NQFELN0gp1rIRsh2WrhRwUhkQXivWLCLPtL+op9cUOhinUEHhYbr8K0ZeaK239vZHXrYP/H8iorpomCEpmqMcMOq242pmrIVSdyjqAazaCGXNxqFJffrL/0XcQyTv1JeJC9LbSnz2iPzc/Vpl3J7WHUHE9aK58N0SLhMl3kkRGvrZbpVnu/iIcvGMqWN+2g/nz0o2q98nFZQOSQCfAmkUOlP0Xh5htHo/eYFz1EIG/v4SZv8lHRUVh+QOTv8OO7ldZC4yj/gIu3pm9Z/sKNLhQyIojmkg/rMA8vb/suAONTfnduom2ioIXIL1tKwgm3H6clKAy5Hu6Sc1F2EFaZYOzXUFjgHHOm0KTpvrgl5T6ofWL6sF6fVThWD9Qdf1wt50HBQBqzoVVaGvIS/kqdVQOEVdyBC2htqqD7ortme8BOXYqLGOtPJbrErRVY5IW0YM3JpsCGWqZ3mrnKRS9UQswgCvtJosf6xQ0H3mGqm9EH4exuAODsl/MnUc5ODnEFpU7LXqo/3cj+eIUJmlEsjCDYh5x3fysIuO14Bja7PrIQR/hBAMllEKpGMwzizh08OzHaY8yYT3Jo7X6BSYkw3UO+LtoiEOM//q8xRYrtFWVvWELNCZW6LaWaVdW4nC/tczG8qQitFBNBtqisVFrNixHew22Qxdk5hVYg75Era+F1ohtJ1cmrF8M3bsaNWaFnMjhLFOpYpKy3OGJsslabxS0raHpb+DzxSpWq8bNTjkwAoj9wRbyu6tjCyHSDiHymAxUfRpln0CHCfRMCX7L11SNlVRikK3Ybpg7gCpw1/w4M0hRicOFucNAnwoENLNajovrTeJpLhqO2ePhJxbOz4wJuZMlUqVMlLxmIiCmhQ1Ctl7V+K/bwFSGijW9z987ajv6GPMwk7CgAYk4Gso0khtHH7IPfc1cNyNOAoVtE6HFVgYZv05FpiND+/Jvn4pjCr3blK70EniblwdjJS62AvkgRECoOFZKzxzE9nAd5CTTsiRRQIuOckHWqL0P2Tpu0rT4TMxgnTfphn6tDrCtD0f52ReIKGvBJYKos3j75N8F/0ge2OYuMMt3uaQd2DuxIPJLvU4vttqKg0708kKbU3Ef6gSLvQjjvszusyWOxjun5VLhVM+4gJOYeT15jRQhufGR2Mvo4XN9zDtNl28WN/8ZwHtzC21B3tcqqx5QuByXmmJVcGrEyF9i8O9CJwgjw2zm+a+M5tQKyrirS0OvQcrjZXWmxsHolkFEzja2hnZJ/+l8FQY8rxZjPO8WWnTBgjkQG65eG88tKeaPe5FmOXRiEsPMKA9og48uzFVSQNBiCwBZnGHakemsDlr1JD1ZZjJPHOT89Ire1DqCjIOKCw8/MGsV+HLugetOEzYWnAMKE6VXZLkTB2pc5sys+1m/EJwS9o9JIdJ8ds0MjNxGBOD/eAOxLuaG1Ef1eY0IzGO9juMuxnJt8jgg8Or/zsOQjRCXQTcYjciATjjMiXKh8dGEF5tw5hePBoEE6pd5+O/fwUWN2o4BqgYkRYPyoLaoYaK5s7BOgb9xLC+gLzeLM23ZGsKbrmweWGa1v01ZscFjFjN1F82LDuVejHvBItYOkABhleGyRJZnGMfYF2NL4ZJLTUT1+DAkbRZZ6tUQjQk6LlLfqEgM2TT2ny07LRk2dtf3tqLdJb7hUK5lYJwfh+eA6FNS0pbiVKGJxygXZZWx66EXypOd3M95v6vAYBdqtjlbVnOmN7qlCrTgT3j7qWGBTTiLRN3Yd1CV7f7Zc3L8kGyHgH1IUCbC4HI4O2QaRACC4JCGl+2+T7RIJakfCtRsdMt7AEcPEKCRJZaStk+DcpmkIHzKkrO70DDEWEmKpQxNIRF1IokIL3OhLXYYOX+A3VPhE2E+TuQ1i8ByGddtfY8vF6UXceUeUIE8jNYNGHliiWF/CcM/OwLtYe7z8LoLoOnEAfpqRF+0/cMXvoM6t6ZqicbJguxUAetEi6nIH8f1CrEhSpyKFO5DCCDE8V9NQXORLCtWC8LPBq4WeGvq3vYHAB2qW23JvV+gLNxr7L/aZPzHoljlyZ0rNXGOpoX8uEo8aB7PxPkCEzd+wtpFsXaebDkKVDm1lzi6nb0aKcg6c199jdT3DvWNzUgYVNiAZ48suGojAFE5byySbrOBfHU0bbPa9JZc+WOX34wkiVQ9pDmo/dR5WvQ1f594omDYuGqOa0+yy6UXriwS9oPDSL/3lvXS/ttz7L+7InMfT/dUkKxvTNC6JZRglkARdVEr3DYfRthKNp47tpvFfYFL4dyfV/z6vhvEyDYhz6C3kZppimqEaMOUV/fMc2PF9BCfXkaOnEeHUvOIfpokvALUzBDtQ17AJZv8peY1CsjBxh2VVKfh5CKx7W5mqC4xLgoShu2OwOoNtYZVIHdKfVkssiSimw/5vjHuSjQ3FzHwrFuwRErQveraF3BnndfSt3yCAE4SsDhA9Y815FCYowiSz/LfLf0QfJoaeGjJ9Bi7cxCozblZa3qbPZ3McjKBbwfcj5y91SzW+LSWwQDRhKVHXrCBpTjh8EW55B2y3VC1CyDJa4YxHSZLFpufYlDLH9HVScLx1vU6PocUOxbGAwI07QyUynSTuJAJwBBCPZrwCk3wkCZXbJp+IlJ9UhBdQg6H4dkn3ACMCb5x8v8/Je13vV3+sfLrm2+Rd118FQ7t07keTwSCOA6PPPdbUiS4pflOoWIAorRqcOd0QTQl8zP7Or6CSuhXwrI4GeyA9o4FStCROOMRAVxCy35cyfTMksWWDz25WoaNrkbSw13SL+Z1k+y33X5l2xQt7a4R9wp8GHIaMWg5mXZNPhqnA9cTL/F/1QDINcBg+UGzjbRKFM8MdB3WcD3ozDTgyVLiNleSWCQJmccECHr7amwyrhcm+ui6kJm6bL1FEDgC6+oo4gddsqNjFMyMGkhcFI3IYCHopCE+bvjZCpFXZTb1p892R2vd4bvyNxBf6pZG9qaG8G3jFNf54LQgvLM/qU6SA4KN92AKU93M6r/3UIK+7mOR/LPyzbIWHK29ZOzDVZu1w+W4L6roriHH+xa2jBECVp4DvvQM5fBuH3PNAUieibx16D+6bo/Y+6upRWHKPXA0/eTOCmpDSH8kRrMBIr2Sppo/pRu3wCG15DgebGeJV1adiPPC1g3pXGS5oez6TlUlz3mgDNdcj7NxVxmY3fgO9ZeWNi7vZrfOfry5t7NkbK1AgzBwyEWeTYbGeJEK6ePARv3WWnZ/giBa4V52wr5X8GxJaA5Rk0/VYFqaPnkIHcCahMHcrAhGVxjvjTkR/ZWIoUy0mTwVtEosi7fGW49P2KT9tLWt6d1+bnfommgsLQLfJsJQYrytmwte5OQNVkE9Z1+zC/HkiaRCxGZ0bXaa9gnw0FgX0RUFljY/2cMqzL+bMQhjdXodyUCmuCg8I6+A+NbMfqVGisI/19ObeTuXkM2qAP7lci+o4GWpw/5uJOxRYNDFOUtE+wWhI1wh1vZwM1TUl2EfRQmxtDo4pF4dJG/g3zNkb6fpzcQYbgZGkLP6/YdXoivg38gID0KwAe8jF71CFX5cNhzzyng7ogdOGK0ROMtJ5ZFx5fFH35oRbfu+QDCqaaql2iUoXXHYyDa2vqM88QUYKdWIxyKY2YZ8n766PHkcGSfyF6Rj6iLsm4fBh8YF4L707MsC/HsfOeSm2PHdbbmALgbziQ0BSEuhGqWIa4iJjAOnItQsZ60fPkOs0LLm0gfLxGBkkSyYRUHjUR7P/JXrwObwA/t2WaKE1MlCK+LKud2z3x3+vxF3xP0oL+cGbewffzmKWFrNXmA5VapE2dX3vxg3vBRrHEVMm9gO5NIPpdlaI+JNgnH7ae1eJVOLexh2K67yRKJcsNwfizL0M6MOrBHAmgox9RIelYRaW0OXb6DzHvulH+6l+IxikA7yfjevgrcXGW8Uj3tIlrmwIec8AWK/r8QpaL0XjB/UNtsnQgo1BoQW2SsSVqgRxVUEqTlN3N04XAYSnF3idDbG+PGD7vJMYO4OMAdnabYUpLLUaoolRwk40R2sc1oz5CtX965qI5vo6JFGBOICR+Pr8TfKF3OB8eRvjNjs2fxu5KjPsupcMWfRZIcjbTd6AwvaT6Ii0nDaG8obLAPmP4wuIWNTHW2Bf1yjwWVpGZamP+gxBIbYwKrRPO0E0VmMQPWZzQhTg/o8o5Dy2T12Em5F7/8z+iwpjFG+R2S5sPgGltRtEWqDUvz4Nh0hVBg9dslmA9tc24SnyAICSADqWNd8kM3WTyFmz9dMrY2la3l1HuX+bS5VT9rE+lQLyq/PAc4h9l4EwOq47KViSRjVVmZmls9c6qUm5UcGsBsDURUoSADDBaLnzFNr34tHe5cX6aHgEE9hd5QBbNUTkHTFuRI+8ZMW0ffxx8V8iragD9xzDjGna3LwZ3AJA2CDkwH4Fy4urCIK+PAXewMUI1c/NC/9wMZZD6KP7PPO79q7ltc3LQG/wlaMQxXJYQL5AIftGJl2N05is8HPQKhHnsbfCsDzUSgihmhPY3ALy4XIj14VITyldFmDmivUs2tMVxPvQirpkZDDBIdtSSlGDtr9bWE5NEwYQjJkzsHXhII8JNNMf2OMicxJCXj/B032a+gBPp/951J2uV0dIgPbDih5waeeGKmkMTj5IjbqNmXq/k1y3gnCFP0tlnWOypJ/fLqacmUPY6q2OsHL9W+A/xqn8TthhFFPFJ5tOqji4MdbqPzbrOXJmWqslQACHGwGGWRoPfDwSb3ruPED/vOzOQVg8jwCc7czYDs0T4tbtKvmMLXdfsyKuax/NiaN8+k2lTVlpQ5ZT+dr7sS34w0hzHLgd0rhS8Wpwg9s116YKGLCLsv0ZAfWAgWZTXcRbPQvB+1LOfwa6snjF093YhpIGqe6ZZLyBY7S6U6M/64CAaCcRrU4Q/I+Gu/D2wpf/YW4frvx+PXNuf11XHoAtxJTNXmqoCGJIRuv9MtKPHWFPlDjJWNtl8mp05xBfPdfzdkHfP40Nepp5foyhc2x5kNEaXnCzxPEFoWqTNNB+2e0T3cxsTSeHtPS7t6JXa/uaihXpRlqJdJF8EtZnkrDRMUtoWSocN9t/CzUnk6gUKo97xLsfT2C00mTtmjpAzOF6A15TN+X03uZOCQ6XREr26RCEHfj+OrRP1rHkJ6Inrj8PpzWjxFx0ANy3AqWPG01ttQgbK+8xe2lwPZltwKltUB3+V8GUCltBE6W3WhgLH+kBN+Q/i+HHfs7G0xDDEddLpjr4bSsQ2vf45UtojNbuzeU43Z1Xq0jEDVGWjYkgJhsXHtABF33yUPIFiHqaCRrrObEhrDwtQEc08HTJyeblqgmRhJ0hhipuaWlH+DFJZyLV/zy3+SCLD4z3OUvCi3qX8jXTJ+8ATD8IAtgdB2XQylbjgb9gJiMdXSgLE+xmW3C1xhTiF86bp8a7YpSYMUyQod1bdRRCIkFWIhGPwKuQGeeipX975NkEL0VcJB33rjaKT9yMkWNPvNzaDX9taXPAIUiNlpLA+ziFPB9ikK/9ta1IMrRXAeGFlJXyAQZlAY9Mzvf2/+/euIyDFcjWc9DeT85e/HWpkJgA/FcExHL8W0V1C8HYP2T/PZql9uyQxejKWI36l7djboLNoLuwx0nZVgbU3jbPCH1W3JOinlqlQgB2K+91OjKGqTYyuVlfdRfwq0FnmckWmMswGcJQO0g4TUrdDCROWu81u0/TvF5eaFZQtrPI0/Rh5jqXnIcsGKfL1Ve8tO+vFGCvmQoKvd0GYYoz0Mc1IjCHDYMai5Vp+b7nDk/SE3HsfV9390uODoXBmSpfD8gkCe5c0vhOzQzrxjWuaMudrgBXjhhPqW8k6UfTYKRcHYIQBrwixSC23wBm5/Omsoh+j7xeJF0cyzyplIzhj8nK55fTAlUE1OnSG+Op4TncN5E8TZlOkjo70ejxOxSt6TJdg81CEJC2Xw9QWPUWxbewJ4B9wCJnJSqF0F+Dzn6b0e20xmJ+xLIXy7sEGrt4yrOIUEFxhBk+BnMrthfMebtNqd4VBHL7m4KKvtCL6yV5N4jcRItJWIMyZj6zliN2v7RS6tpmoTd3wytvn7lBDYHJW4VaSSt6UpcqtYY/PdbHkS6fp/vY0yuzZt21Q2yJt3LtkiiFONOWOmCkCjHctg+cGp4X/eF+yZCZwIl5TGiqvp4ZEUBKJhKhzJiGBZmFlP9TErb5M/yEsKzvXW4AUgybFsunYjuBL8d5R/X9pf/Yb0Ehh//pV4HlWHqpEwwA/Kb5VKCfcBDV6ZdPVLFcSD9P/LDzhtvGJnjzPnKIYfXkSxiHIYS8MRklo1naXsPQAkpkvkU1EnN7F3LvMIYdQT7PbtUjTWWk57fiLbvjDQjH3RlZf518fpzAp77kJ0aPU9sFs4PjSRU3utKR4EXMP68UNP59wvEqrw1ZYIoiWqrLy/VCuJcipjWVIrFPioYq46uuWO2YLoNNpfP1RAIIoqlf4T+GALkVIYcYOjLVuuKwLQoFFZNxCIm+TqwlkAL9rHPPbzhL6MTW/PSPpX8tYWBt2/Z8+VrYc1LRSR4znu/n1Q3OjyD89RO11p1bC3W8T3hwwWZWC7eO1zVl4SnwEKMVOVVpcvNJhgkkMlTRp4dhI9SVu9tGM5UMVaAmNCRlyPoPB6kBx+cv+8r48r4Eb5+jqTIYIQj0HDKgbt3iEPfI6Z73qWiuE6qpLj6Sx6TfV2cwaMO24HaV4z7REeCFKbFx2dhDeVyMwjazBiSgSJ5rM1z3sjgXPROJ5kN1TDRxbea4G/5yxRBdNovUUsqc7+4LrWXvEr+Lu7zHSIU276MqaTONH1Eg35+AbMK5qObYxtTxi32vJ5rM7+HRI4I2bCXt7n/9Hgki60TYbGYVsnRbDluW1cxXVXhBFswa01woAjl1eAbza/Yd6sOqOk+azznPc1GjO5mR6R7zeWWkiIkzIY/A+LpTrtSCWnbUbtEfbmJN0sLSNgW77BNoGzXKVk4d6M0aV6uNB1HsS0SdToyNpAz/kzhXtv3B5yPoeRzMcj2gRY0cCSjY2Q4qhfvmKLm4FZiUOrLPCmNG8w4RkL5lWoo04qljl/4SuEKcGF2LZDVln/W18gPX+dwhExYn/J9Hc9Fwy4mrANtNVvCFCauknFs6oc27OIu3B+NiZKNZ86GTwi9LP7Hx801ZOe7duiGOTaEKDKvKBMs4ki6wM2+LKXAPJdlYZLu+rvFEG2O+fZ96Zx5DdxzeXwxh795cu5K6iFsv3PcxXo0CQsWyw25MVamB/UZw1eDba43Ssp9kqEOQIyeSPtWIYTc+GlIq/HTvX+TkvDacy+VerovovW7CpQMMCiQOFlmKkoJAFMP1rOUV0pHA9P0T8tJDHW0yizIPeLX4GGuh4eo11x4GA6ulTFW1LjFpIjJQ1amWp6Y66LgKFljaovvOWGUIF5fTAZgRuUsXmruqE7+2beprnJGvP3KO6Q74V44t59oTFpu8hY8zg3EC1B/bTTUjyo20i1IsaNv78iTNLgW6iIqdPk0rC9ZdtEO9x04+kzLKe8GxsSMqE8vvzX7Ze4ux0MuSd1RB7t4QjS1ty1Qau3732Yv2KZRblHAzBm24V0LAfzsNOUpQ8Br9ZnZX/WXTgWKxz6hpEkkXogPNoN0UFgbAte/0gzmYmtyqSpB42f6wFTM8WECWyh44vLuducciy3QZdWXrYhOhGyKlDfmrj3uouQALFAaoYNHKpvLeKQfIVWcA0uFTBd/6pb8s0Db9EIRPCcxNFO2IfF3ZyLxfToE1g8WeOdDYB5WpVssFbeUM8MW0EGubeqcDnELE0UWUmu5yDCnCe92OCnPkVw2lL6jiOm/YZwXdVtBkyZkFWJa6aV4kYauOF9vdK7pYvDhzMR2hEcWyij1KSGJGtHBqFF+ZMJ8IWzD4Wzzb4alVijGZGOYMGDUjqlCAZKrY5php/g/nfgeM5I9jrDIdrbFDv5m/2DjrqKrHfbyPu7z21PUAU07Y/qLgh9KDL+aPNIOCeMmNxEW1Uv3M4TnP25CkqY1mAE7GzD4AYOK1zQF12MzP0D/Pus/umjLC1DDglJRX9xYSlvm/jOwNIDZge/lGUtoPBBgdktrXDfj0O+48rzVkz41SqEx6rlxxrBxBEfVgnSQ15d4WNEiQW6hDdOQ3Xw1yjXXe4FPEwutd/h+tEEFYypFAnbXy1K7heq1j8NtNFBcfdslSA65N/quiURvS29wQ/gozzToiiJnHsEPwt4vjEuLBl1zDa7h92/dre/jo5UFeTtpGdhpS4qzniBNYsIVIQHiHfCr9TzH3KbYr74bA/1WBgpWGldK5dpsuAsRLCAX/R+O7+R1P/So36qjwbFjeokZYlhoccalh7rnxO7JZhITYB1HqyAFbih1FeMOGBMnan2lg5Azo91c9OwcUa1qPbCVSn5ATKm+dqr/N2wKn7xLUTFgR8p3GEn2TV0vCC1nQxbh/2AlahGGlT3gPEcxtaOaut5CZU/pa6X+KBfK5+WALau5mPup2/xAAFrqmBoe+GpRixgqg3CouCaQv9bSYc5uliNRTCFCOSJ86WIRVrbbnQuubiHV00tjXyjHLs7iCydZ7+oCzeJv31vZ1s0aktlsL4NfzL5hPIs+c0aFRQGNSl8f88M8a4/IRayovnsApMlRHDYlAnBPwUMWBW3mR+8vTUnnHr4HXjQRUl1e6DC7ygiUSwMSepRyckQfKPHC/nXPFtJ4vbDBv4hCCq/99aLq9mYOHykXILxl6VUNaKB72S9408fU1B9QIFZGapBqkUmfGtJWO1bFrWMbClCuxwWGgaZS6/WkFIkZxb4ghP08QRHz+uEiE+nbDNCmP0SFlsoHUt7SfSVDO+X+QRiWk9lXcMwnhUc2r1CxMQyatPg7NpnINGEHydnhSlSZXj0Tz3xen8YGeQj2qRDBxs1lHw59wWq9XlUwR54fur9JQ2iKkYVj9E3/axh34i1XRq6cMFLDstRlj3QMexldS7yF7Nc8sLYKJwRp+2nbf3lPU/eNaQVJkQoojdVsqzGDK+cLaxJoxRv5QFIhpXs0H7IBicMRNlWJ+7y5TOlqU3O5VTKYXY8I0YgJBAsCZNe4FKOuDiwVQvjeEYyeikISim3JhSAULO7X1Y43OzRxlUMF5h62Ayy05+PGc67qZ454qpIoIedIdczUhsaPiUkpjRlQt+tCf30W5RnbBZrwc+ow9tCdLq+5M0V9TQzFXemfzWkkfLCW0g1E8J1fptBuwgQk2LtZS572r130m7kPrk/X0WZv2R3gwoWFcfZJqCjf77JcXMsxJz5gW1njpnFWFFAnwZwwSDPWCusRfRs4dIQNuIKfjDq8dmoqKgagIx/It6ijXEnphnkSiGOs2KIwv8/NcEsM9uL6R0VbwO+pDKDS+k921jIABAmtLJIhG/Xr481hgCzHnin44hmNgaZvwUtft2PNZzjMpkOD2Cz8DwxL5nNOUmdzOG+aLMK9MRO68GWKgVUPqPngalYhWR9ppA0x08GxHJRGJbp9Mu3EVS+hNVCBB35Ktj8nAlpQbvg5bTSNDiFTSw7uSrR5iUxHIgoBxFDINhJHKwtFkcnp/vV7/74VrEij+Vya9DAWl9OerRghVV22ZrhAmgonnH4QoN3HczAuNq5Asw8L1J5acB8Ku0xggpj8mAyX738go0GzTg0kcBRkeiCbrr0y1aXJ8eDkef1OWTWJ3/EGuZKCV733xZoWn0GmNuQRuwW3S6HanWoQd5B2zJIaeE7Z7Cobkb4Pk4+Ian+TLhi+H6zFclFYTRrVcrrWEKYJhQMRIm0urTyotcXaEExUb9xX/BdYVl+ld9gI2fGZMvUF7xlpeUZBV6pJOch4n6BEeA/U2jVaq8+glt3ZGDD9dssy+5M+OoCBfgxHWFn3Wd+836BOlzy4A1HpV8lpfWVHqPMQn/hP9f9j7uBrDspl37tik13lox0rWbNyYBlPwwrKmfmZhdaJ8Vbr8tT9EHxuwQCfYBrVKa/ZnHM1I/xXvD9WXTXBQlIJw1tL9eT0sYoywsCg24JXv6m+eZ16BCQjvTZueDr/aA2TAZnyVdudmj2F7SZIMCt9jyaVeNQJO6gWtURBkBSzBwDl2x+0R+yxWAbMSWGNM7Psv894n4j0+W91IFz+7CM9bYnYwNOPHm2P5TR4T6OoHGJV47Eew0HdPfJ5SxrDDKHxi/bip/AsDwYFrFetJnrVPFt0g4EsLur85saTbHHsFO55YN3gZWtbIZdW5dDQWZWICBfgV9v7YUpXDyQL9QalQJ3LaRhjjQHqlA+WGsGczZVMAqKkYiDVswoSCFwfzZ6Rso9xmfLhXRD0HeQkwo1isvYoFZQzUtmiQClIDXinZ4crWvxL/IIGJQL3AS7WBM06kmhYGo3C60UkK+semKRLLBsL1v5iFsgtP3TF2VqIU/DEWU/B7+O6ZGDm94d/hKQdLJxnt7SDtecbWgvaY+OEm/Ig4Lk0OTFnhoIDwsuXiwR35jQvtViMScOt2UsdLiYsLTPjwkZa20ZL+RY4z80H95nEmr3wzD9OWyvw9bm//dLw00Qy2IIPvSWAgUtFA9LX7bsYDtUqyGyDohg/BFx0garT8nAt1WH4vwLUtr19g44WS576smre3nsEb3728B1of1EXBq7QUy7ok/nZWjl6tT9zY0RVCfh+k+yZf5R4Tp5YumR07RFdZQVa8Cu/U/qO52daqVeRmANpgUYd6H/gLnIUjcwnJRW3kfjW5CafZgosBi8T2fOAKJPtmI1mHPAmmC5NeXBt/itiZN0Y9avQCd7ADBiYUOLjU5XZ1D/CwxvK/BS7umc9cvbGoDDc+3W6Fat3B/oBDDaRmN/jERTQedVHM3dVIYr3Wb0mcNPKNqPAGcTZjl/krpkWrgdGdJAtlOg0NmdA//SxpnZeVojQ7g02jme+GOi6a6FhIuhtF1UPGpShNjWL+nnabc0v8gFLX0smFmHE7k2tfzXKLY4VEer7eQeZ3Lshz3LKvqwOAuBVNhW6Z770okDNv8I41wN3irMzitpXdiZfNcq/TFBEUICZPEH4iVAUZgIIIZ6xA1AGHv9e7LOp91VSP+6ra6X6FNm72CBGZVyjIkbUqKOWkvYi0KDPrOjM4RzpMW/OKCuD4u89P7UdDBNo87g5nccFi6Ytw0hw0LeFJF8Y9r0U4fS4RzRWypKKhWQcbNdOHzWJsB5e1fsVSdLPSsgrmjB65jXzq/ckANjOYgo9V4l9TCeZ88d6oX1ciKcc8PBKKYs4ulYrO/opXw7ZS8MDU0fdlCswovnAzJoyCm14lZOewoTKNJzf7Oxn/Z84BcIj1W++2V5e0XfKWigMSNjBLYiYedqDTs7HT+ynw9ZH0I78OOzyx7aqTgSnIqApQtRPLOm2kvta+bwfsVeqHVIWc7Nx94X/nUMDbfcuDmQCtjgFz0dAxKKj0XQcK7CH1uDETOv2sQVklZ9zeYq6dySztYiP0Mx4QPotqhyyCdVRad8bkk8qEfkvm91QDJovFEFNZvfMYn/IRlgp9izW7kXPRtlPRNHxbUx26OqKlS4ZaHtLqWcYpKn6UQOsHpxRjyiQvBCb2FNaV5FYzMzpPYUOgIDAHLfqhtvjNX73/fwlXmuzaTivHxtFGJIPi12Z05igMGMGXBI9NQvY5E3Lkwr+JjVKf7Z1Cd+DxPkzcqPMsdhSZyEocY0AoH+CzGDsWT4XskUN4DqQBGUVxoAxN3cIFJzo8eJIL/gdD0EITUfvjlTWmYdPosoElbpGhF0uT4WfpqUZkrjvJlUMQBXVtoUvWyWaEhUiy5Q+qWLIiVEuHnKJNQoKUlWkcvMT5GwqYQQQ5k4SZGrrrcYnFW6T8mCUolXVBnYYuz0++8ZS1ofjH3pzpfLtvRX1a/VWBxwrutwm90mZn180upVTv/PWQ848szmKoAnTHISQMYV/zWPrKqGb/2jw6Ex1J2CRluu3vicW5atxws59Q0PZ6UEZgrRCJHC6RphMAicSZ6VBo/Yd1WgdlXlJukKRnaE3qQmv4XLjC2nO/epEeJ/6S3eMvuCUka3Rm7Edgj8LYkf3rmv+H+gYlOPeJe1p2q0mK0t2e8fME94E66n/0QFV/tzGVsNb/FfshnXtp8jnLCp8LiE8IIhfzMH+TJdNOwkj/Ww0T8D/7RT38QOt2lEDqQcP2I9Vhg4/NMPmXJsFWS5uPT2Hh/3seufU77hygna4nUM7z9deqHhQ/vRcb0rVurWv1A5AezKRjIn2oMMfws3/3mZRsrnTSZmmO2hmQ/tmS1CZX31J1N/VOXI3UMZ/ndPDwdIQY5L3Gu9MD2t+OjFoibQxSX5kJ6uQrB588fhtlcpGpKVg42vb6OGgVYjp3UGZoXnKfH99Ty2KuXV7aEDytAH262SXWUYldhlOpV9X2AqCA3NyNVPoE6CyTPUpDh6Uaz6GPRqVbQlRi4oGwzFbLJ+ziRIJ0PyOk72U4DGsmPFBkxkmC78sxS7IxIJ7HjlgIxV8GOk2ylveV2MUszm/LBeXhlUyCoM+KOP0Qk2Ja4zEK+kCTPoO3fpnvRNh2wYSbFT2vUqyp2dBeS0OUcOoS4WW9cyT+5/7+EuW2JOYIbIvv3NKs5JklZqzTL6Pl8qLS1/WSIN+lNjOcO7Yv1vopD29KA8n/z5X1S316foW5FvBTdLicCCJPqc6sy/j61/pGhkA9nqWNP/PpoKw6718ImRjrSFyZ9kEl/dxJnRk2Ad/2msTjzi2bpvMfIkoLGVRuK3Z3fwzdFePmDpWbkDLgAs3ZFG54NW+o/031YjiZ7z/u4q78rwBrD0XkXIsRpsts3bxt4F6zN5VLeqR132mbnTB+7qaiOHJxD+QDlu7OOqSzSxOW7rJkv2k5PwWsJlwKRDPFhnbZVIjPI0MYjx9UZDVxOWoHl1mQEhEgVT0wAw2zJ64S5o9nNIdpHhDdR5Zme4cRGuTO9INobD77xZolF92NVNWW8axfDeDLYz7T29UsEfujmF2elqUr3nZtyoDIE4UC1www5IHQsnxb4yr8whppooHza1yDl5YDeTK7fcXU3HK7tPlg6um1mO6M1/xXeLgDl+iP5xko2NK9WtbIqb99zByFaLNsU4qqMWJn6PN9gqShKo3hgZAKFCnZzd3GgTpUBrIQdAk4SwkkltvuR2rHZnhaploXEWXbH/+ZwZgYlrRF/4EeL6qIyJYgXCy5Zvny4G2DWotuZcib1jYTKkd+nhDr9K5B9SetfsWav922qhgWOinOhVX8mUY8wzYs2fTUyXgIrxEPnpHWywytkasHX+9+Luv2uszZyTh10DzHc77djuAyBRLSadNlB/wVeCcudxl8EYe2GV6eqVsK39Ml4NNcwTD2fl/5YMBdJkaJCIvJp8oyMWRMHCB6ZpTs69Fjbr7yeH7LB4nYUD6XttGJrxb2g91ZgLDF1amOliutc1Z+jJWXO19Zcbd9H3+BrkJCZGpyqae2hBI4Bpy6rLgDuLTx6qSrh3Bvj1CXl8qh7RADyetH1VYhg+LPDE/Bb7DnX6YdyDKYJL40f7DU9v4ctikoXEngWvyidRula3ODx+YBM+rIzEMppxTfjzvFtpjPIoaEZyTnk+5gwxtZQu9t6hnLbnaEDRcQbjVv7GIZ+JSXJvIRUGZ+r8elKD0E4GNeExR9TFYGzUNP4GUGUonP3U+KuLAaUC+8tLD6GAuLXeR+jG08Eex79e/0BG7njnSU4sCDiAMoDVVcclZ79UEYkoCQNqEPWYZNaUwI/Lmq2luqfsVcA1igawO/O7ikxr1hjQwics+zUmG1W3q3k2l8npCDj8/8Q25OeQsH2DbqmylrEHiCzuYAkC4BwBxB1woovTG8BqA2eC8qwyVAPR9yG9We6nLzsAt4r2bqy01gzqLxX5AspepLklWbcPcOW80I/3wXqsgHbwv1kBSRksU5xxKYfjYiGCm+g9GHeP+EhGdYFL3TU7ZBqHQhru5YsBJROH8FZys6VAVaFxfvgxFGBOlX0ALTxHcv0J3cNR481r55IfDQ0OlTYecg0N6iyasjkjAJK6LSmIU3qlrpBjit7dB8KUJpj0t/i9cawwl4+JRsf9PRJKM6yGvYfgwHASdYOcQ+usGdL8qzSFqXdruv+MAexHMMSod1bYXDHZ/8etfLlp0bV9sILboMIi9P42PSDS/fX+kzaFG1LlvuZusx4SvZAil/kWCiEm6ddco/1iFE1iECK2wQmSAc3gnzuB5b9UjI+Gfs9izuLMwd52TU4MnTtuVXN1QC0ECHTZjnYgp2Y8eaUkQTnnawE4d1yZyTj3zgU0eKvf2SKcAx6nJyE3/DYJwvF+EHOABi/Ys5IM7axLmupfe4+VJlWIVbUvZMt0Dn5GHabQMkiSNRA/Wjoc3/qGPcC1SbsT9aSMgGw1D+mBvwov0CrkDKfWDl1iY4UThpx8O6enWvpEbi4cKEQLsYoPy+UEOnd+inD2yptTpr72DcgJ0lWqLx04qH6ERnIlJSVCEdmiUmzdDer8YOwbDD5YvPwQIiSH4Uk2JICi5UwT3/CnRBBJiIVkGpNfVerziSx/oRFf3Aah2sw86c4f0DiPjyGAs8cLl+ffl6Fd9z/tA1xMGwVf7BAJa+pRjCZPUK7l2V+745av+CNdb4tqotEwWdRcq807im7pXvefgeTu5Ck26Bkuq7cOBg5SucZwWf1+Az+Ynd7GjInAnazdY8UfjMBe93Twb6qMkGLAhxuQ2saH+qJp8mJhDttK9hLeF516pRYdqoWffZ2AMnkyFPZEL0oJcLjN98THEEcjdfI3lXX55RnY6blMd24cyixx9eirI0QOXku809JGE2uz1S9VEz2ZG9a3YWqzfBlcght2gTzbin2848iYvHZbCgUjWHcyjQks9JWd+W/qUtwvYd36e86ZWlstYz4QiVu3pukNC/nW8xGWX/lRX7/gyNm0E+YK60sNLtjdRpAtst1U/zDCMvzKAIp9U3gdWBQPutv+ovmddyTQgzFOK+o1AIdlADv2ZA2eiZ8kcJrgVev+srmiBsWQUxSvUwMr70NQD1L3zH+Xr/ObCG0DeHyJuzM4QMOxTL9PTAQZbLTCK6JL10l7WLPU/J4QPsyks5DcxmV53apCISpL9URPauwvoOOftBOeG/nlpda1F0jOCUEqxStgRbIeoAgE0FNg7R21sWS62QGrlL73DGwJepSX7rLFXRQsj+eEHgD8/nSkPzRTk6UkFrKkuEZPCivvVcP8q+CV3ES2xL1cZafYkZEZuKFlyicNvWpstLH8/F80G5w/DvjvHd/36y3Dy1h9Nhdyl5HNXRXrHdWjQDrpUm68T8l4Kw1JFZZDhR7OdMPAO7KNREFXIpFhcPAP7r51WAoADWnjmvzhx5h2fjC0k2z0wkloOxPXRAyY2zqjgqwNkVGFyI1NmeMSBIiRi2F1XLj4/cIFzrr8KNq1Ld/23HV86+xjQrXf+MI6Fjizy8gcBzjcYacJQS7Mpaa0qiNuOzYjl7GcJr9vqKTzOZh9GxDVTTNR5ePOJqRSG+jVP0qgdoS1hGESkcBTqh01VHGzg6qawYwOtstyZXUvMecm6c85mklYsJP0JXno06lF67Z9qbm+05LkrZeWLkALCixAtKfJj4puL4ClOAyMs6CFngWzgHCZTPNt9R6pggSHjSlBHuQ5oOzHjgPyICQv4e+M2a6pmyrsuyGl1A73uMiWpPTmwdHrtOPqd11uHphd5ugPeTqKBhBQrpeGDrY8Rp51aLxYC4HEMlo5mTjeU6TuDU/F0mKSli7fbXpGrLdJ52Hc/4u9KDAyDRVWHfOap7khSGDapNW68HRVSAU8mb3RGSRwp8oIRKX0h2DBfXJq7/V4TIR/X4cxG2s4C37hZkK4LSz+wnXbZxV8CtciFpPFF2vkSSIVcsDvEO0CfhwEGOaOQQgO/j0bj5EyatJyyH4FVayInEFHBq2p6pav/dKbzUnILLEr3RfRhv0UTrlZOfrq9GY8FqpVh/upEkZo8igIo4YPXOnCMGld84hD/N5XTBptVDYkc2SUYmw4xgT1x7ASfAakwTcHZnRxukB01IJdqHcVjPhtzwAEUZ+R4cfG0GSTKGmnIKY3fKYVd6kcKPCkvv3g4f6UJ9DBA5ZuZjmyzRwU7LEwfQgTygKJJe6UhlwY/TTD7tcJUkeTQz3U0wdkZ8YJtJ7tS2oNPm2SBcYskgNgdssmAVrg1bW/sksYF0vaJMWaEJuyRVaqmouAlWdB1EG8BaRIdDw+DHgm0PHHii/a8nTvrYr8mBPfe/Rp5nypFHgtHKjVmWo3Aw4rxP+Q/6vtPake3Oa/yTcYzPU9Rq3Au1bVHy66MO0RSVOSe5XkuATQTjTfRBZ8mdxz7KZWPGe09S0JJs8ia8WE+LHB7tLhZpDB5tVSWJIfi40zAng3M4eaA/uG759ckndo/kIo3msICXnlHL4gvfcGYda4QZAWYBFUNJVYbd6gskd+a0c3KF2Gmzt6JPwBaw6zRKmDIWPKGXZRml2JlZdp8VCcfZWHE6q4QkNaNBttIcFYNfSj5Wgku3Cde3bJIf438OSc2wG0rkUTXn9PyNgSpguUJIeMniO19p6dN3Qmry5vpxn9wP8gc4Dn3H2SgEtqbIIguIiZ+gn3iLB8rJMR0yhn8psv/6uCLkgYXCIN9ScoX5ZJv8LnUnQxYASpp6LCx50256LkV4NEZjAWd2CpLKW2LOamTjzTK8og6KE1uc8ZdE5XdP/dMBryK6oUXQmI2vaAEdw+wf5bEwYbFqxvoXYalzLetHurRYlICtUYbIb6aIdiKY1z6uRqNoGCzb1eK9uEFfn0OsF0MLT+6ZEsyNJwg7R5681B/pWFj1aC9pWlwE4x2GTqOaYu5RiNvigVSKsQ51U3rxLIqvCKqwXTqqSHSGyFcr3orO/7prw+yos+lzzXz2fIO5Z+R4nDwa82keqsRTJ0HAqs2pqVqAr59D9G1ZKfFBaseIC2iBh/RPSN1gVu17DW9Jnh9Lhw/9kwYEZr+lXoMuYAqmwTLCCYlC0OG6IuG0lnbUT4c/jOV9EGI4MqfeLN/010uzCGoMlgFu4wQdP6Wl4g9vjCS21h3WOsz677dzooX8eE/w47RCPkIK8AEvD8JxBpcQK66+MsIW8Qx8fXMx4lusT311hwyJyfbqyMGWUb1VzD8nyqv9vw2GmIzaYd4DzYQyYNADmIQ21ieiF39e7Z3Mqo4BXPTkTaIpYktsCQL6d1nW8k6S8akMabmbimSp+m7nNqF/rEEZejlhp9ak1yMejn7loxOijnqT0WtN9NcfbjkV0GhAA2hUCeqkJQGJAqc5nyptvs5hMXxD8QHznSL3tIn4qzMpnYdCmVg5kET+Nn+G8EFza05+VP4g5Zs7t2JZ8Z4oMmIQRygCMz66GsvyENBkdWqI6W32AFmhECYbsUH+g3iUjKffbERQ2zaK2ywQcyDwwgaMehR+fznuxZXDQ6zH6KFNiA9sr+5PHYe/1m/E6CVe40aylgLo5kcJCCRbcPsUw59eoK12A7tl+GoEjMNKzZ9SFadx/58B/fKk6UYjH0LasepoJE7pSH5DBaL167UJDq3ab1UnDFZr2PqWzcPMNBA7ioJdiiRVX7jp6sI1y7xHG/+HvOXv9g9OlNZR7n7uRkRhx8rN2WnWq2seeC9oPZ5b1EVi3ldF+m+vTguaWjR8bUhfOgfrryPWWnz1sOzrkXAFhkPsZmCgvdafGOUo1l0JdnVxaXLi+D6eW3ZxFYYgc/KNDgFVO8J4v8PIbhjRB7eC5FpOXCEyflDhzfKYRmLDD83M0kMpSniw3n9yt/zlUPQlsItb7DmaQS9uu3h6X5t0YKcjkbn8MUt2HP0b1RCWgbQ7eBA7YoXOuwBuXDVcqzNKw8rMCFLDpIKU2j7WnDT2sAzdO6kK6/ay/oUmm1mIuTU/02XbMkDIHb6Xu7cWB3CtZF4f/KO67oR8mGh7sDjlmJUF7PXCsO13pL9UMJEI538fUH7L3k/zoOx3WnIl9qh+NGS4JDEKSxln9WTB7PoiGdAVLm8NZRxR4vmzZZFdfNOgxe6Ct3Pz7aVnRQGtii/+gulrVM8waYXTR/OD/2AzmvdHTrMls/8nxf93EZLp0mZRQev/JoOfgwFxMheQH4m1oOBCvkIbmCuMs4wyoQVqClecWP0NJf395mqaGJ12CDS5lZ3fba2rct1rgo5WWoi+v8ognzU87Zr9sybXgHCMTD7rvMIxCkEzdN01pyyqBJD2mh6I0ckycvfqnCDGJZ51pbMGE7w6jHgIrC+ezv4coaUYSPcJm1oa+twGax3U8TLkDE8eBdC0334XWW55hRF0RsYHG6+eWFHaYzYoqSAt/aGDN6Pmf3J1wfcHrPyNwAkSJxyntX0FkpoD6w9u1qj6Y+7C+RlhiCM4kTbS4ulkHgULgLa8o4F6iw080lCn4pvIJdcPE7U7PIu5Vhlrqf1FvZSdfYKel4VKPZiWtIKf/O3QQvq88PWTDOcezMg9LAu68JqKrI9s7TCJ3y/O/s3FfUF36GqMIm5FrOwpUjSw96MZm0gYOyXAiYhrQhwn120ZkCrtHCsArjlqHkJM5qHzsvYvyodjInPyx7+wof0a6PLT+DRsOBUZ3HQhCVvuA4VEjpUaYch+3nz4fZjATTYL2ZcuRHdplgTxJcx6ZoATie62DGFol70xw0NehTmzHbHRM109JhvaMHzugpdU5Naf0cxJtxKdi+tj8wHt8wvzP3w2xgorTq2tJWqGLUkpLYL+XOoGV0k6xlRRSjAfpsWB0S5e6TS9AWjV/imlpyAbSALEtFPQODYe3w7NYM4/pTLThO6SmhCL1RRNrJ2DduiCoZj1lWNWb/pKEXaWLWAttHKnd99CJC8cwl4MOHcvWhkgth/OgqJOZ5CnRqPsdShhZ/XhC8XkogFItCNic/Qr1sYW2WsvDMU2wI1PsSrn/zR/qBnhZ2InL/m/MUgTdwCl5jXlUT3ItQKQdWBGA/dA2ibNXOi0IV7METalrSFd5Wql2SxMVOcPdOAsKlgBLbbhxI4LD/rQzOYIy6I1yigLlaTKHrykJt/UHqGvEmEiGd2XiQQCLeZ/MnNQVzeOOFA5OUcvT5iZ8POpDM4JGR3zmtLN0ZgiTyUzalqf1mvXMVZhvaEEcymuAaupVmtiwh06m50P4JhIy1tQPecvB6LsDFV/l3RYBENMpqyPuX9L7ijLQwyLoJi+rwuDY/MdyLV+DbAn52S1TI00JbcmAc6y6NP6KThA7AiO3mjOlJO8K0z+jbCZBhleAGHrcm/7E8LVt/HGfYReS0HxypECaMiNSgT+/DGtBjw4JH8BnE4wcGOw1YQgkdxKIQ/GjGqhbP3RQx0I3i43/WfeZBZSaYxnaSo5V4m0g0XOEj7Yo8ncNprFs6eA/cqmWCuIb9HYuVWXlEhSTR8Z8hrJSOr28lRRF1ZXdRQ0RMy5QETZd/ehL9xXkWzsU76sbHGLW+cxbndm73dza5y3c9Xi6toDwxpRXNukiq3WEalncjotI8XNfdjukAHqQyjDPFns4f5fE7KeXqzJUpGN0jLmieSjOAHf383W5NUv9ZSFlGXk0CNriwsElG1fqCJtsKxnES/gi4Y48vuF/HjCcmsDUUG9ucsZS9XJRPmIPXBH1GaUrmNRG3ZPagZN29I3WlV2XWnmez9xNJqNWtJyCFgAx7CktBbsYJh3PUuCJ4jbx77V3kxa08F0llkMYAguPs9F+swdz8eWCY6F7LTT9N9iwQzmnJ86vVvHcYm5fGgHovNvzjitrmTnqj8Ok71PFMJ3Jdh26egMC4IseUU07GLjyj2Gke28cB12A7LjL9LL0hjQxOyStnE8ydos+Ca7oehUZCzYJTNOT778RIZ5HjxQgvIOh7F1ZNal4MrAvgjUcNi6doPROFS4UBpePSOtGDZO/YSYAJqfKGfpPgmspu/nnKLsP4jOeMeN+LEVF9tp5UBuMhFWkAE51/JdXAIPvjPWneFv9pw6K+u8QBMD0P7+ZkgZEdeptQ9OGvJEk4SMARzBc0Btdeyu4mCmB2mslTfjPpZ14qhZrzOgNbFkLePrdiU6SxWHCEs2S7nZgj1SEt2z12LJ+9cpfbM/wlCsskmQQZFiKf2fce0DL/mdnvUJtDP+G61WMZ/WpZnwtuJLNvUHGEAg3uJZdbalmSiZMbntIff181hhy3tTf8Gq7E+Z724cVm+ZDnEs8bCnjd+FrFsIXOS3Vh8yaXfxsrfFRXN4ow95mzqaHptCf58RTMY/clJxzG/6dbyfgLL8BR0vYInQehNbbyPvf269EsULXeJPL/1/oEbYK0yf/RqfeGUXvyyP7ItcyHR+ACW8aE4+VDzQJYNUszRLD2/BJZRjqVR2dVuXgp9vGuHSOCNZcI8LF3Ffuf75akHW5cPJy0fIF5eW/NY95+t8CPfPAiNzry3rpI1Xw6r6Vl81vuW5Jh9Bv7NYf9tqEMsROs/TB468t9w0TMZx7+cJw68KAzL2VMWxQiTK8jVil4BPJIBjVULc21yaFYkBZFYreoxQUXPO5iN7TccG3Duem2SrQ7VSQeLcdsAJ2f8ttC+SSMgCRi1jUtu/8zxdOEconK0xXctkTE6DQKaEbWFzMOlfvY5bRQ+DOh9qQSWzxHBShkwYspXDZIfnOFHipAQL1ZzjblLwNdoLnLJaxIPyzNHQGGOo02oj/YsczzO2lC6o0ib5WkGqWdxm4QcpjLVkk490LrGdgTnnsT/xY04JjiRCo4/7Is2Gg7BIy5BFcr1xPuvQsdXUDuasEblTnNIDZQ4HT/Gqq0oY0fVac1Ll/2/XRVpZcPfV2Wnz8la//BHuffwGmnkmKIMy8ZypmPb1+NjVh4fLIdv6bsjShCrTBTowtyWePRIITPcOsligLtqLJpSOLrC4x7IfY805wLbQbnIA8ZyHvi/3SPx8pREUrIDVoYRDs08ZdiHsv4tyFlqtluJJzofMThiU45ab9DHeRMBvMngwIpqcWXhMp8AtlRTlkU3P1O2IIDIzqD+NpamJSv3DGshobb6UixRQR/Wk6xVWAVmKLRX9Hw2uwDvvia4qa2486KX9XxTUMuRZme4Sj27HppMZo9ipVxPTqLdyq1bipTf5ovevaXTCUVxC8LdY8Pu8A1HGiUoBpc5HxpE7oKzQW74LkQj/TfTzEuw4mmO6ulmnB6BJyxN00/qTMiX3tNxpTnCPWou8FgDLtSMyMNK4fYz76CX0TF2ZdHrdo1hpvA9s11fAzqbvvY1lzy+OgvwteXep6wVvy4Sk0n2paCd3BpyEjIoqKZjlqHZCFnF1obkCq9RCORoFjna2Dwye2f+hU+XFVNzU+dz2u6/YPK52G2kcTMWS01+BzFRLYGGFV+KhAm/MjJZWY8/BgqzWUeL4tejVi25uXNRGDhFSbLEseHMndQWvvTW/ZQ+yBH+PoxglohaXEz/96Xhz1gXCSbpz6Bxo2ZgckEmyJtInumd8ENnHJ5OMRd6V86IC6w93XSHCS67ohqWNfG7ppg2kGj8mH8ouQy5UEsovzm9lQseh+LUh4fAM08VpK/FYW4jq7AkCWis56nRJhHF9tY6h59pwqcBuoS7ihgdFrSRixWD6B9qZlM8OrByIC40WIL7jumcn6Cs/X4YXgMtr463BDUo9JdLz6GFn8S7AnQLim24OuDHDnlJStQRKhzfuMAZQoohRZW+7ovyjNJsFt/LJp/HcqPyABWrOpk5G8uDhWPhOySEvb0Rio0IkTbcKhJMGMkEze98/EW7ePU87R/6TiXqFLCWL6XcITeE/N9+K5chyfk6ALKg3dVJI2WxMbUCh88Lturlph9I/Ofjo5+ET66TmhIyarGzHP0v0cZSG1e3i4rW3U/PPH4fkHRyYBemJU9klLsEn7F4GgSBmIsJvTF42DEbYHg9ZtAaJGaqmaOV6mx4QKFgu4WQJf4xqcV9yM2T3T/KmvypY2sSH+DN1qgk+fKNiJFnWPW8ua0nLm4Ca6qqDYKD4Sdxm8tm08kKA4SpLUT1t05hH+Flt185/wPyZ+LqPCtmpTZRAZckYnCydFU8q8J6g4TOORq0wPlAzouNU2rZwnmvTJUNOGSmStLinv+EwdVr84kHQSMTf5IXZTiJ/9HXpKwwyH54+ztwCIEsviT+KKonFGidP1zz20Zgo6eHmr7q7rkHS7Qeeh0y/pvnjNCag2YmN6ziY2HVZzFtbs6WmxCD7M2lTbTm1XRJ6RBJHfTBP4CKz+fuFYXZz+QLT9vyZLVAhklYSCIngKsuQ6GJx//yXlxXd/pPvXX4w3BeS8ZQA90U8u8LECpBuPmnvfZ3pxvTKq5q0j9BMCb7vUMcqmT39/g8jc7RFzE0EYtT/Mv3Gcb9arwF48AQLyhTU9YZqI8yTgaVATGCO9M7R7wrUj2VEigH6jerAg8un8h5oHAFFwisJQftksUpkQKBIU8eXGiw0JuMr40af8R6sU5JbbIGrAbpZ0LzWfHL/RCs9jrjBvHQYUf8UsufHJ2T7YFvjCjxNY8LdWg9EwAmh000SCEl7MPJ18zcaiW3GyfcFcTYKfn49wnXe1jDaH/0iALcnW8RPR4agWUht4mfWD3cYoaeQLSto9DlfyyJr6OvV+mdRCSiJwBFcNaOGv2wcu5Qpp8g5k3yTl39EH965fcTVdbPR6UU1ky5UB2iGxlK+uMbYv+42okZVTsLTh5c9mxMkJqLwarURUggzmiG/8G8Wno0beeWzAhrEarRoF2qmoBrW/RFPivt476iwtgrb3Rs94bXe5YLabZt7RsKR64xdceC08yuxVymAYKMIQUAQQUJCmXZ9uwtvJlSmT6TEPXhs3JKeLUKDvp6zIrFivvB803BN0MW91PF8+ODpQv6mmvt0HH/Z6+0pl56bcwjsBM4yqDaxQ7gEtZrHCJeT0rLzjhifaG8paabHJ4zQh0elQQsupbGg7MZqxkV/laHeIB3DrGJy3iizz3K991v7nnpSi8/0mWuYEp1DAY2/2pMyOVZ9ISGWyOUuPdqsV1u2F9eGaMFhz1Xu/fvzVsrIswy1xl/WFork7qHJq0wB3KqGSweD1Qs47UQBl1adKkDqElIx9BF+wJJPso9vmYPeRuGG9rTE6MrC09GrGq08Q9LL6orqYBsQUlwP99SbcBOFmfuxAdtUR1gFwLXIxchMBZWfJAj7AWKAIhE+js9ErHO78aR5HUW2k56zKi4w+9OjQglOjjPx6yvsiw1vXFjBSURtXshgqH+kXws0KPFo7VQa4A+/4ksWZpFnxUn1W1vfgyTmDD1P4ZJF4NXR/Feqb1jgwThiEivUwDaJ5PiGfzOEAtrc30lCVLLGwWU6G6AyNotXHDZ2ipURHd9ga0gRJ3JSVG4Hpx3iKGFYwwp9w6uWF9XgvTaSUV93rYPdANangCYtwnkHHG46r8doZVcBVjcAydPuvWcXAWjGwlQ5ulsPpCvrFdJM1/EkT7E7/Z1hlL7VK+NN9zVDaLkCbB2m2rh8p8q/Kk6u1hnsj2Ch3nu/QTwOxciv/lljAvQ4EsRMaLRy1zIV4Eq5SJpHgY2hxx4eJGV5TtV/rDhsD6hB9bjJHoRw9EqdoF/lV55HtHqjvhL/WX87+vDRZHt+hE8U4o4zawYCrkfbqK6I9QzveQRF2lUci4FwvMo6DidWAntBiKYV54wiFqhdKPZNa20DEtsHne9/nP+7qnztGI6suXSK6o/4w69MGQ4HDOXI3plNP11TRDBrMed9AUmlpj1bKgOb7KluQ+rCRm+6jxyg4OcLWM6T+DP/1VSb/0OVJx+itnYU7lHsMX6K3dACZ9XV0C2hdRXzOYykOUpge6lmigbacmaNvwtDoX1wbfe9Taf89nKLJyARHclqYSLzGemNXMpGoklMkIBMXvudqxvRf3eyvQHLariVgN1x2o7ec+aFFb/Ho9FN9z4sADjSuVOWP5iI+Ln1XIoF+FSrbZcFaE7gxkjwmVcf5ubIkTJad7lWdeANv4LIV56gQA1pIfcPQ3s534fPLrp/gS4xraQAIgL9L9ad4vKtxJYNFlTMrijucpltSwu1sJQLJXksQ1GSUISZAbfY++5eRDyg+kbtjGf5t2kFJXoJlbF82rYDPlDVqLm4nFa2xQgSjfQ3VNw3A43Y6mjbXXHSNazgQ/EzmbwI9ALzCfGBvyVqjWVWPb0BcJAPx+sZfMz4K1tYtx+ivqAolJkBfYGc1QpD0lYROCfzUMQcavY90n164VvtjdFJ29/ispvg2h45wjbWFkN2W09MH530d4aWSdKtuIugM+WoAGYCGuOwK+LuNVS1v8SaQRevOQq+9R8CghITCDe4BxKucOBVeGgUsAv7yfL8qEzcqCWg95ZsSpfNbO2sie+N/ha04SG+Ft+hKQY/NEFKSM/sVHUS+CRYeIzme61sVR+2tbgNHBD/+O0zctMjDUvKvla5u+65QkKom/apMi2UtIhx3tug0crK2GWyjSoM13KNk5vCpu0fEDA8EzFO+kRf/kcORGTBcqTwDLugp9YPREjMWs0FpUVgdkjS65cmSy8dIgaBI91MqscXTA1t+Zxo1eA1A5jROZI6ddLoiBLmfgj5p4hDwhBPAkXqHt63VJmGeQ/1o3CGdMihvJfW36VjmAo0v/xx9tfoFALCq52CQVXNqXGHzZrv84Qb7DNXq0pGmwWIcXBWVpbKtSgosoq7zjqa43UIe9zn0ODkGwjz94KsMxjSlerbAg22bcLsSe8JJ/28NN7XBZBq9Y2EGGwMpq8qs8AInH1uqA/s6PovKLc0bNucDZEztCsHDsCwn0XuLZi2feD0SD0xjSkygjMIzZBL5lgz7bzXo1BQaq9pg4LlukIVfNYXvlam7gicUkThuM/FXO+2l5uRrpSGMzugSNBHbVnTPlR1v3YwD2yg2K8NbtAoKMo/bUuTB36ZBQWjaauHeEt33DVJP+o7bp3hBEIPLXmTAT1dk9JfIPB/g9Bg+4xGGIasfOx4ukGiZGyoen59xKlDwTr3DnTdM/exSsrXQCbzIN2wxtI/widvaCUxxaov7ziMroJcu7vIcpQOmJQs8BDyzlnrv7gKGMNBAAgvHqdKjyCBSwfK2jnq1UPKDZ2eELXLSp/lharNjpi7JMIqcceW+rxRrpYM80AuotGzXRLfvCoVM3S6JWopH3MuEE3XIs4nZ+DFzhFhXwtFm8MM2jpRuKpFxKuSepKMYtqf2GE+uvi8p8qhpF9MHGGYa4bHgy87hrC1zN4RxHxDAa+5DbFTDA0hiLf/GJ0nMCNEqsfh7c33F1JoxRJu+E2mz28ycAmosxYbDaHMQRC7kUTSvxIGPKYX2wGF5a5S1/PJFcM345r/WEz7nVT2l3v+udHyVR1Sc0RsNwQFh9ZYU/13ZYjtL5ubZMyaTKf/8DlFoAHEQJYkG+LTREmNmcYJKM5/xCNfZ1aHm50FX2/SaVDe/oR/dDYwwcNn1E+zcVON+v4GT8zIRpzRP9uOsInvD64nRAk0mQueOuFcF5BQ1IWp6DaQcmKmcAfuRPJavNLoWDHlf3xS73INYSF5u9CIoz4TMqMJPIyeTUNys+FlxS2LjS5/7mtebiLT2cio2jG+xYZaijpjYq9WJHTbVO7cgW+tGfMq8UXfBjQZowGzqH+jxTEGoaXpnAO6LpPn09CschDBtZQz26HcIEmwX7PtHwakIXJ4rIaUu8tSzu4jsUT5Xuu7VuF4hcbHb7IQJamQ/nLNvECdhEzpBccknqZCusGV8scWCA11zRRcGFIPh4kM8GpunsG7LLkMfZq1oKtmAYKvt6JrNxU+GCr8uu1o0C+DBchUwqY+fEyDHNh68wPvwWyDjSiDrvgS6afFn+KD4AZmA6XAGecMQj604naRJkyIXvKtLmNLc3atWfBv76ARbTPNu/Xwq7UU8OjhuJOfZTYV4RNSgN5rgwulp52m9F7Jy3X+g++Rbk2gjC19KumTGQYhs5LpwLEjGquCeyb/9AV+l0rBIZhqdljdrndgtrlQkMGSRG9dFY1yohkluP3OW12irkUN/lJl/24PdQ/p/ckryx7ai/KQzlkQWiaMs5581vn+JetODjfHW/qbaXeENflvz3ziT9+YJ2ph/ZLBF1I0qCaLzQZoD6Dl3Z/k4fEJKw+LWOlWfxCUc67fWqRUDZ5kTh4aZRbI5EBHrEqnzDnFMhqPpSmyp3yxYX5xyxUg6FBoOh3uy+uvCR+sQco8s3cOkK5Eq0e2pHAST6i9gip/gisziHb56cvsiMIAQODhDr/2+LCTTuD/6h9YiQ2PjKqr/7z7wcOXOvXv0vqS9A/qz3kCme6rl4+UeTFVTOQBJEulrt2W/Bvr1tOltt1nKKLoOrzZyWcw6CzXLCdOmLxjxsmVq6JoEj3xXL15olLV/IVl0wCCT3PYtSup9pavF4UeRCKiwtJUIxmy2Dlaqq1zYYuqZipQk3fMAfPhPDyKhVOK2cEPAw3s8xcegdaCwBvcHm5OCo85oefsELY1mMeeCbaJofXQVQyVlK241F6LPm/LKkqdFBWpHd+x6GzA4Je2MEF5E1K5GoAmQvih3wYOHsoNvRRW+IE9Bjv6Toi5fuJcW4HyhmXTBwg5KRWmxfWG/2MSFJH00r+UbEuPwCEamW4EU+xyxr0ffktfdZ8u1oK4sKX/vfyfiiht21Gqv4TyfW3mfGRnHnfZ1we19Vcgq909QEXjK/dsO7egoN9X3f8xBLrvSbDqzoIv7QjeOctNXUvfPsTCMmPppTBWSTG1nWrWGjhqL0LMh1YJXKMjuoJz0K6bhz4C4p8CjJYNQTWCIHwqthWVb1I/I6VbQjQHi4AOIwlgsCmSGiZHRhPZjgOqY6L4Ou48w9EgDYtWpl6Daw86vcRWkgX31FgNrivnIJ7VVTLTC6WjI2v24G5yYw4xnH1o4p3XOXugfhIee1+5iWnlotonmAhx6gVKH8AgR28TWO4bgjDT9kxuuNQZUNKSM9UiqVK3iMVtTjkHsl+STA40t5+m5ccZ5hLlHrbH42ZAuJbDlnPjPQDZ14//I/QmKBtCMAMG11W7OscM7ota/ClubpShFqZcKTOZun3vOxQSNsUg875Q6ydxTQYbUepr0PF9Hn/60t4VmEh6qi82AcrRsrXx57eZTiIux1+oJA4uK7BUsDFKw/P650fp6RzKLUUxB9fyba3fBcJKpZ3VgCHrCHhP2eyHTqsOVTVxpemxb20cjwEndof268LTE69uqigAIZXiST7DunwLXYfufQzS4Nv9C9ect2xdPAtYISSzb9vPutj1HoaTkbW52beUrCTlowgpLVODUWiaHuRo8vZF/BHFh37TColVKUmvQVveXF38JG0dV9cLcPDk0bd5Nu5SAkbGNpOZhFAvVqzPbOvcCQNiTtQ2ilqj7GVI5PcVU0iXUBDGiUkwbsuX+SwAYLXnU4PbQzZzvRCUst6k3+J89QeAccQIUv4k8qU1cRJdVSR9FOWTzhywHzogrIGU13KYRztkls29VBg+zoPOnEznGHMvREd5SFS8Dqa5hpHxJf5N5Jnn+UQXcnz7C/6MUDzmfXQdW5WwONufOjGoK65h7B9uIaL2+MU0rL3063HFssuI2hnJYKjd514Nk0eETT3u1BaWtpk+/7WPSrIUWZnOdnqFYlZUzM+o9xQaeJW5UPH19oyQFB1g6gfyZ0dsRlYPqBQiKSVttNPzvUSWZHEOlGlMs2cRlEJXAlfV+78ilai04MjTUb8Q7nuWn5DW2kEdaYOEF70p35I+qd60oNYtA3RIPb4U2iBx5iIL4RAbxIhEs/bZNBAlVax38MZVNq0yQxIlwm71bOX6AzWFAPbddMQ8FOdr94CDg7jd2FgZP8rmaVHV4iJockMBiZdISvzO/9WSaM+QU7Yy6HzkjEDmcw2/79nld0hJexK9XSso8gVEnLrzlIqsNtEUFrw+0ORdqOfvo49HPM5nMNcF742U2klBiTWO9yRzAWHKfBJTWHCy7Lpv4dPbK3KtVLi/VB68bMC1KvFwm5/IsO8wsMK1sqP1L5Py3efxJPMDS1iQcnVVRoxbNRvqYPP2a9SZ3IWmVfA+APgoeXuD6Z9faudk8tcyjz1625fgjHXeU21chePhzJvBuvF3VFx4msn2zTVZI2ZD8Low5g3ARlqZR+jbp/b+Qo6fXWMPDXiRLv6Wzi125aP9Kc3+79RjvDeL68Yv/EbmnYIJc9kyKO1Yh1q4OAwau9Fm9O1as1DdwOyL/n+OpzNiasY5jv6sgmqW//d6mW0z112Nu+CkrNZ9uCB9NBfoExCkbKQIEXkn8A7/WaAIxQdCXyEy/c0W/HLiJxJNOr/pwFJkfXpMn0eEp0BLjTxaCocFALktKhmdKTrVHoox7ZJeg/3h75WezZ2M4DtPGdwiYwhVegR18uatc1SE1a+bI/Y8ZlOz9puAtLDWCYfvPOvh6obhzvHFnkEY6BF8yNbFpKh/lvJoFI8/2MbTnzXN0wtGP9/qSs+SNfSxf97uR1+pS22wurrH0q+F+XLFOVf3i/pTPohnHQltBxq9Jdo3R+IlEY7Ohq1imPdOfx1zael2K1JQvBDXvbpwLqxWiKZx2o+yYCT48QF2tAItjPnbDyizxczUxiSNoq4TQdrrVePLATqpsbPkQOXyMGcF1GkF0H7o0xVhWeEULYHSAQwWLvuZi1UHPtVyOKexwzAo7k07cmz+zDFs70LjeBs6unoLE73oAUAoEJW3BykEhEzaxuzQQazssKvW6AoxxlBFlKMLcopBFTxlV9gMxx5NywjBA+PCvzN2kICPXDLA/gTdOJS8zT4+pdeDtvZNM5AkeN1ycq2+X/rlT2NkcMJZHoBskHYskWygJbJ45v0Bwz1N/xNM5egGDePQdU0orZQ+WtuNEz+18xZA4+cZB5pUdDFiYM8a1cb0Esnpn3S+K1j+vqunpneOj5DGFOGhbmqs6ydiAdYJ4jV46QtUgzHPvJc6N/Erkt5aW8SZUxz661vBaViEWBWt+Ln8dIFq3UQM0tfOvwQgUnocfAeE18l2mpd9gwEt2vNUexPNHkuftisoDSDSiQrmauSH79KxYMexw5YCdLFQ6ondcvRZmnpouvP91Krg7ZeWt+KyT+ctNTZWEtK3JBlypyIHPsWOsXepkdh1rwAIC5I9s3U5FsDLZd6IW8W6GQXonOhdK7edpLn+OpDurC/k1nuEinFO56jSeeVoh2oNmdIMz3OlzPotyYI8wV4nuf6ZqdBqLiHc7I4ppW+dgXVgN390zFd2AyPdH3dPZ3Y76J3FjJl/9tifzfZkxdNUAZ5blpAhh8n8RaXKk0dpDU9bkolYizw6+TEOKHsZVDWNiaRhS0oi2RaiqJIpah1O8k5sGsPMMftb+Q+hQRF1Qc5S+kZLPxLKj9pozfqmlLK4mybOvmndIEObzEWpW2x68n4AUF4cpSlRzN9/LkcKn3gbWZKMR4Uo+3wvu5vwIbHh0SKxu3TV0GBHBie/ZpkC2DOR2W+PgFar5KoWjfgJGL1wQLO9M5o0FkdmJG32XpcM9xhtIxO2fOuehF3qBXSEYztkuHdU9N651iSdIGtO+jzKhZ2PGhH/rVyvxEIEHxFwtj3pFeusF/i/cTwu1wz7b482mEGnJnyjYPcC/mQCUdkPMfecV9g58cdL+TUblQH41+nBXt4mfdWx0ERR5Ns8lbxn1FjCsWAvE/4szekfHwvo58ULBVuANSoAgjp/lKt8f9qbfgItNXc9EYVYiaeJpewFT1Vv1Nnbv43WZlMpBAVAXDRLxuu7M3/pORstDZulO3SsIln+fj1SJnFp0nDoVat2mW5n2OlQIzCYP1vgYZV+1Ao//CJLrvoIUtR8Ht+z21NoCo3HQ1whd4DUyE0tpxBr/6TvMdbQcExlV68EvXwPTJCdUs26gDAw2zHh5VXG6qT6ZpTjaxNcUSfVrnqrvmySEAwGQ2dXdht7BSQxm2w1Pud9U00cseCRMhxkeV3Y7gQXniAVhou/9jEiZXL2VZNRqiq+DbpRp66AvpW1Y/GLKzQhJnaN6CI+ed2mpwYBBEjHXbN91EZ9XBA1fQyUcPzUHBgM501roihxoY51+qiIui5fYzViLXJT7DsC3ffrrpJ8uhtQzbOKLJljYkfrWC9/Dc0DNzhb0pVRa7oaN5TwoQ8d/39ktLuQiidB7j9UzBkZcz1W8NO/chUh494VwXNIxh79l/RLFVVR16AV3igKFNGnO0HG8P8jHJ+/6osfJLVZSZp9tBlfK0itIIcIAc/IElS8rouR0TNEx1fIjJfQTZvq47b2Qlq9NRA1dOum3a2Drl8dumJXRNqiViUIJdxcv+h4WJH8QgoCK12P3NhUxyqDx0W6ij93zoY8FxH57mFxoDaIEmul2J2VQEIiAt/Ui2aDkx7EGq7JJ39VIBriza01mpXnM41s0dOl5LMf/aaWjtEH2+7k+dFnUF1Ls7VaDcTUOn8EtXPhIS+Ijm6TLgg3vJLhccJgsHYnlQaoRNUjFUYmBQufeEoPnskMAMdLE66oVOxY2/1qiMnURLn51HDhEHydaVWBQXDgk1s0wvIPe3HJFyRYvepd177BbcHicReKfg1HBS1x6tMToms6ntjxPZj7v4bj5y3r7Z6w8YoW9mjqScN/HD8Hkzo6DiWjI4ybnaVsKrioEPudiu2B3F/P68BWYDwO7/fvR9XuwbUsQEmf5H3h0apI3pWM5iF3AHqP+oggwbjkOfq3J0kTfmzIol0OOsyi3y95RdGIXvh5ppcXAtR7+jBqcoIIHsobFtWCMzLzbiIwEmBpt1XnwEl76HhU+0zJAvHSLXeyc6vmn/MvKKNDOcYbV2sJ3cfiK+BjPm6hVnUxWV+NL8A2JzZcsiZjq326SLvpRonStD2WnaNjttenDL5FX1t5aEE6OhBgSRRuaz70CTY/cGwuESnboaKFxWa14yC7tq0vQlaond5RVj+uTIC4tZHkLvRiuHtYuP96dlrD4dJ/D/GOk5ZTT1dQ1NSFWAhv7244oBmSM5uQbbDGJhgXKifj3bUdvThXUvcxPn1+27PiM513b0RYSyAYYljbuAO3upliW+vp21dcoVFTXRq7cVdGijtEsgv6638QNMuUd9TJPSf96zkC3Wsc/7tJuZ4dEFx4/x+j+vx4UtiDhFurTSxkaTzCSzVloJf4/hJTponB+Agnrk6qEdvoxK7NWr/2H3oUhdZPBVD9rEzJi5uNxm4WCo9rrrybS3HcN6eGprmPPdCOY8SmFqYOKb7IB1iJM6WdEpMqKN7VAE2LjTq8y60oEiV+8ohMs5TftaA/88HmBmcU4ag1tpMRlry7q4KAdHutPJgCenaMTFd1xLyTaXteqnwpypBe7cr6udaQXqED4OJEaxJ3SjSawXsKTPkcRY3e/pO+F7iNyyMoaJ4Mem64TyI5ukpyolC6v1CkluNpXkLjhg/SSkIrRy6g+0olXLuE7QQsgdBQHWMV2MzLsCwbG+iTiG6oYJQfUEavDJ4Frt9/TJwqAaXE84Y2KjtxblWJwRMeBls8J/2yWN7t/0oB1dowtCBaJNJPdlwZwZ0OhUKMikF6EE+1c0Xwarswn5SDws3l5c2r7T8Veg3X/8Fq/PTa51iQdxNbRYxn3DmeElbgUu978qkw7A5esHq6OQL2s/tDeidEfezYmsKS1FcDAEqG7zqa7AtIY4A8WtXxAq/tEim+ZkYxdIBh4+0q3Y8vcKu7vPNYv3kKL02PpsJmY+F6/v4PjxnyCxsa+TMDkR6coTgPLFvT0ZkiVO9Z05FKONm7mR/h5UjMRHqAmO95gibyFSzfYBoeuYH4uRc1RkIyEMsoV4yZIKYcvGHn9bOsXTUKsiK44zryiCSU48Cd6FpcBFSwvZyMuKpI6qeSnX3OlF+J5fROEIc12+qP89aMnKNaYWDk54PlyswEpsQ3FUIjGth7PLaKtHsEngw0xfMZaCrF9yNPsgpmDeSfZeAo/WZQkvYgKLEG9u3T3zVQQ9jvS5lFP8ivdlQUrnM8DwXJasjrC2Ryu/enjWrdv6oeY1xzTZdUOnQFmSqCO+qRDMidxsq7GJ6I41jXfDCzXgYLlcVfb7lcJlXSyKBaxRQXyF092yuMFbMcj3DiZ0tZAejUQfV9jwPVQJcp8IaNnptPIUcCOVUez2I/srQLAsKNAHab8wDnJRsVjM5i1gKTfVUvRepnBpmOe08gBEvEyY58noplfccKwudAiXiW+wKmfxbE11AD5wTxJay0FZ0LOm3dh9+VZPEeDeM1YwSiZ633JsgFqeoXz6R4qhKe3voWX3Bexpw8C84OFw4PgTRb3Dx6P+yrTgiTv86SXD06bP8ZdK/2VHE9UDaACUpIuz1N9YmkEX8XkVxC4x5gSCxTJ3Kq7tFdKPEAYck8hxy1277EoWtT+YFSRIM7QXce7zZm87cgxfouvePLFZbLgf4oFi935TBd7CAPJqutl69tPudyCaTyT9MTN/UyEhmCIqrLXDRDaFXX6EutAbDPalONDvbsSqaTq9UjsfKLMjyNSOG1+f53iZAGQRo7yKUNM+tHVMBI2vLeMbKolni78UeWszZ4R+Xk7yOs6xpEWEZstcNihUkFY0HKeIDgQIpKQoJ1gHtGoq1UaruUoW4F7RXS9A1QI9GeF5YEVQrgfIW2JaWORt/JxJl/ISHeHfwDb/CzgZwlbu5DZVUM0TyKP6bOIMCiJRZtsXhhOWyiLOIPehxG35By92XBk1ts7x8PeXrYmd7NNSzE4l4cZXiuH2RMBQgA2qHRzI5mJIov/ZXwJXcfGRcW0t3nUerSneTXJqARUa1Z27lBJuDK9S6hD7/cGLET7DarMfzTiRG+dnnXHnzrNEQoIIC8Xj+mdoYwSDGNE+d/rzan5phnmFX1hzxZwYDpVz6T06vJ4H2qI20/nQaU27MBs6Hc51TRum1HvtJfjw7t5IO6nJy5GMIpNLfBN1yQ1vefMVlnHl7sUoEThH1Sayu7W+OLkAkU0B0ohqKi4MRspvwH3qaYwffmIIKrcOoe/aCVajcitCaaFKKkPJAgR4126F4M/YkysqXhw8TUJXN0zbrshjj5Gx4qiyMw0bbnJ6SjNCKqjWeS8qW3HCkT5KJbBGjuinp66Qxrw26FPbLpwGatVn0ZZ0alXlcuoxXl0vxvdQ1UZ+pfuPDUyj2qV8h6qKVaypp7fMvin0JmNskNRQSxxywrn8UUfG+3ehfU8Gh7rQfncz94+j0UAMspsljpyaLcAZbbV5QZEB9zLmJfrBjhKsV29JNJTdhR5B1qUlylLpGXVnX1ZfERnS+yLLQ9Dlh+/DfAJhhwLC2AK2K1SdrXpSQtxf9FNIOY5XZGdAOwuGeIJkJ/i1p99SQYzfXsiT1KpVH+jqw+8ZRQw5CDWAEamNSLFbRPPPnczaBfSjWWqTuoiNXvULewWTwyOdrZgFHDho3qsjSnYwRlHukJLjZ/BRngfR82Wp0gz6nukuUtg6gf5OOeL2aYLSq81A6zfgWUYyG/FdcMYBy1v11S/MdBOMNQRicSNMt31vRMd73e49i2+HyRAE1nv9mJBDCVcWOIdc0Pa+8ZHyl85KVDSIMtbiMvx6NI6eyTNaqmjoeVqZTANKPgYGI/RQckTVPf5acPkIBQ1CZ5gjW9GLyF5lj0bhCRuatefy3VmZ2AQ/2oQFkCXOJ7yV9Ewx+RQ12p/bZc9dbJ4DH1s9Z6I9IQoSkH+o4DNsPNOXHj5hXemdInlC/YFfEApOyozKKJk51VVbnxFQZraNUNKdX1MG4Ivkog+93bjsFZjrxZ77DaNF6whu5i6g2QFX5xmFXTFM8ATtlGAo66TIiCdpRKLt8jJY58gv/lFqYnLJbVUkzpW8jqDyqFsGmq+3Iwdote3UegoJ8Hk5ZW2MqoG/GAdfBSC8b3Y5qma3EzMDB6gj0fw/46+8vKLvPE06cDbDoBujbgC3TUIrkPp6j4sN7+pkWLm+PfaWU2FxDTJtX/8IohocSbp98O3SE27fguZj7D5BmU9DMRAslxAwhqjtE3s2gyeqcbtp0ev6GkjbuurYaGrrpk/12/oeN1ueJHF9cv+bkdw/FLuzYyol7/vsbo1e7ot31Z2jw8IDdgomCgD3MpVz7UgOk+A/jMc2NMgnzDy8EFEzq0Gm0eXJ0s62mCjm80ccCCl7GyC1J0lj5sKKxB7Rs8wYkVEEqiiblpQUVMCI2EHQHCK6FRH2OIHagdzxpXUWg0kWTYcq4kPrOzmMJrQZw/yKfzcwMZ1Dq1ZtX6z5NKBDpebOPTxDICHEZ2A1v9Loc35WWB1WumVQ5vzBrzxsPGS5F2ylAp9wcTjajUPuCLTfTUzcZdD2fAKtJgIbjiW9moiungxYGWVr/cpt+1W09ILlO3U1ujP/0VNyv+RTJgUBsWqWEel/PQKIEyjZ/+hubLogiyjKZv0PV7ZskAoGrEFsTRR0IG8TSp9tRtt9ffD8XyHWnvkErFOQGV3vdflH72h7UKLLjlqIB+F0G0hOpGs0BfURcUMz3MMIFpEBZwUFzqRUqJ3FL0Tdz1/g17KzkpvfaIzrJtFSlh/hPNGc34n47y2QStgzlZY6JTvyx2vnJvfFxTFP4NU7lVRiqffdl9+kJXGSiZKo1cvhCinE/YD/6rFFPYs/ZXA1IeKs1spz7tZLKgiLZGogLdH6srbpNFAjGnTEgUPiT8ytRXLMOlMm2i6ol85bksTzBGOaHOF7GJl9QyoTvi+MFqsiIoXWYJmZmgFJoAde7min17ZXl/2unhMxqUncL6tr7udQ+jMZH5iDxCw5QJ15wULXeRB4wh3OdOjPYWpg40ST77HESSBFTRKnmgVi3x+dh+6Px+E5dqxo1xm1Q2v9DSuI5kHTvysFxqdtUnoyBlzlVmHqA/svruwlemDveXo14HdzNBqRal13Q1ma5SW7YnQSDKNcl/362FI2VCtft7a/W1cipBFE7KkZ8e6Z1AJ76B3KjWmsYKTIMwMsH68TNcyKyJxCZeAtmoPh5ky5A1zIaiz1sTfXk/BhOC6aK6n8G9IbrKgXY/8+5xIa79ZjL2qa6qcqNsmEBvrVn1rbxiu8+VTkHnyZj784vowzPmYNWTXrmBDUT4nb60OyQQ+hInVxmLM8ktcrJbt3W2yEdXnLpAAvXKu7MSrbv2jMAalm6LFOban3ZilCXD/SWTmnwjafQjVHhTr0/E070i9Z6Jf8cRt4kKMNLbFyu0cdxGW0j61X3NVz/TIHuC9nb5cgUI4xJHwXHtsAFszf0azSJghHlvIfu8kPU8msP5BBvZOW7RRfwWUTY51VWenpGt6WVPCwoIliFHwdObGSNUYsdAreWcd/VfYNSu/vHk000OcyiuXTsVU8VetKcYJbE/NcwCuMfuxKfg+CeB0+blJ6JYZl2hBOSN3vihukxXpoj3M9Wi/nFR8JxDjiAyMEhEFYS14QtdL/UIgznIirUqzm27JATvphFaeRGthx4JEKMzQh5oWcF9jNddvKi4sFkGnGMaASoaeZ81Dc8Flvvbp3eYge4DT+9gilkRyDaYL/zogS4rpktQbhM+2cdkaLfYXAAI5T8uYWpck7KUTgWqg41T++9x8gY9sAGzZSibJCuzakwanQEdaSBp8w8qkGw0B5MHfHXM41Dr0kGshdDZHqq9az3RMjYSyEpbc3uMJ50ebUZ65IbaJ36ILXGUU0YydlPsbnjJU455a90CPbpB1pftFSP6tln6HhNIwmMCVkjNElZySWOeGycFn8P4LBo8dG/VveQOi9rRBBEvakbVZRfYAA6uaml5VEGyq8Ajj7dakVcThvVCOCYMhmCDP5IVW5wsGRWT1eHs4hpNcEyKe0Lj1D7q9vt1MBW0zFh9Wlkz4PThF2xjKR3A88XpwtdOCbpWG+fZm6aaTVfvPO6LOFHjBxXeFBOLqfo0gIRb2kCm5kITaQwj1RT5rWfbS9PQ+cPXtydHA5y8MuOFBwuCcSsrOpHYwdaUZxODKqgzRLypDnCH9M6+i48Iex5Pq0t456tGo7t2ymOV0AzUXQUnoFXNnGkDPZddlUPnlO5VyhzeOEz4vxicI9tLhCoc3qCiozyjCPrQMh/vRKMkUKTYOLSouiT+Jsv8gA3fQwPvlotpSIaJ27bW8Q0YJqE9C/R9B2m37JCD4aDxtK/gfa26I8bv4y4WDcgfd1pQoOtkaPSnPJ71+wmprG4Umq7ACDcsW1UMf18SoEuGo3019HIpkkbu5PPMTePoV1t4xAQwVZ+yaoPOJVmMdGRkfho/PBQQ1HchFBbTZCFAYuaUq8i5o/4Fg8GW7c6Fz6tp+XcgaFpslKVjKOXCfWcbKwL2BGHdjpGszvwI+2IKY8RtXmN1WdcPdKxAmL8U+ier3x4KGLLqXARHebdFH4SUisUnedRAnBC1a7psZ7h1OMpRvnm5WBHaaz4As/1gjasncn/RKp+3Yxs2uyl9ycz1lR3pjgGLsvehF5NKG8MWfOMP2A2JVNeXYc2snILPE9uPkdgoed8Qfqkdbch5VWxpi6uT1zmDAFsG4xYrNNiTIAVVpBSSXgZzoSjHptDtLjLF2ybDvyAwLIwYCgOYIwS1Iqs24kGtLG/kCL9oriFRBbQ+eAfPTxTco0paZMaCCw7wx1TtmMKufUo4nQonqdUyCqBdwaXAJNMF4oTKj3OuAHn6RXsxbo/BhjPNUcf/2NEmxR2PSL9q0ay3cH4Xcs1nIVAAmN/jVQ0FSystZ5yj3Ty6VbXDWcjiFSb/bwVC3A9dOjCuRvebO00bLuuvU7exNmHSBzfYVmPaOg5SHsZn5kO3m7mhb87CLTNc0v7YvudzWm6h3dBhf3g/EjVNnRRCPXfeYUwk5yjXXpo6hwcARHN2oGAmu9TDAFnbo+wBavMb/vuIORjAmsRJUoiGNQ2sBh859OjpuwnFLDfv4qlVhgJe5/mWlDKKmmv5+KQkollfGZdAUYP4718cULY+Xsr01rI9dF+pmFPsZ6Yw8dp/BXg5ZgHkBITpqPGN9pvn+oeywn5OfL8pFYJVjV2sL4165ow6VISWSpPmMeYZTS7S2wiybPTm8gIkWpLY+TyvPoZsyaYrbz4UT8eYOezv7Z/yzJaqd+tgsldXL73pUE1y43YYpESHE7T/9dSQMYhi3uXcsX9AvcWbj4WL942kJ5/RxBv1kuNf2T/nlHkfTmqvt2eJcczDvCWhMOEP92BIEbS/F4nSEF4DrquLVxZ/dLtBeI3yEyMd0Ka4Atk+VS5gvZOuT6rkdK3IwW+fenCiS2OS+YHk4Ox6pSVLtGOOUh3ruMCjoQcA9ygE41cRxVIPZHQJSRT/QU2y27X4j4m/rVc2Ygcs9+kakciyw4SUvCKL6FCOJGNtmIHAwTD7HtuBy8UtgLMsRNQefHZcS0pBHspCakfSGaSyq5KXt1N0Bif4xWixqpH2DHdOoaD5QldH33XJYUtGKdiIwsdOVrMXpBXFEQr+TYd0UYIpxjSPzLKW2JYLV1wYSqZnTrZAkatbDbDFPYgXbMwuJxzhLz2T6CYk/kyyTG3lZ9gE6X5kRfCYlCcoj3vFK8KrEFzc08tlkJQJiaaAiqAC2N8l97CFPUWL6Imit69zEwsRtWW/b83zMzgYGwzTFtF9vuqjdkgaOwwuWK4wByjyajwkQRf22W15xCORw77Ih1gM/oFZiYDWyuHw75tkyJjKUtJwMJpIIezTNCFFAWefPQl7AMdPi3s/XfTgVeURw4mvwdkOBeWreF/N7iRiuzkonT7CxHPW3be8ap4kakNFkKfyJgH2nkwKWyRbgmRJngOekLaoQR9qdAzuuVZA07GkiYQtEsohl1u8DZEL/uAi+w7eQTlZuR5vStUitFw5jqV/j1CU6Z0CEPbckOv0CojXQAFziS5JxFMAYWqdghET5xANc59hCr5F2RoiMn7rwwMNw+palasOihSFnDyHb/AYOCzWRTkW3lt55SAt0bGk3GOlANFr78RmoRmhYce57CJBdeyWMYUb/M9apdKeJ1JJv8lV0K8VOz38iRuY3699xMz30tPnJhVeGrFBU8KjBYm/R15slJ6fC4tgnYIoRlDeZE2r0XLujoOnVclMIVIgg7ysQsIflG1Jsfl8kgO6+2gqeYVSCCsJbU/ko9C8h/0Bl/1WKkMHyOjP0VbsomiR1HhH4u/8gAJ0V+MM6yKV8ojggoZYu08WX12W4DOS5UorVBSf1H7HpvoGIZN6h/QcSfWpnX4KV+h5evhG9k3xasyna25QmIm3+4NZfIvxrPmq/+l5Hs3pHw/qrrdO6f0jg7RQ/A+kTrVkGFwV6BPvsJo7kt3KtyQRXKveC1GcYQqBpn0hLYOC1uciTu5E09jaMlrs8o8+oIUvU/AkFJYim74DO/s+07orry3z6LotEScLM6ULdWs2u4sOWxZx8dC46TyaTPrt6cja5UglkD8h3v/li/B9W83Y+3lhVg/gA7fw31Y9uEbS3SOCs1S53jOdMEcBX/2+n4SBgm0Mqj+M5b0CAIRiI1VnbEhYkXMgy8cdbLat+A1vLqVAhOCerHAacCQdrL4NBH6gfrH5qTCYWknlQKoQKC47uSf3lthwvB7lUhgO5qS58dID6bZFHc16hUvhfBSilEXNNDHnCPmuUzE4oO436LRQZWB3+4yW2/9xm2WHnYOn8Hnfuawb3q9Ps4nv4bd9BFZJr+JuR1r0wevFZFTmKeO8Ygbw3UcDqdYRCt6aCNDAXCrDda4mAA25dGXSngMaBEYTO1lAaGJyEiADeGemWMnlyk9QePATsUdDUf/VP3iZc2jUjxzw4Zm99TFgpVK0xZ2EammqhcxUSW2/crXQKWCssYFL0WoVEaol2i3NGeKIgN9JBac1a52sYZWb3th7pfU0bG2B3wFqgNCIQwqEEQ8ElHjz4uP+mQf/DOsTjby5BmUg6W4Xb3rvgxhT7VBMIO8oNoq22G5v6JAsJBb5ngIffVAzJ4PBky1feLOd8WagZ0sErWKw4jgWTjnybFemmHfhfa/Rp1Fssx2ac+aD/VS8fggtAjGCDdNS/ZMa6hSDx+Bhw8yF5yy9oVo2JAAbZIoNpwBcWJW/3GvTvC7j7FmI4LQNPlnpaAx4WsklveMlRK+9s01yrJtdd8q9WFK9l/3H8mIcVo0eloiSJZRLopPng3Ojrpzy/+M13SwWLcjOodLFYUwmgRM0l8zuZYnzzk90REkpcTBsLiKbF3UFb2qlwRq96AI0F/G18bKiAiG0kSJuyi/vVS9Fd5+J1N2KMMrA813Nmezn2tufoSmwwt2KjE3RFLTlyHR3U5HH5uLLgrIMO8HFSzHf6wdraLsR4QtRalHyXJg5WqKCK0ESQIH7q2rh/2JaHzZAYi696rpglwJwCJKYkC9JbwKs+EHR7hTLXC151NJcuT7xHv0X2tW4Izd8qmIBf1lFJEelT4PEfCU2OWY5UBcx82iOfl+zcFnH87qtQW+H9NNa/vm7i5k53s4jqRpsCdxv0famtAZ5znJkRer+s+C0BWuvCxurVznVMJhy++tytEQczmuf/yUWVR2vTgz2UfRWvs/46kpu387y7kqpke0GweTu6d4rwc/XHwZTBMdRI0dUuT0WjHwW2cJlTomGMevjAxKFbjlSQSB2+IJHZeXxatmgS2lCHX+5TtNL3AY9zpnk6fs3qtuqYTqV2fVKaw9bGMPoL5dxXXpr7ib3twMwNBer6BxFYb7zDcxkYbh5DeKf4N/LRifYiz1A3/rnjRaX7MCOIbXvN0uOAdy9ZFiIpIvTeTZl6/ZDd96XEcLPY7lcM9bJSzjyvN2WYlgJH0JSwYMdOjE5zcx6rZKUXPwkDoQwmHghXL2hxG/R/6ZJ5m2AeKvt4Er1mfW+H56ENyfjHPNev1w2TpY657rBK4aqzf6aB9XqJtnJMo8Str18hc5eFuG6QElOyl56XdXZ3YpBg4Ap4pooEeSBrTveCSCqXcX2z3GKlowUjdxp4IbIDAtwIr0LbL5CqEkPM/P/MpPQrJpVoyoxbXH0l1ALSgXR9HMrbY14CELvfdqyD1JrWA4Ilb0k6HvCOpV6bAIjYjTKTJz8CNsrP2GVfi/RonogcO1BndqHa7M+vjBt5cQHYT1MqpNsttp+BKiGsAn5tsBccCsaGnCLZxrqt+Fei0JERE4bX7NrKcGESYyFg6j8+HiWpUF1OtKG1btudZU9YTPefKZlF41ZaV5Q9iVO1lcrEs1jifOBPc/qJlOjEgs0YSzBnmHYPAK4ciuVLZLjVHFNSLCbgjlD7hy4oHMssE4lYM2QXvebuh8iZZAtYRMd6aygx2FqWjLEckTt/wgN4EztTsw812ZYUA1N4jPd0ZvnW3nlfQ97o5GJraUbt+7BaNo4Cnj6rmiAUj3iCqCVnnYpRR1Htib+9G5ue0tUcToENywg5Qd3XPKs69HFSctAmmbshMUvw+n4Ykte6DfIYjmxe+aUH0NsT0bJc2k2u+Me2b0eu73i85CSG080Yzk5C4I74EtuatcAqTEyW9Bw0qKaNXw/NYmUElQttxuEVDP+OaeWZDXmssblOv/ekcYZS26WIrLBxyRg2opkoSrQVFbkKfL8gOThidrNVv6538v5udCHleWBbt/iJ7m16wWozRRu2RS3OIq+4aCtTCi4qUjksjxKcesUk30tw06wnkzC0UVzRGkQX2f3buiqTj4Svp9tymgjmYQuX/jA2DSASvfaH4fcwZqosIp0LEPoW4F8V4bEB7dDK5RjjzO2VwqpHuRbwFfnmk9JPdObHOdopsGIgaQWvzJvStvkSvOJf8R8hLyw6RiqOVhjs90qvJI+EhbxE71HJcaZneN9V+met0JXb/hUgNW1ugdu2usK1T75d7wpKyuX6x8rSDLfBDbbIUw+zn2PeCK5Ol/+CLv4pawvfv+AYkKtD5ZlQzde24ZbRVcTzhrW6ibc83Ec8gsSE9g7Uaqd7LQQCBtaeqGNHctaRIxN3E4Eu8D8EeYiK3XJozdiuQj9EJqX34s9JSgtYzq3eJll//dpFkkJbsoSZPpaXH7Mop0/6GCKWTOp3zXKYzN5qXH7pzz8GqoRkn40S8W2M3ULGaOoQerYz1CgONtBTJVyTJBSarsXHdO6EUIrmgtzp2hPRWvNO6DiCFKHU7WSwb6nFnEP5q4iXGQGZxiyFbXAEFJKMrbzm13P6WYHVtLVDMT/TxAHy3t3H4xjjEHmwR91Ayj9Zr/+5vJLsuwQtqLVp8sG2IPSVEAfLZXF+IDGYM1FrvewNW3SFzUos0kbvEAAaZy9AF/G7GlIaqvSi12lJf4nDHJ20xMuUaHcrmjhcjapoN7GJW6SczjtZAfOh1YuWpi+8s/HRnbz9Ce2y2tyV688IIUQSWjBy9eZPYaZEC1rPSlNdvicGqt+EdahdxjWEZLkpdjW/oZY3rEtA/r/yL10OTxvXf2B0iA0A08mKJuI53oShF+bmc7o6jdBlXuApCQCp/MMtFzUTPKnDgjhjnn7IZM2XbWparb6x7XpGGQjYgl2YDXxEEBb1Y9ANGQoWGewhZcfHPAfxsQ+te0MmOLUJ5cQCTMV+rd7cNmD8Gshk2qykvjYH8C2c3tK80eKt3hETqgiLoHh+CRUIOh40NxRxcYGbcCHdDR+sILkEeMpFi4PfwLcHrgDHPoTFwSMhl/Ffty4gGhJcgZaJJEdzOB3coUWrVcLJOPl3MfYpOWoHW/SKTNTWvORVR9r0kn5gey/hhMIgLUP4ceXcw7SGO8cXgxxxiYFjKjU36k2EV12VAdKL0lwa6B8+X1zD+4y2HkOUybBH9Oog9XdA/BdioH2epxVGRLJuZDqVw1BBAWyMQJzu4tikUHKXFJdprD9YvHMOkRl+qMs80h/csjnMbZ2tf+Bn8Z5MbrowP8B8F+o0IqTbwekkLpCXOiCvlPTUpJp/pH3gpnGGlhjwyzucZYsF+yn15PaJISBh1PgnYbc/mkFIvFSSDsPmSTqEB4AAScbcmfg75ME2XP3PYOr6jGfRdExfNnb2Te45Q7xDakfEomsUwvurfEq5kEPL4JObKqht2/XLrsBthgzoc+U4kr4c0nG22zRAuIPzG/HNVfu+LfCYCVRMM+4vjQEedbI80bhFayPH53hqjJTNOA7I0jiG3V9vyjfEqa7KRGpFME/Z3eZjzBOZwsQxjNIFd+inFuz82XIGiBhBa9F1pekSJ2MiA/zpxp1buK2LTL9wWRmpQETZHCIg1Do4ScdDHjXZSjfu/rYnu5debnUS++qLreYMKU0CZYJaLuwd5UiCSrpmV8yK8fhM7F0zZzAD2ggydJ3ljhD+tJVphcFw964EzQ7l0GhpwGRQ5WmUNtzCTVZoq2N+QBJWyJRA0JavQ37wQlrio0wsK7dr9fjlYxaz+Az+AzhBgm8Mm/qFv2iGm1Q+NFqDoRziBgXkN6IDX2RGe1msSAoSpOevMEW55UqGJADVLjUoC0IPyGAihOvQC57VaqszHvmYoZ0roUaRf/lNJXRAJhbAC581bHeXdAD/A+RpLHXTZCJP2MOffcnDESwoxjM3M5Ks8aQYCyEG+hcQyd7E4FTN1qAsXx4bK44rxqvh2jGWnW6Fjq/lpotwW1PlfcLefJZotIVBzzt77YNohJ4ZcYkbQE9TG+uuLtJ4YWBvEXxbIBVgKuP45Li7FtmURiyMg6sN0aqmDqKBbMVzXUanMg5Kh+yYjZAuYs+jOxN01FfT4uvMNFkyHjexUObS6+FD3PYRvizw9t++JJEbp/G8vZe7LI303qTJpQXiR5QXUNvssaViyRa5P/txtc2RhlM4yCJdqtotEVkq6QPUGXDsDoCaF7/6EsJABt1EvtM7Gn7sYlASaLY28GkHIrILAAKoqGjK9W1oWGoPD0xKV37qytUPNDDWp1OLQXKAM2mjjLeysgbuVvNuxV2nFQ8Hia9EryafRCDjux/ettFeSwf93+csup+5HjoVfsjrSf07apE8KKtT+WMik3lBu16UQr97UAdSk1me4Eh3k790h613pqSz6+oewvGwE2BhCFdgTIKdKPHp1vj/TqaCzWsAnz2JcM1P+czOdWPkY2r7D2Z59Fe6cWYqFLlr7GI9QO+RHjd3wDmpXwXOSXHqNnfJNw2hq+/0OhoiszmOtwIjUTqX6xUOOr+7njMzJDUNHdsKSR3Gb6CPagimbllZaFCmfYWXci7dE8FPYvBsbRjUeghFpqJCXn3/dtwDDVlDm3bTcwPUMbO1E0VXLvC5roePaEdmd/c071ZCQlINqyPA//E8OxueCI2lqsjEJ/+0nMv8E4GtpddSqHtFylDXdx5S+/hdIvebZMDfq2+NCfTJ0yiiCgUEtXJPpR13LBrZ1aEwVAi6uqPxcKjZK4i0SN+N/D35LgEd5Dh5QhKRiFYy9ZdPYtN7D6IeBumOawn/uG68CoXXDvNbxKiRjE+9cpw4AWRRFAYK5G9SQD9YGhD/Vr3RcOtYzSE3qhFACUZ+662VkbrrLTKsHtC16pFAMazc5Ex/cVEf+/vzPFuG4aYGfzoBTruz1TzZyRdZ1/zeb/J14Tuf0Ghe4GH3ovN8e3MKigwdFZhUPY8PFKl139sPsVbN/uoaY11pZ/rsHOojARDpZUMQuiesDBqC+TvyeLHjBZfTlYUEcDcLe69xeFwg6yp2gn5evd/f0emm2LIlXCO/75TxqF3Pvj514hjWHRI/R0Jhw7DrTa+g3f4dmR+p3nBso7/vP58hr2AYCuIeHhDNBs7MH7pkjugvjLdyvRksTpuwUIrvKfSyr1pG67Gwa/6IWRqRrR/wsZlv0R4vDu6ral1EbUjvOb8e1fYB1WulGLDnwBbgqLUbbe9lB2uDd+5ckJ3ArPLxBLvgq7CpbCL335D9OUXdvxEEzpODxcF1sntp/NIbalhRP8YMi7uAhLGagt0LRcilAWp6bfZmlIPBh0bVKXumwDAJlu+zJXx5Y4U7EFb6zBcGtQuRfAIVEneCI4sGJisWGz/lZ/zRdt/C/KQ5aTOAHFd0IZ5ROX84sWwPoOVyVQY0XQiPv1sDBL3+aMUClZQISCE/T/8iDQey5Q5BmXjRlpTGCzIY9vVWsSwSoJJNk77r1JOwXfs0m5Hin8svENcy713hokwTFr0+iJCq8bSuZnH1JNVfGOqGnqW1xjx6DrzvhlD4dEdLroSpNs5oU3YeWF1oddmxKh8hr1beJUBQnOlMQpO/JBu9NCJLFBb8oX1wYnSww+OPx/6i3SFx9xgV9+p1CZ/FHshwQg8WJgrZGnCDSRBROEUBZ5bd/ubYmzkHqbLTeL8My29uWITQiT/uGYJeywadzJ7KVxUvyHTQUoB+cb+T08yj/TDLbpPuuZvlvf++7+IYF+TBREsnPnvdV9gSrLhCmNrohSljv+oJ2Iu9YMHwKWVhLBL6K+dVQ11/UKLUH050a7MGV+VcR+QX4YgT4rBxZ68ThCeCkN5sU//kr/UhI0e9eBrYfvhBu5u4iQnVz+PG8yKmfMRlfb52xz+1dRj5To8MyrWhT0bb1T4g/Zn/aoRDNDsX3tnwE0zrvzttHAskOjNgv6X7Q+xw83HG0XMBh4z8d1hUwi799h72KZSoKo2cl3p+VnIGEhnAGpcZJLojLoszdhnpoAPGOPCTpnmrxy14V75r0zrt9VvFDvZ1E3DR4eTXPNg1O+wCyMLRpDGIHHf0Kw/8Tdnxr/rOj5jaCklYqFryAdws4fMCtvejLPQ7KlhJi6JdxsPWI3pNwIBknQJF15IXuRSmDQbpeIVYm2hvNq461qXomk6/tL7wr1dR60vrFon8dKBfrQBGIVaKyCvvI8plRsIxTZjyjTAn5Q9pUfk0cyFCb3GflEf9/RghheGykFXbwtDwlFimdNM8wF59JUWIz1JxInuE/Kr8IRRtTmH6REAtzE+l1A4W5RGZqHbe/nxAnt6Q8JkkIvlnWUoY3/POnnXx4bXoxHvGh/64vRyv+cQjuszKgnjqg5KTtmiKIXrW0HGn5fiFAJGGNjG3oVoqN+KIq7HSXMT+Lx/vn9/vFalBMQ7+5MT2rBcmAul6BVkp15J9OxUlHrWkFApQD3QskfqaFicGYHZa/RmR7EMuAC0vOndhR1bl+sMwIElzDHX8zka7CwzFx2R/OL1CKAEw782ns3rg88HrE+RQjySq9n1ZVIjk1oHUzVdHbL70zOgfTq0MpXihLkKgIK3+xcyx5nlb5IuStJHrxngP4St9jXptMB1Ic2hG2n8IHYISJHGKQ+12/PTaACEHKXvoplhnwZYG4sPjhMbCGud2oIJIx3UHGQYKHW80hFGX1SfNQ/Xqcjc4o3wB5dKXiirtZrHFVnC9hcwrs07U2uIslIhWuvRAuV71RR9xv3Lb23Jx9Cm/12o1fpceT5ZO+shvPY2Yk91MY52lXvcgc2JNoBxpXGABwgfrlhwtiY0Y2K55uLMoex42G9o84DnFq1+mLopBPxi45FN3AUuSY6QC18wao1mPbkWn+SygNLZ5MlkWegPuS51HV1eE2j2he0vfkfKXR2wZUlqb+oxN4aLPFY0f1hZMcLA+qr1Gb7qYFGUBE1SUbQa2hZ23zkj9sVDhpj9PGoXD+TNYYEL3cdXYF+a3u861JNgIKpRY7xPScnqvN3fBwyzIbuBHhnzJXO0VnLZ8nznDU1NwiltNsKyQhfSwpD6dzgWSUg9EfytWZlPDDCnBwanpD5ka3Qz5TIGE0ANN66qNhNNWC7pzZ5T7k1aBRJTZtVOrt+A4f1Qklt559SdJmVKiXuM3G6m476j44M0gRV0PQ5+uGuBQx6W5Ymbc0YcjuMaVHdapQFBmZIqK1eUt6kTHrYXadvPRu3kool5B98KznccBUND4QwJZn+Nt72Qq347rbYQlySWhFbuqLVigv/tEk5SDF6ur6uSDwBibEf3vATmrSj3xNSYvbvyS4wDonseXVAQr5qm+EF0LgzqD9FRSjJTq+2bLbNvWIAq46tfZBuYIB7qNuakWgwlwqbEeLYZlXg1C3NV13Szg0PU1nmMcPcJFn4b4bZdYfnh814U7LG4w0ccR92DM0fUdTp6vGEQPjM2MNXZaR9NgqCXtfXCPIcVv4SLnNZ2JOQviisdO9AojMTnb/yHFz70T6PleX33ta26iIkDetMYL8wXnEwjQ0xhXGbjfdWoETtVCVd/e05h1qh9J0j8TFoiu5N28zmd1YcTH1GnbEMtH1Up0B+kf09xFfm3EDtyAiovYVqVR42uD+tpyUZA1SpyO0BdesiwLStJ5WPVQdh05QgZAtJHn2rfcSPrmC2/Yw3tn2iCz8JaHpJcHKHYtMiMGkrsnBIQ+djAf3OY0WCg/i0QgoT3U+sF3wLWVubfapsqkVmIPbjTg/SONdc0UNSiuboq6UUhIe4T9gc6dqLC+zTOGbLLzjB2RG4aUOJY5xe2+ughTWWAAftqOVyDgJhHkW5Sm1V+1laggw4WP/B5+3JYPE6UQ3h2HOp/0MBh+uOjEn4TDt0AIppvBPl/Hcg20Q4+UdLO7Wst+ZPoSZnLsGZm8WcE9VmepMSlwWQsg2dJsuOQpyMYuDgsL8A23Pj6ZSd+JZ3XoAAKA1tFZT2iH1ZAmkooxoTnlgtIV8pDy5lStKSdCvQQnaV9VFFVRvT46ltMCLKVa7dv3q+GY8RVLWTn4QP1YkrdHrbrPtWWe5xhIICc1mK1hlW4TliU1BayPGMYAfI59Rv9RlZ42MDC663coNt6eOt90A2kz1vm9D/FCwoo4QTlGNKAuMv8wezrFJikFd+j2rDt174FWFeXWoqyKQnDGN0xgpykyOAcm73do1bXd8aV2HJpnh4ID9W8bv1DT1Mn04qhyf8EUxYkTk/QHa0GEishoX3K8LuWAZT945Jd2YPpgLPN5eHYxNIennqH0Kb1E0yKqtQfbHDjGZi8ko2v0pnYg8gWa9iGbSkP0bIcXK+DsR50/Hc80I2j36mgbL6wZUYhcd/r4wr5XR5dnT8K+t6+iKZTchBOdIiIxKhrTLSr6sAWHT6r0utKkvNDnQNP6lpVFHddlClbTQSSDbVO08Hnebt3QjtYACZEw2k3PYkax703FOMCmr9dpbWwaOlwmmsDAAwu/fsOuT4ccxdRjS3eHHcX0jEPom3exiBkc6VOyPp7cxOK26pB/aFLLQlF/UTm0HDecSkXeWiG48czqe/PWOzmcKDCDVt+CV+9B+XyIJ85lt6PERVzCxNGF6CpRkAEgZPNK1/ufgNgTPAncn6tZtS4vRzDVPN4emBqgVOIq2vKveppVAHv/z4V5FqmCF4vyc+Rpdp47BARztDXg+Cmu+bzHzUn7xYoL/Xbc7if2cJO3cT2NWd6mGvO5OCfN00y68FqCWENFg9anrlwqsM7yvPkaUXBciThcvM41+7d+5lf8h+oWRZXB3Qe6PdG5tBP0iW3mVALnNJleAz2rbG8XHviflrD1+6OY5WPqDDogdO6A/OM1GiQdbvdrQBSgO/319bgm7o1SW1ZgNBnVxbEsFt6o1VJ3DLkAZCS61Jeqv5Hq3Tz24xQaRO2Lmz0fYSgzVRKDa3xsEmYJOGt0gXvzjiim+DUNWYBNGM4uIlH6KG9m20bcAjhFrkE+dqz2+mxIidj1plVBCpT6fKtlAOCmRPYQEuIQxCboOsMvAYOdkl7DXyGfw6rqe0oJadUuEGbh5TmT0hCMZ4CopB1VdZZ1wdshBW9wqzTmDYbOHHB1PeEWtAtRoG3inws2OXmKBid0Mepxq9vFF5W4gEZDUXBUMjdtSH28a5exdDhxkTet7Fb6FfdNKm17x6/A4kX6bLn24VlRSS/D9PPIElVFHB0Jz3qowRchNbqt2/Q7D/agQyHu3hAx1JIJB2hREuRe5yz1BUGN3Bv9Wm5JQ/ChZ8gsbUtd+seR5QnAi76yBcGtkqPmc54BB/ZoZmOiZ56JW5BPrR1RkHiAapv3mLKr+p8yC9MoLx8AkAZvG96Bx72cy89wieE5qqvQZ9o+2ORgoqBqcZ80iOoX9jutxZWKrur57geFjUl4SYCr5A1+0Gf5qWOcb27oklV6emFKoLGq+bIDW25x0bYx9tMNBRv/4L1KTU/JIJtJCpS99xLcaKLS/24ExQhpk2/Hxe+GiTVqKZrqryn8Oe3HMFPNi+1AgRtz2Tr290jmL7bJHTYpYqy8JqhXU3LlwgF7b3GmEbG4YVmjvikdguOUhJq6EYQYV9l31VPHBGwr/Rk2KS2UW73u+P00lGJPTZY2lc4BIkQUUpomDen8g6WZcS3UZ5y5MuMg/x1pB1uENcCXsSLqAGpJK9EjqOQh5ZmM7uSvpRkQQ5MRoM8zUyIFypVV+0d5V7YTHH2mJ3YpgkHNHTa1Cs4JpRax2MOCcxLJFcD07ywugfXzC8WW+KY/MkhviA7rH7UnFDQZQ1DZUUQTpMXPTIgk5zjoLhO1uGAFKd5vhIG4taqGBhUbCi9Tp5eJVYoWk1mqUZFUIlWVI5B9KKVBF8dTwSKavv24IS+NL0TIwpPE07AScNpht8BR+tHkcGeywqZe68P1AfTeYfIJTp26Cq8wB64D50xkyCvKP38ifK4SX7Vid4EHmhCH9bX+hkDeDWmleG/bWqdbAq3xB32yCIcdSSvJC1L+6LnBTurR6DWLKJRb3DPNWryjxKqDCnihkF+5jHiEOGCwXLrHdUkBI5JoP0piBKW+vUT/rqY5RVSsSPiMfKF/x2yXM7tQcKIeGVgbYg3nP8/Nj5KjiyRBvhuvCEEG0NbR8rM+20bzC8fzXozh+iSdeVP5Up1t8vULfwo9dYOV45EFSDLF3FCrEHVqkgSHvMqQw8hM5nVocejRFtMmspoCIJP93Acdqkx1eJ2qFTKV76GKpeqS2yai+McHkOmzcQhLbOHSWyUgon0Vkwpz5prEw64jxcvKZ4xPyHlQ7At9N9fXonZLoiw5nq9GYRm3KHsWBGi0n+sU1kQC355Jn7igzJ4oTGcbQ6SGGuTu8YNbP72qJdfAaD5nrS5RymsphNQyTgG/g4YkDZPTGISJ4npcMM+2P1H5NdjS0mLrYY7IwqKfI1Dbymu7yKkxpMNSsY2d+/+4/RmclJUUozSbKzq9OZ2loZLHzEcb/Q2N8jQhmYj4pn5k8NEH7S7PEcnQTBBt1x6/IQQrpQDMvGIvI+IqrquBtLfBpWHCrH/5Hfugv52t0xGOmFXl4am2DgTZjruStd79r2cFw0Ntqt61agi3yaR+3DjE0sEbYUm6vSi3GvFi0RKEEmv7HqZiLmhJ50vsgcOE8uigA3GgVTXThci17LHUDK/dTf6QBiSM9cnV5PIMGog2qoHbm00PizCejzVN3GwVUK8hWHQSQQb2hP/bdJbtDGZfVY7HFAJvgBMRuDmQ/yCEnkxdz/ZEHhoOuDkREll5sQkGcArDqOo853UOn6v8/Rb67Emp4fvygLsCDQ662+QL+PqsulIgLiIPsDZeA2oh5UOqoGPVu0bKmuUvuOvPAkFRpk/6SnLZTqzAPB13OPV2ShVUerHz8K9gjLLFUB7+zE4xNKDBBlEtKN4V6hlQQMIZXfiN0ML3JYPb8CiBF7sqIQgoDaCSQbvKCdsLwTcWcKp98dcN0RjpkaX8rkIcsA8bQE+R+NBejJ2ipfXluJgivUwLuxQrwP1ESs1WpWcZ9+UYzHa6kiYkShwq9TmmRNjM1a1bqTb/oF/a1XQbZuavrXlP1XOQ8JqloeHrgPY/frxbBOuhcqnWo1bzNmpzSCn4F0kVsQGaB4R7VOqfMRV9NNYBcfZi0kQjlm1ad5Rq99e5ZjSZfaWyeIxyZU/FUH6cJCkKGeoBjjtmx+qqcxdqWxA5D3bFzkj0Gc33FXyg13g1x3DeP+k+aWGcjqM5cg8ELi7xBS+RB4EBW/liEEKcWrCTcF5I9UkJxYvyf72xlVBV1EBMniihWxkKy5hyWE4QBH1AKRwajLRiNk+B0s20kwGTFKZY2WD9iv/1PHtbye0rVvijOqEd2IYjOoG3xfohBBInIxB9aja3VDy+9D806/R/YInIYIFr0FTpLAGRm7T5fFizLV9JUu4BcmGbXXUED43E1VD8Of5LvgHu/yp4ILaZYapMVdUqYj9AvwpnmxZ6KaCm8npITEgPGsE/8fiRinWlXL4DQQ9G23yDUTVo6a6ulsT/leQk3Ckv6eOXptr/8OZiGYugvP525z5mdBKYZ9XyXfg6CYdTwtuttCdS60V50M6foU++idbrkrpghjZp+7EITAHoUbBpfwVUKIbB5QDD2BJfqSVNXMNTlsm1c7jjIWmxguD+/hj9bG4qcTsK1AiGSxqSDEIJoLesH90V56MEiJKcLKF6T4ccf2d/HiLrKlEK4fcHdtDEY6pc9HX4BWz3BlCVy1v0dHu/xmbxdahdzqZcQSbCe1aG6JrHrhuTmDmdkfXozOoSS5aq1d/ZmLyRT90jsBltChL8vMsZ4foWYv3OE4nXXsEo4rC5aHBQSEX1DynmFc0FGgzLWacou/68KgoptkBYKEUsK3AMVundDwXkgUMowI9Bu+lUb7EHFpLT7ue6KpYKoXGQSdl6Qp6NDPp12JQgsKA275MOX1dVvYkzrStY52TPp0t+zMCRVEsL8DIJwrSdkbn/UZU+oyJkJyubtvN94ng0jW/1l8BM+61LI1+wlW5ZvulpwVaOO9uvtC0MQRuyl9hnxXrTOayhGe2vwqS3ibaueDoMP7nm6+EpD8IJ+xxsVMJXc1dPW3mOkS5xyoBrx2KjbMe1v5UyUuDz9pd4MDJ+xq9+3/xSwo2/FhYgwq1v3YfvwTOnOWcvlQNOuwG7N9MstqtojfyVzXZV6VTUC9xdcqDTZYzvyM8Jc1Xcg43i8Ww7dw62puxyZ4l+d35eNfpWkR5RRctMkV5Q/DfRaUKnLlBavr93NLz80mSapZCg/jgfNckxl3BdvZKNKVqXeEx7xPbRl8OZ3w79v404AGqfF5qXpwCxIiaFgCRNv1jzHx2XJzabRiVxM9dtJArJQoADBl/WszTiwX9F8jSA9M+WBm9lM6Am4CWwwJwkBlJFmapPg2XRG3eA9FtfV9Sjbs1QLqI5PRPGwFvWqT+yqw4/BQXdrYtGChITVakHC4W1iHK0HpjP0ba8dE1ZEULsSS9TJewO6nBCSzKT4pFpH3Tfcls4R0+EMBbAwOHHDreH5QIe00ot/inMKr0HXwrZ1ZbdgmtCzv+21sUmW5RFAfaLDJZu/4YzbZmttVSElGxkoelXQkyWbuAyqKrnV7eVX74ButE8mV6wq7Qb20g0JbAgAcCaRU37kEIwd/1KdC5kyoTmv363OGoK4geEHtOFUAvsXzMElgF7XcEzP674z/4oX/Lwuov1fxRbrYY/3ZJ34ulntao2j4dsXG9bAiuIlhQfAupLijf0FaOtlSzkVmlJ6zwIyQEdQA76jDPNhiJWEKlhGrS9JcyOe115NddtC5yBPZGD5iroTsuaXxCb0MI7Pi/oORqq7jK1uJFUiqe9pvetHj0O+3hVD+ahzbLkhN1zO/NbuAKBACrBjulpx5gzwDEh7fK5IHhH9YiyurgUD91+eY4nELPe3hubGQBHsfSB+Th9O9iakhxt1ZIETRI9zwSesHAgjK27RmRjimUFaqS+T0OvmIr6+XsyU0j3kgF909ypzDJGuDHEA+hok+Vpt0cptfEKievtnidIiNMg8OoP85JZ4Y6RCxTf3lnW3dL12EU8kYtF2Y4johJ3TJFRfpjg2oTFDdgDS6ge7tOA1xmiW7J3YqSVE1BcPGluxgtZlEgf055x52BX/0X2Dd8WtTnFhWm1tFgP6x0XOTycxRWReWBO2e1xue/b+KwDNkqiNIw58TTUS/9vVVJb3OXGPodc2hoAascr/RsZpnq3lwnPEpwXf95DUq4c8CUYGT4Yj9f0zjQi8RHR7ayF+K0AQJM0egWiVi4ZGrHxXit82ZAucZXCwEfU/IZd38NKuNbfK2kjzrAtgBAn8MJNLSo6BBWjrn7jTB+oQ9EevuR1H0yQUF9XaY0ylPexNipt7qi+CahnkX3URCxJmYwfjsllXBdIY9wE+YrN4JHOq2fYLQLaJIyNmyumdr30OmFiCzygkVM47//UTuMnGYJWjw2q176aGqjBiwncboP7uv67yaQj6KcCWkGYraKLJMcTx40e1EiESoVRiT0bRTu8Kk0kZ7jwyj4vFlkJ3N+ksjqZM3aOklTvRO8VMu/Y0lXcdPOJA8i99uRauxB6Y5+UnQRGEo4dvDN+Gpc0wFLVi16TiEhsF2uuxGqnmhcchzqTrlgqbqyoAvMHSOREMk25QTlQ35LWwvOAFd4jxI/n1u1mYMU/gk+5GoRgFDbDSoxME2FvPAay2MDhesd5EnL5uBMciiyXbZq9V5ykwZctXsekbqH3JE9gO73HmYvGwowfMRYN/nfpm4ZERqM+rQJmXPwZTERJajHLFQdLqIfXsNJxsTTNE7qPfboTh3NoLsrnkGzUFLjYL19DdN4c8YCbP8b4l8we/iCgdxyLLl7CWwcAZKQ0vv/RuAq9xS7YUQ7pnFkUMvpZo1rOdsDrhyByPd2I5OFHhcNZxUGRaMi+LHofJmvOY+GOz2IgC/k7oRKBNN4nBZgxAYB5Epo1RATJoo0tcbMfCYYHCFBS9UtB7waeq9lKMlgsKKLiocRnDK4UuP2AqEEVMkSQXtWhKG6SHlX94FIUWfFH5+78PShakZbn1jLSZVCtzy+AEzHTsCCzhTvh3Ah7mGB5mtO6bhzhGzuYl23+FKUd+/EVvHk3Jkh+p7SuF4Vngs4+DsHtaPRuuEc6qW51mQikDQ3xsCyLe2PGi/TYbbCUFmTK7KjXeE3Z3Kn3rPx/V2Ttr/SBgqrp8fU4GmHaOSrXPbamNTkYcoDFpR/CF1PrWVBxnV+iw6dRoneulLEuzI3VNPM9lWHut44RUErfWBAZ1APc/yqSuZNEtaYXJuEBZWbq8/wPcaWFyJVZiJYuxp352ZbZf3MJMGTBdI4h5reezwouZrXaN7cyVlAgeqLlj8c1j9qi9I+enl2F0NL8lj/uMyVjPJtWZ+gIkfzpSJq0yrx417hKReJ81UCGBTJFCcuCWnzgOKoGb5vkksNUmh0oGuLOT236DDTIye5NjGjqFvu3oy89PSANS4WbKkzew2BTA63JGS2QZaPZ1bCpQM5NEKedEm1NC6QiYgDxbsQjtLL73CvWGleRW/PNEQpsFn7lOyXCwHCi13ce1Vti9FQyJ3y8yDy9B4+E96UC8eCj58+uyujv5mv8kPTQ6HRCCyN3lRjN5fRRuWQ3T46E2uSRaw9vENTDLUSlmqf4ZGJh8DxdIGZda2Pw1aFuVKoiMwEUSZQsH+f4C79X0BQSbUXv7WPrzmqSmgrrFP3X/KzVAA9Zu0DHDwsuJqXKTnZXGZbPD0qe8KD8iIY5HdF4jHi9vfyvBtmGvF9br4WbRL4zGcxTAlrj33h7vDWhUxiQzTeXuzuSHZuUHfd/RqBB4r/TIoFsWK3hOxcLpbm/kECRXKWvlhdnbRdeoK60Gf7HvxHxaGoFD8VmptglEHBMSozjqsH3PNG3c0WuJX7sJhi/G7o5CSC8Lz7pLLZLIF+p3hOw+YuRD/SOXoxlYMaol5T1whEEPg0MDCL06pCB0p7I8wlw5MLiNhYu58qIUhCAnOmfZjAhfLKNzRm9xaqqhiJ6AtCvzDd27/SCnxcUcYS5v6rOeazSFjrrWPWOL1pniThSKtIoLXxfDbXpUHgMMFruzsNw3Efen5COhMHdkqSH7WPsOvFgZBvs+rp12jKBNPdBJpIOZ4tDOc6zw/j1/8w5m5AS7mnnb4nfbfIcdutsrWg5KS84o1aHF8MjCCrif6iVZxZx/YKles26DHgpQTWc6FRgs6vOfUYOZkdXOpDvWHf/m7YWbSPZz08cl5S1lgCnV6wuuNubx9Xh50poHd1c7PTRW8XYcDYntX9TOxYH/OAQPZeik8zMVEuF9W0k9JEFQ2farfWJTK/g5s6rL3rlgoMvAXW3HmkXC6FIZ/ih1aNgaTd6zbhtbNoJOi7w8Yb0i7/wRI3uOtM3zVZDtxE8Lq7Mz3i+oN7gigI+yAMTLqm0dFzMawPmzI5OLDZBC7apj7SNq9oIJX5NhaTeHBFHYcws80DTJ3Z3Shc2M9tHS62BrhuLu24ERAZm9rvlguHaZ+l+j9/mePlaAEAr2xVKA1JPDstnua/8BcJ0YpOC5km5i+NbO9AwMrgELTAp5ElHytLVetnYCXglDtjQ+WPKOOSidBYwWYJOPotAXJnRoFPyvpsE4RnkxnZqSvLa99UvgzvFRc9Y5c+tCI9ppRopTaWDk7FsxyQBFfGlG4x/tbAODtd/CptRlI6FuwQpN2MrkzySsjuEZtR9Ol0nOV92bRKAdrcCRxPfq3IBeewAkSYHGUznuuoyjI7fT1F/htKpztUD5oxkCIZIxIsL4OzDqp8eR0T2fZ87DBBB79vE+zLuuawiu1zng5PiQFwmSraZ8UVFkYWjJZ0MHe1AiFbNDy2/ZdBehudjt39HL7QHiebI3I++hvoJT+OBvkX4MKvNo3+FEwZ3s6m+vheQq9E4BZ2KYLq+7xOnT48LfHT1fDUpv+5hnDoq6QW0lOzw3o53zfj5oZm8rjPFFvSAWmed6+zQrctfTWNOnoxUpxvTpQEHdP9+vKBJzzX1c+W/hIfpx69Nhja91urt/8T3U9LQql3tmc4aVTjCMcO5fgWhQF2zLyvVoEYOztayj7BIFK5/pJjr8m1aUdHzxVQio92zwnIWZot8tjfJfevM79vUzxIIWgFl7TZGKzx3w3YKlGYXpFLg78Z6qwFoHp3GMxhoPMmHOxwK/+fVCDDqbEsXKJP4px/MPKjBZD1Jr5AFG3MDWXKVs7oZr8LwilkAC/rjerklDn9s2pUnYXk2raLxSkA9koetAxJMgIH8obBx2m3bhAJwW4wLrgpllS5i7zyI+5tTcX9oFlZFy+qsFhS8p4WP0wCayP9hOj38T8WvbQSYnZ9KCyHIINZf7nB9OqVRBYt5NAdSXrkLhQ48m8d2cAaA/85wnEFrQe4Rr6sJwUgMDpj/A0rd6z/agh+dyqPqo0PlCX2pNHL7kbopCaona7PaHQMNiJ0tRrxmMvrkJ3XP6TZEz7N2YkVVzcOs5+91nDrxskIBijXmgKmCYdvBe2LPK52wr6bA3NuJzDsrX3rT41IJ7IfmOQEbfkU5Nc/WUdgl2RwKQKEFXkLlgTCVCgl84/I3dg9EERraXIVZNqkxOSzGCvhufwhjn3vD5uHP1TfWIdmn4wtAr78DYKsu3Or4Y6xJ5wRQhSnEr0Apcd8fQV/RBDo2RH3HVQEpePRcn2gtMuiAh32KBE0yYLM/pDXjt/8FlNZv0DcLohRm0tMbzI75XvN6Mtax+DKBXmVKCekVlqi7lGOgd85oEmadcXqEFGNBq77VFiZAcPsNIKdhEEFIytdGwCyh6bjXMVAkohe/lSoJhAsYp0gWAyKxUWJmwzVvcWcJPyY0YYZA372qHpigQcoaTPP4RFtDAFxeo83TkQS7Bgztr/uyRFPaiPXXKCjvDVa9VDMVhlzz+4DBX3ZWd9KF/l8+j7qQmo5UMWAayIgGSxQCHSKqKHVpvqtAFNpFnWgML7czvErsjHpm1D5uaH3zudPkkv68y7PSIanU3jyFk6X2tiIBOZcYNvJmXMki12QrL2FiVDwVDcuRaRX6SvghG3OiOqe1Dt9VixFeVOqnuEW/JHkDLlo+oMcVbg4FrOhbxBej9H8SI7UIIzELl/HKouTeQl07dC5wJif2DmKaBP7U2Y5WGpivm7lS9pDo/tBfhbwaREFMofwO91q+7bs+8RqUFFU6yQ9xw/3ew2At0xsqXfI+gyYoRfsbMvctpcYoj2hp1Gplxi/rUyHsXSooumBsAm4PsRki2YKvXjCLGnO/WgyDmfxhGpxVMFf6CzJfOYdOyrHWysAn9vll3Os+SVAbqGZyWcJHhjcqIFYScoPTdhlajzTLGQo3tMObKb/Hg+azCUuuIsIXpN2KX4hqClgVCC08EVsZijGfU5PvNBZKReDqO9Bte8BBtij4lj1+VTEEGk0Sr2jEnV9kMsfPvfYA5SI5CNPM98VFqFdbDu9XtyknQirEhWU9KfRo6pPIvEl9Ttg6bXvKHO2u5bgFYwGJf0cJdu0no5hPhvgKkdLdP3bRDlnr7VDI/NbgcpjkKlQ4o4cLFV+djSLdPHXz1rTG2v5GYgsNyuUeGTCTzE8O1LQ/DZSB6PRGFOouD3ETFqIz95J28xTyZ2Jy2ZOLByrqpij7Yz3Yb3JuXC0JCxbkTBRnYvrFKc127YAEVC4ukiWGz/O2DAOdWxn64o8Z+//HWcybeHe+h0FgGr203BFnuAd0PwsKCx2wnZV3UURWJ6g+jZEir1N0SsDnf0BDKOgExuVPROyf0T2YJGXSYBzYm1IE4qPcjsVMQFUev6ndrjg9uLOpDBPBDdSEYMc4L677o+PWdU0MCLdijo7Zf0kC18ZGiR+5eANaL1yNUfr4bHG4YHSnEz1gh04M99SQ/K8Lj3IpyXOpDSYdDcuQ3M+G/CKKxqXvzOLokk8JYrMok1xSmYfD16TW+XiDP6i5mMf1qDP6I/5jtAphGPYdtab4qf+r9h3nJGZ+nYCuCs/JnICxjKaMXpXN0sYz5zBvzIhwZkNIowMvZ/uNYJelrJxExE5I4YPUJZDQSTb6eFNQBd5dAq/FhGgedS99rOTnY0Jrbh2PoR/BPllh7e/4ZGgW7KwHgjq9CUrdMm0UcCpsUsDU7Gj8RXQ4IfzpmFEdMi7qu/rF24AFyZQct4OtcjIUR3i8UQgFbCEzZkLdcCmAJ4T3ScUmA01CZ55UkF9yOqkWmZlRsvS5jujZ7y5mrd06maZk4xrGadU/rZEI3YZ1KwZZRO9nmUlB9zIbNj9DCQpFGy1UoI2zsTevLwl49bffeipxeSu7FsK8s9LIKDGd3rMoPYKnAQ6MoqTquMlp88eJiNql7Vn/Rq/obp/eZSEj6I1AY4oHFQZI/vKFMlT/M9mh+IYiCl1YKnl9OQnnHYZyex9eNpot1fnVD39H1nYZ7v0wYcvovvI0lF4nYS+WiKEYO8d3/hJ7ULzmOJcc73pIUe1VsdCYaBYUUVmFfC8hlLh5JscPEcygfKmbfgU/pb6I2AX3Ryn81Elr5DFjQ1av/0cucna/7QUQETGESITorI3mTxnMIbb5mLKwMqFB49Fnom+fGv3zR709jTn+FiGqooXibuY40qakYWtl7/R1PjrXgfydB2c5l1I24XQCtk+Ve/+OAaBtcuwiXA7ZtoaT3gDGBtWA/WziuSwbddddb9wbBdOoRWbqCGr77P9kJWKdTidFxMNDbfSpOwumxBROt3Th+Q6+W0P90QO1sI35FEM11qhr2DTNr3D0WQT1DRJZB/2DMLK/bg95KtfpwOpDJaUMVD4nX+Eqo/coJcWJdVqOXn7NDnYxagGmajbEg2rEEYr4LYSrOeEgzaFaLmIWuk+0SXpbrBmxhboonKliNJxNVk5/EzBDFQ6vxYqhw/YM7RsN4nKAomnfaeZIdA+MYEKqwoXwkabfQOpKGZWIKjEDpwfZQ8lCnbFlis4l0JulBTsW68GnhRNxFgSHGylvr/TlQaq4YCWF+gQp8DTORtSf+YfTwDz4O+jTZNWxbHNEERDhYdciPky+2p74ZF3Nb1l7SHOjdw4Vzu/DeRYP98v1Es2g953Rc8jpLDk2ocEwB2Y73bFIDJJnRxNFHXq+uRJ+RcWKRXP9FAcYUSEGOP0ic7m5WidRhYcV/pfX02j4bjXpmJXf9a2neGFRC/eWbfWnxollxFN3yzDLjKfHKLYrQIg3uAaRxfV+744QpjMpqFhQvH15741Ie8E4qpdaNVKDbykbU8TtrdPKbzrcMnSniWU0fXMcWUJ2RQedxWExVo0dNlVZT3J77O1uDXWkGAOHFb4zf/KIHuXm8DJoUDtgKyYlZOuG8qDqD+w5uh+PQvuMjsl2ORhUzAr7rDTaO+hGTVr64pICtd7a/53JHAmnBw88gK1acQ6C0n/+LvWh8b2egRFDtb+RAUajzLqIUr3r0ZwCBX60xYD4wtlleC55/12h8reC4kr+DanReH4Wr3YdMaoJUWizlCza2ZEOgUQw04mvy8jzFySGr3xY3J6xa0SauX2HMINzcImmHWwPuy2Q6qpm8qRpbJsEGW2z6qVm5Ror68/PlM9R4GZot0G5UYTtawdn1R41rBESZd1mfoWqky/G6YN85iTn0t/aK0qn1PCZ569xMzQ7Hh4QK5zw5RcAjR+FuDhNPOickcyY3GgqY4MkaUCDRmgDwRnv2mAvDyJAQ0i+VRkz1aPIaGNqZjP3J5DofBrgsPHoUbNHWHs+py6MhEKx2vZ1si7wLQLYc7yWhv6n2dsgWABsCWOV1v/BeFiJ6EtRU6m/2ipVeQ/1PPlh2zyraLc33MrU297E5ci9DkJ3T+Zgwarphtq2e/cBLBs7dnlp9WaMD5/gApnepj8RUyuZwtRqtUU6fhT4nENoXQV0JwyWpdrk7dZ9jic5A/x1vLns5Cc3gUImjpnBuB7Ia1RCP0vLsN3hNNJvm8KbZKEG68egz5dQvo068k/h1yqkfb10NvBaElvBZgmaacRxCXlLGzX6JNhPn46AGRfn+aCLV+LoPXnmMMnxwsPc6sjCpKBlmX5WiDHaNwQm8/piD7dmLSNkPifjC31jUiNWmrs7EaoAZoeqnRraz0apEgI0Z4hWBWAbNE6BetLWHKJwUEWzHsANPMrdMcXRQeP6yJsD8bagw4BHXggCm+1YWROQ5FpyKLbdADJxf5jWWhd1bHDokz1SLYj5ywDtfRfuCCi1giv9pzgUF6F5aRo2iyxlMT2lEH/HcdqxYFVxXjoR1D5OxGWAOYecrAGmWeCYe2KrBoscJr0PYuYVh7DwgLa2a/uNsGswK6ve/+ZsU6u7VVn9OA2/gqt6tYcmWa3fYipKFJUI4sS+kthlA9nt1VsbJqC2n8NKvC8v9FWBaql1UYNoK1wbq6KFLY3kH0ormPXVNsptB/v8y23umnKxAZvLeq4z9VkmEEw+dlxRY+esbBlInEL1bzNL20ab05ALO8dpd8NvxSJYgvxbfVFPKg6DjQV0rKiyr5Gwkzx/xj+XQc3YbfAan3KhLfcdY5ByUMqwvEJz7vRZcKqo2T5ekaDNnqqu9u53wOqjEHnMgkb0q7eCTklumznB5lwsB1Gfl32c/JdcHPpR4oP7f+stbN1fqB5SBORi/+Vyfz6YpXdKeg7hcv0FcCqGZLDvKE4vm41Jbv0ymOOt47RsJBYVqP0H1TupYFrZi3Rpkj75KGrJkMxAlOhF/D3GcCg6VyXkOhxtDwslgoDOfI781lKkMq+Ekg+avU3MjTBhpox0+sBX24MukzO8wzVSNVgdv/GAUeRYHs7Ugg1g1zrRg2COnQFawW89O95xJRu3NwJxZrNspwSkepment9wc9F4MJYxaB6Pg0ANyoc4pM3GRDhNXZxnGEtBPkT90vtrLMXnlPvhSrpNzCvkbmuU4/qWcD/RBrLfa7iWPZ4DalaDsqM7caiccDl4cg1IT35olaEYOoiSunYIbzwAfiW9NP/EKdIYIiAQnW3eEVR6VGCxNmn6dXHF3Cis0WkRhrrfFkS9pxeGY/VM8CYfSKEUJyz9BKsYqAW6g6uBhGIC/qkGtYE83m972p1iW1CHc7a4GWFI7NKOWS7w1FkVViWFM1ZE8myBASipRQoK/3/d76K/HLdy68y3KSurgGAhUTXtYf4DoiHUhMFsO5XqXXuPEJ8WNAnPBShIaijhB4CNYSMLW5wWp3W0oZE6rKq8XnJb16wjLY00+iqasWPmI/NH+dt4GfDN4P9XuLKwirncrhkwxKpmcBVthEmOePXF4A381UasZzP6SBmxgtrXxfntxOsi8fcd8gzgtlN30Ma7DIGz5hK3HqMvWbTWq2K8Ctkug+Gn++ydwCR2S7ZHiz9wet8NFdn6XQvvwx5yiwAUyf2DP2zKixOtiHMUul7S/T/1isBembOaR5+n2yH8aY2Nuy5TO2VbxI6ub+PTOu1+oumkod+KIkpGc2canwQ7/fgRLDhZ7lYV/regCKpL/xM89Vyr9w//tLgCQSAiHlRHZWSs6TkPATT+EI3KWQwMQ/2u2JIox/RVSzU2jHlj9sIfnZKGlJLMrISWm9mMMAeVdOCBqzFPQiivHDeUusuNIs7ew0OKvtExEc/d4635AKKYafkTvaW69BkFuonmovqwIgmHMxd5JYNpaZAuBB1iIVrq2Ef0/MFTQIu6tOXLd24JZBzGGpLOiO2eYiHw6eOaaA4b3Hm1x2LrRzXhw1vnLkbmSMY/MCiW9BI1/bL+GjgZSmeWiEmovwZ6ZLQ2S88lUw66GUuZ+T3bNqrYS5AbCkll1ETEAUdQtv/KcYijmPz7JjnPOKn3Wt68CbFFJAkScwhitEeBZVZZuY4UUPLoCld9OqgMoprNizrRnsmFuDOAktb1MqFSlGC2Z5wZQmZBkgq5znEG3Qvz9PlGPaJ+SPUEtH24Os1Ks3opgJg5pG0yWlAHFxZXQas+AW9SyAsQjj2e9/1d2EKFGZSc454/iEZ5JmYKXyIX8W1q3dkqbbqVuUHaXHgmTjr9ElC43tPCjvxs/MaSnc5OEKxEO8Khxp/JwO0h2PMQvKfxkaHMblmSK4gNAZPiO2irdt0Gwns8HXSRaIi37RJfLmT5XsvKURxBbuYVGCmxHKZOnGLj9d+fbXWCESbLuD0krOL8INwJTjwNulLFElvrMNZNMm4dmEFiC7ZtFqfJVlny4bxrMKVqG4z2HU1ycg1yg/OnvMg2suk/rWKvp2CXcJvKytzSXq6fggBj3nMiD8/rq9StfCH21Q2TtW3cJFifGM9JHWGj9WH1rqWZy+MbR4kh6aI/lmWwmwQcWcVUYf9oiqTGmfCzK5rYLqTTTBsxif1rF9OUh5U4SBlP252yI12aDzRwgbsrbwDPRe9O0SLer/1lHj+7YgxuQBldu76gKunWCHNoAeTJXWhVEgcYGmlHbcrXm8e2pO/VqfrX5FcCzfRizjtimRzEKZptcV8soXmZH2p2M0YwLZDcvmEcTUFkfLkwhpw/YjyMsz7wWlKASo/LGGa94eEIo1zFxYhLRmh/aY6PkIRJnHWHlmDePxrTSzgea9zGyDG89eBESMqGq6mShm0pccweBxNyu2iLkcaii5JlFe/Mv2pEuYi91ZQhyEAYnYJJtsZXholUJq9c5PYVWHba0sDoe2owgjCWcakEtA9Me2C1Hou2BVSWtGRUheudo22VVokAl/qcQViR9z0oer1KEMkqzvLgHQMV5KjxnIDXR+ZKMPzvNxHVYMfFF51yl9Ho7MeK65QdB1oiMgp5pnfL5SbZOfllkodVsX4mPz6/onKffT2uDHMLsbr2vqWbfsbTTmUG1RB+JISFp2owuF7jhDqAJ7d//fWvDVJIwWUdHL82jNIJcoFXd5TaNGa3y9J9e603E+KaRZN0zqwwqXJG/UUEZpNghCXmZGXQDDbE8gOQAGq1Tcf7xM82BcnnJogkKE2gLHCMiGdb+Ir6rgPyBHzOXe1YYJaY8u2Ai1YY9HHpVPvcIMY6KbxwQ/pR/tJtweZRIJlTfRRTG3l8UNlI1koTXgKVgw8eUful2BUYP4jvL0Uc02br+gmBs9pNNbFvEjW5YbVgF+GxS0SRGdKyiZZ2jLbF6+HWZcbldgYXa8R5pqXBH/FRHULLXtTN9M/O5rD7R6EGYQ3TvrfDMrWJrMZefOKUbfKeSn4IRUFgysYUdjzPvskUXqljMvXifuMmlEgjX1deaWjYW1LSbGHqEKMSXLnqMfIARzA52hUuzDpxGiJkY+zL+ZKIwrRT2odDC0KHK/1hY2kAFcpzJhJakQsJwB5Bch2fq7efY472RkyClBmjoKnHBXwMyxh1UvSw8lP83oxxj0xto4A7d0C0qkDUEOZFcqPtOtLIQS8h8wNhTRsyBgp5UGxEjrQW7sk8iifbBJZxgZoTIba49WfnBaCcLvNPGOQjqELd98zwUYbxvrkOTUMRHzD+Xqb7amTjZQet+HUR0mxuywt1Oz/lcrVtbdpqKO1ju5AHxRdkH5M/UV4w0suAz+Wv0kYSTuOCEbawIKGc3uVLutG4MmftzE20xKeZAYjaVJHrw/APhc7MhDyN7KC01IglVq28vFjzdldDi/DLJ12gobcaYn9VFNpgB5edA3sWoiyDX7/Tm4ImK02vll4N6zqkiThxRVlF5KEMTgoCW35oXFhysVTTMTzOtejyFjL8DVIjqFrPkN3ut/okIf9jCQqLErLiTi43itozfcP3YmXUKGpP6sIEvOIqKK9fb+dByGmN9ATjTGPs9sqkccT/TY18NIK+nNfrbqmbaN24d4msKxRA7nGvQVmYv7zxNDuUZN96yRfl+m8WPIiCMRsxcV3Kxi0FqWcYqv+fOdtV41blguvKYc9nbsU3E9QoqOSyTGYpBXAUHtnX0KfTwiilyOcLsXKvXp0P73LSvPmSvQhbJCRQhjvM2Ev+OidBShXgXEfm3w5ZHV+ZIf+8DRtrqMLZWGi8sfJdiSQpqgcCc83V2ndHAG4PWImEPPa/gZkcbW7U4OCEOLcaJa5ILXEx9rWNNtQZBG4lEgb9jGlvlpfI3G7eFmb8A6WLgGipflRSTh/T3jadieUFVOWQPysNJdp0s0Hjme37RrUflSWRzLSRJUtak4krA907JcujC8j3DWmNl+SUECXYx6xnO8F6E6DRdPW766hHZIubEYCm9AEIikGTa9sy4cZIECsiipPkBGdR8Oy+eTGxqLzxTLEe8YABi5rhVOJovlGXmAUYO2b2tfIakT5Z1JHsUvFepIqGruZkbhStVL1tE9d8UXka3EkUqyeqMnhhBFG+DG+S86/FA2mYljNZQx5+yh9glO5HfXWFYAm0jV9Q5g1QPktBpOwxop+qghFBFw15hrodCHstIq7+UQcIufRG33l6iCiFZmHc6HkdwhYk1wgZe4NOnOaDhjog1ETjBvstwBv3SrrXbvu8O2B//CrxVrTmAQUytT19Syxka9Y8+/oLXAll2FzDLumnXAk5l9TTuT1Txl21RaP8KZ/PGiHu9W05DzR7vddp9S/C0hXzvru3Aq2/suTD5T2tmo5hYRdVtwJWQ2FV87ABk10Ywb2q0nQHDtCjrjmBH80VFH/etQsfhS0LGruCSK8ZUM1bwZvzzgK4yFK/7Mv9AU/xe1odcldyXaZ1jmqE9GCSyEq3rNxIj2hL5IqeGVJ2e0PI1hVumS6yp0qfpcs8RsbgGgAcQBT8v4g8pr9k8LmKQL7DAMH3yLgIgcxqz6ZOP6IrKEVab97p6Ps8NlYJ1JRPbWSSZjksBcg06Wy0nC8N535adbfaSoq8PnkN2T/ISPYQ0UnK+DYsUUGI4sDkiztDi3PwsYEwf1+z5cS04WuAIE5pjVO5lcdkRZ0hT7fHwruw8YDI6kAQJRKtX9F3FYWFCIgi5ZhQXJGXusgyuSS7QDCZE8jxK3b4xxQx+uYTXP2UqAsXqEIlYgQJNQMnHSAhP0K3IEQicfB/m+GxV6tCiYuZLt5sIGoOAIGOQQEBqHfU8U0R973O60UEPD+0s/X+KHt4fDZslwwv+BEMvl+BruRa7bPUHor4x+aSq9BBiVgKG+Fji5nF9PxQL72QIjtOZa1RgjR0ZUBQ/VgQin9tTUSbXQJsGP8DlZR9084NvsMjiLpXeyZPEiQfp7vDgEWXKaUg1QhWjTYagwLhacy4MIU1uTyjap9q6z4+tdOiBAaS95Oqx5RcsRoNIdB2f189pS6cEvdJ6IO17uba1fAKTzNUiid+cdL4mHWuYxJHYMVc+BOTw+KXd+AMmAYlU6DCg4HXfca/47+gHtsQYV9yyu9q/Xe64dotHYq342wlu6dVsQQnUGbnRypgI93YvztLDsIlTt5+8isSnqeeJJZy/OV0bzUkux4eUwUU6WbFXx91JiK5g6LGw2bYNw0ES1awmuyyJtwoNjrhIynq570LaDXlyc5v9mFfpz/FEwrsx0Qsp135e5GQHm+yYDv4hIq6svyAA8yz13zGaXbUnRYGaFDw9KM3fuDEAttHdwJrhiANGD77vMy+vqbgmXtTkibe4jGH8RRPW30P1qy8p3CvWwuWpIytGvx35hPVBK/ITLGHUtN3Xoyv01PyiWpsDw8cWX8J8sPojkLvGSxdRrbSYmo3pcxJSYJPo5jSml9H+6bMOj4mTfIdJqx88vqhl/ndod2ohHNVz62ycTel+Dw96blmdYc9G7dyg16PwBYbuWwBred1DZbsgX0Otm4Ai0IO2G19jD0TmqxSaIadN0FRLJDDBp47RDZh1wI7IVSxRgS198QOCskq6EMZ53PpG6yPr938qlP8OjPCcfTDLHtBhBOLKSDaPERPf8CbtzH2eZOxLFY294yAHIuJ05BppYqdUy651Iv5kMWanHBBT/yoB5G0NPF9WNtXftk811rgB5RoRUCvP5W4Eg5iUvGoWMgDtSXCauzQq/xpZnGrrOgtGjgqJJ1axjYGfAVZHI8beSOxSVwTR1DaX3KRb2Q4T8NliKO7697W7G62ob2G46cBT6V4t3K2GIRuNOiLbNpF7em4pwKrQE3r1sHuJRITwsx5RGrqkgVNCGKCPDZcllKvuB0drkqyK1EIIGmkO5jkNJ3Ff2mnxvMRpZ/KRklUboId3TpnHKih9kLJqwzpbTlraBrUjZvcBqw19RsYzkixz7C4SkUTxu4y1NTh6MXIhMwdoRuppPenBdKi/M8i375yWhHnTyhTeLQxILGTx/x6woIG56Ceok9+xxBDPapRgmnvLVw7mYTJ7AIZFkfi6ApHowtlRTADKKAq4Z3Mi9/nFm6rUnw3dYulNy6VDkK1f5VKsbSGKyJms0AaKOXkC3HnLJ8CAzdiz2Nk38aAQ2OjfP6zr4k8xT2Dn04r4XSNg4zIYOF52uK9k/F18iRuRtyHjLG9JVm4bRbw+UZWbFMcWmeAY7sBS04eXB9oC+abIMBbpEEqcNONzkIEcZej5w4BYic/ZPsduRyXdFTT0dCjAVupQpqN08rL037lCofRJOxf1315mIsi7MdhG0pTAfLLPin4QGAxS8mSqvRXgNrZTJEpx+qI0dFoyhQlxWKkKMtWWa9SSf3kK/g/GANdu3VroU+lqBBYIiDSy7CWAUzhBXJvgGglqARmPMYeBBq1EswbKpJvoPFrxmSVrO9jPJI1X1O57tWq+uyQUFfRHow61tQ4QGwImvsCeCwzs1iwulSVfz64IkvDSYddld6O/lRWiFWFP84/pb3pOpjoziMk3jjBmd6biOdiFeryAlxSGLYLgMRP7wjzZq9xs+jPaPqKcGRJMunT7G1T/sz/3Gtcs4HOgk5aWm8R66zdi0+ZncnDDeYkSsh62twCgl4MxDnv7wlTHfRyxx+rfXZA3KHLv9ugXmgk68bvWcXVqe2E4RnxLKQfkkgl628E+G9+osjePelFCO1qPst2vEtgj1xtk2x511CyhqfyLKyB7TBSXgJuIA12pvzPqDAtjjE0HI/BMuJSTrrDa+2yd/RXEgs/N8Ds41MaMB1J8jD0A03XqLwsOwYIAcLILnVGi7k1EqnYEf+PRQ7Ot9DDVLyjOEapL/g8Y0PQyVtowcUKDProXaFQfeUZV7DraLQZOghG0DbX19Px2RdewneWw77vRtkrvUnppi0+1DetmtNMxxI/pyqOxGMrlYOaqqbrzemJYgmDYCRbWMX8GnEge+azJcC/ENVqwQk4xheWpOxlZ7rbr2mdSAJGOSmKKD8YHWFnVPBGEHG2j9uFhZ55TDaE3foX7vXIEqtmhOEEO4Ipne/sZTWKcCtMGlgCsafL/EFySArE9m4+cDkvRiAc9k7E5R0twDI6wozU+BbcDScqJbv4K4W4FAaih2yy0ly8QCvAIrk3TdLRQmxcsccCpcNiVQ+6rj3kqBL3XOXyB76BbQLBKd4hfzUSRuPu7U8seVbuE/MOZZ5oih1ZukpKUk3IkAMMoHfv3gS74J4vod9X3ZLD0pFOz+f5KjHzMBCaXoridHUcL45x6IEROF7OGweecOiM8nAJ4BxtsbJ7Ge7JY5/JVdpYcgcxLaoVm1iexWZ5eXzJoqLPIYxinRWzvVCoLUqUgLXdnfKkJfPIYRZZ9XCGJJTb8ABH/Pz2qsJGQlb5DWsLK30SHgX07949DT1OJwUFlIKP0xOrssRwE3qe6lko8q7E8hhi5jXIzFLwB+wNcvwgONrwS2Zvuz99wXOMPNA4hE8caeOc8vLWoOq4kcThmaoAx0W1AXXCLaJpRQ1eEANj4REArfFV2xUHTETRIWcmzyVuEazVJLZxfjrfPPq3xmn2Hmg0pZ/O+6eewCqOGa//+KtThlhurGb39bs5APVyd5WymXWdw/pLFMsJLLbMxM8PPTWJM8hDI5B050dOPELUGmi6cn21uVHJdRJD7IFAL6qloF3Bi2C79Ext6lhMee+NwjCSF9GwgHNtVRA33pKyZzULwXwkMZlx/Wp7XaojB3ZE16l/Ropjq6HeyUC0UkKOptmsW12+DzX/sTg3WJrQQExnCxchuNrHkZ9ufbSoUttKLmL19ESVsp8LcR7Nk2w+dYVfZNxWQt8e4EltEvv2RtoZJ7U6Y7VxP2XHGS56fDOY6JKCquyoXE6ZwtHgXIkHmQA47vSs19vdQ0TfOUIcuuuXC1YSr1EMsldejv36m84pv4+Whnlf/MirVkSWUvLNrMdyEt87zSLswp4CiOBCRjValLMRTG7BDiJp81hxXwuqB3tr0yeOxvWEoQEjvz0qGJeKYDcH0WFWABW9liQ9F+5dJw0VWiqmNJ/GNS+S7W2nlULfVb60ypApon7Z5JUueUUac/1nE4D5hVGJLTbt2twrbhooBpFVwppQIYbp7OFGyFlQs3KTJyc71igjo9eM81/yJOSQ8ZjHCN1rR0RF1u0RsFG+ppJmoSE092YeKAbW8aiMhzZnHkhz7GpKBIUMX1lW/G4/7PA21lxSusBPXyPLULHOJvzq92NgYbkJKJ+Msfsy9kj9dsBCBwi1Z6B/zN3AVBGxRaPZxVwK4lFTZxi/AF8vDD0w3pSSNkTE9iwdFKcgj5qhEIKPtL6RAByR3AJISvg2yagTCwRu2hgkVI2KUkqlwecMiYmb4rK/kV7wLFbUzipxESjzzZLQ8UVVJQaX+CPcAon7k+HBrfinBGcBGggHLVyW+iM/jUS+PtLmSkdtlwQZJ5AJo1vL8cswK9RKuUrthykUs8u+Bf+XyQ/sXy0pShMIdf6Mz8yfHc8xOts89ftKmU+acIAv7e3mQE+mb+ITYNhb+l4y7vOyFPJ1t6m5QxlLy7MpZlZYcOUQuMN/rEuEsR3Fjpr2OWq2pDGjRt8GUoD5ahEe7F5ImEdbQAb2KDD6S+ImXmlaCY2cVEo5AXAbZPi9sL8wVwdPwmkXAolZTqEOSsbz8rrOFPQbSxCeEZKEDCvOxV/w0J5nENWzU+jfAg9IoNtbZZ7oarKvV6NPaSq9kM5key+YFMhHboxUBlFjVYWAOKms+ulSN7Tc1g61AT1gcDFKAh9+MCTaNbvNj7A46/CQ/A4TPYIKgSx4Ae2rnfFkQBeuinnHBJwfI2UeLINA6aALBrt2i/VtaL+bOw3KOVFPfG1Sf+qk1JUAEtdGyd1q5WP991PPzotbLxhpau+Ih3hDesga06wcycAnbjADFkoZyyJMpZYQEoidmKHVEtjXg2tNkNiPvLXddjlkLmVcLi9eBVx8MwtgKC+amejcRRQAEOLB940D+0Ep2M9xJcn39Q7eg3qKbgO3a3PWyH977ovJduKf6UwF10oASCajsOo5H2lvCFa5EuoJcXT71q3dGB6CPQYHdbCFI0On0lMBXJmAJBaHQJZMF6+3I64U7uJZXjyqkb9AZdMnwbQRRdP22NMNTTMBzul8Tw3f+Iqj7FBo+qDU4OwSdMvzZW0UWzVOHoSbcqBnaZRQiGairPIsS1e+ajoQR1rf36MySkHdJbchs6Z8RiptMJh7nJHUvtqTBGPZOXQO+gcaYP1woGvsy6DBH2ZWWKAyUSdeF7Qakb31PaTXb1JUZSa/zO/tkvq8TufNA+gtbn/tWpf45jldVJk+fUW0n9yL7rzepPkBJaLDxwMcuNgpUk9nXwtJ/DrCuTBBdU5uhbn0EpLgc6KI3Lu4vRLSlSAGoTBjDD8eFFwSdYXXL4ZU2tR4ZGKT7E/4t8d+rOhqI8M7j4wa1YApHzZp34ZE8hLZ/lZdw43yawqsbZ7QPUtMxq6de7gUpVjwuWjjO7utjADETjLvzr0VvTcCXQ0J3eZtu9QR4a1nx1T+Fk33zJTPZmjiUJ83uMs+fHPMsYi7Pc90F9dqtUMgiZh+VTPgkqvllqfTiqknbs+uP90tzjyfWwcKiZWH11y0VmugxDLwZhuwt57LLiW9Ivu9FmvEzpUgU6rhtd2xfrSRJXXLGQTxpT9TrxZMco0gOhvcbBNc7H//WJ5fxpIJGaTvOXgnra5SQW+5FVFjOLYMmULbOw/LfY/NdVhJyl3bgA50I9xcr62DEiplmi73TQdaWHzZzkzdBJJfKFucR/rjL0Xb/9OVh9ftY0gcnGFsDinCWa8QCmBDHzgyv9k/5OoSF2mhOyWrmXSGQoas+KBO9JAJeyCsCIHWy0ixD6JebYlAtnPqQcay9XU+2nieAqR4c9yYIccZg869rIBgWluKVxIYLYpf5zQdcGF5+mOVNw7e00d6Mwf8L0pZy8Qvu3HrR9hWNWFXPakQ5GFqrdkL+WG+fZRkDT+Ua/b/e6Sckxj+5IEQnbM0DsR0OgfMp8V6ohrvOmx/E0yvfudZtLJaeZYPFtqtgXX/vAmICOFkUCxx8vpqkSUYzFXPjfimHJ0ZUmVupmfg5q58eGYLnn8Uel7kM/ZWbHEKNjK1K8Rkm+ArtUTxwJHFwRG8uut/3yXjTz3wovZ27cnOF0kD/mAYtUUg9Dfz4wrqAlhlWYFTglB1WTHOpxJpng9HumMHHA2z+MbJXyfGEriDPEI/vqAZSOfSdrXtEV4LBZPrXM9sxUJ2zkpLZBmRo/PneCV16w+9cZ0j/+oamz2oDVFyFxR0aljnCNjTyqw1MykveidX5ALYfW0M2Tj4rimHgio6ib3bZ5lQDhZV3wzSKakdSfNsvrP3cuWADZS9aYF1IOlz3sRc6ResDZ9bwAOWfWbpQYHXVXxYEs+o6Pb+FVIXCo8xbT2AFHZOhu6OjgIg8QK8c+lOhsi3Z1gP5zO5zyC3X+ELCe+IOH95R75mfvMujuINqfaa4RHBNJtmmyi70Dowr8sKtMQC0Fj6fY+0KnUEgXePHAib7G4tO4BpAs0PMg/I/F0yqJ+jMgyTiPimkvUYq7gsNOtXWEQbG8HswQkaTpkzIAELPMjgb7SIE6vmQEmcIAJc4JTd8gkv3+W5NCs6IPEKT/1Koz7l8coHfBW/0Uh8imR59c2/HTRy2hTJGuqlBaatAPaNyy5lA+FoJOa770mB/RaFCWJzrYXKP8O3ABCwwUUt0U4Jy45QpCE2mvmiPgZS+FCcr0NX5sE6Wve4hyAb+2FZzpnr0daKm+oVJWEM5WdJ00EDbc/mNQ3lKmDhCMJY9Nd7gFNS9SNuNRhFS1yQlGH3+1OKqqH0E856k+aHIQU5IdKKB1TtNhu/C5XS2eLILxI2g5Ny+fNx8cHVlZz+NUEApHdkm94JIggfGtWmPSSkbs10g0HSVi9LW2C7eSiuuuhc7PXV9V74sSIp1FY4iXmPjA5Q/bbug1FkIOqbb0w6FSArApiSylaEPy6PYRmt7+kSmu4+sc7EVELQ+zvWfL73U/sdJfcwVz0svrAO9wftzuxysppBIxO7UODEG9C0Wia1wT/AHDhxeKArJrnH7ENzFGe3w7Ztc+ujUbBzI4bX/977y1i6oGDGH2Xoz8VLLYIZxSp0UT5wJeS6JupbFD/bQQmSyxz1J2Ze/4X+k6Vkmqu2EeZqzapkQQ5AHWUJgLngPjBGIM13Sj1LJlvUJwwd2HOSa6Z0qDovbnGexOvgh7Rp5tDsoVlRi6UNLZA8wEqqo7TJga7IIb342OdMRdwRFjoSNHq0NG/wg4h9uoAy55coRBq3fn4p9HDvs5sl2h6hDrTOfmSBWJNcd3IdiXPj0PguEJDNMb0iphtAuV6wn9N1R9lLJd3cr0Aaitef3zW3PMheo3N/M27a6l/wHOqXNa1PTRy3mdA7/qaQRmJh+8qjpWqXN+ney+/Ga+CEr4jAoAax3Zlg4icHbRQY+v/EJt8OPpP0OlbiJqja0znY5EmTd2q1TJheIT7UIJBf07uCLF/MFLj6cYho3yCqOKJQZxb4la7/m0tNwRMA595mPNvQGWqZ0sob3vnmDYm7d2ozOg+tOOnoK+icDFUFzSv+473GVICvfEYORrn3WfSXhpKfoLhcOL7RMwIiM8zuWxsZHtyFECHrxgPhvWxkmwM4MnNehfb/aB82QV/yWo4BYpD3fryf73hnAgVatu1QjdYPB80RqhzUKYbPjrgshySjkjiGgtvz+5++WocgNPcmIAaqbuirrzxK0yYC7u5u0Os2cq29mhnf/NqQ2sTDBmn83ph8wMhu/tZvmtSU/5Tcyi035UYTrGVWwJgEt2Zvsixf0DURJ/a2d0J5c7T0e6apWEZiUVmSt89jBI7YzQLLQMLjYjK7A2FVX9oHQpPpI7ILjN3DAJEreeSXmDoHUMWtwYRFtKN0jcQ65Y4Z8rJRG2EqSlyikUzUhL8CaGJyNpF9kSiYcgMo53cxj1tU87ZF2NhufOuwk7hYrYUiLqbJhzbs816N94ckvbb+ZoAq/EQ3OEPF6+sNf3cP+U3vbv4u0U+OyXXymyDrH+Dp0bKHrHLXS94/a/bUIsR+Grs6CD915lm11osqs/aAQfX/xZpqWrWMWI8mkI7HEeDPnxuPa2J/GDCJRfLLYKcHabySBjm7uEAwD7LnyxZ7rYP775wtO/juQ11jrUlDocvwm2dyDNQKUkNc88aC1Spobo/qubKgGGjkBHJMW1YO0GDS2lCfQ6eBlmJ7ELqRXQuKL9HM9al6IZzg/ngwp426zQYN6yg5L4Qc9br4lom4yxyhkJJoU0FO7gt9KAkuMZ9Fcn/g4I5vSurMFff2OadFX3xxDb37gPL5BGR/WlWKIi03KDmC0HOYaUjFqMnBU4HxKYlUCogaULJuLTLLXLWmR5aMnchhpaUPI1BVIXUlB3Yx0szMwtXGDxiJj8iVRSdW4x98F7SHz+USFQcz655EqJVnlqxNvemhGxDox83Qd3bB5vp2DnVz8cxNAp1/M3IKDl8j1z3ylARwS1nkfzhYkx8y0Ja+EKuMeuGgrg5LKngFNL91BexSBmfic2t4RT5/j+2wQVfd2cZg7LXX/SeY0WB6ZhZw5xlUVzwCC6JxLSgjIAqSQTdLi0yMIguHcpERln7ys0Fplp//K9Qp8Wcym7HPMAcHP3bCW7KGEUHi5Qam1MH1aNjumINGFus2vJE6OTWWsfS/uoDMowN07mQHPMjdppVLqszL4NFbr2Wfh6/jUPCtJ7bMrpaZhjt3J5pNosPscGgbIa4dBztNLnJy+u5VWFbOGn+pPYmN/nxQFmsUNFwu6YluUdqvYd5XUu9m05Nu+PIvGaUelyxMTFemfif9eIv6+myMVUxW18c0IDgz6Fapcf9GwRlJGMMxflGo4kgP6jgQ5K2EBRbbnpvH8qAlLAMK5naU4y1YWKAyBQk9BjKiQL2P/CQOYMNaYAFT7Tlb2AEN7CftQyCTIiLAk+dBSxd5Jl3p+PkcKnt9UBFAvrWH7GgiINfaqf35w8Soxz+SK0zJ3+uN6nOmBKnxr3SLJPBBGSMjVfqquTNyJGVtM1lbKIe71MAz+WoiRej4p5ymSnnRlJIx778bwWFKfMdrq0nUvR2Z1HnrOWUBZ47fbr+Vqj93x3gYG1BSNS0wXo4DwF9GQqrijsE4YgipQdEAcAjN40rj9y3DEVHrNqZo0JThHDobI1OGSOn3kRrC5gvwLr1wFb4lZffxSJh1gSlEFdkvW0cAfPnGg97hhhN7qjj47IZLggPWo6CEwNbcsa/MGj9ZSTdGlSDXfwfFMU7oWdj/WIDiskNkeFFe9F3gGsKOMoVGdZsrbjlmXXnLbQUBInFkZZZtl8kiNdFTku0aWBT0uoxnFO3MAH8lTWXWtE+UsRLQJu4ACtuIACmW54VVMiCCCV7f0z+mQPeY2iudRKZZG0tBbcwBt/Is4XSftfsXb7lCpK5aqfr2VSLKzNiX3COMoZPMePLzBTVvwP/a/y+kn6eQj6NqFBmZdxLZOQ+sXBWtopCSX2lVqiDCoIzrQX8RxedwhXi442EWHjQW1askap2aphdpVpzndnCpBAUwzAvAFjw5zP21NOKg7hXi9vpPUNGyFs41XFdqupnEuta7tsgBmytTsVpH5Mntfn0livTyBeSxtwP6vFUgx+zgk3YpVM1k+e3lMita79vJM/fonjjkY6C3Di1q1aMBGoKIOW2l5kdPiFfKRTqDwdLkGPPdaTdcCO7NFRGdeLESPQ6JpliWWLyJ+LewG78nH9yZ8Ac3VYpkB4qxRVME+1H+wq/xSd14atFNMipl3uuamOTNqKXkZRtB2UQPFzTxhMHBqY7Li8EAkPkc/jqqxR9O/twzJEPJ9WDIIRYmkx6w7Irr5knZU4sG25oLFIAnZh6QO//aj0NjAf/DCy9407kVrAzZX9Nb7wD9+3oSPnQESJX0vW1srHJ7rlQxmRW0bWvtBv0QMpsMOsnQ6nBaA6t61Dj4icDrb7KomBo2a2a16b2snlO9dFbQRm9RO8BhLVBYHNfLVtCa4qk0Utl4QQj4fMPiRDGDMDCC4zvvIwQYAc5KgD0bXV+Y7qJ7UVQzIiiTir4bcusz7IzLOmmianSx7yVh3yloNdY52sE2QbtOK9Jgmgia4yWkSDH2J9RskyQ7R/QJ0CMz+ImWQ0WjF2bMUP3UzBT05wsb8sGtRXMZN0td4PiVulOpUu/1e/lAAfZ9DGUl69sdvnu6Ix+ANw7pAylcFtitADDSmSFmilUMwmmyaV1Yzf5vmoucd0GazWVFyXwGLJV7bocE3TNn0nWIBR0mF1j9/juhMOD9D76iJGCkFZ3BfwHhfaOn2apo+Ar8XjZrj+dcTVKgNIT6bJdxxgx2sXVVAMNBPpkl2e0dXOQmFmUdqLygCwPIEWCol2168A1FC9W2nqaR1RsA6Jglp8am3/KWd9tFr8gYGPxR6giccXjdMFtyYUEmZnaa9Nk3NXrNgur8S4ta3Ck2LHLi5uFJ0eLP0/uG+8SoaQqosLb8ZN91FE8rqmgn/LtWKn1INDhknZXLG+um1grut5+RxmfuAAKBRjvWif2BKyQc+dQE8QWEHpWfOUHW3UK6pUgPtZ0gCRM+qqtZjiAjVr0qInPBiPmELEWHyyjbw99OftEfzU6VbBxrOQjHi0mDjvfPjv1a0ZI8+53rAXRteI8Db9dV+G07hfcRQjGqVeEgmJb24Svfqwj9YJIXxl11YCxaWvKLdMY1LvU3T16gEGrppuF4GKiczV/r6C4wQCg7SGTEXZ2TZJGJDPQiN7ZWJ+m8bjvfUgvFzA+vr1KSS1C0Iuk471cx+g8XxXjssIpCN4tU2UmLCl7swwxiXA8kwWHYQ1WF+moLr5AeMNQD8bnxgL7gbqWxHxecc2l/DW35p+zcv7Wbe9bMWSjCVTahnaQRK0c9tm4Gm8HbX5JJqBzUIbKlVdFjK5YDooaOWdEsc6yi+qgwObD4Zo1qPzc4LQBbGkzWYPmnEr1x1lZ9zGB7Hv6shSVr1E45x29vARS2TNq2QtFuhXJHFqNh2qJbPFcXj9fTzuFcHHjF0T1tCqrR0gGDT/sRVEHkRQu83bSNSMVPuGWcJDe+1iV8Cc3sVHq4GfDms4rREOe2n3YTSTVfhZbD2QdWAyY2ZmcT55Dh7ba4blw4t+nqguh2yct5ayld8fWCAmcjtZU1wvLpvxebHzPG8dSTSdCQ5q0qrxECTw4bgsVC8yx2axUfniaFwylNgs//M7QMGNgWzYGdzC3QYDFWfIFxtwa/JO6Q59R0C1+xTgejWcPAgw6usdjIChONNcYZQOFvB3eztBcMDKfQceAWyCwNBTlzwFncjp7Q+FbYAouS47d8aJ+gnIRxQyizdjISKw5BWi08aBXRqxv9XMXngoVCTz5B/0JmCaf/Zy+Yi25i5nzbnMhoO3WOJyUbU9McPps+Cf0rXPo6zVzvWWsNsuyD+SQlxiENASHO+bJNBFn0ir8kaCpm2egUd8KNbFJDWUj+81zvUyobg0Lfi9g0/6sCJjR0TfgxmWF0OlCIdfj+ABugBUF1fQ05QYWje+mx0PqJHjzm1V9yDchB1xU767sZE8mhxIHBQKLD5/A1NlPLc2e2prfHnLml3RmQysqigwqIOr1R5YyQtetQSmuUX75fBWfcsYrnaS2Hjbv8PLReuLRaHWwTpg0Q7sXReqbtd9CY1XrW5hxsuai0F1e81IMZu4NEjmFBrUxssJKYhfqmK7BFMluD8sXlKRLup6IrKu/pxSJNWzgf0MWAUIsFwAAha+HOCBm+o/z9l4j5P+sUzDLdqgczVsGSK7QCbyZGt9vrdrzA7IJOdRnTGOuabGOfj0upbvGgQWjiILnANxrh2frH/tlkjN1fsaqzVOAMTNOI845GnUF1+aq1pdp2Krl+5X0+ihwOUaeBAwwgpyEJoR0085zI+sHhR+Ahb2tTSQE2vICq9bl5Lvjz90fPMyOmcHxo5++0SufgylBdVokJLIQxwwd9D3HjB9439CM/kqUAnx86K4vrL56vdJbkXiol8rTbxInzuTdbAfduYKNaxw4BTUX/MCBeQAyIwxXTbO998wgolpO8aItvh7fpG0M9chFu/13XZxvu/b+7rnWgOGs6Q6rW56+5arNQOX64BZtq5mxjiZWiGPS9NkOqaM6MknYxYoTfM+cKvC6/xaJDmOR8UinKP6XlYk1e/mfhBEVTdtZAhPkmZvophyAfs301zJ41xigytV886iHu8dIZvQOGWvvkbYSqWhIUZY/MYa9a95/c4UZCtXG2ts9sf4vxBheDthxBHv0jikwZJ8rg4rnRWh+t7sueyudNb8wUMRrnUYND5FmqC3m038VcloXj8IMMoyV7TUSZQ4TZn6E6sw2+AR3KTEegaKvWJTx8n4duIPIX5HfpPCSeLbYag8Pm2b9e/yDSBCs5XDTMGdxgYKU9Y/ZMdmA/jkHLfM3dkKkifUtj5vNC/n6d1Ccvo90Vwvg4V4bKJqaI2NMgEv845ugxUKEZBeK9VbArdU5xxiXsDqCfUZS2URrMezL24GaKUSsBlIqt7VMZHa2VO+y5aNqilWCBLmSHRApdLcx50b0mJnV2HpEUaKLECz5fxoDAASMNW4OPYdRHTSV4OIM7dgBjb+Sdk87Rg/YOVkI6C4sCzIRKm/dxt2TE03JwK9Rd4ewcmq/BUr/+XsQnNY2Qh9czzfq4hSWmb4NXsuFVeO+LNf0tSlJbBecycRVxmuyZoYqoLpTESQk7pCGWdCAEo7wK4fUV7ZfWzSPCe2HQkg94rtxIySdrxys1fWJeIEzJfpd/k6BrUcXCSBzi0S2gkr/+d/b1VvH+ww5A4KMz8jWFVFz3BG43J8d2p2E7IlYOoRuXemSRcdKKci3HUCXRnEIpUihZr8GEWkk1uluEaVE3sOELqQpdYNgUTjh5pepvkOva7FxU03zPXME0ymUkBPUv/372BfMe3FgB6EkT+ysfMZiR6zBbh7IGK7Xwm5Eds1y2EFfA9vHKR+BQ4NOPiLhupY1FOkPa+f+5Aa7xB1ZqSeUDxRpwaKqVKvhxwQSgJ6Q7HAtYOEC5gYZ7W3qW6FUqcp0yMHCqOTFaFego9E5pzwRL1n/zSYFpTkHfPXvSdWD4Frm8aRMaxRysxIuBK5uu8XDwIGfp8iNcUSTcsY8ocBrQbuGcZlNWrRSiko2EhLwwYm1wiy0B7V4m73nt1UZ497lBEpCm2gdRvMhnBtGU9NQ5oDVrBg4WDiSt0dybU8UWbZJnozL1ubHSz96eDfqK/ATrn0nMP+D7gjkuo7j/orHBBgCLj4wxaidN0c6EIz2Cme9J0MYxHpmiPt3DK59ifumjf1Ct0b+kqdzMXeoya046FqDDQmpFjpqfyAs1Vd+T5YGSZ7kRSbJuV7NbiPyDIZj7oxNhFxF80ShrcxqbyXjqY/2SufT39gdBPztocWHtUr3PUX3edjy1Z6xRvwnz4EnYzG8a7GFsMtaoEcAqJz0fuWcipyCAOHyjKcTJjDjhZHuOUEqliqV5pvjjSmoJ8XulnUE8gqFJNkBSCyIbHr9W3uzhNMzOUHwCv9m/AmxYHFW29sOq1nl0WVfVUTdHAxbczRIA2Z6JkzW67BS2XCSglBz6YmnJrnY+HL40ejN2vIf/s+ZMXY2b6PYVAznJ6RXB3ISWj1ELAt3LE7yVyX+fPb6TvEEJFsVZXAlIeI/dAnCbZAEPKULuUsB4Czp+odJVrV/FS2+gcyaVc1iIxfNV0bxvJXoIXRL3i/B86myK1yK6uwG+nhYi3YdD1z2LeRAh1Lhttc1LtousayGlRCbYx9m6P7OwX2WoULd/qOUkHvsqFD0+D9OlPiWn3pUTBJB7H/rqad2wrEm+vjKSQP2YVaw1oZYVFMyh164lCw8SBbdL4wjjm1QRi0NTKRZjydxWM1Ym/6W8PrCc/jSRKptz9A6gCZDxoIddYdVUDhKJUfjFU8HACI34cDmoeaq3LLuS/vyf00Y1bMUQjH6Le6ZL0rVGvqDFMT+JN2UAw80BPXuyAKiWD4yFjQEngmaTH07r6qhO/1cyzmaksdafSC0NBhWhK4QqPDiB7KpJls3MJT/sWJw0cdei1lfentHQ5i2XbfVlV+Rnsz5VE22ttcpfZa5rwGlDIZOPx7AAIFqxGGG5u1ZZySH987A/qKZyTrIP4XTH01HZWFm2JWPYjPT2sTIf9zFcRm5u5D39vuSF3+M38rnSoa3+vPoYbuF5VeGJkK1PZroFaRTo7Fsw5rNMNHycIAE1VUnxit7iNwiB5805vdhawt4YYHnD3SVi6y9Ei0Czi70laVzKx4JsPs031mmWEx2Y20R8x9FOEjCMQxssSIxQU3EhC+cfiqxNPEcsp/zEFc43O6jY62VSOPeBaFtb6turUS3HrHOnewi70vueOt+49rHnafAaRHtuPIJ+O3PvV0drI5KeBdCFgOd+7EQP19IsYXAwCE1A+bJgMrjl9zdKhhofW21XR7MAXltcAs0EhxZicY6sY375HRPsZawQ0NPsraph2yxLnqRVBdDaxAE7wFuEgbR042+WHe8dHjPPePbvjXQ642VHt6Jzcc2la7QYWMbnEsoSjHyNwpnr6QfRWtlPHXmJ1Ypr3wnka/pQY55dAz48+c/jgE2d62nK9jio45crRBYYfq5IUbaIvdWa1hwGKUEdxW3dlwwMSc75hYfOSKNTIW7+9BmsVYTfpvujZqtPiLfETzZn0YNpOJgID9GT9VmiREQraMx6r299HlQrB9iKiKVGULcHtBFazSam4OzKNGD1aPVwtFnX+YC7zLboVBergPS7X7RK9+e8/wH02FRKfXOnlcDsnTwY8S9obKSCoOftnPsiLycz5if4INji2NrHbDHkpybBPrxT04VALF5rgTyemI8Ypuhru2g2EDFCj0U7aA8CyLEuOB8xMymrCmpYwWNRgBvavtiq/CryxynPFfpQUt11agMJgmW8JFI0cbXmVB2M4waAyKBKf3X/FUS4dO2utih3nYDehXk1udPKJKyRz75WKNUkkO/K9856GijFmWwDBBoRh6PajhVHDmXnGludotZaV1aI9SxQ5s0TpJTHaeSYOldu4QK9U/Gr5MgEoQw6m8WGVyBq7zjm6hCRaSk3hmUpZZsfxUz9QrkGj4Diygz9XM2S9RpsPSrR6vrJPYEtHQf2LxFbNdPDamZh/tHg7UbJ0sg6E3NzOoEXnlmf4sXS11r26HSA962w+HKnYBqv0tiG6eGedZKo33Fw7z5YfRud50l/2sI9NIdq2bDwKw3lljOfpw+tzYwOQV/87MRqX0paeC33fbRdZtUMd70LpI0vy3lI3Vumg7hEdkoNxZ0dR9WaZqJsDVRhGqiIusVyJZZDTv0loWQjisUklLZsA199IH+ZOyGT8Y0VSFko5XW2rVJJmjpNwr2mG5Qc4sgt2z6k1wCaJAtJxfPqwJeRwtsFCEx+berTqR8NHNSYTM4NV6MG+O2ojubg1Rb/i1l19O06cUh8HQCLm+J2KlWJOwbYfRp049Ai3faWK2muTvbf+7A20KuplBNpBGZB+Fe24QHHzYRAjwiFH6u/pEW4Oy+hYHB8o2Jwwv/ot+JQNTHgA+5lUfGpYhugMfM7uJdzmyq4KUlA3aiy5iuW276mAj5og2t7d3LJYM+e6Bd7TN27M0bhNTjg04UQts1RMnyB2FBfIxGjQRcTiAU/b/nx9hqFPLMEJD/L4eEOCjz6cmQ1L5bEYzTRinfMU8KtLYgA8nlB2USaGVWTTKmhVpyFGOBiVGf7FPD3zSecFlC6u50RwMo+sCQhKjf4Ah82CRS3opwoBBsuLvR1hxDAS7lZ00+RK8dl45lbibmFLLLH/P4Ga3gCNUl3QjUlardzvQgSYjH0Om+rHcOgQkniZf29d3PVkhWynmeExqb88pk7GcdwA33+qasUcK7zJ8EZfszOxu5bBv44tS8NYoPkSAK/8B0kZk9Z0sw7N0sq23plt/0hWHZNwafCSz1FQ/079RphsWYD+Epphbblgbc7WnYhL7UWsprp55Qhduh5yPycH6S+c4XXWItp7aSLu2s1uRThX/0f+PLBXw0aWEpaTXPY3dvJYEUPrbj8u3zrGR/VlcKF/7zSQY6Nd0asY4lZ1SHnwCILzzQufy7To7VZsIqoVulr+H8MNx9yXaXM6lgHbp30ZWmWOvu6UBmTtNgXPLR6Ls2uMNzJ6AkJ1Bvjqux9J+G68eLOIny/tL1idoywXNhMvASOqH5AYJodOXo7Ydr5qvB9okPCJBDeVBsVDg/mMXdCgKEBkzqxj+kQKnR4PHJ8wT25xMi8rNuBD5uqUXfEK2AKo0VYT3dCupeXgnouyQ+BAI8XCEYLViV6dEA0zkB+p6GikwWBJIUyTjexs8xsVf0Qebeo1y8RXK29V5uMrRmAHYcwaYYe4//f/svNymN9S9Ld7olp8j0cxu5RPyCOx+7IqaUeANWn31F7uLwMFWLf9Rb903OkYmDZpxGkjTWBrX/8sqc5KkKC1hG/chY//JWPEl5TnD5p2hLK1fTi8Fhbced6jLSKDm3p7UMlB3ieL9laX6Ne0FH4qvMlxPx6CcixueNQBt2dkDyKUFs2hbJe1YzdXcjRuRmKcEkqCs97XqPzcWMN51NFqQa10wIv9ouL1f2ddRPQ/zGGG8AemdJl3h92eFJFMW8PxPIcbuARjKu0Koi6O5Jen79Z4x1aA+OGKIrE09/yuVY/m1PaofHL0uQtLnScj9afwBOlTFWTmH7K5s7jCsDEOWxLZQn17qQJrF+fC2FdeNs8c16xJrWKNeC6XkcuYrKBYvGW/QhlDRPbi7FgP8/lFsRToTwBfqQytW1H32uzZZQq2r/Yg4srCO5cjOUHH67HoeXJOAslgtrqjhgYgh9AEUTOsbeR34AMpxQAK8BbzANNlE3rMu3PQv5v4MyZPFdE/rExpNgDsRnNZ1O9aSUIX24o5Bb+6oF8+JG68+X4nXnrSoLwFdE1lDDOEbNxVLJIcSpV+k+phElKA8bldSJSrwl/BPbzhnvKKnkj7iDGaIiwdMl90l9hxy1nDv3plMIdmKv1kLNJ5J2LrSE9qM2gNDts+ltZBGOCA2E3dyu6rv2NIuJc99m4mGabuA9YSjMca4H02Pna8AoDOC4Osd6MPx9NAk0dzqLj8bGTBSFnUExNobvOLDIMbto+M0leV+alasKS+8T8RDadtgJxLA4nu/G7i0E4b8NkfY8vNcY82w3Kxj0s0B2svatlVEUwQHbO/Dyx6/EnjN6aVHVM9MssieisdK/7MKYAXxE0/igkwgfoF/1x18w16Nn6W+EEP5opesi4EIiQtlZ9SEAvV3nEe1lmIsqq57+mN1ENzFjaRXElyPhuIkOFiX8YFAMZFtkOaALSh7NZq9ypG43cx3l5EpcBRiJGB67kxd9Atqt9A5s4tR4a7Ymwcrlr0o39Cc9sruZ3yz8tQFrI9mZD++mEzC0Qbz9wCzSGJUL3PaLaN8qeaz9IS5ColQ8CZmMaQujuCOdhBo1SZmqIsZQ+2pZMfpv9Uyii0nQSnSNwgoD3s7BQvnhj/3zn0gzt69YXOLQM+BZp6VR87oIBZlB++KV6pQGvAGF4EMDbF/BXtAyOo0vX00JBpxyO1gBZyjNunSMqC4B4LLPDfBjeMMQCeGd2tRVhK3p/zjroKODQAo62KaCwybjLoMdSxf4XCyzml/6kldk2hlsqNljIDXMhBfoO2MefuE74maG5gkrcH1IDcymQQMC30DfcKoSM0MB2GwkB5hbLj4fxdzSHCtDxkmREol3tnJMG8SMGBpS+SMa9neph0G2QpuP26lhBJANWgTyUe37DKfSB2T6fGgjcaoyR7KiFFZEwkTNbhj4QxpigrunfQNIF3OKg2erinKNAAwNrFIufuzNHBTnVnKs0d0xKuRRDJn9pmTvkNikqHLi4wlaOd4kTOnfa5BDWY21xBMDDgLALfCkguj4VI2e5mvyjckOaVak6ULyGG70gi0M6NIgdtZrjs5IJnwOnTL3xrlmWZBh+Cdl0ahWz7qBqtHoGo7KtezVYSHswNlRbXMdW/5NTtNvIKF/fK20aLcs2Zafd+Z2qdOiJ1mHvITPer4/oXM3v/IdeNoPQmz+fisiBPZUEWbt0aGQXsSM6FIO4ZeMt85+D4owBAGMFtOe/hWRkgS6yE+qZ6acbLyrmiu4C+Pz5fo5nrt/OkusWr6J6toHJR8XsqJOwCvHAMjhgcXyq8+Fx9/3YUkjNKiaBXAezq3KoqErYuDk8CzJ1LiF2LXituZNCRza5J+Oozl3kZ3gm97CXciJLR5LVbSX9776effCFJB+LpxeKS3cgeHT4BREpK/Axg//mIsHpW00vdM21A00aSCTDvltgA72++mH9Xj3kV9al/6X66XhZDLlGKi6feaOQqqmEr2CjndAlpiKVXLcJo/tPgGAWkjlB6+9hA6KOx67Wsrq71oaanAACTmhslgM0RXdGh2mynvBUL+XntveDU5Ef4QXE+zpQ6XAbxOwJbSf/FrPV10FxuRbcOfiEVtZ8MIXCuPPhTys5srddzU6tPLMUkjjdYOe/LbgAFtQAXk2UNqAzvPvzljevMlTLkiLXsIWQNomMAOzD55a4TnKjhiFRqE/AKcVj3YFLfu8s/4wAZq+Nwms4XRGPz3pJfoMKDkNm08WITQzrYplL3l4r5vwIkPo6pcidfYW7pHpPlQ+K3EZC0VqpXsmjhjsVHjDteWIV+flwyQsxsC8XyDyXQLju9DHV1h0/YoM79JIPrywh1RE/tLObsWKuZmINWzulnh1MOn5gB04hmiA7hHF/p0UWn51kuhN3cdtG18JgX+IOK/WLBe4lo8sM5EsSRdTjCHywUO526cL/Wa3BYmtq+98IR7GvwY/tP7oz7eiDafGY/+XK7dGCxbzJAcle4bPk8hisPT4L5eeVHv+JdScKVcbXlwDS4pSh2wvpuaS3uUx8n7XQwWy0rR2/aKMhdETyMOmGZKrhJSsQVwfbYC3d5pmeKk6GmOffwCEiDhQaBEuJgaEHqpVGjyCTjRhnaA1uUDdoxbGLsElMG2LfYi9QV8fYKrWwmc4/K9+vC8JRcfrIYP6FtRNXWqUZZ/YDTvzSvGSB/YLzdaR1V2/KUUyYMg3UqVI8uEnYGSdl1/y0kKOplFCik6jXJau7eiGpGJ9GZdh2uIJyHikZQEtA9QO/zj/ZUtX9fa8VL/UoIEXn6lG1Tl8+eVS/1oRT5H2bYzSZWgCtwYSvmQkG06eZcoQXPOULOP+fSDRiEn83PE0wm5Pjsonpra156iN7I0fjFSZ/QyPIXFkUdT62IVYrGiRdHAiy8r53KkVnKsux+HcZ+/+0jJdP5V2HzE/WYLKmx9WLNz7AQiW9rvrcbg/9lvluUBhlXPFNJ61wCwfeQAl78KiwYf4uQXKS7ABxGUE0pl7njywYAk3DIzhquNCo8nu/tzn6B6hQYEts5mLHuRM6ARzmy50e697tUeu0gkK+XpatX1Uc9iD5FQGr048p/tVC0uy9axsduMIl681xRP5heHQmxmIorzCCWR1EceAUfLuBklSFAvJxvmvV2PNFEHxPIvD4BkhXnaE874ANgr4FBZYHVop4sDp1rEcFkHBfZ2SnFgm1YVwukopq/IayyGYNz+TfZkGdTP2Xj/HaSAUyJi3/qsZjB8r8r7pK2h8Ibht2aRdDlcinTQx1vUgOsKD2gIsGJ6F2arLv8TNKpcUzU+D43pixKZ4TTObaUhuVhILItuQ8LM0DJibNFHLSXRIj4T8fEIm98KfYrftjeh/Bo3K4ljWriQBL1H6r6FPpxSzDzWFL9UBZ8Q/hvGXB+p4+ayP2gCU387Q1YmCQzzH/JyJvJ3LQafgD9x/gKSET7c5whYh++yhM0u6EUhyBMHtAtHhXYEwDhNI4cuC/L4YZOvHXa/ySLSxLgtdz7DzaTAfFwXxKx9Ds6NyaJQNlK1JNiwFJChMJsBEuCAPBsXcDVa9O1NlZN7/sWAnYUtv713EyYKyExbEegQFmF5QWmV2/M6PilsGdbfOc/qiKXZfM19KE4KCRgB6IQqNiCQ+GJqsLNzvmbGAO54pMaTcPbaWz26ZI0+cYI/EsQyHQjfVoA2bjng6QsKRccrd+6QJVSG7LikNOA4oe02ncFPnUsrMW/5vi4VpL+NfRMl3GndN59OBztjz73fFkhLOhvI4QelXkGR8WLlLvPhVxNLOF0T/dX3+621D9ATf+OPxUaHeA7C9/Ql4EuTU9mB5Xd8RmgrbgWicutMggyQAFVKeXLYjjo/A5PJKlzQekBM1jpU9X6HCdcyvHnhFOxEw7ZkSUA0g0TtEuF5IWAny2hNP18+d5LYErOE8qlFZvPv9UnTeURFGbUSyQdU66kfx3ylSz1t7n3ErSJsi8Z+abzK1D+NIAve1SDcvmMZtDZS70ZQfC6v14ndJ72nMJ+wkWD53mZaO0AzmJX4xV+qWFxCtxI1xsHGorjlcS8TeRnAa2H2citqZDKSwS0dm+azE+V33elXmsqVKMScy/wDqvm0BeBbhR/Az7JYLimyl1IMm2bIBxv+Y19WWUtNV2jOQUHx6mB/7T6riBtmM1tfF+mU6syBXWZ/b/jqB2fKDq+1sYmKje0lkA00EQURVE8NzHJDz+IZBlTToGIVPHPrkaKXMjflUV0lM0XL8lvRCiTJQR3hfkR+dOHe8p9/DoNTA/q6jlVKC99p4kSW7r3dt61f/HxEQARuSE+aW14vrF14+F2qeYOtK+6GQIj3wt3KfCnCGtzvLE7b4FCFn5KSMufhspaLPN9EdjSqTk1RequXRCHXFaX9mFWILcD93zAj2w6lhozeDaRJsKQXVDzUcyZHlIvD9M8tgd1zY5xDRSZ5V9X2kSoYabXYQ1a4xKWBmf2AGwiNFVwbQQi4h8TT5nPiIt6+xILvfsh9x+wbfleSTFDQHtKGSmQCPoMhY3Q2a9RiqaLrfcc1IJVycLXEyHXyu9gLsiHEN7fwp8YHKaWodxn6GlwfY7h54Hb1KfI/GcPv3BJNVb/qOGLlpVVo0CiXWGbw2zPp08tgAEjh1CsatGThefB4GJpoCYuylSbPl3LbcrZwhWf2EQRljNlN6sRkFYb4jfaTNrh6A3HyPjwg0DwI5ajH5Noh4kDVP89W1F2qUAJ8VIywqQxDudpVfV8KYaPYbvjrhIesOT6UZ3hy9Rfb6/45PxEGVZuGm4SsIDSdWPULo4V/X4/yPt8ioLg7QiV9dh3OTk3LJ0xs8VIDar0/LTOB5Uhfnf0CGPUI6lIv+ZZhsiE1WTVdc9JgsirPcnZOxv4SpbZ1wlAyf7VevrSJJHxbuBQLXRuCarGWY5noFUEG6ScpyAYQJqUHvDxBej+0s8kxAxwXY5ikztkR2r+UBQdROG8Hi4HKsgZQJrfShyS3rWm7U3UG4XQ2GniQi/hOi13jWipi9G250I8a787jsivRQHdlrRkNTXB8y9mFU05gJJ00lEzsHCORp53tmrBfIWuO8GZDyptlSJUvgDWbF8X4393DlD3X+3722u05GRYK1dVI2iP7GYKweHUHJtT+9icFRgZbKiaXpubeT74iG79U9QLcQsbX2OUQ+hYtJsTdeQFIDjMgot0yqYur4acaV33UKNtGQ3EQXs86qvfw6jmKXZ7qPIIyr8PlFrrG72KqLpBRqptkOehIBvhdjxp79L+iT/H5mZPQga6OTsYPh0YE9TQCiu0sU9x+Jp2bjXc+e/AHelsAMaK1rg1v8TSGRNC2NNIljPA+15jHtE3l0VbMs3l6P8n0xx4N6s2yB9i4EgFd3e4InYlw7VS62To58r/g3hswgJcOGgZM/qtrgeaZHTTPDXOl5V8XLEgEd+1roxMgmNga8eFUBzl8FyFxOG5m516KaRQc2HAI+U/PBiGXKSw0EXstlGJYumAd3EQr41BxiYytMX1M0ubs9nC8UxEr655Tih5O6yy+zcxQOLxqT24ADSyyZk1YbJI8PFHBNeQeuq696dFPsrdAQUsDCj/hV3EeyCvgy41aMPvHoWe6JLdkSFLGLanNgm8h7JWcb++g0FhprBiINaoGeON3iKIDmnRPx+3UBPJFUrLbEtxlZCiWFCvr/YrqUVqsrqpBFXH3ZLW2VUneKit3h2kG1EcwOyWwG+ocv585JsvZSc2ndaGISQk9GgWrH6LFcM3k+y3iBfLiVTsxWE3XQfS9JXGLb4iU+F1E1jjFjWTgFioSKuTsvU2nHM7xmWk4qPk7Bp7hGWxXHeo3lBSqbp65tRnjxVd24mB19MPmP4Vll3Itlx9BOZxIGlmMRasX3AvYVN1hkKOBAEMq9a7ZSPgRGc+2cHFgkT3QbxxbtAWC8C9fx7lOPMraWym33mx29mNSateBxps1zs1NAS/P8hsdyunxsRd0sSg807J9Y69q/VcbKRhjoBp81xWREcuoucLXUFQ2mzieQ686RAfEssfoGFKsQvA4twljptOiVoOBqpY1AesfyzH5CmmePa+ZCcxIFpyDktq7KQ9d6zgJtGxhyA2yRyq904cNZAoKVUgmpBopmD6P2tJSNip9gjW1aK2xd8IlKlWsTkQDNELflh3vZ+TtEbIz71/f/xNpk5Ar5MrgB95TjmRr0iFF9P570/SnEKhNDJBTys2rojveD9Y46/dICOjdFdj90rmQStlUmJatSzLFjk3TYTr1YRwgq/oChxR+jG4BJf/WeUYaKluKItJjzksKdp0Wem9TPUpTDQbF9D/O4gmwBJPnH+n6CJ4fq7WxLj09wwwx8msl7mJJj4I5igHt9SGjNllxyBqPDLph0djV+JfSJegv9pcTWeCtb/jZxJVuy2qeY23VhPn6lCX03oz+sT4KIe948HXvxJoUdaVyLziQ+ZdMmb0IRlme+pTyQRJEEM6UbkPyiMG2HW0MIqtXpzIki/llKHdpetzUo1neiVonj742TKgbd2rmr9ljMhzjY/VGJ3iRSYTisBVAcHu9lxKP0EKV4vDL7oTh81Yfp32zO+dIoyk8hPoalCSJGTVKzM5qz6Ou33pWAyyBJDUocqmaAmc8+6MMMq5BasVtpCH+NDk7OGb2lPbhluqjM7a8g29BM8Ulm64N/zRNJWKfevT5HJve5UmC24P9/d0Us1MhfZTy0CZKs4PB3nZ2GWt6cqKFKBW21PJ2SWQaiuVJm0MGCzUunfLMiGyVcaU3jQ+09o36COaNKsdVzahnDJxFkInI2FxmN3YT/fz2A51S30UVLpuYHi+ZgkvK3YqZt+vttS8pX2y7k1C1+bkcQ94shEBpEn8Q2Od+36ojG+9w2y/Aqv7ydCw08fiqu5ifI9Df/fKa547GLAEU1saI+EVePNOvSXmiIlogisQDVq1bEibe6c3Dv44OkmcZwBW2oan1nXt6tugHBTtsg96LVtUioPwiV0PcZNAHb6jVF7WIHeZ00C88nKs9eqpu0cQ6RRiHr5OZYQduT27Qkf4aqUhxJbcYpduYHVCLj6W328TjxUs+67eBNxPj7XqSV6UQ5NlyJkeBC2/nWyUAvmSdZwP5PWQGXSt+CAO3ayL+uf5JfuF0Kj6gCvJwkmFujM0ZlSfmzdD+7WsGjidDmgCgHjl/2znU2lolFdjjYz/3oYeKXJuK6C1oznlfl14j3iGJmfaaDNIxuhINfC0T4qVIMfsmD8ORSn+XpGPb24KTlQxUrrT11w9R3Vvg3EXD+7wVYZ8kVVunZ8wFV6w19bSYhWD7FDxaS4MXSuRPpAUN4eWZfSnN2/cyt6j6rTf+qspWZm4xs20jzZjHvBit5/wxtqOKje6eA+fE0wm7JAJOVcnwK/qCeDdgfem70YB+rnb8Myx7upoI4dfaCt3VTHFdSGPBkx0ifxzS6i7RNT47LdLbxoo3mv+mKGCfb9fmy/VlNODple9mSkclbI6A3SDIGkXZdh1SDHaQ3YExBvcmqVNuMpkEED1Ksrec2q++GbeD7VfmMij+W2a1h62PkG5nnN/TVJbOGXAlXyb1PIeaaF4i72TSCnvDf7m1hvQa/DRFGF1OJQuQFDJV/GtwQjK2guBNUSoBGxaIIZ/oD8pynDk7J8H808F/n7T7r66OhTyw+EIJUZgExzxNQVhWztWjuLUX/m3bc+vE3IL7jFqJ/xN9I2DB7TN416crEHX1GD8xX0RnKj5yyrtE/WIJCuR21MsC9XWDy3kz/F+Rec6tSihvWdteh4UyQu/9TdgXegA74gTqZDACbfydP7L8UklJtrFMbfzsAEYuqShkxkfqK2b6jxvuz5rjU39pYmAY4q1cO+578j+kAWH3Azn+68N+MZGGg+gM8CYN8JDUczFEFRRo1BPwggjcfeLQEhbm55n45MpqAQGRcce4UwCwxIldbFj0XjIERCEfOFeaAWwsSVf+QSiG819HZL8lHgliBFUmZVWgyj8CAqrR7E+7RZe9ekk1/0+HGNG7oCFAlMFea4cVw88PJtc0mtSN2lOMAIFyzcoeXMoY7CX+KmvzoC/yN1Vm8qwKWILtVZsfknyHYhXhoRxDs8QRdN2neNJ9oBizR9rWlHgQyw8O6jaQERwDSBoaSx0qyrvDLqcww4YhMVj40nnPt854DncWpRodmuuNvpJOnuh6la3YAOr1D5kL+P/+xzm+KP8ACeiE47tLlFIeEaeO63pGLFlpjuNu2e0peH5ZXDXtvBxyjVT9vqgbRwSghtcVgoAVLWKP+TySGxe9NOi5Owj6tGm9g2Fwmxzqb1L0ctyfIstxXraeJMbpn4W1GRSJexRGiS1arK/H9eF8lqyCFxe3ieSD0Q4ExOn4xXw3mG+zI1tEU0eEJbEVZMboTUfNesbWNTnAvcoXJsqz1RsD6++Mwr03YD5HZhHw519XRHGoZFJkBUapdZv69TQN4FDla2WhMwdmqoMqcG0LDTStKXHLsFXp8TnyGfU+0Uej1nI3uWVVDWCDftZQPFvCg6SQlahZfXRXIbstJTx+Vmyswideos2mEZs8z8+Prb3lzpoEUG4O4pbjpY3PoaqRpKLO1ZgQTU5tLLn0ifv/Nga55tEiSo1NDftTtLjlivlJ8+F0N204hBivXZaTCsDgZz4h0s/+oVcWsjMasEbS1qD3ubWRrX8raX/P5aOhxEaU0XvlJRy8aW86e6Mjwhsj3kmcbyB4pg/1ARtVpko7n7NNl/7CRWsswkFgASLp7EAzkPHVCQS7TMjmdzSbsvQGohEUSpTWpDxcYuwnDFglVDj0Yo14Ol1/EdSkinkqAqfY+IyRpKNBVuDKZY+fyC7gUiYcLDiXXW8jP9E/7znvd9StvHM4Bf5C292fqxcPtXs8s6Al5+k5NjtmiC2q1IavdzJnVd69ZficUJyauByvKzAPCFM6+zL01qslz5mwRbw2cgj5Cm6kaJjZDzZL3GpPnnty7CA/Qhrs+frpgu1SPIl0vLZ12cOIZfSu03HDgPTSJb8yjqsBP3CSAfv/ktxoIThyJFQReGzV9czhUmAcugcaBLvBgCUJvLjLpVJCcxWdfLCD1v3cgKpSfVaAd51EUTMwD66H/46TvUAFjOYr1rdfVG8a3wvit6nE6vQVrxW/1bxH8T10LfzziylaiDYUq+py3y6kIZGjlhEqVarltwOtHgJPNCN54UHNi8uoSJPS9RQp+FZq9VMfyWlh2cCradbdLD5+MprhP0EBKIkBjR55oVGU17zb4htsYMryqBFgNigYPGIg+GU2t/IOYmKWfCbefKvNSsC7aky+FuIRyj3s1WxRwXP69d8TPjysaHCaLcU3YSuXWJQ6VZkbVgenDltWMYJRZeO4FdZR3S1AUJMU97to9CBfMcfWubGQn0CVfE/aZ7Ba8ytrilh04gU65fon0DnG3pN2eTWdb0HlDxWoUESIOXz75HtLOc/seTGNTSjmEWJ455wHRzZyUTTXbNOh0WAgtYUANWxOBpPb2jmRcAkfgEQAQOoZqLCdHqrmy7CT+nBlhf5kxazOBeTL9H+4phQ5ohirGL4w4zQYdDD7i/r23v8Vy/hc13aIEVaVeWokIh2gykNSFnDfTCHAa4E4479vkzAA2f8CnOf9DpeqdrY20sNWcVC86hIQ0v2cnQsYcybHlyh8p/tDAzGUhhRysWavieCqOkPB9sKoEjHhlLueLwRmvnGz+bwlEwAvN8J1TG9FAfdj3s+4fFVrn2KhYDsEICdeIQ+3tguRY09c1PJxqXvmBTldh3bMTsfcPM7PrExLqvfpBpajhXcOSLH6wy2WpsGw/82I1nOgNFKUeSBhN/eOR7PP0OOXzdQM3zbwJ5fs5I1IV0mQh3lqkQdSS5OAFu8E/j9b5JrOOF+Y8cPo55e5iNNOzq5tYwUS91PdzaX4elZ0abDrxJ0qoz2IJBZ34RTuo+q7tdG03Ez67YGPEG3B7J5XCZqB4BUrHGiLq6rV2VuoQ5iQsx3307WrGro426flfPujwJDvrn+1V4TAZmM3MOaGz6so7N7qePRk2zbrINDeSVy38z1yCt7MSZkFFvZUGtNbd58sYSZNIFrGdMvlfE2f/tOEpIPcDi9KioivF/UZ1/uOKgDgMwWVN2LmwBIa2G5SmLFNkYt4LO57T+gbUPOXp2AtOuYkX8UPeCj7byg2d6lNgdeBSFCxDSXjULLHxd7PRUR9KZFG/Mlu5ZbXCEtDLur+CvTOUEISvzOmoLY/Hxm+llcwdBX2xNzQk5gnuD7pUPK5TeAlDnJ9xCkfNxIRasACfr5EIOR6lirOhcuJCc+y3LpGesWS84/CAw79azqcHq+uX22fE66ySbgjCpcwLehUr6jejVqefub0cLDLUTyfYjBf1m88lKSKkAX4QvFbivq8ideWOPoHFzhGfP3/L2OkFmar8IPRcW/R9d53z863jKQnZC+X2GOevcK8XYCw9+uIGC+nkH3SDZTYHxKDKOsshiDzpkuLDmdnPKecBSeg2OSbTpoouOGupysdtQkL+qTfHg/1HEPolROnTgoDwoeczwgl+geITkziP6+BbfTi4rbTn/yl9CdaNdvRbwvAh63LRQmPPuPXHQ/hUiobglZ46W7Pn4YMaeTGEAmzQbkETCI48tUmjoZVQvWio5bGqYeCqZGydmDy+HE42+fVXmRJhY86BVPUmwsaH+lNkrPNN/An45rAGlZ2Y+EaceKkYkBezlDAkvrlVDz+4fzNZGIc8aNbHvOQniQmiRYd/g9Lz4I11KobK73QubPi7WomtKe2TYvXPP+jeKFc9Akvm3PDKmCY7YuaN9kx46JMPUEOflfdoGakQO+nBUKuxLdp1DFVjDl31r+AeAqwKUBXk5iarvySROGFZmAigXqK+T/dI2M9FgwOSEBoG03leWr+asW4hPrbQfWJ+wdZ4iUi+d2O6Ug4YsEtLDY32hnUs7PEghtVulO66e7KVb0RXCRHQp+H5e4mndXAt7wKsQjjitk2meeeS++g+mhhPRYhdA99hIujO4ml9DY1n28N8KqOd2eOC8+jv0FL7JaCK1emw+WidVrkB64Qxjj0gJ3MgTqG0JS5BsEKzg15DwDg0TeJ3sgkJPK/p6cG7Zjgo0F7+wtge7GWXuO4aGY0y9zyZ5EklfAhu6HWpLSTmt9wB+vh+diPljXwEXYRWQ+zm365xb9/qbsPbEqUxslUUk/VgOTnTNqG9FkSJT90lij4RwFGjyXf+CtvjjKaWqC8L0IZ1/oVNasDswt+KkJScfbIfkKmHgCDUYeHWUEh8Uv3VPlGi4z6HEj1ZDnVMVnAHkMt22u5zrTfjnxX9iCr3wzhQtw81pPAlu9VgaQaIujdtTkfo+K305NfJwJSbjGKEYawQKNyOEjpuDrmAV9Nh6+PYcipeK4GMg2zVv9XaUkiCeqSpJjKlmtSsLoGSz+JSF42lwssZ45+OMzZccrYx8ooEP7phkEyE9nI/YaT2C+WSwuTEUUAJAB7d0Q/zCn0hkLvLJieFbi+j6KFFnpdjDx1pI20ZCgR612+2hdWLH5y7AtGnuxFSjGmjq/A+PlIAMRyrN76n5qgNXstjQ1ESYitM4H9PRMpifd1cb8MlmykmeUpLlWsfDKGofzE7gcxvIP2eV3kx7NDbwTWDdUw99LIiYpahwSnGW6tDAksIcKab4/kWB1tRn5mrgmniUgJr9egv53ff2MUVYEtqKCcWkEObPHNHWZIYFV5yF73iJl0PuxlNGNgXH+egHWMspQq0LSmEjol0160nkdRNVFptP3dkh4hf2fzFAbnzcSOFp16cahby96S/MeDFHE5ZsumcRaZD6kdbbrr/8SBbjphrYO4NWY5Fh3r6SnSC0qQ1WOsmd60AVpLeH+vI/xkw7orgfsxX0pWmbVcFGkt9lq930QFGT0CAeovob9urtC8+Rl3DELdqeXYqt/ewBEc3GcEcFfBshvBpEFNuuhWA2/4Z/7DUGk+0CuAphnCXsaAOtsNOsMP1FkwhENuNzna22NK3zVJr6UN/fuC0tfyVNYAq7C+9rXo8QGnSnjD0rXRG7PWj1Lu8nTlXtex+I/FCIwhmSsyjfPNmNKVoTMRMUavcv/t/Epv0Mi2uilpEpNu51z/wY8MsZ6+RG352EkbVqecwJMssLVJrtcDM0GOuqfiLouls6BfCjJd17AHt8Y9bpynJHjy90h4v2ohaOpJYZlSgM02YDz7U6pYwoe34/uAyM/jlN7wvPlbNXgitp4B9BWtV/VYetBAUqXJ5f2xHyK+k0QHZX0lBe+DP7mISSqi9HqdcUQoEZTU6rY2AaTfLWASAkBQ//7kUOW3xeoskkrD7AEi2fU0G4lfi0tHKWehp3T710HlazR0a3wcsekPDOzbFJ94AICd1AGjn3YJkxBL33KsVWd4CW4W2ak5D0EwuWzHM0SiQx2t5J1x6bEXlze/xQqUPmbLdJ46gEuyXjbZG8VJUaG82ZWImyFF6jO9PzyzDCPeugPm/DW2lsf8X5YJe9qfNpMklYroh3ZP++UsZl2s6bJ7k+QUG9gQ8SttOxV9L/dootzV3f+Nu9SxypdqeYUG0BolT444kbeJxapEZyg88hEBdH/gSIp+3dJzav+G70/hSsscDys5XUZMM5sTdR3PY0L7JZGFv82xtxQc7M1cNlCMlKkaPZo2edR6C7jPsWVNi69dAd72AL9NO/RzCQK5FsdAw2l+sZKwO7R1k+k6XzCSjgFJ4HxNUwZkSITzlEF33aUcfff1zZcU++2G2u0+6QnfrbXeM/GogHkV3fpSUfhggDVB/5Xp115kXyKtUB+VvoRlmfIlqv90Zqjiu4tsoXVUJFrvvTQHH+dt8b0QU/8jbo339lvJQWu0pqUvR8ZKtxI6cjvnvcrLdmLbf0B7Q8WYXnmzPPOrguoXY09OmhBp5oV4FgDE7auLczIjwtrGgOy1Tvhj7mCFWrt1JI8wid9Ac3phRggzh0eb9lkqI9D6l+JYqHrS9aHoO69ayzz0VeV3/8zVBA4Dcr+ZwORo+5hchu9jkSDuiJqxAGLCgD0wBvAYVNAzTUdK9ff/mHqn5WXe3u0g/65/1LZwBa8GpbNT6UiUOMkgmcfGmFnGBqJNx9oO26dwO1hLaHhvee60kTIx2ujMcWbTHU5hNp3pIbB+c6T+2O3eqahNvhPo1iefUUXNdPiDpH1E8pR87QwxKU02oHvmJ2IZcxj3XBm8qbWLeGFKFA0aZxa/CmDHMiwEA1VJKH5g5t44eShcGM5gVHuHVNIK7s45liXQ0djbcN4/W3znZE9xE2cP7q1JnrE7SRLBpvRbkKgbJ7aVoJCDZMcTPwR3P5yBUkNO4BtM/Vp5PMwgVrdVYswSfHAsRLNSnafcWqyXD1tNVlc9Rrg/V0eRz3nCihmuVRTxC2CuyMyLYYAToBQtATK36LL0EVPVtuBmil6Yn78c/ua9ZeZSctr474kXnVzLp0/OAO2BmISjlyXpVCZkJTezEz219YEskD5NSFkDcmffLks5ewioS2b5w+7TD9DJFZMKXShZQoQGjdbvbNExeuxIJKM1KzpZyRqONAkz9aZUCxP+yNm19doXnborq366sM/EC5ExIBGIW392QkN45E16maR0U0YISZJSf2jwYdiujXiOP9f/pIl1FpYkDEqBp1aKcsicgFZUC+lWoP+q7PJmnO+Z0vRMJRt7BFzKZ3pT+96PT4wTLVeOyU/GASnTfWQT2aBz+YMJl23A+lqcu53L4hMtf9TKd9WMm/Kwey95jSxuBEGzPPGou8BlBcZXsGvHJ3jSTBK+823BfJK/R+qqOMpAaTi05Eq8eGOGhgLi59+DzF9sZcwCHWPUVZQ5rHIDKIZk2ErM2X8ZywV5FXwYQXHrMaDMXrIS8MLT+caA1SQ1zhlpQwJRrRmNazte3zsvfeY5pmlwgX3ugE098GfTKI27lzt3+qCAy2AB2I8JTqKgOu8L55TQ151puEk9efA+yvxAn4ZlXgbWlhSS5Kj4drt4hpK0MxVLUAMNXagFLF4xzYSdYLTVgFWBXezGzcgq5Ql30mhieTiVs9bLpADX89T2uSNMcIjePwH/1lJrxQQpOMfwca+WakeGE1HUlJkoLsUoDYW4KnK0pYOcX/DjDz6NvIlczaZApVJsKso3YhnCgnX0xcqLHI9IkDVtL2lYCyBfSaFm0h3rH5AWS/AmnNpAmVt7c5iy5/ozj06WouJ0EBM+0FAHugzfuXhDDrcdOo7YKa2KPKNsZ9X+rodTs0OQwHAkwLeoz3aZ0X0FEpImL9X/IleeLx7MX3H4w+peHM5+Wx8ahwnoUpXnMGag3zAdRZLDpkxnttfDc3DisHtrG3/djtptUHaz9JFeguYfJFHVAQ7fDPm8jRLUHI+sDD/ik2Ertv/xeVdivDd4VcHxWb0ZBw8VuT3TA310EX8Iyp7ZWtQ+GygBtvuNzenSbQ2xhkxnBscFaPHEuAVWVW5hRdSgWQx0ZQ/svtL0ZwxEOZ0zxT4Vnzk9F9wSiI52y+zG0hNx9DqtryQ+3IHV87epPiK1paoLJylX4eF/rP2yZQbonN9cZNcjTepNCsfWp2gFe4HvFM1vWBhAiisbrrLANZhxGpgz+4VN9xMe5TSD6U7F5RpivvyKSQqSmKmBKwNUMzM2GDSia6GjpBZWbe9X7AXt/6qnqyb6S+2Y9QFyVM3ETqUAVCYlys1Bpe8puUtswKji1VZzawNxWZK0ALE4RToevruselU7zp7oybO10j9eA1mRgWkJspNj0KnGWp45N78C1wLTiOS/6bPh/bxsj5xwLxaWYYHdND2Zl6mZeqVDzrReVRCCy8W1kuocIonWLEigSSSRwtLM7WvVVv+If2fOTYxz8rz7m1e+DMcHBVBgKm13P0fETdU1ZjzZLAlBfSqwoiyq4JNvHJxPjZkoCD1CdEpW1R4sDe2XJCNtUBrHXKa0R6qJJwjqsPYK7FXWVtvwJvvxMzIg9wPvv9QdE/ptyWaMRGR5pyPDAA6sJxTW/Qr8vKQEmCm2Y2+NNWwBte7kLDwEnyff9fJNkfATborrY7aar51dkxQKpmhWW9JV7NlRHQrypwbmRhFnyFTkmJP3fLH6NKGCNfLZ5ar5epplj8dwiOYE6w6IxzJxebXvNSwNhLjycsKXZYsvqg39mFV8OPbvh92DWvhK6qJDmD4JYeRkSWpla5omLlH9AjIX79jUd6OvounYHtc8wIzXBgo70HumvVX3cf6ZKI8Z0XYoIiJzL64duktwAi2inCWH5Nb+FHuxp1RivuUYGTYt2ZE7KgAOmURC+DYeSegkahxyUITrPLSSYWKMUdxuh9H+4c+OW1JMvHAlZBW/3LORbhcQg9JhxOF+j5YgqjqOT9SS6JeaRebdtQHIV/BUlnI3BFsG5q6lvo7iv/1GMrYmEQ+3XRp4La8a7EvppO7N3D3mumjF+463PkbjOUZs0Uro90+xmupT7LFdTe+sO9AEfIKx6DnziPwXjyZrttLI6KPA4i/EkD0tEH09LWD9Ivc8TkedtgsAwcfG3bi6um9ctlk8kh0m+Y4FZNS+tWUuBi6QScpcwqCyLsmJ/UEXMi0T6uHmVGbXnnPeWKFxe8z74EOu4Wv3Jv/Hfj2cMnZTpE9knIYrlUKRUQ1aXhrFrRjHx1ibJfoWIbWBwmvdQXpY++HqyRH3xivYCqr+cse6ijMrFrBp04J5pdsMhZhSjrXrL+7ciKjg8FCiL3U4PTfXpmEGHtJCCSLhc0cFWey45qDWNj1r6/18tmbTGSjVWEY+Hiha5G/ku1cNic2JEEhR1+rmhV4dRgKKAo5KkHMCBJeS2k1FKqKwOxWtwHAFY3yrcpjbpDdDOGrRuczGdzcinZGiefqir6yolD1RVLb2cK/oymSh2A2WEwjs7XHB39JJAtwNcIel5cTuHnhlOHTlK/nAGoClACVWJOj5yRl9fY6ORafUvBCWWx6QRWcphPAOukXNQu0m0CYfwBBRrNzEioNyyRBjH7AAR7ID1ev790qWu7fviGFBquCA/9Id8Gin4Uvb2+CxDw3wZiUlUQBBXBEQ4biNKfl5Vh1pMDdd1GE8OrrS4QehqZRUsMmyjmmkXqmQNXxWhxrE7uZ35blz3Aa8ZzYVWAJmESyPQoGBzuYYKapdLrwtRkO67DKQdr7WyRlUMBH141RcR+WxYBz5HkqdHVWow+FWgblseeJ6ziZl21oYx7nZN4bI2Xr9DBd5S0Vs4EFqK8YKt/Q2lhui6Wnqhlj0WjGI8ZB271lTUJX2fY10q3j4YGiAHdogHh7W5JNJtK1JsHEFJll4gBA0T14jLKpNBol7eg4DUa+HkOEpXIQZHsFIni6hDg0f6lKLxD+oyb35rDVplrIPMKNvPTdpwlPjZ4M2zSAGlwtLBzrKPCdkorE8LBXAZ7Y/ftabJFiAJ04OgrOjZrkYrNwg9dxrZw3eCVrxz/yQn4wA3j3j1A6qb4HzOJK/UQCEyu2BAqCzxkVQMk89pNFIxTzfrElSi7RCv1MdmEOJXsSAnutCaaJPlhFec5XapyVsQe/PSRRCn2wdfEo2RKPITnsCZPNGKD2lNicl2eqJ/uEFwuuU+vYtDjKqPx6R0S0WkctxkXFjAq+2zS2FC3QscvHbiWuXAMyFsk1W1iJt0YdN26ONAonj0uj4e21cYFRi9NQoSofM9YQVpmZeQt299tBpB7wMjpaWvM0texgnmSsMEalRUkhkVt8p5VAqSt70o9/oiwZYRH0TldY70JVI9lvfMd41D+aqtO2m4JgW72jIVwweD8LgbFmIDXMEVwXWAbYQ54y0EdgYigliUjvYYdCo0pXC4/SBwcQL7+QY6bAqy6J8WMT57D8L1aZi6kC8AH1Ri+tQSrimPmD2K+m5gQoJrfS36qBHoDcFrXj3y60tYUBg5UOAnVXajfVyahfkEOQb6nhHKvia7oZa7BTZC+Cka6D/+/OP3dflm/o9D0bPA0soCHar65krQrD/xiA8htJS5XH+mHVy8Kglloa5eY7eu6xhGTBQ2oUVgq1obiBdUXeQhcF9MyVVbmM1JT5AtwSEgIestKFS4YaBEwEqMrkRqlthQKCGFUdhHvZzW+z2j6qww1oQZheGfU4n5tSKclLrPAQ6McpJ7jpZ0+TEiQMgj37X9SgeuTUq5wA23tnimaGVlMYgJb7MLaz1tMNguTzdS5hB3Bt+RkYZ068yNgre0WevKv6zOjJhtd4NR6jBl3Iym2gcfh5Ud2u8+3Lp9S3ITs8BSSBdbQrHCOqEatCpAPprzZIwpD4Nr/ET5RtvZZxOpe2MTt2djTxf+uDr4sTHnub4CuDHekjAnfInd1CrtKZC5y5A/NuPSe9oiAwR7Gzxtk8ZteE649l7Wdgqujf8cMec8ZqaGeHBGH+A34Gg/2cWeFtg7dhIzaLsFsiO+tNJyBN99bHeeBBJCjN65KSTk4MY6Edetewq4W8d/Pk1GXL/JqhoV1WEFieNv+mqHvpQilNdZGGGOR4vtRI75zVU+z8OmwhXYVMHbT16qsidRqiQHoouWdxrnvUYwd4USIi95wmNen9nQEBP8Nl7InQf85F37dIWv7rcDXEG1PJz44zmUbAYcVM49m3tJ8ZzcvIWqHTR4tmcWfN5zTSA7YBr46nTGkrUafGKl3wdB1Ezh0JyG7Nzg18PGylfLLjbPB/s0HLkFPEa0enV6CyYtTaMCgK8EIqoBKX1A9c2oBXv9PItXbuAJnXgOCBe+2vO32W+eivZtlLGKKF0SmM1xRhO8XEJKnme1OoNM55tYUTE9314leTfCPnLAkM5L9C2aj+vgQ7UwCmrrH+720Vj+mFWyVCgP/JLXOsKZYtvaqkg2suTQB2/INnX7JJOz+epXvMfFudk4WOmbbpsAPGzBI1lUPpW1QUgGlP8NOaJ/0/uLtK9OIIFMllX9fgb1MVmJgt903mRbAx0GzDMVAawx+B2ktwkoBij8Y3Lxp/FhXpM3mrmFLrxdOUR6pQhKXMgj+sP23s1dG/kYZbbJ0sCNSIG7iFcxHnAEjZHEtIoJKwSZYaK1eeWYqiNJJ3tiBFxs7IbCPQFA/U0i7IbowmZ5WImYycXljxGDGk46O+pJfgZcK/y/+0OPQBoOOtGOHOU/0eTDTFjhc/rx+x4LQsd2BjIm7cAZHFN6PDrKA962SxTDua2NqzGR3Ya+LW+N7vNy+qh60FzoU5YETcoF7JxA+k3+2QpJUIUKUfI79IEDB660c++0XiK5IJELdtMNTbCQiINPRJs4W9KbXmfJdDwJBOgoCzqJg0WphFcJWzjuHtl3KvN2/0klaSlu25KMvtF+zbWJWZS4fkYromt0VHce4RjqNSug5IuZY5p1hMY5LLOJw1Oj6MYOs7huYHBkWSUdGLiqiJoT018xUNJJwjxUV/dcEsiAfB+k73a+4O2XM3zBuOWWC/CYlJSQfXjkZZzj0D0ymNyeg7gn42xclQ4uzICwgqWpusOIsmYGHqYDghPjDTCA09Kh8dU7O5k30XiZVW4fXG+2116t6D8T8Ma+EjRHdYV7iUhvYHXoykRrYw+8twINP8aVyQgLjShoJ3ZPjjz3p2gQ+SGsZ0Y8XnAiEjLIdiVdp0QQLJ07mG0ZfmS8I9uIK0Tlv72NnDKiuJ2572jz30q4DalZwFjSyijtnXQMzM82fa6K9iMu5Sa7K8P81wyfFuENrOh0mTkGuxbmCA5QZ8MOeA1fEmIlY6gdkMJkVgecQS16jQWIwtL2F3JXHQyz5gMISUT2uYr3Vyy9gdSjGKnrn/dtQ5HPjCTWAG2xCU7gWHzIStZFpMSxL6BDQtORxeodOT9Xgi6UbGw5F8NVmUo7ohs7lnFksNq53C5Pq9WKw8yUAxXts9VCn9eKNAaGf+KCsyHCwA8c/UoCMO0glDC1CjOLDp20I9VXND0IuDCqy6NS1bn8+iFj4Dzixe5ABWUegTdvH462zWjtWIVKzzg47vrscTh2J8VPEWDaQkphTqwuWGyIhefzyVRmD/5+QNWJ65WjUynm76SpkqCgbWJBquKfkL6Aj0asVQPUoxQ6hQqXUrL4JosxtNFcri/cJ6sws7tYQuwyDCbPyUT5jWrF3CliAAaupuaqByEjGgtcNyh2P7uE87A4sUzc8FQORxpFhs3r2jQcK+hEyyjjVe1GhYkOFWRdyZbndDcb8xcoNjuqrvnZmxFTS9Yk3jckd7hkFtyXckjwo9gN7WYTekAFileTmIW+4zn2ZVZzg0C3t7Xx3PxZTvSjK2xKBIc8SQlVuPBKbb5idisct4BEoiyn6HSiZITgg9Q4k0i7ZbHw7omLZ3V/MJVOo+czLYVWpUAjJPC6c0DeQpsgHtVxCohCh8Qr+kPs1YPmd+p6tQbuCFAa+C5hoqZTyseBU8CHliiYOK997DLYZhaZAY7v497ACaAdXeaDz5MRGT4QaSq1WDX4YwOGVooSFfwjb1m6eKKxKRjJx6xCuIDEk2Qs9+fq6dfmrYeyE/B1HwpLWUVjhB/+YGZ3WRi40iIEe4prKITb+u2zt6V4dPH4KFxbf4FYd6qmiDahBSV2ZZGTpb1ttut6X3c2GxIVF0Ze8FDXl14YCKx3PRClDK1/9tWJmuW60dEm+O2SSDTHRo3kIRcWM5Dqtm0/VLIoALw6OSp6kxWXr4/xNG6A3JGLmNhPTBVv3WbjJiooQv3A9zi3P5CEsJEPJEaVJaTy3j+A9hIVajYDGXw8klX39tyESnw6g+7RJlFNee8FNxitWdfCJHk7SFVOqzZ7MFNxKL0FIhkM46MOrqM6XdNns7UOjFlA/G7jUniI95PUGm9eSbYDf223bdBPZGgegI7rRxnqFUecssvBcTRuZpRtaM9Ec8fjXMF5Z1PrkCFuXgRh6SjDfLzmxRPsFb8+663KcY/SKzQEGKSdn8lWZYymwA1YDAaq2nqu5FJgrD0SHMhb8njk6l7hZ0qw7xEivzUzlt/hFfl8dlBX74AY4sxC34a/nRIuz3USL31EoHExAv/EumjHUJoUybFYHUc9liDExbymxfYZIF4OIUfZama/8+GsspndfRqnI6UNCkRJ6CDfKGuLuDaXqM+Mfi1TOOooBonSfuUyVut6da9MP3GDEri+z1k3rCLcFIAAgp5lJg6Rr9aFws3UAs5FlJqPpuRbLbKBgFp4ezw7lytBKAIEApWQ5J99OjM/wW0zhzp7yRSulT84+r5WARZjL38AbVsMPcJMhWFXUZ94aULt1POOg1RcZAO4bewcbEkN5y2zFImmO1oy+3HJkFoTJD5l0Bz3W9jhujWN+BGaSn+ywLgIlMitO+Hu0/qdx3WKtWQZTlL9emEmAnZdjzDCfMHX9gEyfeL9iw6PxbxNpQMw+o3W6fxM43EzZ5HkadAzH7yMbmEt8SAFyWmM+FgFDUiyI6GkOBA/dfVogtr91riZQ5WnuL7IXZu0wjM/yQcVzcRq+gZ/MYG0xPxNnryhSxR8rHKEv2vBaufLVnlRarNZgSi5V7bNVAbMN1bW8KUWIRyrI3PMqh2B+U/B/6GPeqfDZukeBgPj8ErRGlw75+TLazIMPt74CvvVil+yD0pQvuH2UP1NlmGKgK0o9jnzd1+Nb3ra03Gzur1ISWZZaMzMZUS320u92x2ZEdkYkG8OJZy1RZnUeMjTZ3HHwfzsXR1Aefsru9ypbsZWGLFEtCBMB9/qr+G65ZtWBhEmmTW0bHqN3AP1Xo2dTypWZqCItI1K5FHRyNUwrdOyM9R1gz3iTxuHeNfaKlMhR/Ffpzb1sI/XRkKz38D5tLkCYkXb0TA7B4Zkir98qw8jUDNfPmGMZje4hoipwYCL5dCGR97q25hfv88y4RVHCQrTuZxjkVYy2EyQXGYdS23/9P+TiTdX5xNVtCpmGSbYZt3rv19ud82pOL1N12tztnli3IuDNmPdRuiJaXd4ZYX6rlhhd+hjlxSDyTH1TREM+lqumJG3LToaBlJama5T+GQWnh09m3q1qlxM8ZsDAoX+fLVRpYzm2NOgUi+jhLhy+fWdNpcBXRLE41OeiKR+dgo5k3+jv7/t0sSkXF8Sm/Cc2os3pIwfFBXdqiajdNdvc+l1COAluRtyg9JR9PJZ+jJrhnF5QN/CosHo6o0yHT9ox3SHaJ0G2ePX/hl8U/tSQ9YpzQttZSv2hRioBjJenGC7BZ1BeavVmfyBINjsY3yjGnayQGEP9BlZOvLOiFeKH/wfg74ScJGkazzwgs7yJTjKn8k9gJcWEmMF6bhUDoJ82PXtJudubt9R3S87dQgDD94wm0k3FaeQSKI3p9mUbyJWV5FdZf2TiX39xcx58iO1/5VYl5mcLmkf1KPO8+Ghc2WAVHkPEQeiDx/nLDu3bECuBgj2BDKd9TXFI3TSA4P6uNSDB5r9V/tSUpwsaG55m6XTjrDmDUFyqFE+HAHXg4ds8xF/TqMBJ5Uzcu8O5AVfye80LOqHMe2MtW2OEkdkk5KMRwiKwzIs/ftAIVH/GkkAGEO5+/8+xFMbMRPhU9k1DbykwzOn9el1hfW54MznYNS4I7+8kE9No62UZPMRkd2If/BfewIuG8CD/T/KWw2M59BBVbRX1jT4sWVpwZaEecWKrvZbo0JzoiSjYpN6N8SGeGVzZ3FLq7iw/6RIMEd/SLT2vpW92+HR5ogsqoVcmev2QZZBipB1615IG339AbjcanlLAEjvhz6N5rhp8fdbTWKdUYRfWW+LQN/qx1tWoabd71M2wCx5mJMWDJpfxsaXwTZVkJYPG4MB7mtk/ycvZkLHz1wB4BilQPGKLslI3Ztn84yfVOeNcnq20VvuBn4yz7YV5CiP4rFOkVz98jJ3A3QHnjI7FwrO1jLqUEiqwjHd5t6NHXueivVN7PpDq9IENDckQE9RGBsKNPkaGL+QWRVFEtvpnGhl0QjU1+YOr31u+m/rgZ83ddIxuL57coYn/0tfE96GutjIUk2yJOi+zBrTSse/yCmb+qJPTRxj/5xRyDPewsDpyNg9ozoK6CNYMHaxP/N2gy+X1qxReXisGEvyPIk4PQLiM5Pj9kq8MIPlY9UEf6ZAqYl0QjG51f8WxDsq0pd8CgYWv4u7WEGUldztIKg9k4mSnV9ktAlpsRXRU5FBBVfqu53JexfcgfNMEVU0BWoOHUW0eGkvFd2WEKEf8NGH4AcdfJg3NzJDQxRKEJFlRYhcFbhgp0LXdfGdyDaW6Qk7sCt9eC5NQ9tS3oBgeF5LBZGLYZgc5StuXDVozJ6nLae1sRurH92Oa5UATT8vpKHAR4gEFg3+HNC1PO5ywT/IIbZhrNuwxtmZAZQFHDGMwNcp3+Hl2/Zay3s2trnAorVYmwrBtd506YslIFKA5gAAbosoIc1PfQ1RS8Z265LJhfBL3KeGq556sBNYUhePHhig4ypoJ/xqXICiOaZPA+uWzPIeGy9QLczdAsQ0YiiK02wJCqre7GstbOQSBuVqVoVXfkx+UDcrEILXJ5yLmGCA9Pt19LOwaFk3y/QcGigKsbcBEsE8DB3rg75I6Ekev7CapkXB8bdAdCi3By6DphB8gF/+ImbN4kcWMPce75vjAlT67zP20dEduLU0rZvLB7OAHbs8TDlpDfHngAwGS8tgHHmg04V2o727S3AKwc+6GY04UI6CzI8FqB5mE7PaF9paK3koXmJKTBSkkhRU21vf9i5+iGWnDe72/3ss6TGDuiVd7FRe4c9gdiznp3bRAc4xJjLZCAkCsvEmqnLv85+kk0TGMgTLM/3DjHouTFHvIVKEwmEw29R5hAa5p00o0b+Wm8EBbzaGyhaVg96maLcYNl/UR66+v/vuuE7ZPZVZAYzXlpoItVMkEDy895GGInI3uLVo3oWN7wZhA2Jge5zl8XM/5w2UJAm8U5mFI0oL2i5+HtkUPXWyzAYpfqo6+jv5bv3j+PhucKI/IRKXqiCv9c1tlYXmF07C3sMsslFEQ8b86pl0Fejm+9dyjMKfMDeJNJooBbBQYR7Td6JhTYZLMj2KYbBZY5TY0kVFD8HZnAubUes97MuNuJ/3GA6lVwevVzA51cXX7tNFIAROxMsR+rnGvcGVe/dE3OcelMil/DtebGuBCS5Ud+OG4Iqd0ICFTJAE44SSRfeIekfdOgpWAJqyUwvYpcQWdX9e2YD3A9U30JkStj9uIDHie+Xm0f8cVUX7F7atVQKWlJG2coU1BYdTAfhgCFnaSKd7sY8U4v+4lQSefbB6LSIC9o4cOpICWridUx/Ft3jUWh0Ig7n1zl20uWWa0pw6EMkxzDGFonYx3HirDI7eWhry6d4UT1KFsrsrlcQeOErQyw1npvwLYKj7+j5TNsMAB4LCfw1DvMuC59+ulFh2nm8v7ixbzQzcXhY2zXYTuF4c6kVd5UG7Ay9zPFpXL5GQbdlmuTBY5/ThMBg6Eg+qbiYYN48PH5ICAmwpGE/SrQI+nngL4S8QhA6OH8bVi+fxpZ5gnzPgcKkSEHgO9Ls+QOLFbtPmY7NU+tSq0laBB2XWfonqzJtqGevIJkZn9Xa81icehfTTLEjCWIKRlQMuOnXyOPFd9y9bCaIOgrfXLAWzz6pKpo9rfViy+Du1Hnf7DtMYZ24QuwTdw5kpiC49bUJ7kd5wDUa4F09hYeolxy163L4uLLUjUTw9eTEeHd7oXuXuwzrCEs7BNrZ12nbAGycCk5TdWscYF8UTaQzY5ZdMQ78wfwKNe2Mz0pZAmKlnHQ3YmLNVPYQgToV2iT7jOk8y8pQddfTBzwNGxWa7jAgK2LHqcr/Z0i7f5lAl8s16KSt56xmTsYn5/dD8fkUWDYDQsbkhDPHAoBHm7yThWjEKgdhVklO4721dMycNtZ2bxydF+Tl38NrkFrskRMbR2Z7cqrcJ/dTsor7B8kOHGnYt6iLQvo0m9xN+TpxNQCOYfAq3BoTXGjQV3vjm05fH97OdkB3yACmbh+bpDJfh7NEzCIOanWd9oWpfLaPQsx5kav5pDJqjaB/bYsybQLXH7d10/Y4TfSsQibq6rh2qGKtQqvtfGj+FYNP9WuaTPyBZKtdN0P6CzCTfXNlC2o5aQ+527GktojUnexwlSkyereLULoAKj1Q9+TIl1CS3lSLT5SkhambkITYWzD6NmWFxNokJwqnIVGkDITYLpKKulHptxsONvKrkhcylbEW2XEzC4nTYWLd5w0UgIZ47EeEAjZkmgxeBf6zz5LHA0tSKHufgvXXdqZIh4zqFbibQr1X10KS9rdtNTubZDHTQhG8PQaveL8vQKc2wWfNDDGQi+cqh2IZiq3LUj3osEGJUWMRY/3LSlTi1LfuTPiaMscfBF2cBcZM9Sky6lxMPDEoFLoM6Li2Q7xFc9nBmN3OztePnBAoX4Vv7XVQlj39R7jzLnoJP1WQ09f69Q93UJSVyMRINKQWo+yHNDs+uOuXmQm1FgLBpKmEBGceivRG3rO6ogcryyBkfURmE+aJSDRDAY7F3mIFI/E1lFaUEZmD7XzPR5d02SDFZldlNALU4GdW0qZqxWROwExS0Zhk5DphPEcYkCbb7Ov0bXf0VY3q98dqLArUySTR/4XnnuPHDuzUDAxOlsdzMO5lQ/IZBin58+9O54HbnNJa6AGeDLZ6vAJn1H3vqV7PG4dX0BlbYSrJMnEpB7N5uDvv1v6lJiBmtS+YdouP0+a6WJJMXDAdXfaSQ7Xk37K8419otFMMC+F0d6snS7WwdMqSjSvT2jggfxrTOQLFTv6O5OGOBHf3kqgTX2IaUOrva9Ac8SRl6qU/Nr+9l0IdNnRAazdoMBKlJek6yjUtUiAs4oenS+kjl0rBYZyxQsPys5xlDcGBP/F5mBhv2hxGWirhVyg/Im1MTvTFHYdsKGLsDSUZkkbFhZnJmjbwFL5zSm/s4hEe+GWfvChgznVG+tckO7koad9xcT61+c9Bu0UGg0g5sDZBfn1Zw1cIfffEwNVaXJQj2TLVDFkcHpJmQwl099RwK2ClPmZYfZl0apl/ygOdtXKF2EIvGp+AZav62mhWg45qOXRRC5F1bmtWn7OnHrANL/71kb1UjH7yTa1Lj5HllFECzUfiT4sZF8zZfEi+I+S/FswELPFHCO0rMqhx/dl1XFbJid1dTi61Ck8wBDtrm32BOaWmEEGB8svSlGPtznsO0PlP1RbA/bNV1wspum6Qvy3EyWE2jfa0Ylc4yVC2VRaAb24yaxVI0SkEDDWsx8EO5cY9dcqWYIqKh2HdU68uXP4+JAQcBxWNFyytTypp1457XkB7bkTwR1vWz7ZLeiy5JOkdW8apOYuWZ/OJD4LU+wYr0tVq3csg2C4GmWq4eo0D7zncYcBb+vxWVNc4dvGOdpg7GI8fonZ8i6XZWSBb/cTZVrT4KEsO7nknB4mSx8xdkNjwYvM22lV4DlMjNSLmimk80I/NKVGv7WTMQNXbSDTqmM3JQ1oBw1JSrK/DCuhDQUzuq+AaC3hvczm4B36SocmRPi8w40Hilbiw+qct4BitQAvAK015j3f0dVbBKpQWM+VH0fOyRtd3ViDU5pJ5JNaLXnsszGTrdZCPHOAm0OTJt0KXrxcZjp07PA1fOrW+0IpR8RRJ3q1/pDJpxViKXjnWwoCsGuWBmYnkcYmQzNofa4ycwcg30YcYzkE3E3VA7mwYdwfENrKbnv4Cr1FUl41dWIuQJOc4p3yRJNagJXkT66Vviu3L2s/fhy3TRRcKdp+YAKJ6t0AqKJ/gn0NFGlG5xV7yO9WClK2uNjsRimWjZa6+8/qlJRwHhiCtOec3L4iqoeF58OijSf/1aqdQ/Psq+9SDm4bTwglwRWgdbk97BDVHaa6y3Yqjv5hCwQW75Pvyq+rRGFMLAir/O9x4F2j2gvFfEvGhzJaR68gRdwM8LwYmIlmJFnkUMFQC1tquiWmzZmCzFB1F71PLuxJCoaHvH8HTIf0Upg6LKUzP4GxoZMdr1aAEULQN4eQ7JIdm9AwW+rpmGTGuekF6mqBsDo1tUMuGyzsVYsvPvXs8hvZG2w5CAvjno+5OI6U92ktzrgSzNZtvLM4j5VrKFp95wEDQT0rN8gGavLatQW2HXPCljqvGIeCTvEK+auz49tSH9h5PZ1xYBh4cDzy82tkSKvHEJoArkWz+Bnk7wp/EzDDjEfFEyWqXiBr0Xh0TtsRgf/26zCkYbE4SIU5e7V2diIsQukfHKHI2ROolT6If0GV50cO8IAWSmf8jHls6sbTLl7gEV29n+GOz3l3v9c+r3lI6Itcy9NEvMv87o95CcQG/D1DRbvltd6wxOfjAUeIPzwdglhnCt+/+UAutLC1WzNOrVp/Xryg0bH3UBnea+P/2EYtJTsI/O0LaG4+8+1gZfH8fzRhegdYozz+sNM5x8DpOT76DYk682YZ819Uae5s8tG3eelMIi7g6oAw8i4aJthICbpsswfMTnElYvgBzPV1TYt03aUOM/Ykx5hCoZkTDheN4HSIHQo2ShzhtqovOAaTImthkxyZqRF1b9FHUScFnEiA/OoZv4/ULGd8dlUiXKZtlN+i0JbLCK4aofaIoc5D6GFJJ4AI24tdNNjTXeQ7xA4rF7Bh0ZJG77DpSsiz5B8TWXJgoGEsK/eoiVhcAFhykVIHNA2hAopks3oIcQzqUdqdHYdhRCEgPC2Cb/7H4ZFIiBt8JxNDcNwxkaECefLq883kHvEXafZlTYorZaxb31JbEChbMe8Bk/FX6Xv+w/HB3zFu124NVgvNrAAHYLMas9YZbzsJe6DB031Mn7CjRGxEjRwatytQ4oqHV1K2pP2FYpITVWxifgmQjAIkcKVfqepL0ogCRXQjs4qPwehoImj6owZ+GIX+ooUHxtDHY2DJkMdT5AJ92cnG7w0sFKlIAY9ZdfYaxDnNrvsvJMyGHJ/rUeMFolKG9s+9S4qEgQ/wWbTi+zqcWA5pYtRND1VbPNbkrSnYPyDm6nmSWM/kSgbvAlf56w9hsj9DHkkp3xobrqT7NVoe+h2Y/TjIQKbd8RnH0zQmJUZG6G19LKUSmaEdi5j+U0elTvJK+12bcmCw7tiwEA7t/LmFvZVA91FyzYZQt94fzM7gm93sca02vpQqY4qqhIlrRCrAEJrKWlEJoeirSMypH+uyNeGvrGYxo3NWi+TJ2AyPkuF1RUX/Ul25H+vw1C0OirwaFo8gxOo2I5/90o8KzYu1ZFaRVHYXqvAC+3ZcIp1yznC9sNkqz5tUtZ/cMuGoqSTeQBkTYNswmpdG6swU+t9rZiZwPS+sHtCo5vLjdf/8ujklAIjetX+l74hea56WoW8CJzbwNevCF0FvkYJmPPl3E9YUcJBD/fJioaqwqG9VPOIGjDy+VeS3sXQM6zHMF4PdC5VCd7ouRhgUBJV4teQ4+KGAD4tEX1Lm7JopBzpKGn7PJauFmzoZ94az3MGKVL+4ZHKM6M0pVj8ip3/lEX9kFjj3GEpv87CGSprjk2ilwZtoIlrob5whoaYE0/V2/RVXBPksnUTN1vjAsHgHhSJq8iVH7O3CCn+E5Itbi0BXnKqX9kfs0/Wm7Wrk2tSUXJAl0gIQup0PZgClb4SNONNEsQvVzmHyCkKLH9HlGggSmEhTjY9xjml3ixeothYTjhcM9wa6v5zhOiHprUdEdf0ZaIZw9hnDmsxDzEBXBn+VB7Xdvw7GtPWx6zvPjOdj06la938ThmihYifw3Ey6xkkr6sEsYkPJgG4R8j+SdgckkBhBOlnPc1sVmnyDEuxICkRuaEDJ4ZF4JaQnB9fNbHSAvd/o9gBGkR4JaG5+eFWkSzeDQY8+9k6XfNkwYTubvQHrXksGtkwDAJ5ra7JN2qEnsZxJI0ocwx/YA/L0XLKxuU3j4UcaO+GgBArQExlQvL+PVyS05eAtWaOdH6jJNHNyxJmr7IozMOmfAvm/4K/1ufY38n2ZcT9T6jWK/4wX1eKwd8hCU4SoUM920nyF1GJ7psLluFfLJUzefPLZNIauxdmJoZ1vE5OvHl5q5JBQBIINxtwoMBjgYR7Sr1iZNffGe3G/D/EKIj5pAh3UGilLYZpMs6Nfv6AiipHKcBbNLULnyZ5J3WZ3jlQIKsJiyh4uZ2D45egfYQ7h2LZbqD/F7pBlxnUug2oJ7QyQQC63oo5ceUXU53bho2BsWU3aWcBDJ3ISsWuG3pCvQzUMcGj1Jaf3PwgmNCTs348WRe64IumL38rDa8jXzpTU2MGY6ACBcngdO0rtcI4zxpDqMpDI9ypMIxd7ljZ38jf6uaNU9j962A9VT6RxaPLku0nXhZY8fDTOENvHqfTiKEtqTnJ4XVbDr+DW7A11xcbBMTxUF2YyFtDL3Cn4288Sd5870u6C6qq5LEf494S7QmdZWJbt+wxC2AhEB/VZWCe5dytr36hxoZgm2rQOZJQ6XpMLKDVY/3cUkr47HjkJ8/6/gZEsBt42IdKnrtMCfOhZsu4y/VvrXcVmS/bDsZc4s2eWCK7vcODXe4YjyupRNO73BYjUTWZsIeb0sQtD31ZLtUl8c7jGTL1d6AqPlPGXbZFIrapuYMxLen9XGg21Rf+7qRCMhuVyJXeFzar60BTRzo4K15sts5mWzKpbEYl2/1rdWARqYyXD/P1Mq8ZLkOjFzXLYmw2Ydeo8lwvg481uo7EErvB056thQIZpLvtNC+bMzreV5ryJsscGVpDvGx2e5Hd9g8UrD5DnOE7/7IO0cJO+sMBLWKfmfS73aGNAowJC9uouD5ZpkHXAQbBvIf98CpvU0gfwwwHp9lGvYpB8Tp+Y1sENSyBBvKa06joeF1SfsDVz6L4Nfhbn0NC9+ekzM7ytcWrSJlb5BIu09dhW/yrRqfow53yHqmTJKODQgvtnTVx5bV1BHdk74a3qnYD5if0hXrFuN0OGNk9svpAAwgSayssWZaM9gsopilAwdGX7ZdiMqrk3aoOs+mgOSfhOojQ52EeLl38uA2vd9a6d1nDeMT2N/Cxb6qPV9DlEFvLvyRAMq/3HvximPozzNTqEUwD8Isr31RrioWKw3TIsLGi4qhhVeLfgpy8nmV2t95czkbq2XCeEpaDS//nk4aw7ESd5v6aOkuhPM5EZq3Z5rAEWtb2CgZCchJRJtV+sEHKE1MCIPIoZyz8+osxdbrOhuQhzam5YWt5FhV6EEXK/7km5/GlBDjLG8FtjRzeMgxMR0YpKAPkFeAm7sGo3+e1W/aLpPKxiAfbrmfAOeap+BkUpXzVaepyP2l3xfL2vFESzDpCITx+wEG9kchMm4NeTWbqqXO29yKLZl5qk3uzK8/tVcOxjt9vVREEIXHkc2/814SAMRzan2s7Xo5+0RuzmpSHJguH1H2r1lxexLHHYDgDJ6VWtlfNb4OlTAVEC4S70Uo53MVug35MGMcN1HvNmet4px7m3lSiYr7mezQ07woFcih/PjnWw0sfjTizoPVQx2x+VFtfcasmb8bmn/qRq8WXuy3yflRazYSMcV1wnD5DaUYkdcnqAGaO16KDo4igG0/8i0vV2qusIJ2b0UlI9uP0eFBCMGecN3MqnJkva8yMTvIAAuD65/VxnLh/V4gBN0Eb4o6EfHVYGkInaQ/xOA4SpQWr/4GRxF2tZtNjQAbqvxz0pmbfsMXZtO8EGu4ly3pI2uWtqv/hyv+9rG5F+gRkBlRqoHFUVeuN/j+RzzH89e5J5R+mtRr0DIINZkl2NNSLOzVb4TLv+jbReJwOrm2Sl5OHoaFNHNOYaaTlb+d7e6cbzIEtfk6hkUSI6Z6Qxk0vodzcsBgy8tm2rEliMZ5U6KrB4/4PgKwR2EQlgymPSNmG1mdGonBK0+W0yp47IO0PMziFWprTY/tem3XDBbk/KG8sE/wXyhpzR3juwmGt+pAeL3nczGRvF8FEU+UwU2EOrl4xqbM7Yv57tgEvmIReKUIAsYxr+MshbG2i5LtlwWr2L/uDowLi2a3ysrp/opb9AnFdsjOESo6H0uxmaT+VygHjL89RjL+i55r9dj3JL64zI2rNeipL3Pj5rxRUbAlwCNLfZmiMKZb5Xe4HhI2p9R2iv/0mZGzRcRV6rt4bGT1tG5et4eN4/j3PCexMwEZn/1DsoNzPKCqSLBPtDXUn1mVRVngPEWt8281k1AyBFM0EIajMN7neu5McNiBvhwfCjKprWK6zYT57rjpxnixQKCIaZcJGp7y0sDJ0Bz5hF1WAiZDUUCKwPaoKyn1DEshmZuroy6t0O+ceeT4Qp33mEMTv/T67giPGBrXILPnktlJvJ9g1339zizQg6rmTUbgadOkgduTAtDF3HIRjmQjQ0UBcyIFQzU9LqRYSlioLT+kapgQWNEYblO8p0nR081IFUywHBJfith/Y1rfnngjwSPrlRuujOsn92B3Ul8N+lfHlLDyWXZb7rr5MtDRAsJL65B8/EnCWmr7ueZQQJ/bEEiIAxwyhGo8ZEZ8uYjQJbo3wuXmbXTedIBsYcLAb6V7VK4pgPJtnB3TL9VnFmIoH9BpRCsV47NyTXEqbX5qm3uMfCMmz79nCJEHxQsJ2rDBqft1+Fc0w7ly15X+rC1tvbAq7kTb57QuTkycWQPXBGheTB6EcMlF3SXhQl5nmshjek15s3CWt1sgc5kMZTbfterta1zwsD0mQPGfse1Tugr3qzdaZzRd1ymC16XjfTyalJtH3AmBvpZ59M842rQaZ21SCucTYX/VjE7+ni+rgqwAfqHcMcYUSqskYXHlWrVyG27ce+OBK+IF+FHo9uloBwMQRnHw9mOSAFMHZzWRwuaoxWPlu9/BSi5Da5OmkF6FXLZQNeFUIMpcNVsSFhmFwCIlX7L0WwXPqYPhyn8jLWNX5wYM/J7WlnCLsbyqL1eOkafucyB/9U1GAby3zgDWMuce4WAEf0YQhSPYiGjMj7nGz4iNtslEeqmRxQWouoQ1NjbyOhtE7UjeCHFdOYU4r2suUNDVZrjbD7oxxJJd5jrcHUVlGCq7eJRsKLqAphQN74N8BDbPLWnmrNKnYRMALM+RDptY5gLb95bXM4RVOPppzJRbEdjoutX806i9h4lH+pHYh/pHQ0SJ/u5+x/liBEJqUecXeUvaP+s3r8yD7RRw85jXGFGIZEcYhM6Z8ZjrG0I64W4QSKgU2wi8xCus/6YB0tGpuxopOACb0qOD2VN2B2iO86kn+kyleDv5yabuG2MPuzakjz8agpNhChNDySAnKDh8L7fgdTbzIjBIteWjQam570Wv7pYgB28G8670AjNILDOgcyJos+IZqQMDFhSZ/5DI50An7he+mIxjbZbYt1WtIZzH1ZBB1Mc1B9gIxrK1bwfDBr/BAo5NLVoclkJSbKqtJjiUMcF4/L/X1YIc3gsc6fbgj5yXZWcu1tx8TKUQACGjIHQ7Jd4l7xYYB5vS6nLyDn6ymIWmZzprt5aIsHSmwSWrVa+f0DQG2YVnpciORClcoZGCMwdFop9d7UaE8BOXTGWAOd8K67Og2V7apPy9Iv91/+bgC2vCFWO75bhhibzVDNGkxLZPuShDNILv6RBDasi3NdHkfWXM9+Gi1o4FjEDgmFfCxgeRT7HBKCgU1OtGk5Ph5YJCbI+p/HXr9t8LnwU90wvbglSPRUhMC6XIeZrZdY4qdUHf3ZxaNEQh8pNIaxFI+FjySQsrwRmNbd16IfilP4Zn4oltHX6QbFCR0VbhvtC0IC6PoZmBvnd9ZjEXWboVWhqSwKfRE5qrIdUsc+TavGD77aa2j0A0+G2HuXuy8JGK4mN16LIzQeGl6Pz/vAUiEmdV1Fz0+LxUsZeHxoRgj/c8u1VV9OQ9mOBYwVFRIuouVtK/V28iWU3PqCCR4nupiZLyiW+2ZecKcuenstp7JvQpik+kZwtYmt588SHs6H0L5pGJ/CgxTv1K8qLRXCmwsBOxiUq6atKSLJhsX/tyIjN/chMYTg+ME5Nb9kay8mMGBBr0FsY8dnmh6lysbHOKt2TFKWjqFqgI53JLwu+zAj9fkadQclvjVhtce38yLwUPRU4VEz2sRzNdyyH15GV1fEwdCM0xIFwW1WQRONN05od+zKgczv1vRPW4UFg+hYSsIbuyn9nJzAR3Lh9gXpojP451UbScgtts7Zg0Zo7GxXe+oifBlAw5MjqHHLOTVtZ/rQtnnw6+3Le/2RotdatPd6tr6YK4PqQCiqa9JYIPm283V/mnX6NwcEfubpfCbLM7VnRrQwTvyjhWbNSSuExK9AnRf4wxAnl2zkO+B5VhphYVlAyXYEet2KV4RHBEKoFln51rQJQWiigOyz8o7Hu3nk8fVRKAOvoXEtfG6pnQmpcY2EoHm1QwoBoAKozeMPD3+FsZilb0XjlgyvL+K03VeplQ1xUCGGbKmtd717mKI9s3PNTNo76qrRFV/pWD3CEZjFRg+s7I70zyjAhTpn9QAphtbPnCTld5p9yitkD45RqO2TpMN0IuFrzf7TmovHkmZ9ihqleRPwUQdl8RTIWW7Gmf9zY0r9J/S1ubWiNOf1wXTpg21QGsNaay8qoXhiEsNMvW9SarvQ/otNhQYQu4wr4vKMPhA1D4I1/qIbD6focawtNVuSnC1PgmINmEjsvqLVbWF8P8UV9WNdBprgfM1hYRYnKiVJGynSIRjjljuh4vXwTS06I/D/VoiumdXrHoCRf5B0Q2ltirngxBYL1wr3daXg6f3OZGh97hQIvsBnwDm82WNAKqY5poLzXjG2uLVAS4PFh1G+K39MNv4Yd3xoPdLE9auPw/DNwhEc41gYKneN6KZY1iWJdHBl8eBCMo0tt3yZ2ZbfUO9iN7Bqh1dXc8jcUw1dEehgHl2cEnyGYuCs3FCdpKNn80l2sAveJcep/OmZ8XcTe5dJihaabQivsD2+fIDC6aWv4Y5tl/JzAVw243dkD7R3V7NvEtUBZwqawqbTbylHWRPd9rHe6uB1ja2aMgTobueIyOlLlRDxEdTpC8JWercsO1W8HYvNaN6i7sI2ABBZ4hJUoY9V8suqm62hdA14hUjuBC4y1ClqGzHPzBXfrmRj2W2YBVQTIhu8t1Qf08RpTtrRg9oV0RbAkWEoSR2m9v59PUtfdFtcJurzbePdrxknNlhMXp0kvEl9mKbpzutx2eIIpkcdFJj0evYj+w4jDGyKlTYkFtpTKNR/UjIQVIItTn7Xw7DUfyoTgwsY4+g8KtdwEeNEjhqVRnRDLhj+PyuyIk+/OKStXFupx9Kc2sSXC2mK7N9b6/zjldt3zItSHDkyIYrS7+dVNaOnUx/Y7nOdP18P7JyFG0z25f+lUnrsCr7ipw156CJ79Kv8o62ur3LmS243Kgz63uVrOznrdxsOKrNeda4cNMvgEvdMnnYA0GT6yUz1Fjmer3xE77vQZ4qxOaxfqxm05gD0C33Ufh6QDAYsGv2xKvNl3ABxTU8sPt2uCRLBAY4eewVnpmUsXx8PhISorRWtKCmMT9s1120C5M2zD30zEApA2s3RGgcomQNgZ0zKgUEF1q8m1xjXfh8D40svc/WMAcO4sM4GDDNc6jv5DgRrMkMKP7ZzZ8yDJHw/MZiFYu46vdgklbGWFUZUGR90LIwpL5udDpyfg2PXQAGRc67ehR8SyxgVxmFAG3ZTbyDKGvqaZaosYAk/YwQHO93Yt5VA72feSASq26QKC4H+c9cGJsytfik/U2OEWBZFy+gHD4If2vfikDPJg1v0GnEBKljwqmiai1kb1NknIFPKQmS5YM5MwApSzDh6GgAFeb5nW4D4V813IZfzmG75j1kHPu8RgBqEgtwDrkWKAJFgsV66OI1jnKCavECyj5lk9I62rnJYH0V7dueIeQvPOKsNXDR/zgO9IW4KdkNgIbshQd3XyrFsmOhyb/p3xRcw0dRIJRIAlyZSruFpQrmao4ahq4iaM1EXLeSH7lsWkFC0B6oYP0l799KNnAWwZQ4N2jYdQsEJl4fRfimQCUyT1sYBtUZgWUnlrOkAeA1lgFbACMzCmB/E9t9vcGhUCBbl7Am2C23LM+KwDjLUOtHJuyP0WNISTAaZppwMPT07a04o8bYwzbJHDvrJqDX1+xkwCnYFt7uJe7G/kiD9eTGgfJ8CZKlVqqJYaFqL99vC7gC8N5X5p/POQ1su5oCay+0RHp8+p7cJdswAKr/5DFWPGMRqDmgAK4p5+2SFg5TMumw/nOEBSsexKk4x0aFFrdT27qwkOisQwP9sZqFFH4loeX22M1fRnhAwox9Y95D31Gd/MamMaXanQ0IfkeIWSsOZacsWFHekwOSz8WVSTAKmPD4SmYCQ3vySAcmlgTr9AsmKyox+iPDvkTpcWHSRTMAA3C3N27jpwBBR4YcEfSGVYINcr69jNWC9yVYOp3wRf5rscK631m+TakpRbEI7pBs3FBVKfVhjvBY7A3fNvqgaDVKZhUwovrEUgljIqk06j1bEI887wfXIxPdXOu/5YG6G7aLwR7ubl5Hfz1qPg/5idH6Xa6jDAX4E8l743DNHfLLpPaW9QKWW9cVz4Kju3OPFIEgYPy62F71Ophn6a6636TONkYUj4yw4QSiqC6ftZYHJU8W3cYC3z7KETlGjGCLLPj856CAkNzOS9DA57cNFraX0HVCaKDUV1SUfoWuYfv7c91tZchs1fovPsKF0mz9HTxivzPwGhF4YzOpTdBVxMPo6TRWFJPFCStf3RZBcdHxNQQdaAlqn0iDl4X1P/aUekvskB5jbJpjDK1TMAwLlLnSplPJl2izoFJBDpNzKHoobjMaK/MhQt61uS76g4FE8FH4Oah4bKcW5ZL6iqBpWuc4qDo3i7BMX/fNPVSWYHm5E5WGX/IHXsOj35o9oNLj0Vb17vhsjcTlZPMctE1ETrcOngD+6LrBuaNsg8U0Gzx0roqoaixJifSFMqaAvQ5Mvx+A1OwrerwbjbLXCjYp8K7+lz1cPu0DDMdu7yrpSOSvMgORTUqqy3yvI2meyQWOQ507Tzh2TA+v5jYTFp8Z7L8WGu53uFS9e4tqMnIl2qaxhnNjVyHI5awFotAdX5FkPklylFoQxs/RBuQVXBGbcfSYeArI6Pkt6ao9VtT6XY7CbgtozfyGtOwhSBNA1aWcYSr+Rfab12UiP62xW71uIysr879TqDiG5l9t7jYQDwIFf2XXzJmerwbrsVhG/S1Wjj9HHk1dg6QHTsmnapc9KoeT146C6Mr4LqTXGH+duQ/kkwTPfvvU+MS/KL3h5ll9ljDxjrVUlMK32LBO5rlqj/PLdGUYiTAUlnikDLIoeVAKtEnf2NcGzXo87sSDHNaroHVR9QfVCr6MnnxF48/ZYY+8YQgCoAGmjN00GBFRj02lFuod4HTMpkpu29bZeLyt/OUy+Tau7wsDsurvo11DQkUTt3obw45UIcz+/BJCQN+rABa6ZYy/u05TV/zJ3V3UcOur3wTyfVooGZyfQ+gh7onLJOD8M/Xi41Pei3hcr5MCZ5EpRPfv/pHxtUeFWQ+uk4Gf4JzF5fldPUCSoM+R/Zx2pP2EcveMj3j5HgVJatEeNDpSKtg55nsJhf/CEQeyGmV7zAJj4zIfs0+eHLjIUGljDERpfeDhiqHEKRpgAubHcgHiVzCuRm8nn/vC2sWl6GxQshkAozANJwrdvhftCgIAZ8a4UpjgGB61iukWdSz7UWvOIF/uQ7bWtr7VKMrh9TF9lhE/vgE3WDVy0ohMsPSUSp4mUj2I/pFQwItoPL3yw78tkASl96IynHq0JBadaF5yiK5HASNnvbMrsJJd6j50PcKxQkchkmiXOCf+c6jJHNSjUYiNEGfE3OnALSfkjTfMTehIp9J/MwHa0gBPiojL5VFC47ySZR0jQapFynKA6SGrkQ5uI/5DfgI+cuyFfmVkx088aVAzlIvgJHv3M2+oNdIIdKUweL1tWvpH9a+5P0KpfXs0PAADOTq+U9uiMsBMLhk51ZDIIt4WZyhlO82YWM6YnHwTAVNsqU5eJvR+7rsvK1Z8yZrnVlM+zeCyBdZETl0uCvGu04dTj5TZxH+t3aR7oR/ixsKMaEEID4CiOsawvbfQsva1bFkWhB4UrFgcORv3+X9jeAH5+c/83uF4/1D/or8LdRyNONOgZ4SEgEOrA43+dWla6NbDRmFzz9JBdaTYDzpWPIQpA45BVosvQ8ypyfASgvGWKnwttMlQhUHl0pKrszEixK/LIDFGyOFaHkNIIU6WBvaEY0QTomiyaU3fXUZUp4sO2zpVaYLjh2nMSr7W4yldqR78Thy38mXu4t8ZlYUxE8q48xl9SI1TrKpYE8POp1Rpwc7DF4Wfj/jnmAobOiN2FU8rJg+OAGMqw1+AIusP4kVc6uz21f/TymgYEzCZ3YHORHNlHP0o7dEvemA1y4Njv4JCQfk8WU26ALO2X4iLqsNeszeSIDKhn/AVR/GfQB69oCRgfcKn+J/7FNM01keYXdbK/hCKZcU6bYSJLllzuDyU5GQ4v+r0+LQOlp1ZorpMkVkoxuTl9YoZ+r5xBEHN/4JIvxPk+ZpzGGh+AcZZxViAhteuyRVN6MFwWU1P9CImajaUVxnzH7jGJUJchCvvRUd95S2jnjkQZkaE0JesWyeKm/AHQECsfFosiWN8RqkwXDkgVxTLpKH2HMXmlbV1jvYrMtl0HW0rI0vkVWxBpqOTCsaFYPiw/A9//8oeBQjQeZKC0wzRYApOYg27xMRZyESIUe5IdgiXyNkbKQgkxKeboAhvTWxX/ccgO6YCLO1wb6t6uapBrjDejn/hNsRUwX97/Pmnq2PsQn+h1IOTJ5bXv0+eSZP6zuyLyzfZSeE9YO0K8572dRpwW66vX6wvS/magKT5oeMopR4PfxEQqX5RIYybWkPQ1xLht3sNlZ6BxR5AKNTxs0OiEeSVJQUm6jUd1CGJenHnGBuw1NLf+ffE0DHrcPjpK5UA8aP7UWP5OVTQzGcEHIMYHjl+FMWmBTe1kSl/vXmMJ2FbOFNRY1KHcrHnEW2z9Obh+byzG7dOzXLAgq0GaEV6jQr2ANFuIaylZjEOfKJ9Y85HYT60haW9q1+D2nZxCgsjxjM5zfK8Vp08wL5wTUep/QoDUL1ef0xGkfk3susMmiAQN4YB58t4IhDJjeMP345cjshcJ+NNoSFXAXbg94NhB+g9Gr+x0IrPLal0y6w1XJWlkj0S9l65o+ih3m8fUahSPbYWcHMbZMgqFX0AxWDmR/uYy1+KjgnwZ90iUgGjYrx504kSG585O6TIZa6uz072/r9aUC8ZOuORV3k/RBdwPOSQvCt+vq+F3+za/T0qlTmVh+ZeIbsopL/x9QgaswX7XaOO3NLEBOL0LGbZ/fCfD6aaTepgMBaYNHft3HMfMkZ9Ovan5TuRGHSZWteGcKYAcNwnnuCyU96koswTO6ksuRnqOlF9bwCPQRS5CkJ1ZkY2GBXA0QwD5RLjik27PNH6YE9B/ANtXGO2ygKZlk2twztZnnH0Eg8ZJ5uSEIpjEQbh7Js6fW/rv4SAR0O2VkNx24FKAPxbkBM30FEZW3BVsdAzglHBDO38Lywr4KVE3EvO4ecOeH4XVjZSe7i0+4HWKNGgSCjg68UjzZQIRsox3y8ueP7laK3GYdZzYY0JlKE/oM1h7SFnJ43j0vHb9u3r2FQaNpvDzfg48ooJQAAZQUN30GA6qB1hniNaz7ey2fFCqL1c3ZQ8KUiDW4HSzBi8kpNkfqhP5ScZCdbVRbF7bZgTI7r+0ob+DNFmNhivakUatg/PbRQXAsDIzyBXlJvTCQvssOpj9eyY7CNIdlxiCbUUsoASGv08lWYWNPLDQvZvWIepamwdeeQ4qrNmm9ctLpAMoAJD/1zpzcGlo35lCYcqfAsDnHoYj6+X49oPvGoLe/iICcnHCMveE3IfAllsAspyYPd/L2oHYpBQRRFikNmawrD7I0sQszP+mWW5Y3uQHEBAosrg1LZ0Kxr0InqBrQdPxbqOz8EpaoOEERJxjLxVHXotr9G7hhv7sUxiPdCAUG/N38S429GvEaKlTP495BCQeHIBLaUi9JBCUZluY6K6OzWYdehAMxV7ZULnV2Nz54pC+ULymk4mMWOmsQUciIj12K5nispSNFbWHhJMrg4nKVDHC2g3QnPTqQW9eNgLlYvuaMH76aZpg4pVbNfZEApHWH+Veo53H9I6lLiP5CCnBWkGzCOF+1S+gyBY+TPXc8O/7Gc8aAnRuD0HfY9TjBiKoUWu6bbkX3UtfvdwCUsKEqmmFk/6EBz+o38DBXx6cnEK4v0c4yDb4t/4XemwCXCz/XYmM8cKMO6AGuiB7yIg6CJ7vV4bwyrIp61t2mkGyPdXaDdelsKm/SddURiJ7+WbR1hCDqvALbrd2SExrUU85nx01mCo7VhjjI8t+lyJj1tETlv7/deY59EN5K4F+EbMqaFvXwJ9BcJdPZx6nXEBv4AkndOWOQ7MY4M01VMGeDTl58EXwPTWHqA7tVlW087RO5Cw8JdRPC5UTC7iUgJVpoVPjkM5gNgiHdNpR412HavSVlF0s/4TXDk7M2akB4q5OomKA2yhoNKy27XOT5yNL+hQK1AT+fBxswWyqh5ccshf1RT4JXwJlbvsbBYbOR46IomItBWkW8q2sFLO0sJvUiBA/srjbwMeahYb6dDdqBpHYs9H+j9q101hN9pgYJOwMy66oeMs2wXXB95nQ8vFNuH6/8bHIy59iu91qqwdSh1foIZtsey3Se3qOQd8Zg/ee0G0aUxHgJUd8EVUuBDGi+3QKcZ6T6c6agzNcn8koPtRIYSW1Pajwz7Xj3wj4O970tAnxCqJQM2yuUaiKGIrV3VMhq6iZ+DoqTgbtp6jHYkZzRV5hTS4YwYBtJ5aEyY3qWB7J/xIY1Ry984GQ2GswOP9i0dhEzaTd9X10MPYYiJjfyz71NoS+8LIznI12i86KL8mB18bsh+LC1T5ZjKAfP9CWtLDF6O3/2lEt2Fjzp7y3bS0lraD4ZHO7/jWvkXFLTooOq5Go8kilulGu0P4qddxHlWYQbWPKNaKa2/fiSpMih3ITXOGWuhTlfp1sdmUqgFCozqqxV1Ykiw5CaNNb0v6veaV3e8K/rXIxDHCXglxzPwLdRt0szU2zz4vWPqf5BuTc7XGvpd18iYnjrL3rW090nXawVIDquqwFo9fCJWTKGkSkIzmupncDwB/VNf0sNuvdJeTpBdw63ZBV8jlqxa2Jc6ERAb1RZS2+q7oKvOjGYW/OTFoh5bLRM2xd2ZZ7e58ri0VzQgj8AG1ic1+1zCys86vOjmKehFXyUYF3fQUcEBdb9naoItuBVNLFaEBzRXoTeIgwJyEMj343gHKS1vWGWAv5wcJtecbgMF94tira4YfKTAk8FHJo9zw5iPHHKZZyJVd/Rfkn+ZvCdmTwrsEPcihGKHlFqT/Umo/97DC0sEufbaCuV68qrEyMdCpsPSG24t6UgKFTBD8vd1wK0zAHqyDQVKWH4XI8J+96hBHlE6ldUaHowaeXES4xIW39bBSkmYJKef0KRPuvPPAaFxRKc8vAQNU3jfCFZZB8HsTUY+98va4Weret2ll9gkrsJLUl8xeDZOEQZRQsbhGZwSKODhQsE9EXIQAg+Sf36yL/CpoWS6A6vVTfYcjtF55w2vbF31Fz0GJxylWaFiirYT5niVxZanpFk7KbUOPL/WZ/Kgb5B2ctNIiMiwQTBwNhpj4xDSYJiHWbLBdKdLPexABxW1lLGdyu0G4+bO6Fl7neJkUXQR2qtkezVh0m2F84dxkBtnUU0llpyIpJLj4GU43SVRcls8A2DmMHNkcHLA7hwUGGbvFvB8sJJpU/fU7tp9+VIm8BqN/uuZ8fKHtDb7HyHrJdfZCu9+S9mhV8I8b8RaQgUC7JD6wQOdMV5/+aKU+yHEasr03m5gMlAMYlbW9SjeMC2VbMfUF6QjTevKtvrwlVqucNFnfXPH2dfUz8ZjvhSF1LfaEtEGjRy8Tyx5KdWSfpZYrpIFFvgkuhQfbjzjpJSyk5MVX7NinlwYL1IW15WSfOmM/qdYnOoz7iFqfPzP+yrzj6tzA9IJDQ4f1EGq4OknmVjUZ7Pg5NNmiRsnOptrZDslndr3QRMLBLgyzJ7Z5G2dOinw6MR8y0mlImTIponvpiNvAJbWFZQIiVNvdi/6UY9GXttl5FjZm/6pK6gwcy5eYFwbFe20f09sefUlK2EAvYMVQJMLWDLsadinm6A4dHkoUTeDnHq8Gv0kNn9qUZfKXdEg5ZKZXbLSzXe8wCX9qRyyRB30Nsct1ZqUw4e96yZTVtWw9TuJW+coDT4AQzXCEbDe7/InDFkH33Mz9renTTLKMF4/oCLFk2oyHLetHxBTKYTxMEVzpSM7TICT00T5/78HAo/QHDWfty4DnFjBaIR49Io5j0Iv+vhVnY5wRbT7gE2aSasaD6gjw5fJc2QQ9diiVPVWm/GFIODaK07IzKKGvUJELEdfTCK+0veywgkokTsVNYIk1p0Y6uGypxhNxvgp245CEmcPoIdydDS2ZPlnuMdwsXYswAG7smwQJF+nhi9UaVl6y7Z1AMly6eF9XQ0SSAZ2HuDG07YTdVtoojRM5GfNloLgnc9HvSXAbJ2ZT4N9D8Y1bR6jnmMz/w+7kpCoYOFAsfmSLQpTaDcemffS0+I2diB6AvHXDIU7Cvq2e39GeMlHliuZXujxtHFSx7TwWgVJwAvYUwPsdvq6y3eZYXr4fZbR6KSKDEWCIkPZde2/9fH/8SehXlRyZTBlWgYhb3/eS5KgyejVVx5wrAr88HqR/YjtU0YYN7iE9U1cpgEcrz3JmX9MUwFImFkE1tzlZD6XVuDdC+3Fj6w4f1o4PBzCH1IsqrcgUxzNCvZx4gPN+KRwbOcB14vqBRWPpm3vOD5B7UVpSICG4jBLWOU4R8qYmwHj1hlVvkBfZAX/0aa999BZWwN2oFGwC2hy4UkQ/Uv1cnLrIkF+x8HmmJixVapu6XQ45ZpcU8Nbg08DAUa1A9Ml5rPWMvDrGdmLNFKyxltk5zCXk1gzOJrjDMUSgVUiqFFIN1/AQNuESbH2EUJRYShNLkrMYV/bJOuyuUrKzg3/vD6e2MS7vsmfVV3vF5DXcYZ5W4U2qT+d/PkgqEQ82Iru+pgRwKy3cPq5Dn1A/Jr1JFS3ObHaFpJbLiTSgV9/KN1h0+6ZWxnfQnZVaMopndQrzktDip9y2qCeVCyy/nv0BmbrEVUoTDpchSysGzMe0FsFsdnkqbefQ0X7+3ZauhJznRs2S3RcZq7MY5uQi+TGieG8prpHA8FZKpriHamd4uGSJ53iVK9O0h0brrxVABf+rt4arKkSAEJyPVROSMOLRNmtR63RiF2iDzCOdZeIS8vsKkdAsb75jJ+zK+hobGKEe9vQ8nZtUZbL/nv3p0vm7l2x3/ZIpqsEgXoDaYSkvkgEMPiNNTiV3PiyFEv9Glv8guKw93s+OC0bQ7F0NAATVyKVD3AZoiKuLzJ/yZSJQxWHvoo0niO9vUzCMw60ZuNKc33D1fEY8RmQGVRSCe5/dZ983SUzAvgxZd3a5A/RdApq6DIQSZmlO8O0GcwLH6jXEd6oHPJbzkbC4RUDoFwBl11rGq5JXtUdlZNIM42YTBtdN6+834C1Ri52yeepEGUXLuIb9VU73tzwvDsh1W0tygZHBk7by7nYqCWTQpRDXKLzN09iShTUF0s9fOJmeninrZf8T1XPDnuealWzFjPgfMJTt0gXl0RMlZfjv/w55O4JUcVqvDUfCC3B4aptEXtJ0wcFK817+QiW9ymcK0/IjMGnpOWmd29B0II9Rts5kyFOjVWuuEfGFd6e4QNzZ4ZWTyiUSi48aN9ynSKbsi0Fe04BZnlp/V+GsVxFXVXOkX7wjcDaLtjgntqmmX5q9MtOANfno45+NmvRYQt2lJ4w+TyJB7457o53Xy8xRiLsBhn/hmHDtEUKqcM/80WsKcGlmdEzdh4OMWcBksD/yPgEz473CtNYAVzGvREBQg//Fc6FmHEvyZwJ7R4McU51y77pB+a39MjB1yRvSGEB+nF1I/yWUrun1+D91QzMcCK5zCAdhZJR+LM5I4X4qts8uwThGrukor7+DYCZ5vDJj0w1+EUI5FyH3FJ1R3gl5wOc9bUAEC/Nv+QHiTakIXFb0/tFcpcImn2797FhyB2e/b/vK69GCHr3lXoQNuJj+VivdVuZzB1/QsrL0ksniQTCMSZYGPsa5k3+ksEWsXZvN+FiHLRQHABtnSireCFNw26RU6Ky2C9Ylob5Ysx1/RgkpiBPbgmUya2TLA15bXWqgRgvy0qpyFeR4iMO9DEf5/l0kdxQ07NGHgz/w6qvujA/P2e0tVfhNlZOFt3ZQW95THAQARB8vBUDyhw7XtLibqA6xkbu0TSP/MuC82MiwCV5AV+dY4DpTDGUlBv+GNY30cJffRt+1GFDWOxSvP6zaZ18jj3c9KRV6/6moiiAImeX9V+tcr5FKNpIcqS8AnHe2E49G1wojvOSGsAvrWAzn/PjbQqtou7bdRSAY7bJ3SG/mVxjuRKtptFWFTqYAN2IYVnLUEUDFMhPC3DK+zkv+u+mKXL/Rvy7W12i7+iSbRZBG+gnEdprmbuRzHI9pmfPuVphG16RPQOZkvfrcC/bf/HSieawUq3hrb2suqnshYy47+cc6Jc5V13o2Tq2LMYQqDJx9L/9/FpLJgVOMTaVcHGBxXByIwkeltYQpDVpQVPV5YCiO7dVcZfLHpl8TEnZfZcuf02Vqj84RkwJ8UX2xcPV+cVuTd7c8Xt079NQaxUbfHLWVni+WzmD+7HKS0YilatZmONYctuAQSKazze/oXV98dkpIbK5HSEBQ0QMqn1qYrkMu9vnaMFkQzJ8CGCU0i6gkiJN7mJitOkeCuGtje3W5kVR9/0Sf3hLeBfYpdY2pBnqOaN7u4bRVsMb6J9EYDXpN0Pv/KCMt/mJhDraXQ20CLzrr1X6K6aWcZyyXIa1BYr1BcS+RHwWyFcmXOmGxuSkbW8y2uBUPnfDzwmQ14xKd4AZdOkYWYYKMZg1H1kPh/Q5ohZEBvHffdpIDhdIrHrAIP9VycVZ1RWW8FQq5EjD1qN7Gjc97Ky/bUMzI4ukLkACQU=","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}