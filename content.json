{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"升级openssl","slug":"linux-openssl-update","date":"2021-12-15T01:22:54.000Z","updated":"2021-08-17T09:21:09.046Z","comments":true,"path":"2021/12/15/linux-openssl-update/","link":"","permalink":"http://www.digmyth.com/2021/12/15/linux-openssl-update/","excerpt":"","text":"12root@stack:~# openssl versionOpenSSL 1.1.1f 31 Mar 2020 download1wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz 12345678tar -zxvf openssl-1.1.1c.tar.gzcd openssl-1.1.1c./config --prefix=/usr/local/openssl #如果此步骤报错,需要安装perl以及gcc包make &amp;&amp; make installmv /usr/bin/openssl /usr/bin/openssl.bakln -sf /usr/local/openssl/bin/openssl /usr/bin/opensslecho &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.confldconfig -v # 设置生效 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"LVM 换盘","slug":"linux-lvm-migrate","date":"2021-08-15T13:12:30.000Z","updated":"2021-08-25T06:00:35.421Z","comments":true,"path":"2021/08/15/linux-lvm-migrate/","link":"","permalink":"http://www.digmyth.com/2021/08/15/linux-lvm-migrate/","excerpt":"","text":"背景： 多个LUN划给主机做成LVM卷，现在要更换后端LUN，也就是更换集中存储设备，业务端涉及虚机上千就不从虚机端拷贝数据了，直接从LVM物理卷更换 模拟线上操作，添加2G * 2块盘做为LVM卷，第三块盘为新添加，替换掉第一块盘，保证LV卷数据不丢失 扫盘1for i in $(find /sys -iname &apos;scan&apos;); do echo &quot;- - -&quot; &gt; $i; done 裸盘分区123parted /dev/sdb -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdc -s -- mklabel gpt mkpart primary 1 100%parted /dev/sdd -s -- mklabel gpt mkpart primary 1 100% 制作PV1pvcreate /dev/sdb /dev/sdc 制作VG1vgcreate vg001 /dev/sdb /dev/sdc 划分LV, 有意划分3G大小卷跨物理PV1lvcreate -L 3G -n lv001 vg001 查看物理PE信息1pvdisplay 查看VG信息1vgdisplay 卷写入数据123# mkfs.ext4 /dev/mapper/vg001-lv001# mount /dev/mapper/vg001-lv001 /data# echo &quot;test lvm data&quot; &gt; /data/test.txt 添加第三块到VG1vgextend vg001 /dev/sdd 移除第一块盘中的PE1pvmove /dev/sdb 从VG中移除第一块盘1vgreduce vg001 /dev/sdb 最后移除PV1pvremove /dev/sdb","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql高可用集群","slug":"mysql-HA","date":"2021-08-09T00:41:54.000Z","updated":"2021-08-25T03:50:37.765Z","comments":true,"path":"2021/08/09/mysql-HA/","link":"","permalink":"http://www.digmyth.com/2021/08/09/mysql-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"prometheus 重新打标","slug":"prometheus-relabel","date":"2021-07-24T21:48:08.000Z","updated":"2021-08-17T02:34:38.742Z","comments":true,"path":"2021/07/25/prometheus-relabel/","link":"","permalink":"http://www.digmyth.com/2021/07/25/prometheus-relabel/","excerpt":"","text":"定义在job字段内示例11234567891011121314151617181920212223242526272829303132333435363738394041424344# A scrape configuration containing exactly one endpoint to scrape:# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;prometheus&apos; # metrics_path defaults to &apos;/metrics&apos; # scheme defaults to &apos;http&apos;. consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;prometheus&quot; refresh_interval: 2m # All nodes - job_name: &apos;nodes&apos; consul_sd_configs: - server: &quot;192.168.1.40:8500&quot; tags: - &quot;nodes&quot; refresh_interval: 2m relabel_configs: - source_labels: - __scheme__ - __address__ - __metrics_path__ regex: &quot;(http|https)(.*)&quot; separator: &quot;&quot; target_label: &quot;endpoint&quot; # 添加标记，值为replacement内容 replacement: &quot;$&#123;1&#125;://$&#123;2&#125;&quot; action: replace metric_relabel_configs: # 删除指标 #- source_labels: # - __name__ # regex: &quot;go_info.*&quot; # action: drop # metric_relabel_configs: - source_labels: - __name__ regex: &quot;salar.*&quot; action: drop 示例212345678910111213141516# Here it&apos;s Prometheus itself.scrape_configs: # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config. - job_name: &apos;nodes&apos; file_sd_configs: - files: - targets/nodes-*.yaml refresh_interval: 1m relable_configs: - regex: &quot;(app)&quot; replacement: &quot;$&#123;1&#125;_name&quot; # 重命名为xxx_name action: labelmap # 标签名的重命名 - regex: &quot;(app)&quot; #删除app这个标签 action: labeldrop 总结drop: 正则匹配成功就删除keep: 正则匹配成功就保留 relabel_configs: 抓取前的标记，针对target自身标记，将来自服务发现的元数据标签中的信息附加到指标上标签上和过滤目标的作用 metric_relabel_configs: 抓取后的标记，针对抓取指标的标记，用于删除指标、从指标中删除标签、添加编辑修改指标的值","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-08-17T08:39:46.462Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"vCenter update certs","slug":"linux-vCenter-certs","date":"2021-07-15T01:17:54.000Z","updated":"2021-08-12T02:16:46.497Z","comments":true,"path":"2021/07/15/linux-vCenter-certs/","link":"","permalink":"http://www.digmyth.com/2021/07/15/linux-vCenter-certs/","excerpt":"","text":"检查过期相关组件12345for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); \\do echo STORE $i; \\ sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;;done 回显1234567891011121314151617181920212223STORE MACHINE_SSL_CERTAlias : __MACHINE_CERT Not After : Jul 24 05:29:45 2023 GMTSTORE TRUSTED_ROOTSAlias : ca6378753e13f38f2c78597723bbfbd2bdab5c70 Not After : Feb 12 06:34:52 2029 GMTSTORE TRUSTED_ROOT_CRLSAlias : 66a9d0b33019168ebc8ab857f2d2e6d3f9ef7d02STORE machineAlias : machine Not After : Jul 24 05:30:47 2023 GMTSTORE vsphere-webclientAlias : vsphere-webclient Not After : Jul 24 05:30:48 2023 GMTSTORE vpxdAlias : vpxd Not After : Jul 24 05:30:49 2023 GMTSTORE vpxd-extensionAlias : vpxd-extension Not After : Jul 24 05:30:50 2023 GMTSTORE SMSAlias : sms_self_signed Not After : Feb 18 06:49:32 2029 GMT 签证书文件1234567891011121314/usr/lib/vmware-vmca/share/config/certool.cfg## Template file for a CSR request## Country is needed and has to be 2 charactersCountry = USName = CAOrganization = VMwareOrgUnit = VMware EngineeringState = CaliforniaLocality = Palo AltoIPAddress = 192.168.1.250Email = email@acme.comHostname = 192.168.1.250 获取PNID12root@photon-machine [ ~ ]# /usr/lib/vmware-vmafd/bin/vmafd-cli get-pnid --server-name localhost192.168.1.250 全部更新证书1/usr/lib/vmware-vmca/bin/certificate-manager 总结vcenter 6.5证书过期解决办法参考：https://kb.vmware.com/s/article/76719https://kb.vmware.com/s/article/2097936https://kb.vmware.com/s/article/2112283","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"hadoop安装","slug":"hadoop-install","date":"2021-07-12T12:51:25.000Z","updated":"2021-08-20T07:11:02.012Z","comments":true,"path":"2021/07/12/hadoop-install/","link":"","permalink":"http://www.digmyth.com/2021/07/12/hadoop-install/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"大数据","slug":"大数据","permalink":"http://www.digmyth.com/categories/大数据/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-08-11T07:54:07.019Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1use admin; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 创建常规管理员权限1use admin; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1use db01; db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin01&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; use admin; db.createUser(&#123;user: &quot;admin02&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin02&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"redis install","slug":"redis-install","date":"2021-05-29T01:41:54.000Z","updated":"2021-08-17T09:15:54.618Z","comments":true,"path":"2021/05/29/redis-install/","link":"","permalink":"http://www.digmyth.com/2021/05/29/redis-install/","excerpt":"","text":"简单使用12345wget http://download.redis.io/redis-stable.tar.gz # 最新稳定版wget https://download.redis.io/releases/redis-6.2.5.tar.gztar xzf redis-6.2.5.tar.gzcd redis-6.2.5make 如果重新make不下去1make distclean &amp;&amp; make 自动拷贝程序文件123make install# ls /usr/local/binredis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server 拷贝配置文件12345678910cp redis.conf /etc/# edit parameterrequirepass passwd# save &quot;&quot; # 完全禁用本地持久化# 跟据策略持久化的配置 save 3600 1save 300 100save 60 10000dir /data/redis-data # 存储路径daemonize yes # 确保redis-server启动时能在后台启动 手写启动文件1234567891011121314151617181920[root@localhost ~]# vi /usr/lib/systemd/system/redis.service [Unit]Description=Redis persistent key-value databaseAfter=network.targetAfter=network-online.targetWants=network-online.target[Service]ExecStart=/usr/local/bin/redis-server /etc/redis.confExecStop=/usr/local/bin/redis-cli shutdown#Type=notifyType=forkingUser=rootGroup=rootRuntimeDirectory=redisRuntimeDirectoryMode=0755[Install]WantedBy=multi-user.target 总结官网https://redis.io/download#from-source-codehttps://redis.io/topics/quickstart","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-10-08T09:51:01.918Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties topic查看1bin/kafka-topics.sh --bootstrap-server node03:9092 --list 对特定topic/nginx-access查看详情1bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic nginx-access --from-beginning kafka集群界面可视化工具,提供ZK_HOSTS变量也就是zookeeper集群主机123456789$ cat docker-compose.ymlversion: &apos;2&apos;services: kafka-manager: image: sheepkiller/kafka-manager environment: ZK_HOSTS: 10.3.0.41 ports: - &quot;9000:9000&quot; 总结参考http://wiki.eryajf.net/pages/3504.html#_1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%E3%80%82","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 U2FsdGVkX1+rL14ykub77B2588te5WOqDd5Erw8zscAdLGbdplhgX5VIM+12pOZ03IHB8ayC5voUn90GTX0FJQyeQ/7xitofoIYSrBTdlDP21sFWxGvNIn7F9/JE/L+enq8XnSPrTtGcICI3xPPjslMLVH1Zetw68mq5PCMkJ+kvKSFWY05wMfWdf0k2zQGVC7VDOpd2kyBmMBicIf0yoYI9YXsP6WPTm4w0AnyQm87CTc5YgNNvntw5YPXmJMd8FMxHifadbPQg84EKgxCSScg3dhRdlvwNsoPb67cd1XMv6tQ/CxTO7LAU1hQvySNRk76OwASGU914giNIYqmODiYg1x5LszyRSjnr/Tl9L3bcbpwBXwiMRd+ssEzDHkz93pNolWADKAb7SvYIVKJ5iaIPVfCIPJYAvCVYPC9SOuwHfuz6DwluNhy2N/cj68SQXZiUb42tXfBwT56ZggWxc91wE1TA1YcSVPzNtd1TFChcxhvI28ZuYyeWcz2RRPatP/MSsrkqhk7I/s+YnR3h1YPrdledEF5NlK+YEr8SdeuKsTl2WVNBO+Z/1rbynIEY6RjGCNbBu+c8PN3JR/Hqekw35QmP1zU4dARPkedIDgCLeTJuFkGbvon2OxILU7qvkUTKHzrkL+NhHt7UgERGAN73rwLPEjxAC15OgyCWvWWEECsYoz3bCTZt2ozDPVjbWUaFBe80Ks6z79irIbXQENerivC2ZN2HO8a/LfAiiwC0HHOn9j15w3xXWDYeLuy9jyvr96fIF6VyhkMVhYuAwOBNPnQb0XwJTWuKAl3QGZttAqO062hgHefhXEEG3maz1mzYZ0/2oyQlSnZ5M5rlnLJK7YhePBSfXVT2/OHlGb/N2XEmmdBpQ1R1pGn1rLklnYpfK3X0Pc+ybEw1QLEbYGpDcWgpHa2aWVhX+Cf2W60TK+YMdyS8aj0ZN0+qD9R40f06zVcIDrWa/m+TdyOmcJ8hE//FcxLVpiW7m60UNBRkyTgq5EqzadPk5DS9jWZaECB2jLuX4aoal6um+DXRsJHhiJwOk6k8494KGfwW8neeF0ZYFfcnwu6HEpVWFj8jlYJcsekzUHr11GsOaNUBHouaBWvGMa2yuZHJ/HeVSxrIOvhbD7kjJx6fM1aCvfxNX8FczejH1BcQNnFDotRB96z/Utb7c6sG8ngfVPFz+fHThJhGP6gMkq07CgP40pA9EyFNLSUDO3tpuO/twyE/U1qANyirDg6BiS9JHPfUrqGWtg2wuc2hGz7P35jZC94LUFk7f3TUPibSSs4SP3rGqL3teQNbiCf0YAb4C3YH7VJ1/giDseojrVhsBcIwNszxyffC56NkncUET1MCqkdu2qOS8d0UGl2mPeFKXcddRkqP//UmnZjauc1QR3bsIp1HJFrefZEKQuOVJPejbIuXwPpp/36lQ2tBEBv3GlI+iizGxOo3RcSZypc7aONpnol/l39F/1EVIOtbjYQiEFDZMmlf1TKjcNfYCnV6qBHDvh/hqzhExROvGDV6gQBOHhM3Hejo2jJ5wO1Kwdk4ndz3DH86HRZ3qF3LfoneNqM5ujuVCsYujPblp2rDU/0d1lOljV4WYy+AkYJ2jA+3Sc/4LwjuUFKkJJCZo56Z25tVdQSp8x5PLuVEOqdaEE9CQkOcE76xoRCCZUGYAeNOvTvfGVUa3Kc3efoN5juFZhw36hhaUGZ8jT+y4YnmjwxphTOyUmDkQFT/iTHns9Q2vPZ24uTHWRv7Mc1A3IC3RC7sA6gNiUGqrVSORDerLvql3o914sgvhQXgS+2BtUv67BXLpC2m2B6L1cO29ny+6BKw6M8KS0AhxovKTMPwq6cumr3WgHFOc25OUMy0/7ljCNGflpdmNgCSEhD5/GzxACBYs+bMgh/KWR8mz81L8X7oggJCZs9y4fpJr/uQHr2E0+GkPl6aur8CCLU7Jpr/Z7cwmPc7XViJiOk8u8s4H6zMtsrSO1fOVlwhG0FPI1Eih57pMSX3VORWApj4BBkrl5kIDYwiFOtXCjNlIdX6Eh/EeyRE9o9m2br97JV8og5jCJ2dOqABSK6/wzdjwEcEZz/1mJy+lcgYFkE0eFMz4A7e1iYze2rC9NuUUxWTYCeiFUFWeyztTJpz8q15JzVKMfRAlOYR6lvaoDIT52ViFN6GmtL23zzP6kCeWFGQYX5w6ksrdDycnOtbWidov7PtQ0tI/OKnlNpIE3cVapkniUnX2ZxZxV1XHBNaE38Vzs0mNsXYNECtNAoebzCJtRDQkQ18QUWLkZuLL/INUJYzWlRaH/CA038gqDMGqgKv71/BdPf2wif4CagLv9TAu3ucIgfmLdoMqfM+CIZGy5dfr7UagJ4JWl+QbRjWHkxq4feoN2UgMSw1PJqw0b237XZVx73lc6ZZUsrm+JxM2a8J/IHs/aIRWcnwaCZYJE98m7P40APUNRCY0F0F/wF2XgJcIWTNhpTPS14FacvlGcauqy6pOEul0vsxL9idRDYv7Wj4/1i6ttzvasQ/tkMUDs9wLtS9Gwy5VUbzruG72GxQvaz181Hc5oEWxsbMHrsynq4/cyo1ep0zQiH7uZC9Pmz0QDobDBZ/PTdz98N5lq2jIAxdajEDv5BNB/+63Tueakfdc2qBlw+/psCxNmrOPJFKnCo+A+adowh0+h/YvqX7xEpGlZkaLIoSzR3G3DcbtFR37xlvwAxbVfX0zkJAp7dYe7I4QZ8IAtyMoA5KW0fhKSvnT8ES+NaGc3W8AyQvw85UR9Jw40bRdNe7ubQVRh/5KQhjvw5vRUA4vZDmZlZTddYTwFmU0BorxG051A7aSJxHU14Ded7m9qeciZEmC6gbra02MaQzA768c3XFLdid3QpkgNkkc+BI0mr94OEs/g9/4AdQmQQdiQl7ooi9jIE+477RpAg5j0r9HFkfEQHRcNXZlzrN2ug1PqTSGMKy9rR+p8Wbv6o/vrOrR4QZTF6Xcy78N73xrfR6g7jfwcoDGhCHi+3S/bTFRdwEyK1n52/OJzOu84m3hmGfHnLjCICu4l10fTH/Q928WibTRcyLWGEvL89ozemMjPAUy/r9LYs+1EDXjDQdYFIOTZbEkt7e6p5Hn0a8hF9kcWlhGgkC+8oFXrcQQqGKfh5AJCZIkAGE+qEBUWsDhcqWHCxmiFLv9vJ8iVHNX8mLgpX66i0wjwCe74v64TL03+jQ9woHVLxweq4aabChzvrQHFasFjqhdB2TnhbG2uBe5WZdjaA4TSkLAMw9zetcXI9u9S2hgYmdY1KNN4WkJaBntdW/MTuKGfsuy3Gk69XYq73pNF7woNBOSpsMBY5vPG13DXOfJvqkKtd+ECYSUTUQkmXtAZmk61MPIk/tNp3s7LXhaqOMt+eRQyMrF2ORyLNH+3s1evB9oIIbtRwtO4+x+YTqi5Y02cwVBVBNR/xZmhoPsaH7d2za/nydkenL32iNd1b66Muvxp17Fmjq202tDocbgLG01Rdbt/QlMeyCINjLWV6d/stPdeQiBbM7+npmnuBSgYiY7JqEfdvdsICbK7Jilb04wOpB8v6aKfyPjTknj7HvlY4uzQi/V5JG/NOigC0gUr7fIUIUeeRnhnxc9znQbRE3uBwvsyiqcSY377sVeb0MWCsAeH5ysRHfA4gc6FyOJAheGRzz2/6W0JrMQLn7fvStEO9gpL5f22eV5fExvfzPoX8QCHDPYEiV4jRiWMYlOQ3tijLLoxOs3RHrRYB9aJXC8Dcjtc1nMk8+ZZZ5/eID1rlIWPysRhVh2vsjJQopJdnxs8SX3Qix3AObpqvs7rmm1JlfPr1sb1Yff8BwR7gWSTycCYVDasF79ayWYunvlkvDefRetelk0ArrAEtaaUz2c1P8i73G6FlpMioeA3SOyjUITVn15ZdtZfgitvlFOB+TAwU0JhXymH0HnoGB5RQNIHKdHVMDJkattSKoQ2vslwIXVB4frHmDbfYmG+Tg9n3CWiPy7VeYUw3ijewnQzHIC1AffNUQJmW1UNrSoG930uAh4vSLbg+3y2LcL5N3ru4L4p4hQAI0YW2E31hWIXDbYB/+8HtRzEA0tCShHmofkyun7MWWj3Q97HoCYRWnqSJSyfQGz5RRaMBYIxC1zxh/3taevpR0U70rzSVeV+JprxH1N6boL+N/B97phN+9DX1OT3sK/lj7TQVJeKiCYD5r/34TKPKvjhO1DiictX11dfDJEeVGuQauIjdUWf3B2E6wpXe/0guFnFDfoNuzkycuA+piS86BhsXsJUoA8rTfCudv2XKNErj8JGnGGWZvkdXjzOy8CKR7ZnOGYPAYubujYpRAXsV6xosHSgmMV5YcPDL5hhxhsaPY+YpES+6/3TN1CwHRgJVSrApjBDNmq89tuVjJRlfv0KeESgmGtFzDm5TcvWGryic933F3jEC5PjadgYEL68KqQoBI9+xnKu6Qh+zmBCbgnR7/ER7HaDypaO4RrdHpQygbv/fKV34chG/RiCuxfmN0DyfgZN8Hh/V0CS5ztE78H8tNpXUWKNb4R8m9+rL0nJOCiwpH2S2Wodq2cyzOZbiMAANAgHJXxX20nbGRkUW5OX4U4JbaH3im2iXDKIAYc+22+aOLoOgIpVdx5qNALxkEBf6O70EWduM83fa5e2TeJ1scrZ/jKvnO8QOIfiMRjgO2kh/4Nh7ThIuWgq4L3lM1NfKUtH70z9qhs0NGJ9jjcaChVcXJ4U7ytseGvbd/pzwsoa0s6uuaeY6527OwuD3g9yzRcxQNrkIDT8BFEcjHoaq+id4YFfS1FV04OIKi1YGU9pb6wskRORDtiD6hRcrR7o3N8rjtNiJokwXqgOboMIpJhs9V1Jde9UTV8WLW8AwJJib2dl8fG9d2VlSPbaFX058m2Aw5E8sQQBIKTCjECBDRQYDjXzlM0pWP3Tvs8qVKE6qC+la4bMA3/vwihDAaWr1kdRuKiIHkFpZ2bZIB4QAl+0HCxWTT5N7k+qVzQOf0sscIC+b5h8HCN2dZOOHEcVSE9HAwb0jNB+q185+1gPD6j5STY53xt4hvsOjgD30JL2nYQrp3W/wrDbKF/b2xBx1iDItDDO3Yn2/lfnZw0O+0UrBlTILXCIQxtc47HowboS8sgzl72V/5a3vyPA8u7sUyw5bi6GF2rYzc7+JeFLZaohMkgmSqNgpHPgWXetckb8s+KdEK3rynjiGpAjeer5N3kM340Q60/6BqJfuYP1aGgQ3LuABad4rOTVK2evu6v/lU7afMTdVNv3XGV+2YidmIHFoO0u0hpEInZ14Np9ua/ILj/jAKLkO38XJ0py6vnLQ8SW7uQxbq7Ns3uxXSFj5isVsCNwMEXedeph5GhMjTA9EYFqVS2jfKyM4tPeFJR0szrS/BNw5RuAz3pve0XxmXhFLrTvyGNDbGRHIC4KNV/NBq9DPdyrpe17xO4mSjDbmA122NeIEuZrHut0oNLIjDzYHmsJOdxDHpiOLF5vkMUl6eOwjzm4mcl3d9oOBMWjx0IRy4VACMxCR4dpPDEa//InPok1bBU0eMIV1MaQEho3W77OwWtkO9Zd6FVWNoE4EUySaldbH6Aa1E3+2qQFv8LSTfam6keLjtbCypCj70gIRRnwKNxxVp1zWx8/v/B+ptgHdq/+aZ196cQYTpW6g5q/YL6x19KpPQue2+xk8uAthLvTXR/APvkdlx7eSIG6zsK/OjIxSM7H4p5js62rF0h7H3/jgDua51utm7q20JRa+i1OyE+MsXgJJU00tdff16W3ufRYMgX9IDXcBWRy7Xe2wOEHr0DNWVFACdg0p5Sv15ntJE24qhzhQaKIWs7C+IhbXjSeBxEInOE5Kf+01GhViISrH4TIZ5iMez1j/IbEHXPIlRQWuJV8zWNoyX4yRxhdMsnu3ON3JMwOooMn/gnx+CBjTmP3MWzXG8nkQ4E/DK6vtcQDF7bwTIl9TjX7wnTpplHNaVpD5spnuXOP1dsYS5UIvsPW+cxnTdebLidYh+0Fex9vMn4Gy4NrQbrFH4s+C3MIKT/xcdHGIBVby3jG+Irmgq1iwW3jcPVSojzPehZuLdVq/rTrO/B3nZWtdgMjFGWY9vDKr80MmGYtMjwMI0Vr9bvEBFwbh6Bo61fWXqwUc19CDx9DbPsw9K1QQ1g9unEEy+6spV8rtMGpCENOpiffcpq+HSSzrrS1mtg3O3qsQAh7M2dqE/j7l3oaNgpThW5MKi0jFHyM0kaWd4UcoFjSR8GHt740cIpTG0NsKpm/efsmbIkdZd88oG2mIA/NmbyZrJnSYyWW7GL+zdEM+3Y0mHCgKRjck78CCJHss6CLYlC2F7MIihtEwE/8wS4wsth+nkOeXW4gbWAXaQMqqYddCDRp4gGJpGMc/D6UZfOnK4450+zk0zz0cBrFJVvHn4q2v4BtsDJVpJprPTBzjgqZNE6YoAgintiX7TfBmYc/xopy+Ud9RQ5pZHFylEXykrCyYE6oY1OHbxLBg/3b6IkjJdu9ff3ha9Gqypf/uxc/pJ1GaPK5oul+CMw9GyWznGpPK5/zjcBrAhebNPgaSJjhD6zimHIeybdsNzRSX3Pv3uPyB0Zqke4JnqMmGNI12opfGcoV2WBzTkTunKnoEPI8E7CtssNeMKzf3oZVy7aJGv8acRZv4siukSHPlxlqR19ZuQL/F1KAJEIuKhozJ7MaOpHwH6uWcRkGyRh0kYGU7Iy80Btn+pg0bhrkHE9b6pgRD/s/cjfJHX71PZD8HfL6jyJPVhzcNp2dHQYLerfXAtArxvRpdKH5M6Z9N2k/a2MRWsqbRCfT7RB1C5rGwPH/iATryxjNxE6pPaq1yxkfmuHK82/unhHQgAiHGjBwPS4oGsm/9BiHkBw2SKNd+x8rw2woF3GDTX04vEd3HbFQnePYD2LE5GZ2HBUHbCFCJyI5u6hLTZGsrt9c3uzDaPsfckQ2wANjHE8VOnv0P0al/w9KN42YBc/fLrmf4z9ZltuiAKk/72VD6bWclVOQIdKE912At1n1LT3KK7OWcbRCjMDvgKdaLvm4aBA+fl4QqO2aW0oKs/VHnOtJ9HyW0/xayqFg64iQAfDISsqOi+/ilf74UzJLQI73t8pddBJTYgJGQIOKA+Yg6ytItWBekXSMp80bdXAJaHFxsxpEYf/OkLY8deKLENIVNZhcwQFiTj4KS+4CzWKyS9lAuGUK3Hs3CsaCPQsMI3EvwTakFagIMCoh7aY7NQMPmNNtXuUmGTauESDMLojsjSq/yzzUGow+QAQ/Szd+6DUHe4+XWJpxLCQeZzoJ4VKRKy4694iNXlHOFYWb9OX7H5KomyOd4jzH0vE5Xv5tsE1N++/6VDGlRFvbZFv/oZ+SbVW9hdbd40/zUKgcpaoEV/Q/2Oh/tv9E7DxuBvEXyTyiEIFk19/mpjibcfsvqzhB3vM9jCDZC8N4H76BfhTDL/ijb+rfW3h6K6/KcQb3k7bNCDnmhd8vG2pErkIzstpyutfN6OOgGyp63vPYn+22Cbce4PBeDsllKmdAlb+BgjCC1OedlqHI/uIjVQwJWrevYzARIF8vB3tH0vNdRR1FbIWpOmVLjAqQs7APSZETlw0tx4zWqjuGMQ3tph0KY+1MoGlPhM/slaIAMMVRV92aGNIVnHqNxeWm4C8MdO6eAUWOkRS+3avX9Fz3yX4G6Dy4Jjdj9/UYn6EmA7pcQbtfb3frnoXcvNNYZ5gP17xHEEGCe+T5p/KF7W5qnFlxXF3uPv79UcrL+NccKE/edymzsxnsmYWe3+T534+nI7AmbI3+sCf0dXwdJPUeo341G2VxgsUeBKNG4jOBBzJPA/1O4rUshBNOAsRKfdFBpPCaWybC4ipDqynQgUPIDcoaotzENpg+FxPtibuz4fn9vXR2HswZKPD4N8bqIQX3+dNZpFqd6K8PSywM+nK3P2v9ZmoUb24L2hqOmJk2N42j+1dfeOpbTg5lGalV3cdp5O9PUX1/WtrV+dNabRybCGlvnB6fksCqrh32OHl1Ha1LpWc3AANDUShD/g71VqBge7woC3u1msj21wUsKW/xUuk9FGTDKN4eeq1kJy6dg+0ESMRJYQ5Ur+R0XdbjkqyrDUSlyzn8a+boWUvGz6IvIpvDr9cYXhVqbthNetcueR7s/u7S+MZF16qM1sOYOZhFmIdvliDsI/j9AM9U7RmKhO3kIIREjNIVcNaS9mDx9n7GlRoNYEjUgNbU3JKrF0iOcSNAZxAfreymkI6hkOPuBYwtrexzuVmLsSPmvdN+RTfHG4UZcP9bxiaFE392tcq2EANyu4Gw7io7k+hl5yHEtZZiDsKFVQt+5yCWtXKgOY8EZGAvDu6poEIeKoE7b4tynNoL88Jci9TwAyPbcmWgdnPcEDAotsW2Pci2rSA17zJXA0J2vqLEhPJEK0dPVaPvdLBljwGJAiQpOsCEnOcBG8ro1JHptvVlz2LeRa5vTBItGjsNw8gxS0Jo340r6VbV4rlcSCVpXp+jSylqj9jBlawFygZKHwAvdpFLh4vedmASLDqVjnJBTIcQorU40KiyCzBiWdsrBNRHXtb+ZH77nqrNaDnkyn65JgTT9KkBU27krDS3ybqVGCZ53J44RXEa9AE3z0DE/1tUXSqHbwiFXbvmWL0cXGMbFlR7phWfr37I2eXWYnoxDDO3MdpHl4Z5q0/FgzghBam8Z0TSkalBQZcft4u49R1XKoJ/e5Pr+V9LWJEyo43SgYKDlCwKWK6B3ebiqH66lXDCiLGNwy8WAdPoNCntXWWt93ADid0cUAmO0zQvpVvJ57YJWXzdGOhF/2iPc742jEOEI1LKxUcJHJi8gSPzJ2jvEPckyDnfq8N0VYyp/LNkEqcpbM5JIkkKVU5fHmJi/UcP1RrfuZySnCTOjvMJiuEwoX1bUE8uWRcfgwR9mimQoWNXUkqqC5Rrze2u6KkyZSyCXGxMgrdnSCmis3rDf+sIhouEtriuz7U0JnXSWOrFPqndsmIoPUUJWMCFI+Nc257DTLw2fM7RbvmmKBVeUpcO3nFIplwJFpD2fOZYlElP8/9+i7In2b9uSkJIkz0Kmbwj4m5xp6jxp6XWK0ccSu1qGyt1brw9R/T9AycNMbFfhu9R+YPGy5PZClXhKZJrkicXznRl3botR7c6OO3I1zEbpFMvtDVQF8A3l9GnuLJH+3xpeWIYArc8ydONBKjT0sq5HIjxnnhLGoYqxz4V/nQiz0x+OnvXANsu0wehaeN+vMIMQsD/AWNtGMFgXqfZF+UhVrAAXGO4q7exwsJwTXb2nt3PzRjmAI93GCLKtCIMajpsgyGgPOXJl9WPE+EIw7EvCjslEHUFKbPLwkZTF4SrpSPnrxDzbEjuunoluCOrPIZ/0MGT+aC1GA0u/lgF2xxToPfpN+dypPpFcOQGJj770I1XdK5Q/0NRTifFxtyBJp+mQxlM5NxjcKKCEYqXdMbFX+++P3fLSS3f2d5tQ9o4+BbDfq1ToPZpBlRfOrZTodPi2aJLbAfo+4S+d9ocX5DCHiwEbOtPjiPaH6t9msv4x2O/vhTNwRg8E5yENQorDkFZrhE1zbxAlTwmkCpbPsbBTqiZZ4oqBY5SuO4h+CJxZwTxdmuFEEX2tUP8R6trRa25eL5W8TYYKvCa3QquWznSVXhT+yMfdmc4yiF7lZCqObEifZw779Lc2SPCt6wpHNyw7dibkcqdyq/vd8+hauSjkxi2+V9nfJz6hR8uiIUh3Q5cYHJzmuK7YWLad8WhrDiK087LSlmnn9XhwC/nf8hM6xC5xuepACpsfBQu8cCEbufvc8hkQf+0i+iDnKrWAZzWgRO164ZJmz+c6IE0m8Kf6fD55sdk9JtgMsfX+dJGw9/fxm9EAhV4G6ebKFcXtF4c2ZG4gdTAGTByDjtQScfhib+KmgfTH8dJdbdCNl01ZQ+PLXU8rcYzzOkkvEyl7jckbt2EpEmnm675UYQJO7woa4A76AXTEsuub0Os6nqIaXBcgSye2sZ+3RdUkf97xyfoElfRQ90RuP+GjaDQrxM6lGHnL4B5v7lHOUFngiR5kmU4yfHY2BEz6VGfRxBev4i/pBmDW6Jonw355qppBQUsRMgpgcZJSGCJoGLGHa0Lo83gn4M4H2e68AGCBo8fDcxuvxNoZHcZDFcctNewAXZgIvzl2RuTTCLsQCoXWP9mE/FfLOZyvMIhM3OSU4xVUmlsCTHAi/ibENIAqcvBPug8frJh0di02nRn+dmiSbhap6AbzU3MrFfzdP9D49AYmwcOJgKkL5creTlkATE5YgjqIvw2AK5byNX1rba94rXAOsJp7zKtLu3zstCBQwR1zhuD0jdZ78RJC3w8g6ACZhPrNU4q9Wk3Qf2EzYWvGx1D7zymgV0wyYCYZUzEBz2noSJ6izlXeFppeVv3TJZ++4A4pHOlEAE9xqTIAYZOkM6/CD1FWVwh8TkgbCVBbii8TgEYDzjP/7Xp7JiZrAcasi8/Tmg9yleNJNk78S1/dD1r02nTvMxsLNZofk+ZVVdfSdLQDfIeRhwSC133bnnJuyyf9SVrT9N4wXBGKhwni39smIx5/GxtkxjhhXEbKVZfutE+OwxnRMF6MTb7/HWuB4116S3ZbXm0YhbAGU0N+bMOEYlZOEZOXe4FXOTil932G+83u3jkqbTiJrR0rudr0cYJpGvnM+F84bIfAR4IEF2sfAvD6cXKmWXUNYQM2GJ/QDo8oAD4Vi0LiLfbVP3lh0uh6tMc4Bn6H3uDarYg62dd/gv0U4N+VLIsjesoOhYIFLytGGn//7mRoiohZh8wjEdVEn5YL2pr5i9AbKo3g3pwFzeE4gNL1MdzqlHU72RzSAdiJ3RBOezKXqHs0G3kVm2s2pkpXXS5+9W/Y66+wOm0Ms79e1IqwASLZ9Y+NugzTUqigbhfjy+XORVjK5aM6awgcBWuOMVcSM39G6nqt0Ts7rzGkoly3pYSy32R+emFyzKxX4Z0b4lvsAJmAuwRZ/vk7pZifIXEwccJO4c8uH3YjWEibJxw6ujskdT1IFwhuG0/5D1ArPULrTnad1T3w2lyrhXdGTUzhg74/JSDv01U5mTC+bfrpJOhysc6zfIStL9Lb3A3hRhCDqFPJODBN6EI7FDEQAYzxAx4yxP9GvaIRK3G3Nl6xOl9Uo44tOOTK0+0BRtfgbGp3U+FZ85fK4nscsHFpW8w/MwHePeXZPY5hk5dDB5OfLAjT+E/YI27xo6C3yEfc3YX4izR+HnF4sw9lQPJSrbrh57PLxCWgYYqSNNvFuRazHwfHFFN+YYtOESddj8V4qqK+fSdDtyJUXXF5e+n0jkamMb6nlmhE0salhyazzNwfXlZiDjSeBYPcWuAhjrR4XluFg6PBtZk2ClbwX7raT632EeL0myKZN5uRHWAluru1iKjpoU/eJHWBa3FYoyD25LmACkmkclRmlugDIujy5kdJzCMb5eaLUTZenuOdDuazSJxuRPxlnCWOQs/PWId8F15vo9aOEzvp7kAzwx6Fl7aBMqYd+qXDpp3kuFHhkl2psmEBovv0z4c+N9XRQIab+ufZ/xSJobdrRJMpt380Jxu8b/I61aAI+cL4sTkI1hY33mbH8AK5nfcxeMd/D/kZD0DWF8+EQx4CF32WUfwxtpcTPTd8ETEv9Snjxs3mACHZS7bs6wIS+1SSjqOZ5TQe3ETavC6iPnYUmqSuyisZhMU6KcsanVCs8gXrlRdN6Edqh1ggVkrTyxkmjDZvxiUGqEkjpiTr5CKFHUDeRGtdaDIlI52bJ+2hZAki4VWTPQKDDpe7JKO3k59O3W+XambyITxGMLXSAd3xdkLKVYZrHu3GjcsZSrKBLBgqdGga5i/SZo9q1l8y8AgOEU92IZ36oWI+U8f3PjT3oaMIqFe1u5HWK2XTpTx53h2HKIPUvaTm8FuveGegGdRblcyCj3ewYFagoWAsxgkdP2RYaDTbLklFxicaQbO0Ckc4CHgbRCuX9plGY3SjtjPOHe990kMkbkdcq9qFFVWI23RfXRKwZ04M5s6v9lSrMzDfKYbWIGGukJ8BDhKLRm46WwvzvqOsa2Qfc9mYRRNDgiYQH36w1PMwpXeuya1RjTBwetX1IBDJZmhXh69lub0vb/AIdZRBjAxPEsnfehcb9B9OkgWQEB7X2jw0hihDT5Ghanc5N9RrfP9JegvR5lldjz0GB4t+Bul+Oz6fSzpKtvw1mYTDHDMhvJyaaurYwUJGFYz90ky22YXbJvhDeX0drRVweGY7mYz4axzpPXKjeIRrJRdf1ILjzlFSGbMn+TcA3KIjSclFL+6gk0YiG1rhBwL8U0MwavKhl3oKxfgyNiDIL5eGspKIrXi1nF8wqwm9c86ajbJz1tzY4lIp/Cr9+X3q5/PveTCE3kOBFEsdc671ovrarnfMw6+UsmX3z/LQ/bdiVGEoEBAYFCJltbExrWmTbsO6vTSIz1jpb1vUv+dMbBguyjq1M2jiwXg+PedYLDwpeB90wiSOHe99uLODMI/fogGMZBSqUWaYPXoMXtNhy0XL4+TfoOaEtJQb79fwsnHd9TgBzbWtuz4xQBjgf2t2iyi1ycE35Tz3QdDHb4fM8EDXQWAXKxqqbLhiGHnoDewruH5jT1SuWdYBcwzqZ0g40xjleVnVOvAFsAJ1Lq/F0pmF/oGzi2NmWtTTrAKAn8g6XFW+BJN2VXtvg0xxE1f953hAe8hiea3AWE7niTXVb+wAsBjzTthydpL24YD9iIxxcuH6NRrU9KQR/8hkBhY6r5R9kAURRaDQFk7jl/YY7uvNUpIUS+xZ4L0v/CntzDUs2mB+I/HmIlV0pgxJEzJgINnPZjmJ+sm9rkLLgcoOmu0N/dgwTI3YMKxXDxd18GLhVeRZcKGhmIO5+eHqknZKWSuLaTYSfmsBH8HxMHOj+w5baxwS+gnjrGOmM+VqAXG0gFjvdxp9lQM9V0qmd7qzeKDqoHab5eguaM9DCF6ZPf5u8JH7Tsgr9aNkSe61Elr/7ReGKHsrHFMq7a9CZcZ7J+9lF5eWf6zECGRzuvDyqcD+0l/S6yB8LggppyqGqHhL5GHTOlRRiWf72BA6HyY6JN+Ra3vycEpYdrFCs+C0DwZkPV57nHGl2j9M6Q1izIAegyONpJSxxJrDeXgelQcErrPbDEgGwqsU9bVMy+MlQ32+ELHKyQkn64UGw2gLXqstsCMRxBS7wvF0r0cziX7aeJ9w3DGMJO5IBvzAhyUUp5xyEkQY4GUw10nwmckcYbZ/CYaVcr6YVUPuPn9ilWfNcLsQtESo9aVako/3em3YAVL8Lkk0VfdWrkAvGDer2mcUj4W0OaA3AGMXxkY08yXVL02268fOf/GGybSfsfjDEuVoVPmGxiMAYOBrEzye2WHoBW2Rbq5yiDbIY1eNemtwDY+zbtFO1cMyFZdUBBPGm98CpG1bzMLzsfYBGCm/Fiuf60gVWORsqLylnb5qWplQg6kleOxV6yacXAhZfWHIm85r+MFoL6AgWL7bQwTsvX+N6YUO6LKhchYWvXOZtvRFzAKFryL41OFB0SucDYXnrlPEp4ygP3D130Ig8dFW8sQimMPNvJY0Oz1YfjVzTghIsK3c1wOTzUii3+/G8tppZQppghEA/T2nDry4bV65Sw6vAcU9NpCBBtVhBmrJKPBEw4l+bzQ4PLiGjIIz29XYcjX+FR311IYKVxdSmYHCK9zfSnsuSQrtWnadBBgPJLGQmncjqe/HL8H3RFL+YbkCv4k8ZKfjTbMCvGkWmDzDc8oZzdEIV3P9rpaCIXgXxuLldZ4CHDf5w90Xfcsm7eyRJ55ZNeoUtGV3fmDRZH6iJSHJ1CACr8r8PZV4BKFRn5a6dCQfrSHVkfi5vi9kZ07+G+qfAOqqtVkr4JoHd6EqDk5wz7fuRAdd6nGYjYiEFNxDxCD/45B+Yih8J94cxkxWtmf/+pD4MVVNfDd+I+btowm5NXQOT63qfXS5AFSfK5RIjV1F2/DTBB+uKkFPqmGGaGLTc03NH6k635f6/8ZjewlRjNdG7S4ye9xlqWHNXoN6pTK4L9S/PRdjqDy5NSsiHv5SGiVrR/icPd0zohpLol4EDxxcTEG8ngwcl/gYm7IOdM1CTUZH5WQBkEBv14OZKckyk2/mTj63ZwCrrd7ba3zvxJCz45zq2QhDQjNRYaNaovhTwMFx8f4nbwforfhZq0wosBHz1l0Pw/Yl+rYjS7T0zYSjpgMHuLhvIaVY7KEeXf9dp8MCwlqJ6wOkplb8lTQQ/5LLqg1EfIUATBSfgNJKpkckuGcDYTGSlXFRB4Loi5/3rodlM3VrVItTYIg2f7FA7GfI6Rj8tEVkMKFZFCWLDurKK6/yUUpNRivJv0g8lRbZ9YsKTCksYdUn1l9I1HFMaF9bUKEpZqQMZXbhKl72AwjWnXRlMM0i83by25VDvndnDpyo2O8r5ferChJQbCZJCucGrXzhziX0wpHVEBz7apyywEZnPUSfHwq63Zes+8rNnlbI6kRgBGdOfRKJZlC7V1k12GzuQbXI0cF63VnxUmSzU2mz2tQ5RivOW03ILd2+zehQ7lGHe3EwPx/OBtIaIW8Up4p7WufyU2/WUm6zM5yq2L8H+K06XgjRC/wTvCj8BFbM0OUVXknXGb+wjG744D9ptiJ8P+2WHtzXUljX7nU32mLk30legEgiJPMPkt51+smZwgX1EcDOM4zmFgFqZK00tpWL8XM4opT4Lk8M1cV11UEGV71o/EpR4jW+NVwh3ykUFDTHV/DwIjf7SD4Nt56wDn0DevTWPlIF61i1RMOIvqt/thJOhNmp2ju5PrpRiqJaWP2d42e10Q/LPKgB4685d24U+K8Nsoqeu296Ea8JlJPYWQO/8eeWhGBDk1847ATShtg+BNnehi1QT2ol8jnG/OA+o5LPqZSflqeG/X+J96gN1cMsCXhZX0boI8lcSUFRa8+PATyv6EKnXjWa60pkBlNsJQxniEDtLJbRSRhfzGcEDqhOibCNE7HHAVp8C08OFPdyWcKeAJsFlDRma/yyVvdzad/bzRlrmk8LaTlLgVRea3a/9L2zp/L3x1Fyr3C1/Oq5vXRjofYLKcW5XTxysx5fNw+fRp/V0qOQp8/he8RRvZtTQ77Ehr3b/H6SCHJVtE5pA1OrafukjZyJK25h1njXvMCz4D7Rb9o2NxD+it13owGFAAMHb5cjCp+xZvvrxajS53Gpo5/ETXpdszkwGdHigUcAqFvwB7XsK213ddHtiHTE1kbWYXpdxd/w/6y0JoqBViW/HgzaXk9aSMA5L5ZQK8PCz+loYQ5oV+zayHeYVn2yfRESLWhY7+mgDgg4Cl0xpQLyat5VNVoNcfWXq5VMfFxLXOqpoAtTeJNRpsrtHXwacqOYSmB88j3UFv8s5yMSm33NmdY4dAec+I7nI2+DRu5yg5jIh2/OkW9U1Bug6FERM/nIVMQZAnQk0pm5r5A3Qjn339B8GP1rNADjskAAPvfeR9CRHHMosnJi//czfUz+yynN4vGoUuRlj0TF9wXraATzZza+u/G1ZAAnEsBcNve58Xp66yLSDYVVMfyhdbpGwu4dp2FKv5nAHyGATF34gZ0Imb8t93qTfg3puQ/ZEEH9kpFGovoVHk61rFRD4XtXqkzEZAS/oQX6LxAyhPpZTxzLhjCZbRlKLTkoR7f+cSM37TGg3nxjgZ3l+RFuRW85iKqHfL0vFWLaD85aShRI93QFaiCDKFCsFB+WZbR/7GwrTXoE4EIbY6+pqmAhgrA9YHWXvREgcinwmGFPtwkPuBUcavdPmUNuY1vZ9aKGAnv2r/Nah7sCGoYvLdRgcvunRGtKOJLr2AntSoVOvK7sFkLPG/ilzxOftAkw8uIb5A+YoDNO+UQ+2mZ9Q0OlR8y6sQ3B7AurlSI+9IoRojbZ0mt230uOcuZiw8z5LlHUNxL0bjTzcdKz+6hFtVI7G+Put7bGni2LnQpdlllzJBFYxsQJAWKacB2o4VSctsO6XM0aeaBkm2IBrYcGngRVQR46mfpFOvHXTm6ftItaJDMHArePVsX+CslLSgAAfi8g2r6NuPnIg2+4u8hTAaqkfiJbp/bm+wEHFhh4pn1I6ZjZ6eO+Vk0e3kBkutsQaIIcWQLlQ91z/V6nCkFkA1YTXiPHZoAw4ftBb/meZQlobX5nzRqC8XwXHILoXM7qgEq00F9UbQE/gCP9JwWkgI2xWzcfD8OvAC9/IXWzfEpyl4oVyDKpBAjzsu9rEGUyzwDl8pNW5Q7NpTjvsQzI2cHOvmMs60OZa3gJdT30sEYiy8Y+Evwj5TldlpdtVp4XMekSnMEOHyHfRl33c7ru0j3uMVPlzw3VRszW9ZQJjuZoi1Y/gjcTwrQ1djxCEGDStGPVbLtOMPaoZJIXHRYbx2lYIyov/MpjcTDd6kubxSsipqLi8k8Bob/j9HNnTLPID6x/KqzqoSoOAh5e3zFFVEQaiX18MNk//hLlE8d3XPtoh+Jf8M9UV/dYz98awH1Iv/PUMqTAl+IvFc1x7IKPat4ahr7N+ZmO8w0P+2YF8cV+T8ldUDbVqa2oHq0hYDexqt+GBz0npQpwzea3ufrGiAa+TOvlLAAMQSgGO9WT1lkam4Azq7iC1TpwsMWTi8T+6bXUaY9Df9HkQ0+EmpYHtBWEr1Q9VIrffJpS+ynWIE4WQiDEXR54872srhQ2FsRlbSHfvsKDSNUQLxkO4mCSn89ZAEn5PIxLkYVteayF28IWC9q+AXxgFNJRjuEvb8pFMg/NVxpHl50yoiNi+vppsleb3xotQveY1Un688IM/tuAEAoYkhtyZTgCecX2POnBWYPjZ1wxBPfbBI7M5ZiEPdj3usa/hexBwubGmuKNCz+8TwPxJhlq+GZ+5wmXXfQrZsxtBQqUGHtvXvuenZBJnTVUKBPtlbFIXo6LfQm12iVRJjGWEjUoYAyiyZjbJ3I8eV53PwISfAKCez1cSCA/d4PPMwJiNMEpDChW3fQpLZ7OW/DX5awipzsz+ktkQycB4/Q6beoa8Ya30Q4ut+79XJC1alaquwfQrefsVZ+dU5XvrdZ+Up9brAbyXAu3LJ3eMlKO8uGc/FvT0oc7e/EpQIaRE2KzUbdxH1FLSrWKHVuJi14OpzgJ/AROLUz9zXoIbu/dVnU2Q+pbDwc5AJ0GDhgr4A3EEOXwXcUdwL9tcw37fOKxowZdGUOKtbuH7DflHIJ/AvJpM2oFGPsVvqhd8G5Flj947heFp73aw+PT9oT2H0/VHtg59rg13Ifw6P0BcthUXjTAL71kQflFOkp/e6ZSzNGk+0tFvB1ITuDnxsjudZrTThCM4LEfq8vj9tz+XjD4day3dou9MAnnxBm7A6LVR3MbdRv+QGsbvn/3UuQyhoOAHxURqa8QA2us2nsiCQc66Zw2iTqX/G8XxLvzo+lkp39vdXWfbMHcoR0Sc2hawWuKcfPPnShkQ37w+whpmtk8lyaSEu9QUskswDyICR6e9kVcGttYwUAR4Grfx07JUBBtlp/D4DSoNifVZQz/s2E1qR5UoxjSKQlg6Rk77kLl+vPoHGn4hHVaz7D/hPCz1RlwPfCx9sDNPKk0Zz3iZGJvKkWkzlfov/C7lYR1J8tA9xJSEvnUFu14Vp9tngu22nJ77tFWmlLEfsoQ8CVWyezj0f2Pxe4SDHkmKZ8f7127glYT9FPE4dEG53cICiDOMuCWOcKMjHTP8JGYOOaNdvs2bV9ujcLXn0S2WiNk4XCzr+p0MLj1KGzCkaWmurljWaGMSmopc+9sj26V0U8vD/wroKakZTfbzf8pl2duCWdsXuMoRL/O4Ei93oU8j8wjuTE5a4AYZlBYYYvvdHgbGyDGXBwklBh7qrfAytHNsG2VA2NEobQ0u07bGHejlbaEbnqTzW4ObwhgOBM0cTSYJ2Qa2naV2IYh2Rbbqj31tAKz49I1axQy8xeD9FeqjI0rHYGUdlx4CiViC2T331Eh8vsg/hUE+W8ypT+hZ0A7BujX2tCkeQnjNdwxoxQ0OT0K2Nrmo+ku+0rIapFInMzDWgt6IHgKWccxKmaUWzpxgtb8x0ZusB8nzwlJLEMgNLJzoP3C7kQbTAbpjuOoLGy1nYOw7eZZvQssO7uJaSu3YyYHb27OlEWPnHJ/tdMj4oiA3sDW/3useSLdc9m37ZOLLc6+4Sidy9wYZwAU45NteMHFqf4qqyjT1xU5SjeYN73K3WrsovElkHU615CY6jj8gDR/mdndhoWn9RTwAcKXf/Lap2nD5ejLDycqV04VKA20xBC2tIFEXeyFukzQ2VU0BW+59LJzP8xiVFGphXPwx6UoP6+axdHeMBf7IjDyo16ClowyQzqg66v5GPwlA0qPLSSbdiDh+tjLRWnG7mf1AGOs6PGWRBerA9wVy8PesqVWv+Jgqh8eFKWzsUUZ8skFUinV2Kf3qhrQMTMiunvtCgHKmbKTpK9LpLiIuMwsguuvX3HV88EYJhgWy0SsNEb/YIIovDda2zpaKNrwMH5XI9JwLlFV0o31ZMsSVUhOxM9bHxChQiDate8a4ELCam26/2Ivf0AOkPOrZqzdFtSedhw372bHSn9oi5xkXYBGKq3EpHr9C9MAYEx817T1tbMae8nlce3i2FRFQm9WlxCbK4FMnDAptsDs1ZqwssF+znzHxLWMwr/ZVB31+yrmBxFRtY2ikOUaZ/sn+3g1O9sj78+2qh4mIupr4vbF3foSEfIo7mWHmjNh3gIUHqWJ9qI39iIjYQ6bxJOyaq0NaRb181B77gxuJ2EdlpjRCVYZgh0TBvDqHEluLbgQrnku2AGjMfLnCQb/YXzk8fiHoOkoMXwYMugtjG3L9+8k9GS5YQomdknGVHta0eml7DoyIgYNTWVQZvHIUjw4k26BEnY+zLBTFUTO9NEVFeoGxkSOld1H+yiBs2S6H5pmVYcpRLmd0ODD+UPEU84B3BrKgUQMAUJgmYIpFRfX03Tr4Laxp+H4nZxD8I71UjuVhB3BtHAlZ32o7B8D29EdKqOWn4G8OSU3psl686QBoo5f4MkcQRi2xfSoL2FH+9f6HDdAP9/KS2MWvQ+NvYUZJD/Ph2JAJUh/S1iNWRNlKR6uq2LRLWaqk83CW6zUmbx6svie5TZ4vnTe5AP/YLm64ppIW47UCjQH+LvUd1AcHPgJwsyv778DFCVpAYq8fAV6Qeeia0Qb/j7vHrszJspIPxCbc19Wo+c1yV1PVKGRg3568ycBHcTDBb/6u19+YumgefFH/wI/QyqjyScpcT38h4enhpOu2XV6Wj86JlzhddG3L3B/ksLS3wh9HcKop3TIIcuB9vU1LAeIb46pFWxnO/RnDXswLoRSg3LdvLL8flbHVFRwbztKK5vv8JxttLWh/ZRSpmcZwYviUCAYvknvOUBjdEvC/bDMsA3gwYnLBuTEjjAoyrEKAKd0lsGLv4Z+5A71f7kbv1Eu0U+eMDVH6cmKN3v8Cu/9DWFnwPYuT4I4sQRxX461qoU0Y0L3e21HakaCH5IKQjzabhwYcqe1ha4WqfmK29QaCwCrJoKJF/1d4tTomV2SjH81pwzfy5d++8GHazcppogncyQNzmTqNE+srx2F3pE37XqVSmgvzhpHtEO1tOFS3DpUwXxM1IjDRsQmtml9VMy6Ee63fIjXeookapsR7Q1nNXxNobH224X6uKhIWDH2pJ7x/zcMZvE7wRcA0wXvl4hbBEclHA6FLxqvdLw/mjJe6n9pY6dOCKQzXeCEbsVHB0C++6tln9mgmHScGCcaX2anlRUBEC2KmMQ3lr9BN7AvRo6HdBgmRQRzHu6GdQkBXP+9bwr+70YVrzt9PfEynWJKy0XEFf+N6sR6faeDb068YYzr2HmGLVzk5+yjm2b4YMSljf9GPrm9MwANXeqP04rXVPABUx/QNT5Le0urLU6DKOxgcrPcECbJCRou9NTMCF6NZ2MgT0QLJqoLNX7kuVXnvf1zw39Zs0KD6PBjj1Isiblf+vzqjqHEdVWswWaD39fd05lxk0IslABRyyFm3xHibyg2cBcBtmP7AYfBOpEEMFOHGMQs8xu1djcD0VeYyHiC494JlX/Co5T/Ggb6Vn3FjypbWvrK43QSvBBmG8/M41cH7QaOVX1OXa3UQlIs54uJMDWkbtB/hMAFRTLzvdjTrwBySZqjKboffHCxNavGeew86DvdWOlTc7eM+kUw3Ctizdpw0CWx79P6u5RnePOxpUw2kJL9hykPS217t3DbtTTUmunzkDwft+BEwVhuUsdQJG9GcepIgpgcIxY0d4dylRp3UFs+kkSC1lPnUqeLfFWoBOGmckKvEFo2JoSdn4HFkuYrYcu+Hor0jnq9OCdS+nolCVzP4IgOkKB/azfq+l20QtYuJy/kb3uYoJwZvYdJQ/ULh36KKL30pYuGSSMuVntd8DLT1qUsYbwDDjY3C7t9qp1zUOCNP7kY+j7jlbn6vNGMg/QQrUZojBVYdHo3Bo/jrKHNMpROYWjbpGZy7C6GjKqz5jxAMqcJx/1RzWxL/h8Sz/HLlBMP6eDDn7Rex5U0ixushUNQR9K3jgHMJvEOOEoP5Jd1+/j0Mm5p5LNokNnz68r8hx3oyq2/0moVr06lX0HVTqO7AgVYaw3RlWJOa9Xi80+O/hWb6Hu30ebkHNuG0Mf/Rn2LtMA8l1AyJz1pR7jSA6I8FEJkygtKYe5PiWz2P2PnN4SnUT+i260aAlxxlwgtvCCH7Sok0aQh3O9Av1PY9QKHPD0DJlh7J66+En5Jor5wugpd/ery52sKIo+vXJm+JrD2FAU2vr51cJTnVnuLQH92grht23dEllUaJ34aNUVzK6pxOvgwMKKC/XnLYz6SdiGtFjQ2g/wYsklDqo6xiDc1bF4xqLAyK/1ZtOlRL/WVb0pu+/3kNEyFVoZU8CT7vOxuUbMwqbjSpoHQaulYHF7J7YqsmfYnC3wZ9dekwqVXIVklp+1p9KybdvZvU0qoeOV/KNPgkxHaDVL/rr1xvd2a0RN5Z0MzcHqZSxdDyk6hQ8n9n/GGEbmLrSDpwUjiurLiuSkezKdJBjdu3F6AOe2OIth1muGaSy6p3mDnAKgeFAnbyuyUkWftvb/o7XQStqIYRSNExA2jt5daU2z1XP3HeQqqlytj3JW1LSjtrhptQtkE/RwI5Q47KnheENOw1XWHOf/UmCgTGLz8cwrzhIPqVI0VLfSMsvIUYCKyRHbPv05U9NGu2iZqPzX1CleiB3Ya2Mxg+WruJ2cJdEPSmn0fm3ZMA6TR03s/znQT9as54+mS7Mc8Be/hNuvDpsh6wV7c0c0CZvmmL9iW8LU9rKRiXonv1CIy61H5T/NQ8LFWToWCbTgxPGr9kFyUaSAtykx1BRRaH4ruqHy6gT7PIA29bmaqADWUmhvfQW3L7Q0u2Wb/AF7t+KMldF1MIOMQWxdOBVTxI6KwngIWTQ31+T78Y8DnLlu19Hh9M8UUan4iir1j9632JUTZbrYE3njr9qCHWOr4sEUKOk/meCqnIxbMHEPkrDeF9yvzatatnbBU+rCxgzS0TJeX8I1U/Vq79N3t4MDqtsEn/kyDe3ys5qY1eoMSJwraRLZUkqQmDWfysGC8FWWy4yrNBgx6LIxnJLYVA4zkGzigBZt/IW8our13AuJD9ffhm+1zpg7MQIhWLFmfIH1Hhw4R+/YHRziPfrHdPUhnpgRRPcUYHknU+4NgxYI6ej58XOH/sFAdo72X6lJ7eOBJUS8RiUhXUf5gdoNTw5jxHCTXZDaiMzzKXjGd7qH3TEtw28guY7YhLNIytw23fyJv4qU408RyRoUtDzwEDfZjIUK6Cpn9G/V00IQJtY13Z9uUWKjvDOPiqS+kQ5ywu5BKMJP+nLP20NY2syYfhqlxNlIbdEKZJTgPdcx6tegDzhx70zkkb1OJsxEkmhd6NhqqqeY4QKSl27KjGJ0HDukS1D7+Edm8qkVOH8RtI8tFBOfmzotqkgZCCBEoLPtJX/1FpiGtyjGve/XAUVyMWLFp6YD8bEkmcFR63FQZk7NHiolJXM/tjALWrta9s/S83/mznC+H3xSqMX7Fpibbpw4fsDSODml2MId877AO4g8JHVPMaSxBp6rumnRlVlrwtj/MAEM7jMqGCYVPRl5AVzA52dl+kHsGkm5KpltZvt0OTHf9do6q1KtfDpTV7wTyCuLa+EdwrWEiB0vWwVfhFNM4fvk82uKpJ8lI3+Va0wdFdjsToM3YVDLoG7lis2TQTkFDK8sECsjS7A3fItiH1FOoaZx0Jwjhm+RGl8LvYZtxZj3qNMWn6gJ2Td8zNYTllBP3e/yAs8peHFst29DDeneyoqDgR7mIqe0HgQTI4ZuCnXojKH8gIiEzeUm9YRvI6hBSwyD4bNMi0HCwpYTwPSd0K7/vzmz53ZRekIRTkIC5OM0n2ScCaCFCOqDl5mYQF+0IDnhktJ8iSUG/vlrfA+Ny4yyntPiCXRIL2GOSZXKyAksL/k4ZE/NI5WIQLaO+T16w9NupEfU8jYusjyL2usE8eCxzF0xTkDlXZrqmbS8GFy0J5d+Im9D2C61lMJqXFMppv8xjeEpkHimPsvOeIICCqDNlTc/evsGolJnDQWE+vqpfPwMWB3AXx5VGHWyGPVfy0ntmYsMOK2wpBknEF63GKQSAY1SWYL+2MPW4HVX8xukiFUJnRzoeSIv60KOXCSQGx4RgIsfwEy53qUmG86CaAUNBjCcIhRvP5CGFMvV8Cue8yUF3CcxvfuDpS1rOKTCym1nBItwzss0x35dQwONcItXIx5K+gdbP0MTu+ushoSb0ITCQCifOgw6KDpojZh2oPsWjPWzVI1xKqhghSSzIT8QhHGhca6F+ij6BYDWChQC00CGoP94lp2IeTbE4zD68ZQnjhM2WaikTfe12KMkmE9e9Cnb54aVctJQRib9RSvNQmxzNUC7wdb7/HfmOALFQAc0klhcng01iliPzlMs0UzSmWKnrjv3zO5I55Q5oyyuQGguWBeqeywF3RgirRHQyzBPT+aF3iDHL9q9S6X8WCTrSW8zuCOi5ALFGVo3W7u4glwuOR+9U80KLlUCqGgGkhv3Oh0P6+f3XEVGIZl454EZd3TPcdWgCMht39rqPTlSnXc1pxsABlHyemp7UAm2k9Vtd25eHJO1vplNGVxOxy8sTsmEn5k1PrAgRXK5NKCLX+pRDnvnTh3jKRM20fWzQ/iMb+h1CQcB35h1BMCBemi6szj0L8mSPlIoUR9t06QDFmhn0DxwBkYkXsmCjWKdGQfbqNKRin9ZE+dlkTTu9kLkRb2TkIUqg36cRRSJjISq7RlJEtHPNoWzrBJ6jPNJopH5WnL9CLvJgtiMo75TTIQw19QzhgqSCW6Rf3irSldQCzex4+a7kSZnqCG0KTtb3hPrv4zbBnSrsPQmqF57s36ln0MZLE4ZiSmHIDVoOQC9mTZwdWJUy6QT2rA4ahSSGRmIZmIeSmTDWJjrJLaUa5n8R3y8Mqp+qSQojgR/ohM8gfR8i69x6vVKVZoxrmx3oCC4zWdmAI6+G3MMa95zGJwKOmBv2ZFUBKFPHUSSyjwVF0TV84RT5zQjWwtPhfX6W40hlELai3FD4aIvVwTvAs6F52PfxdBh5z5L7uWCzSFiImOiIXSyeaCuFBbQczqFJjRK+kopho79NRw/cTfHYgP4qw4T4w953OZyPW1X+5Vfbsul5BJWpM5/Widh5U00AVpS5oEnr/NHHXC1oLm9YjLyg5Fu9zxl5O/w+Mmcepkp/WX1YIDwCElWsSz8zHX8RLlk4Lq2R/VbyPwyAOQr1Kpqd69XV0sQmmROYkbaF5rfFS+LS8sAj+Gk6Zocr4Bso0s9z3vVar54F9bCUSpokTdEgq5bfP8Ro9ZB8mv9Wb6qmmlxu87lDjpNlWiM6uHD+sWglUHY1p38z34IH6ZMKwVR6zYwStir0wXRP8QjIG6ARj4siVyq+3VEKCGQJDhG5ZrtmOFHsJ2IVuMp3BsbSBpPrPw0IpqIfTxhjT/hBCI4vCAub8iHGcdzJw9ipG6+ohzOyobH1F6h3s1Hit496HtB4iCfKN40frCQl1pj/KMac5qdVNyk6ZnLdpBKmt5oft9K1W/8s/bzDkOdf5PXl+ygofW2y/yMCD6IgSo6kmoxhdFtw8gSp6znOuJLHO3MEHcG6psliXZ8Jue9/S9GmB6esThf8dpN09Ga5ZctGE79+cIRR9lGCDuuF708pvjeNMyJX4pIuIyLXu4K30h1/uSpQedr8Ew5ei7NoTky7G5zHdiGZxB5+j3q7ndvS5dTMhIwsf8UKQIlZZAetYO8hxRfMjXIJTJckhHtXUN6TR3KB1cQ92ZqJiRghNcVObdXooIS8OItDTM/CFhl3ClGHXG5mMljl5PJymTFLlx6GQUN3fjO3hVoqYyTvGh0GxpqZ7ZQQLbGYdXH5B6st90NwhaFQSmLZR5fFR69sW5pp3amHkWfKL0B8bxquM/GPBMOn3MgCSScsT5qBLSRzzK1NmyXtwWs/v/K7jwWicriHJQ5HfIWOOHwQZeuNL+LkXtyFyIkNdnKqzH3nd8V8DR/g/+Zxhlha5yXavkRYoxpC//cwmELQWe4CBT4L9/8scVnFqt0rq/I4YAEcOulPHw+RmLlWXnnCl35NWJ353WypM+LZcb82w+sTjsqCjt07CVDswYb3iVRcxk3ialBIL4EIud6SaK7h252trfYijAvM8D8d24mPE3TU0WMblwKUPoKaU5jKMLx9ODu3vEN5pHbxjps8RAtlnDXSdAsmpUoOrEoQCYih5J1nHzSh/tprh9Jxz8a1E51gf52rUmjVLeGUzxHEQdeQf0TjV5YEEZjFAhBaAivX5rX2wzaiMQ2a9GVyGYBd1ADI0+l1j5DzIZrXmk6hJMr18Px6oZO/cJNrcEedZqjAlBNTZPj8dOdGrhOGXrGCCJy67iDWeKzpc5zJbBvWNrad76nzxTQ0NwIb6kYClKQ5GgyPOFyF8Va8Vq62BglnYmZhI6BuN+0LuG9vw6Un26K9LaRulyX1fj7dfJp1h5CDkTBE9lvsYZ0BLOAPtW8vpJpAv+ODqD7RrUVc2D4qdy91nMIplYXc4iiddE2Yl+kl6637Fp0jMs6H9XJhf2/o/jYQMSk6yLh785Wq8YjMBL1NXURf/vTlyKhilWICNMOZqBkWwrhk9+R0+IFPtDJ8r2JI2Ooa7mJCEprBayUB/Sqw5A0pp9oKdQzM2YSKsMQ+Mlu+Bn92qg9g1owcICQlBxEl+wRnL3DfzF+kD7+e1xlm5+eSTcnMCMEkyTH9UEo1PsxyQ6t+Tkg+WR9cnUdJVBlKSh/YTntRivFa7HkuGx8AffTzotVyZthdJ1L3YZEc/mlxkG0ZsRdZhipcOyNQb5gDFrBF4cEuFj/bwGQcATD0x7zCV75WeLGijISkRNmW/pVSlyGRIkRv/SQTVWWTHT85xIy+W2N8JZEFo8CghsP5fvjTlHZQHPsC2+iCHtH+QvkUtre8Zt3NnJjhuPHhPIUelh4IzNfYkWSeOQh/fBw49c3M5MgOkShTo3DdVSGc/GXJ2HzjP9b6xKrFWZDEvPfGy/zrn01SIOdkJC3LRmD9GBn4LLcIyMW+jByeXf7PCdkLzco8QrVM9HtVSFUDfd36TS4m7tGOfOOFT69zIHjwJMYBdNjtuo7FjmpasPM69qsqodM1GI8xcld/lDQXNTnl9K0ggRJ7BX+NCS8lMiz1uFkuEsMLMuLu49VKjqDhoazFOCiT9afuBm9gq5YTqADVym/X1ZEwRdcFyJli5YW2fetGabDw24g49NoKU8Ca8Ohc1pcVTEsKrGr//6a/FhjBdq47KxwxDTWko2fTO2wixbgUSjhr86l+7hIDwILPACG2m1T74h2Z7uFwBzqR5ijjnjyyHX7McLdBFK1OA7WtAz68mciiGWvnkFZgK0iwzk5Dr0FqKXt1Z/eJ63mPIJYtwJyGZPUNUwJivTqOrEsVYopL97Yx9iJjCRVrOacaqHilFRfNRgWjpN6c8/VHf9QO/f52Pqn9rXcQOrh8i4bRUjAI4U4V0pokksfOwkVAILW7ShACuhGH9SMd3MzDgWXhtlAlochXGSmLrcLi9W73DeLmg7+KszAtCKSQIYsQE/cDfHdw8fi9yRIh9JjmWRQWN28ztQtXsg4+uerOxrWP9TwHmCfEqrA95AynHsNqR65oMtxqZFYYIYOsD4E/2mzGpFg5uDzF6OwK5xcF0dEm51fyurUyYrVaLHncVkJAYilvd3x7HlUC1pz3FAjUVm7pnnODtuUJF2uc6SCufe8ooOHNI9bltq9sg5Dxr2lSoJWlhFxp9sWtTS4pqq8r0w/j5pxFsqO81G8/x+3qsVfruMsaFmMtxwMbZQkEZpaBIt6vZg6u3ScPnXLYxfL8V/cFOGJhpUDyk/Ic8WUmmxFxHevQFhR0S6D6J48ceHnYTIps9sB+4xyKbXw6FLThUYhCPBB6hQnrFN61yRNem2Gr3r1cMpvLx6Nrnom119yMvEEgJxdlp4JIP2ef0tfNj0FYk56Vk4DkOoqPw76gjE95SzjkqbjxuhYFE+gfTYRW62pKnS2IksbcqUuwCcHLIpr3dQHIykOGmAhOUes3jRyzDLehkhJtYRngTeSyonRTOGI2XAUxNE5pxqf+1RbIMAclcZI/0UvwA0L7XOuR4C/9dsjmHpOicFAwGWN8b1Y/f5ZUuvLYslbifmIj7HDHYbu712byZ/ON30QKuHOf3brsm7/P9UR5uMMpoJJxULwwA8ffWL60OSzIfBzgobLA5G5JkkrucIKziaYD/gHSRM3EIZMEn61Izawmq+g+zXKVVRJj8dEXbw7IPqRyTelfkketnlOD6l5/bGHk1gyiP70NRMOCirGU8D2hK2aOUQ3CvbQUvG7rCXBqyQm/yPcD7WUK+9Z2uO0xyJ8iS4e42QMGfeGuOwwRyKP7xFk7sNI2tJ5mIWg0f1X/Rmy7fvnlRXfCMALwYkxPPcvy9wu9gILFp8kEtHP7Bb0eTzWxz/a5PLErc6y5CDxwgUf4uPTXxJz2LBGMrdJRhM2dvm3Ji9Ig/xlj3dSH2ut8kxkBFwo33hoV9EV7Ws875oNy3VR7dKyKmWI1hZRwa93k4ww9MvMIac6uldGUes579v53EPI5/W8GewtAgknnvYPh8kH8rTVBLDsTosiowJtS6oP5O3WQXKBiQuChYdoYpAXfp2wJIXpR+EBd27G/4F2Bk9mMNE/QiTZvgSAAqWKRL7oGrMmKmORuFrijbJr8OoYOxwcvHQRdKrVN7CyRYpIGtJWnYLuO3al8PuHMOglGd9pVekOTfAWLow8ugbPMlkvIH5ppWe3Nvpl2hcoOL5R7bRMYTGEoKUtSovpnxniK55ahiuMQNpkhfQ+ATFs5UW3nwhlwAqxnI/7aJGiov3fUnov4kfYmZZA6MckQc9uEF31bsFg2aIqEL9k8Yjr2+ySQRI2/qHP04Fmtwo6cQ14oD++lxUgwrUW5NDPgYVY9z00JS16VOXhnZT5o7asdxzxZ424DMmnfRg6d7v4nH8TgLEjISH0SdXQjshuSzwkcfimz94c1p5qAjFkhKKDA4FOD+/yjjHx9lBgMeukraKX6v/TBGzYpO1O3LkPP1SnpEIN/udPtAKumgEMB2Pqcuf0klkrrQFJisLIxjtwLLubtnlGIHNwEcCf+d+Pg5fDUhmPqFB4Ynf8CPe4WmTF2KZ8EuvEh3nDybZZbYsEW5SM8GFVuMCjYqyi20FbuwYGqfBJlV7/VRzJPl+QBATtZc6HsqbsPYEekymSLbXF5KbTdkUAcR6SZVyX2Cb/ixZxw0jrYGlaT3BBtCxTkyub1CSK3Qpgz4f9lsQBzoekPfB25qwQN+muli4okcu4yHwKnpl0iw9hKc9IvHvhGF2Arqs1RCRTtzMmia1GcH+NQeCfmM8CfoI91wgyEkezW0aJg9/msirZbGmgt1awlZrmj7wJp8IVmYMJR9QqZIs7Lt5tE8yjr/98wDBgC4SOFnGJ0+dwHhqTLYUNhRdWD+tEYvDysDca/b27jpl8BHklUsuivlK8zTUngLn/dNNeAqc4Yy9s5Tao18e5vXjqOUeHqpW8xBsf3/9RlzEI5X4U9IATQLFhHuClFpDW6yeGTfmuqrEmLP2+yonWB0vLipnNCxL5wy1Zi+kBEtSIi3xzeGjumX1XYPEmF2qeYxd68e5NGfuhSu3fjRy4WWvsbqhfwZDLlAKTXB/CEv6ACY8jrw68Wa3bPxJU8xfX18g8hA6il8t8OHfHtU0eSedfDyzpH3DM3Q5bNTdJ9L9IncRpZTVjr+/eMvJlWBlJsu2CBEtSGPvzzzl+NoODmgTLHubDHG3U7MSeX17pmF4dDd9TrvsyVeUWkvWaDT3crCExPkgnI7Cwi2AzCgTyqLWkdZlYEUxnXFeewE6kzjaEVF3bXFWpKOW+ezyJDeCB1jJIzE/q3iKdPs6gqfkpUwk/FPD+4pFnMnpk2/6LU+xOyy/aLuHaD558W4eaLx6icj25d+fGIotLFN1sUP9zJhTMNNR5mnvfT3UBo04gdmvfgxn6wxjSRFgD0o6USpuZpaD172AT5IQohB8pQSQZgGtep44SFu8JOZpGeZaRiUb7C5A6A8PoQvh0Wux/DYGsPyPn2a6F9ltH92Yxpj0wARqaB7Tj1vPTWqSexeCroC5PLoBBqSL1Jb3f6X0oJbX0b9HI+YLPkG8AI3P/iThdsxpWfwTXOoz4PkV107Ft/R5Nv0Ct0G5eYdJrf71qGiDhgFub62jfZ16iWzL8614f+f3FIIKIj0ldP/QZCC5Q1fF20Dro0s+1bSXUqyKtKz5Nl90Zp+YPwWXlPSkmQ+25mdap5nPBQJd0z06jbIzRER6XF7v3AGd5Yb11zNWwFo+hyxWizqjbyr4aQiNkGB+IJZmq5Namnp6ctGUhzE6eVkd+tIeQARlVeV7xrEa6wzfs6iBp1IaV7fbqr8TpTL17pTFYahFyaZrULP+2PqhMVGXA0CJVKltJ3IbJGkOPqLmObZ0VfvvJMLi8+9Yica1MPUw94W8oFPzDXXgJCfhIKGkx7WUj/hdjz8pne9g92Tj/avJXUU95XnUVvJgCvJvs2aJD6chXgRzxswONVLyPXhIdw5tn9zd9zeAiIbyVoxRvJE6c8VPv/lrnPan0D+wcd1aZvkqeD1/DP1weq70+UiBe259CW2XaJ5ze8sGlXrxtiL1SaboqtRUoIXIeMbwp2WDuQNMUauDIgEXevbJBg2JP4HgXU0KeitO6R2QN9u64LErSwFl2WV+KiAZ2fet+cMDYnjlBf4OinqlEXV93SAPm60Mv97nQbK8vS7xyhjvHR9baAC1xNLy2Pwfh2/aqr5LuCGlR+HUL/DhkyRDe8ma3fD5825N78JXbjUZGR3M0dWb+3UEd78bo0zLX3uIJAh4SKclAYElHWh405LPlKXh2aqQUaQ1PcBxmZvz1riNl4j8spzLtmNaUoqTQg4Xti+GWjV0pZ0Yzfm8S4t/uzQ2Vz2tKRAm0vu4kXKDkKQaHEJwC8J6c1MbDBhXXbaJTUd+cATzRVf05pe6Vf+hdQsGpwNIAbRENxj4D3MsCngMJnWyAf0IEHesxrlCZnLG/b0zwzZjv/YGM+kGrO82YWL7kOGND4I8gsbFI2WhLSXnnW1YcjyTt40j810+SZFwctPqtuP7ST5TNPP66caVcWZ3Y4xaaUzQeD8/pUIfBn1uh3HbYLJBr8DDGj+dWCOpukMGLvmsvZ2Xn3zD8vbNBP9uRQ7Kk2gEoRiZYR+Lv1yzG38YCghf4lU3sW7cjm4hTwWC0aadt0Uol7wb4zcJwHOgKkCaaWZ/pCy87LOQUO2LXvCWgfFXEUnsOnc5T0UAoeLiywTKCx+FQGME4jszjWx5oKcU7V/OFNqIF3EVU+fpP7GsDjvYKHE9NbX1mum5+cUUl57ZV/Itga38pcKh2U/BXfKClWXf+vnwrSJ0FgS897ybOq2ExqVdYg8Ix7XIuqlwOwGqXS1fwEbPqNUI+zCliGPz9GOZW08VAw=","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mysql-data-recovery","date":"2019-07-25T01:41:54.000Z","updated":"2021-08-06T08:50:09.930Z","comments":true,"path":"2019/07/25/mysql-data-recovery/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mysql-data-recovery/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-08-12T04:48:03.700Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录Maven源码包和二进制包下载地址： https://maven.apache.org/download.cgiMaven安装配置地址： https://maven.apache.org/settings.html微服务nacos快速安装: https://nacos.io/zh-cn/docs/quick-start.htmljava Standard Edition导航下载总地址： https://www.oracle.com/java/technologies/javase-downloads.html java1.8 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.htmljava11 Compressed Archive下载地址: https://www.oracle.com/java/technologies/javase-jdk11-downloads.htmljava16 Compressed Archive下载地址： https://www.oracle.com/java/technologies/javase-jdk16-downloads.html Mongodb安装文件： https://docs.mongodb.com/manual/installation/ Mongodb 软件下载地址： https://www.mongodb.com/try/download/community","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-01基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2021-08-12T03:38:07.705Z","comments":true,"path":"2017/01/29/mysql-01基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-01基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot; 该操作会在用户家目录下生成一个隐藏文件”.mylogin.cnf”，里面记录了MYSQL的密文的密码，只要配置了以后，我们也是直接使用命令登录，再也无需输入账号密码了，如果你想取消，删除此文件即可。1mysql_config_editor set --user=root --host=localhost --port=3306 --password","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}