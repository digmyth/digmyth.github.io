{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-07-22T08:12:23.218Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2021-07-29T08:54:36.025Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-07-29T08:57:00.409Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpmyum install mysql-community-serversystemctl start mysqld1234### 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。 mysql&gt; select @@validate_password_length;+—————————-+| @@validate_password_length |+—————————-+| 8 |+—————————-+1 row in set (0.00 sec) mysql&gt; SHOW VARIABLES LIKE ‘validate_password%’;+————————————–+——–+| Variable_name | Value |+————————————–+——–+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+————————————–+——–+7 rows in set (0.01 sec)1或者/etc/my.cnf添加5行策略来忽略掉。 validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =012当然也可以类似以下命令临时全局修改 set global validate_password_special_char_count =0; # 全部设置为012查询临时密码 grep ‘temporary password’ /var/log/mysqld.log1马上修改临时密码用以后续操作。 mysql&gt; ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘MyNewPass4!’;Query OK, 0 rows affected (0.00 sec) #否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.12### 3.3 为复制授权 mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@’%’ IDENTIFIED BY ‘rpl_pass’;mysql&gt; GRANT REPLICATION SLAVE ON . TO rpl_user@’%’;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1; mysql&gt; CHANGE MASTER TO MASTER_USER=’rpl_user’, MASTER_PASSWORD=’rpl_pass’ FOR CHANNEL ‘group_replication_recovery’;123### 3.4 启动组复制 mysql&gt; INSTALL PLUGIN group_replication SONAME ‘group_replication.so’;Query OK, 0 rows affected (0.02 sec) mysql&gt; show plugins;+—————————-+———-+——————–+———————-+———+| Name | Status | Type | Library | License |+—————————-+———-+——————–+———————-+———+…| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+—————————-+———-+——————–+———————-+———+46 rows in set (0.01 sec)123启动复制通道 SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF;12查看集群成员 mysql&gt; SELECT * FROM performance_schema.replication_group_members;+—————————+————————————–+————–+————-+————–+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+—————————+————————————–+————–+————-+————–+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+—————————+————————————–+————–+————-+————–+1 row in set (0.00 sec)1创建测试同步数据 mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, ‘Luis’);12检查同步数据和Binlog mysql&gt; select * from t1;+—-+——+| c1 | c2 |+—-+——+| 1 | Luis |+—-+——+1 row in set (0.01 sec)1mysql&gt; show binlog events; +—————+—–+—————-+———–+————-+—————————————+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+—————+—–+—————-+———–+————-+—————————————+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+—————+—–+—————-+———–+————-+—————————————+3 rows in set (0.00 sec123456### 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 SET SQL_LOG_BIN=0;CREATE USER rpl_user@’%’ IDENTIFIED BY ‘rpl_pass’ ;GRANT REPLICATION SLAVE ON . TO rpl_user@’%’ IDENTIFIED BY ‘rpl_pass’;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=’rpl_user’, MASTER_PASSWORD=’rpl_pass’ FOR CHANNEL ‘group_replication_recovery’; 123 添加插件 mysql&gt; INSTALL PLUGIN group_replication SONAME ‘group_replication.so’;124 启动复制通道 mysql&gt; START GROUP_REPLICATION;1如果有失败，尝试 mysql&gt; set global validate_password_policy=0;mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON;125 查看集群成员 mysql&gt; SELECT * FROM performance_schema.replication_group_members;+—————————+————————————–+————–+————-+————–+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+—————————+————————————–+————–+————-+————–+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+—————————+————————————–+————–+————-+————–+3 rows in set (0.01 sec)126 查看集群中的主节点 mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= ‘group_replication_primary_member’;+————————————–+| VARIABLE_VALUE |+————————————–+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+————————————–+1 row in set (0.01 sec)127 binlog mysql&gt; show binlog events;+—————+—–+—————-+———–+————-+—————————————+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+—————+—–+—————-+———–+————-+—————————————+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+—————+—–+—————-+———–+————-+—————————————+3 rows in set (0.00 sec)128 my.cnf优化项 max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M129 命令 mysql&gt; show full processlist;+—-+————-+———–+——+———+——+——————————————————–+———————–+| Id | User | Host | db | Command | Time | State | Info |+—-+————-+———–+——+———+——+——————————————————–+———————–+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+—-+————-+———–+——+———+——+——————————————————–+———————–+3 rows in set (0.00 sec)`","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}