{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-07-22T08:12:23.218Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2020-03-24T13:52:16.618Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位是扇区，bs=512代表一个扇区，也就是512bytescount参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2020-07-08T12:30:31.812Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-07-23T08:18:19.643Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 1234如何找官方软件repo.mysql.com http://repo.mysql.com/yum/12找到需要的版本 CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/12 download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm1234# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec)","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}