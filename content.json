{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-07-22T08:12:23.218Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2021-07-29T08:54:36.025Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}