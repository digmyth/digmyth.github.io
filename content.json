{"meta":{"title":"Welcome to wxq's Blog created in 2017-01-01","subtitle":null,"description":null,"author":"wxq","url":"http://www.digmyth.com"},"pages":[],"posts":[{"title":"磁盘性能测试","slug":"linux-dd-fio","date":"2021-10-15T01:22:54.000Z","updated":"2021-07-28T10:05:47.029Z","comments":true,"path":"2021/10/15/linux-dd-fio/","link":"","permalink":"http://www.digmyth.com/2021/10/15/linux-dd-fio/","excerpt":"","text":"dd 顺序读写测试工具sync: 内存数据写入硬盘direct: 直接IO交互绕过缓存区oflag=dsync: 每读取一次bs定义的块都写入磁盘conv=fdatasync: 所有读取完bs*count后才统一从缓存区写入硬盘 最接近真实数据值的方法：顺序读1dd if=myapp of=/dev/null bs=1M count=1024 iflag=direct 顺序写12sync; echo 3 &gt; /proc/sys/vm/drop_caches; \\dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync fio工具随机读1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randread -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 随机写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写1fio -filename=/dev/sda -direct=1 -iodepth=4 -thread -rw=randrw -ioengine=libaio -bs=4k -size=2G -numjobs=100 -name=&quot;4K randwrite test&quot; -group_reporting -runtime=10 混合读写7:3 # 读占70%1fio -filename=/dev/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=2G -numjobs=30 -runtime=100 -group_reporting -name=mytest1 总结主要关注IOPS参数和BW吞吐，这里BW吞吐是读写时的磁盘吞吐,测试数据与bs块大小有关，其次才是网络带宽限制网络带宽速度需要iperf工具测试.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"PostgreSQL快速入门","slug":"PostgreSQL-快速入门","date":"2021-07-20T00:41:54.000Z","updated":"2021-07-24T14:45:07.511Z","comments":true,"path":"2021/07/20/PostgreSQL-快速入门/","link":"","permalink":"http://www.digmyth.com/2021/07/20/PostgreSQL-快速入门/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"http://www.digmyth.com/categories/PostgreSQL/"}],"tags":[]},{"title":"kubeadm HA","slug":"kubernetes-kubeadmHA","date":"2021-07-02T12:54:41.000Z","updated":"2021-07-15T04:50:32.313Z","comments":true,"path":"2021/07/02/kubernetes-kubeadmHA/","link":"","permalink":"http://www.digmyth.com/2021/07/02/kubernetes-kubeadmHA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"mongodb-访问控制","slug":"mongodb-02-权限控制","date":"2021-06-10T01:21:54.000Z","updated":"2021-06-15T02:23:25.340Z","comments":true,"path":"2021/06/10/mongodb-02-权限控制/","link":"","permalink":"http://www.digmyth.com/2021/06/10/mongodb-02-权限控制/","excerpt":"","text":"想要基于角色的访问控制和数据库账号权限访问，那么我们先做好一个没有权限的集群，在此基础上一点点改 集群内置角色123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136wxqset:PRIMARY&gt; use adminswitched to db adminwxqset:PRIMARY&gt; show roles;&#123; &quot;role&quot; : &quot;__queryableBackup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;__system&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;backup&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;clusterMonitor&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;dbOwner&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;enableSharding&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;hostManager&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;read&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;readWriteAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;restore&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdmin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125;&#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;isBuiltin&quot; : true, &quot;roles&quot; : [ ], &quot;inheritedRoles&quot; : [ ]&#125; 创建最高权限1db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;root&quot;,db: &quot;admin&quot;&#125;]&#125;) 为单个库设置用户读写权限1db.createUser(&#123;user: &quot;user01&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;readWrite&quot;,db: &quot;db01&quot;&#125;]&#125;) 其它权限示例123456789101112131415161718192021wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;123456&quot;,roles: [&#123;role: &quot;userAdminAnyDatabase&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;root&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;wxqset:PRIMARY&gt; db.createUser(&#123;user: &quot;admin&quot;,pwd: &quot;123.com&quot;,roles: [&#123;role: &quot;clusterAdmin&quot;,db: &quot;admin&quot;&#125;]&#125;)Successfully added user: &#123; &quot;user&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125; 数据库用户查询123456789101112131415161718192021222324252627282930313233xxx:PRIMARY&gt; use adminxxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; use db01xxx:PRIMARY&gt; db.auth(&quot;username&quot;,&quot;pwd&quot;)xxx:PRIMARY&gt; show users;&#123; &quot;_id&quot; : &quot;admin.admin&quot;, &quot;user&quot; : &quot;admin&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;clusterAdmin&quot;, &quot;db&quot; : &quot;admin&quot; &#125;, &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&#123; &quot;_id&quot; : &quot;admin.root&quot;, &quot;user&quot; : &quot;root&quot;, &quot;db&quot; : &quot;admin&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;readWrite&quot;, &quot;db&quot; : &quot;local&quot; &#125; ]&#125;xxx:PRIMARY&gt; db.system.users.find().pretty() 开启集群认证需要keyFile,所以创建keyFile文件，集群节点保持文件内容一致123openssl rand -base64 756 &gt; /etc/mongod.keyschmod 400 /etc/mongod.keyschown mongod:mongod /etc/mongod.keys 集群所有节点修改cat /etc/mongod.conf1234security: authorization: enabled keyFile: /etc/mongod.keys clusterAuthMode: keyFile 修改好配置后重启即可1# systemctl restart mongod 总结1 keyFile属主属组及权限是注意点2 权限这块理解好各个角色的作用域","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"mongodb-01集群","slug":"mongodb-01集群","date":"2021-05-10T01:41:54.000Z","updated":"2021-06-10T09:14:24.081Z","comments":true,"path":"2021/05/10/mongodb-01集群/","link":"","permalink":"http://www.digmyth.com/2021/05/10/mongodb-01集群/","excerpt":"","text":"在mongodb集群中，只有主节点可以读写，其它节点可以提升为主节点后才能读写，从节点只能读安装mongo数据库12345678[root@node03 ~]# cat /etc/yum.repos.d/mongo.repo [mongodb-org-4.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.4.ascyum install -y mongodb-org 修改配置文件参与集群配置123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@node03 ~]# cat /etc/mongod.conf # mongod.conf# for documentation of all options, see:# http://docs.mongodb.org/manual/reference/configuration-options/# where to write logging data.systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log# Where and how to store data.storage: dbPath: /var/lib/mongo journal: enabled: true# engine:# wiredTiger:# how the process runsprocessManagement: fork: true # fork and run in background pidFilePath: /var/run/mongodb/mongod.pid # location of pidfile timeZoneInfo: /usr/share/zoneinfo# network interfacesnet: port: 27017 bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.#security:#operationProfiling:replication: # 开启复制集 replSetName: wxqset#sharding:## Enterprise-Only Options#auditLog:#snmp: 复制集集群基本步骤12345678910111 集群所有节点修改配置文件replSetName: testSet 并启动mongod2 在需要作为主节点的机器上 rs.initiate() 初始化配置3 在主节点上添加从节点 rs.add(&quot;192.168.1.10:27017&quot;)4 在从节点机器设置 rs.secondaryOk()， 用一些命令测试验证集群正常工作rs.status() show dbs;5 在从节点机器上添加数据测试验证同步情况 use db01; for (i=1;i&lt;=10000;i++) db.students.insert(&#123;name: &quot;student&quot;+i,age:(i%120),address:&quot;BJ&quot;&#125;)6 从节点进行查询验证 use db01; db.students.find().count() db.getCollectionNames() 查看集群状态123rs.help()rs.status()rs.conf() 以上三节点集群配置，如果在你的集群中资源较少并且其中一台主机不想参与集群复制，出于节省资源目的，那么可以让第三个节点成为Arbiter仲裁节点，因为偶数节点复制情况下，脑裂情况下无法选举出主节点。 那么在上面集群基础上踢除一个节点出来作为Arbiter仲裁节点在集群主节点上面执行踢除操作1rs.remove(&quot;10.10.10.30:27017&quot;) 回到仲裁节点1234[root@node03 ~]# cat /etc/mongod.conf | grep dbPath dbPath: /var/lib/mongo[root@node03 ~]# rm -rf /var/lib/mongo/*[root@node03 ~]# systemctl start mongod 再次回到主节点添加仲裁节点，并且可以在2个复制节点间主从切换测试了 123rs.addArb(&quot;10.10.10.30:27017&quot;)rs.status()rs.stepDown() # 降级为从节点 手动调整优先级触发选举，优先级高会变为主节点, 需要在主节点上操作 12345rs.conf() # 查看各节点IDcfg=rs.conf()cfg.members[ID].priority=8rs.reconfig(cfg)rs.isMaster() 总结什么情况下会触发选举1 副本集初始化时rs.initial()2 从节点联系不到主节点时3 主节点收到rs.stepDown()命令时（主节点下线）4 某从节点有更高的优先级且己经满足成为主节点的所有条件5 主节点己经联系不到副本集的多数方","categories":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://www.digmyth.com/categories/Mongodb/"}],"tags":[]},{"title":"Ubuntu k8s for  docker","slug":"kubernetes-ubuntu-docker","date":"2021-04-28T12:21:41.000Z","updated":"2021-05-13T05:42:46.392Z","comments":true,"path":"2021/04/28/kubernetes-ubuntu-docker/","link":"","permalink":"http://www.digmyth.com/2021/04/28/kubernetes-ubuntu-docker/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"consul 基本使用","slug":"consul-01","date":"2021-03-25T01:38:08.000Z","updated":"2021-05-20T06:12:29.114Z","comments":true,"path":"2021/03/25/consul-01/","link":"","permalink":"http://www.digmyth.com/2021/03/25/consul-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"zookeeper kafka集群","slug":"linux-kafak-cluster","date":"2021-03-15T02:48:54.000Z","updated":"2021-06-24T10:07:55.032Z","comments":true,"path":"2021/03/15/linux-kafak-cluster/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-kafak-cluster/","excerpt":"","text":"kafka集群依赖zookeeper运行，新版本不依赖zookeeper，但不具备生产环境使用条件 zookeeper集群部署12345678910111213141516https://zookeeper.apache.org/releases.htmlhttps://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gzedit conf/zoo.cfgtickTime=2000dataDir=/var/lib/zookeeperclientPort=2181initLimit=5syncLimit=2server.1=zoo1:2888:3888server.2=zoo2:2888:3888server.3=zoo3:2888:3888./bin/zkServer.sh start conf/zoo.cfg kafka集群部署12345678910https://kafka.apache.org/documentationhttps://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.0/kafka_2.13-2.8.0.tgztar -xf kafka_2.13-2.8.0.tgzcd kafka_2.13-2.8.0cat config/server.propertiesbroker.id=0 # 每节点不同zookeeper.connect=10.17.100.10:2181,10.17.100.20:2181,10.17.100.30:2181 # 相同配置./bin/kafka-server-start.sh config/server.properties 总结先写下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ansible awx","slug":"linux-ansible-awx","date":"2021-03-15T02:28:54.000Z","updated":"2021-06-24T03:39:04.000Z","comments":true,"path":"2021/03/15/linux-ansible-awx/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-ansible-awx/","excerpt":"","text":"wx安装在kubernetes平台，先在kubernetes平台上跑一个operator, 这个operator其实就是一个kubernetes 自定义资源CRD，然后再跑一个awx CRD 实例，在这过程中需要PV卷 前提条件，利用nfs 提供PV卷12345https://github.com/ansible/awx-operator[root@k8smaster pvc]# showmount -e 192.168.1.10Export list for 12.19.2.10:/vols/v20 12.19.2.0/24 pv yaml文件定义123456789101112131415161718apiVersion: v1kind: PersistentVolumemetadata: name: pg labels: storesys: nfsspec: capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 12.19.2.10 path: /vols/v20 awx-operator.yaml文件1wget https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml myawx.yaml123456apiVersion: awx.ansible.com/v1beta1kind: AWXmetadata: name: awxspec: tower_ingress_type: Ingress kubectl apply123456kubectl apply -f pg-pv.yamlkubectl apply -f awx-operator.yamlkubectl apply -f myawx.yamlkubectl get podskubectl get svckubectl get ingress 界面访问1234url access web;username: adminpassword: kubectl get secret awx-admin-password -o jsonpath=&apos;&#123;.data.password&#125;&apos; | base64 --decodegVEQRpzMtaFqLTung4TBF4b7HarECM7L 总结无","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"sysctl TCP优化","slug":"linux-sysctl","date":"2021-03-15T01:43:54.000Z","updated":"2021-08-06T08:03:01.525Z","comments":true,"path":"2021/03/15/linux-sysctl/","link":"","permalink":"http://www.digmyth.com/2021/03/15/linux-sysctl/","excerpt":"","text":"内核参数优化1234567891011echo 2048 &gt; /proc/sys/net/core/somaxconn 每一个端口最大的监听队列的长度echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled 关闭透明页功能vm.max_map_count=655350 限制一个进程可以拥有的VMA(虚拟内存区域)的数量fs.file-max = 65536 同时修改vim /etc/security/limits.conf* soft nofile 65536* hard nofile 65536* soft nproc 65535* hard nproc 65535* soft memlock unlimited* hard memlock unlimited 每保持一个TCP连接，进程就要创建一个文件对象，约占内存3.3KB，4GB内存可以维持长达100万条长连接，客户端发送数据的话，还得为TCP对象开启接收缓冲区，这就增大了内存开销, Linux系统里，系统级、用户级、进程级都有最大打开文件数限制 系统级： 当前系统可以打开的文件数，通过fs.file-max参数修改 用户级： 指定用 户可以打开的数量，通过/etc/security/limits.conf 进程级： 单个进程可以打开的数量，通过fs.nr_open参数修改 1234为每一个TCP连接Socket分配的最少字节数或说是接收缓冲区，默认4K，最大可设8MBnet.ipv4.tcp_rmem = 4096(为TCP连接分配的最少字节数) 87380 8388608net.core.rmem_default = 2129922net.core.rmem_max = 8388608 123net.ipv4.tcp_wmem= 4096(发送缓存区最小值，默认4K) 65536 8388608net.core.wmem_default = 212992net.core.wmem_max = 8388608 1ss -n | grep ESTAB |wc -l TCP活动连接数统计 12345678910111213[root@node03 ~]# slabtop 关注dentry/filp/TCP/sock_node_cache指标 Active / Total Objects (% used) : 3721737 / 4145714 (89.8%) Active / Total Slabs (% used) : 125168 / 125168 (100.0%) Active / Total Caches (% used) : 95 / 131 (72.5%) Active / Total Size (% used) : 821348.16K / 878889.63K (93.5%) Minimum / Average / Maximum Object : 0.01K / 0.21K / 8.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 1928862 1578283 81% 0.10K 49458 39 197832K buffer_head448077 447905 99% 0.19K 21337 21 85348K dentry （指标1）298544 297412 99% 1.00K 18659 16 298544K filp（指标2）288966 288966 100% 0.04K 2833 102 11332K TCP（指标3）233070 233070 100% 0.12K 6855 34 27420K sock_node_cache（指标4） 华为官网建议配置华为优化12345678echo 8192 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlogecho 1024 &gt; /proc/sys/net/core/somaxconnecho 16777216 &gt; /proc/sys/net/core/rmem_maxecho 16777216 &gt; /proc/sys/net/core/wmem_maxecho &quot;4096 87380 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_rmemecho &quot;4096 65536 16777216&quot; &gt; /proc/sys/net/ipv4/tcp_wmemecho 360000 &gt; /proc/sys/net/ipv4/tcp_max_tw_bucketsecho 2048 &gt; /sys/block/$&#123;device&#125;/queue/nr_requests # $device=sda 解释说明1234567tcp_max_syn_backlog: 是指定所能接受SYN同步包的最大客户端数量,默认值是2048net.core.somaxconn: 服务端所能accept即处理数据的最大客户端数量，即完成连接上限。默认值是128，建议修改成1024。net.core.rmem_max: 接收套接字缓冲区大小的最大值。默认值是229376，建议修改成16777216。net.core.wmem_max: 发送套接字缓冲区大小的最大值（以字节为单位）。默认值是229376，建议修改成16777216。net.ipv4.tcp_rmem: 配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 87380 6291456&quot;，建议修改成&quot;4096 87380 16777216&quot;。net.ipv4.tcp_wmem: 配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值。默认值是&quot;4096 16384 4194304&quot;，建议修改成&quot;4096 65536 16777216&quot;。net.ipv4.max_tw_buckets: 表示系统同时保持TIME_WAIT套接字的最大数量。默认值是2048，建议修改成360000。 来个示例配置1234567891011121314151617181920212223242526272829303132[root@server01 ~]# sysctl -pnet.core.somaxconn = 2048net.core.rmem_default = 262144net.core.wmem_default = 262144net.core.rmem_max = 16777216net.core.wmem_max = 16777216net.core.netdev_max_backlog = 20000net.ipv4.tcp_rmem = 4096 4096 16777216net.ipv4.tcp_wmem = 4096 4096 16777216net.ipv4.tcp_mem = 786432 2097152 3145728net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 300net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_orphans = 131072net.ipv4.ip_local_port_range = 1024 65535fs.nr_open = 5000000fs.file-max = 2000000fs.inotify.max_user_watches = 16384vm.max_map_count = 655360[root@server01 ~]# [root@server01 ~]# [root@server01 ~]# cat /etc/security/limits.conf* hard nofile 1024000* soft nofile 1024000* hard nproc unlimited* soft nproc unlimited* soft core 0* hard core 0 总结慢慢积累吧","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"glance hashlib","slug":"openstack-glance-hashlib","date":"2021-03-14T01:41:52.000Z","updated":"2021-07-19T06:15:49.140Z","comments":true,"path":"2021/03/14/openstack-glance-hashlib/","link":"","permalink":"http://www.digmyth.com/2021/03/14/openstack-glance-hashlib/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"k8s基于GitlabJenkinsCICD实现","slug":"kubernetes-gitlab-jenkins-CI","date":"2021-02-21T02:51:41.000Z","updated":"2021-04-24T14:10:25.467Z","comments":true,"path":"2021/02/21/kubernetes-gitlab-jenkins-CI/","link":"","permalink":"http://www.digmyth.com/2021/02/21/kubernetes-gitlab-jenkins-CI/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"calico bug","slug":"kubernetes-calico-bug","date":"2021-02-13T07:51:41.000Z","updated":"2021-03-02T08:15:51.878Z","comments":true,"path":"2021/02/13/kubernetes-calico-bug/","link":"","permalink":"http://www.digmyth.com/2021/02/13/kubernetes-calico-bug/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"prometheus","slug":"prometheus-01","date":"2021-01-25T00:48:08.000Z","updated":"2021-01-27T03:00:54.371Z","comments":true,"path":"2021/01/25/prometheus-01/","link":"","permalink":"http://www.digmyth.com/2021/01/25/prometheus-01/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Prometheus","slug":"Prometheus","permalink":"http://www.digmyth.com/categories/Prometheus/"}],"tags":[]},{"title":"kubernetes dashboard","slug":"kubernetes-dashboard","date":"2021-01-15T12:51:41.000Z","updated":"2021-01-22T03:48:33.336Z","comments":true,"path":"2021/01/15/kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2021/01/15/kubernetes-dashboard/","excerpt":"","text":"重新疏理k8s dashboard安装github地址：https://github.com/kubernetes/dashboard 在线dashboard2.1 deployment清单文件1kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml 默认type为ClusterIp即只能看到Service地址，需要穿透集群边界让外部进行访问方式有ingress、NodePort、外部LoadBalance、pod HostPort端口转发、pod HostNetwork 等方式，这里采用最简单的NodePort 修改recommended.yaml清单文件123456789101112131415kind: ServiceapiVersion: v1metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboardspec: ports: - nodePort: 30443 port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort 或者跑起来后再直接修改svc/kubernetes-dashboard1kubectl edit svc/kubernetes-dashboard -n kubernetes-dashboard # type: NodePort 按你的需要添加单独的NameSpace12345678root@k8s-m:/data/dashboard# kubectl create namespace admin-ns --dry-run=client -o yamlapiVersion: v1kind: Namespacemetadata: creationTimestamp: null name: admin-nsspec: &#123;&#125;status: &#123;&#125; 按你的需要添加kubernetes-dashboard123456789root@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-nsserviceaccount/superadmin createdroot@k8s-m:/data/dashboard# kubectl create sa superadmin -n admin-ns --dry-run=client -o yamlapiVersion: v1kind: ServiceAccountmetadata: creationTimestamp: null name: superadmin namespace: admin-ns 创建一个clusterrolebinding,让内置的集群管理员角色--clusterrole=cluster-admin与刚创建的serviceaccount绑定1234567891011121314root@k8s-m:/data/dashboard# kubectl create clusterrolebinding superadmin --clusterrole=cluster-admin --serviceaccount=admin-ns:superadmin --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: superadminroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: superadmin namespace: admin-ns 获取Token登录1234567891011121314151617181920212223root@k8s-m:/data/dashboard# kubectl describe sa/superadmin -n admin-nsName: superadminNamespace: admin-nsLabels: &lt;none&gt;Annotations: &lt;none&gt;Image pull secrets: &lt;none&gt;Mountable secrets: superadmin-token-gtrj5Tokens: superadmin-token-gtrj5Events: &lt;none&gt;root@k8s-m:/data/dashboard# kubectl describe secret/superadmin-token-gtrj5 -n admin-nsName: superadmin-token-gtrj5Namespace: admin-nsLabels: &lt;none&gt;Annotations: kubernetes.io/service-account.name: superadmin kubernetes.io/service-account.uid: 339d914d-3ae8-440a-a590-4a304400ef17Type: kubernetes.io/service-account-tokenData====token: eyJhbGciOiJSUzI1NiIsImtpZCI6InZk--xxx # Token字段ca.crt: 1066 bytesnamespace: 8 bytes 界面自带CPU、内存监控图，只是数据是来源于Metrics Server, 需要部署MetricsServer才能展示，如果后期要部署kube-prometheus 就不需要单独部署Metrics Server，因为它己经集成了 metrics-server github 地址： https://github.com/kubernetes-sigs/metrics-server 在线清单文件部署1kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 发现老是无限重启，说是就绪性探测和存活性探测有问题，我这里换换镜像以及添加2个参数好了其实根源https TLS问题1234567891011121314151617181920212223242526272829spec: hostNetwork: true serviceAccountName: metrics-server containers: - name: metrics-server image: bitnami/metrics-server:0.4.1 # 可以尝试更换官方镜像 #image: k8s.gcr.io/metrics-server/metrics-server:v0.4.1 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls # 禁用https - --kubelet-use-node-status-port - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname # 添加地址解析类型 livenessProbe: failureThreshold: 3 httpGet: path: /livez port: https scheme: HTTPS periodSeconds: 10 readinessProbe: failureThreshold: 3 httpGet: path: /readyz port: https scheme: HTTPS periodSeconds: 10 ports: 总结 dashboard只是提供web GUI服务，本身并做认证授权，只是代为拿着账号向kubernetes API进行认证 dashboard 运行于pod, pod代为向kubernetes API进行认证的账号也必须是ServiceAccount账号，不可以是User自然人的属性账号 clusterrolebinding只能绑定clusterrole, rolebinding 即可以绑role,也可以绑clusterrole,口决是： 小绑大降权 Metrics-server用于收集pod内部CPU、内存使用量资源，kube-prometheus项目内部集成此功能，所以部署与否看你需要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes ingress进阶","slug":"kubernetes-ingress","date":"2021-01-12T12:51:41.000Z","updated":"2021-01-14T10:04:01.904Z","comments":true,"path":"2021/01/12/kubernetes-ingress/","link":"","permalink":"http://www.digmyth.com/2021/01/12/kubernetes-ingress/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes rbac","slug":"kubernetes-rbac","date":"2021-01-11T12:51:41.000Z","updated":"2021-01-14T04:50:59.033Z","comments":true,"path":"2021/01/11/kubernetes-rbac/","link":"","permalink":"http://www.digmyth.com/2021/01/11/kubernetes-rbac/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes secret","slug":"kubernetes-secret","date":"2021-01-03T12:51:41.000Z","updated":"2021-01-14T08:47:17.288Z","comments":true,"path":"2021/01/03/kubernetes-secret/","link":"","permalink":"http://www.digmyth.com/2021/01/03/kubernetes-secret/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes configmap","slug":"kubernetes-configmap","date":"2021-01-02T12:51:41.000Z","updated":"2021-01-11T09:55:46.529Z","comments":true,"path":"2021/01/02/kubernetes-configmap/","link":"","permalink":"http://www.digmyth.com/2021/01/02/kubernetes-configmap/","excerpt":"","text":"创建configmap12# kubectl get cm/calico-config -n kube-system -o yaml# kubectl get cm/kube-flannel-cfg -n kube-system -o yaml 12345kubectl create ns cm-nskubectl create cm -hkubectl create cm filebeat-cfg -n cm-ns \\ --from-literal=redis_host=&quot;redis.default.svc.cluster.local&quot; \\ --from-literal=log_level=&quot;Info&quot; 1234567891011121314151617181920212223kubectl get cm/filebeat-cfg -n cm-ns -o yamlapiVersion: v1data: log_level: Info redis_host: redis.default.svc.cluster.localkind: ConfigMapmetadata: creationTimestamp: &quot;2021-01-11T05:58:23Z&quot; managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:data: .: &#123;&#125; f:log_level: &#123;&#125; f:redis_host: &#123;&#125; manager: kubectl-create operation: Update time: &quot;2021-01-11T05:58:23Z&quot; name: filebeat-cfg namespace: cm-ns resourceVersion: &quot;573737&quot; uid: b06442dc-90e6-446b-8a3c-f119f26226d4 启一个pod运用configmap1234567891011121314151617181920212223242526root@k8s-m:/data/configmap# cat filebeat-pod.yaml apiVersion: v1kind: Podmetadata: name: filebeat-pod namespace: cm-nsspec: containers: - name: filebeat image: ikubernetes/filebeat:5.6.5-alpine env: - name: REDIS_HOST valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: redis_host # 定义的键名 - name: LOG_LEVEL valueFrom: configMapKeyRef: name: filebeat-cfg # configmap名字 key: log_level # 定义的键名root@k8s-m:/data/configmap# kubectl apply -f filebeat-pod.yaml#pod内部是能查到的定义变量的root@k8s-m:/data/configmap# kubectl exec -it pods/filebeat-pod -n cm-ns -- env | grep REDIS_HOSTREDIS_HOST=redis.default.svc.cluster.local 定义2个数据文件123456789101112131415161718root@k8s-m:/data/configmap/nginx# cat server1.conf server &#123; server_name www.first.com; listen 80; location / &#123; root &quot;/html/first&quot;; &#125;&#125;root@k8s-m:/data/configmap/nginx# cat server2.conf server &#123; server_name www.second.com; listen 80; location / &#123; root &quot;/html/second&quot;; &#125;&#125; 创建nginx-cfg1kubectl create cm nginx-cfg --from-file=server1.conf --from-file=server-sec.conf=server2.conf -n cm-ns pod使用nginx-cfg12345678910111213141516171819202122232425262728[root@k8smaster nginx]# cat nginx-pod.yaml apiVersion: v1kind: Podmetadata: name: nginx-pod namespace: cm-nsspec: containers: - name: nginx-t image: nginx volumeMounts: - name: config-vol mountPath: /etc/nginx/conf.d/ volumes: - name: config-vol configMap: name: nginx-cfg items: - key: server1.conf # 定义configmap时的key path: server-first.conf # pod内部的文件名 - key: server-sec.conf # 定义configmap时的key path: server-second.conf # pod内部的文件名[root@k8smaster nginx]# kubectl apply -f nginx-pod.yaml[root@k8smaster nginx]# kubectl exec -it pods/nginx-pod -n cm-ns -- ls /etc/nginx/conf.dserver-first.conf server-second.confkubectl edit cm/nginx-cfg -n cm-ns # 修改能在60s生效 总结configmap也是一种存储卷，特殊的存储卷，用于保存pod内程序变量配置或文件等","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-csi-nfs","slug":"kubernetes-csi-nfs","date":"2021-01-01T13:52:41.000Z","updated":"2021-06-16T02:58:24.839Z","comments":true,"path":"2021/01/01/kubernetes-csi-nfs/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-csi-nfs/","excerpt":"","text":"简介要实现kubernetes中动态创建pv必须先创建StorageClass，每一个StorageClass对应了一个provisioner，kubernetes中内置了很多provisioner，但是很难受的是没有内置的nfs provisioner，对于我们这种没有钱的玩家，nfs是实现后端存储最简单直接的方法，所以不知道为什么k8s不提供，但是没关系有方法实现，k8s允许提供外部的provisioner，而nfs可以使用nfs-client-provisioner项目链接1https://github.com/kubernetes-retired/external-storage/tree/master/nfs-client 创建nfs server1234yum install nfs-utils -y[root@node02 deploy]# cat /etc/exports/csc-nfsdata/ *(rw,sync,no_root_squash)[root@node02 deploy]# 开放防火墙123456789101112vim /etc/nfs.conf[mountd]port=port-number# This adds the -p port-number option to the rpc.mount command line: rpc.mount -p port-number.firewall-cmd --permanent --add-service mountdfirewall-cmd --permanent --add-service rpc-bindfirewall-cmd --permanent --add-service nfsfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/tcpfirewall-cmd --permanent --add-port=&lt;mountd-port&gt;/udpfirewall-cmd --reload 配置NFS-Client provisioner,首先clone这个项目1git clone https://github.com/kubernetes-retired/external-storage.git 之后进入nfs-client/deploy/文件夹 可以看到有下面几个文件12345678910cd nfs-client/deploy/[root@nginx1-pro deploy]# ll总用量 28-rw-r--r-- 1 root root 225 9月 3 14:26 class.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 1030 9月 3 13:17 deployment-arm.yaml-rw-r--r-- 1 root root 1040 9月 3 13:30 deployment.yaml ## 需要改自己的nsdrwxr-xr-x 2 root root 214 9月 3 13:32 objects-rw-r--r-- 1 root root 1834 9月 3 13:19 rbac.yaml ## 需要改自己的ns-rw-r--r-- 1 root root 241 9月 3 13:55 test-claim.yaml-rw-r--r-- 1 root root 399 9月 3 13:38 test-pod.yaml 首先你要做的是创建一个独立的命名空间12[root@k8smaster ~]# kubectl create ns csi-nfsnamespace/csi-nfs created 之后修改rbac.yaml和deployment.yaml的namespace为你创建的namespace 修改完成之后我们修改deployment.yaml123456789101112 env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.1.11 - name: NFS_PATH value: /data/kubernetesvolumes: - name: nfs-client-root nfs: server: 192.168.1.11 path: /data/kubernetes 执行rbac 和deploy yaml文件1234567891011121314151617181920212223242526[root@node02 deploy]# kubectl apply -f rbac.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner createdrole.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner createdrolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created[root@node02 deploy]#[root@node02 deploy]# kubectl apply -f deployment.yamldeployment.apps/nfs-client-provisioner created[root@node02 deploy]# [root@node02 deploy]# kubectl apply -f class.yaml storageclass.storage.k8s.io/managed-nfs-storage created[root@node02 deploy]#查看cs [root@node02 deploy]# kubectl get scNAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGEmanaged-nfs-storage fuseim.pri/ifs Delete Immediate false 20s[root@node02 deploy]# cat class.yamlapiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: managed-nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos;parameters: archiveOnDelete: &quot;false&quot; provisioner就是刚才deployment中的PROVISIONER_NAME，还有一个比较关键的参数是archiveOnDelete，如果你想在删除了pvc之后还保留数据的话需要把这个参数改为true，不然你删除了pvc同时pv也会删除，然后数据也会丢失1234567kubectl apply class.yamlkubectl apply -f class.yaml很简单，只要pvc有annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot; pvc就能动态的创建出来 尝试创建123456789101112131415161718192021222324[root@node02 deploy]# kubectl apply -f test-claim.yaml [root@node02 deploy]# cat test-claim.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-claim annotations: volume.beta.kubernetes.io/storage-class: &quot;managed-nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi[root@node02 deploy]# 查看pv和pvc[root@node02 deploy]# kubectl get pv,pvcNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpersistentvolume/pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX Delete Bound default/test-claim managed-nfs-storage 29mNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpersistentvolumeclaim/test-claim Bound pvc-a0b85043-84a6-4f8a-9016-bba084a3f014 1Mi RWX managed-nfs-storage 29m[root@node02 deploy]# 尝试删除pvc，查看pv也会被删除，只不过pv中的数据不会被删除。需要注意的是删除pvc之前要把所使用的pod 删除掉 pending排障如果你部署的kubernetes是v1.20 v1.21.0以上,那么需要修改kube-apiserver.yaml支持selfLink功能 查看nfs-client-provisioner容器跑在哪个节点上，是否Running,确保宿主节点己安装nfs客户端可以正常挂载nfs-server卷123root@node01:/data/nfs-server/external-storage/nfs-client/deploy# kubectl get pods -n csi-nfs -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESnfs-client-provisioner-56f95d5b56-k5cjl 1/1 Running 0 37m 172.16.18.93 node03 &lt;none&gt; &lt;none&gt; 到运行容器节点上查看日志：nfs-client-provisioner-xx容器日志1tail -f /var/log/containers/nfs-client-provisioner-6b4 解决办法1234567891011121314参考： www.orchome.com/10024解决方法是编辑/etc/kubernetes/manifests/kube-apiserver.yaml在这里：spec: containers: - command: - kube-apiserver添加这一行：- --feature-gates=RemoveSelfLink=false然后应用它，即可kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml 查看pvc状态，确保nfs-server 卷权限777,否则创建pv失败也会导致pvc Pending1kubectl get pvc # Pending 总结 参考","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes volumes","slug":"kubernetes-volumes","date":"2021-01-01T12:51:41.000Z","updated":"2021-01-11T09:55:36.757Z","comments":true,"path":"2021/01/01/kubernetes-volumes/","link":"","permalink":"http://www.digmyth.com/2021/01/01/kubernetes-volumes/","excerpt":"","text":"12# kubectl explain pods.spec.volumes# kubectl explain pods.spec.containers.volumeMounts hostPath 为node节点本地卷1234567891011121314151617181920212223root@k8s-m:/data/volumes# cat 01-volume-demo.yaml apiVersion: v1kind: Podmetadata: name: vol-demo namespace: vol labels: app: vol-demospec: nodeName: k8s-n containers: - name: vol-demo image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: webstore volumes: - name: webstore hostPath: path: /volumes/vol-demo type: DirectoryOrCreateroot@k8s-m:/data/volumes# kubectl apply -f 01-volume-demo.yaml empty 临时存储，pod重启数据丢失12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 02-emptydir.yaml apiVersion: v1kind: Podmetadata: name: vol-emptydir-pod namespace: volspec: volumes: - name: html emptyDir: &#123;&#125; containers: - name: nginx image: nginx:1.14-alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html - name: createpage image: alpine volumeMounts: - name: html mountPath: /html command: [&quot;/bin/sh&quot;,&quot;-c&quot;] args: - while true;do echo $(hostname) $(date) &gt;&gt; /html/index.html; sleep 2; doneroot@k8s-m:/data/volumes# kubectl apply -f 02-emptydir.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESvol-emptydir-pod 2/2 Running 0 2m47s 172.16.234.11 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q http://172.16.234.11vol-emptydir-pod Mon Jan 11 03:30:24 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:26 UTC 2021vol-emptydir-pod Mon Jan 11 03:30:28 UTC 2021 # 正如我们期望的那样，每2秒钟生成一条记录 nfs 存储卷12345678910111213141516171819202122232425262728293031323334353637root@k8s-m:/data/volumes# cat 03-nfs-pod.yaml apiVersion: v1kind: Podmetadata: name: liveness-httpget-pod namespace: volspec: containers: - name: liveness-httpget-pod image: nginx imagePullPolicy: IfNotPresent ports: - name: http containerPort: 80 livenessProbe: httpGet: port: http path: /index.html initialDelaySeconds: 1 periodSeconds: 3 volumeMounts: - name: html mountPath: /usr/share/nginx/html/ volumes: - name: html nfs: path: /nginx_share server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 03-nfs-pod.yamlapt install nfs-kernel-serverroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESliveness-httpget-pod 1/1 Running 0 16m 172.16.234.13 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# wget -O - -q 172.16.234.13test nginx for nfs vol # 成功 redis Pod挂载nfs类型的卷,实现重建pod数据不丢失1234567891011121314151617181920212223242526272829303132333435363738394041424344root@k8s-m:/data/volumes# cat 04-nfs-redis.yaml apiVersion: v1kind: Podmetadata: name: redis namespace: vol labels: app: redisspec: containers: - name: redis image: redis:5.0.4 ports: - name: redis-port containerPort: 6379 volumeMounts: - name: data mountPath: /data volumes: - name: data nfs: path: /vols/v6 server: 192.168.1.10root@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl get pods -n vol -o wideNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATESredis 1/1 Running 0 12m 172.16.234.12 k8s-n &lt;none&gt; &lt;none&gt;root@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; set name wxqOK127.0.0.1:6379&gt; set age 25OK127.0.0.1:6379&gt; saveOKroot@k8s-m:/data/volumes# kubectl delete -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl apply -f 04-nfs-redis.yamlroot@k8s-m:/data/volumes# kubectl exec -it pods/redis -n vol -- bashroot@redis:/data# redis-cli 127.0.0.1:6379&gt; get name&quot;wxq&quot; # 挂载卷后数据仍然存在 利用 nfs创建一个pv123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 01-pv-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: test-vol labels: storages: nfsspec: capacity: storage: 2Gi volumeMode: Filesystem accessModes: - ReadWriteMany - ReadWriteOnce - ReadOnlyMany persistentVolumeReclaimPolicy: Retain nfs: server: 192.168.1.10 path: /vols/v7root@k8s-m:/data/volumes/pvc# kubectl apply -f 01-pv-nfs.yaml 创建pvc123456789101112131415161718192021root@k8s-m:/data/volumes/pvc# cat 02-pvc-nfs-yaml apiVersion: v1kind: PersistentVolumeClaimmetadata: name: test-pvc namespace: volspec: accessModes: - ReadWriteOnce volumeMode: Filesystem resources: requests: storage: 1Gi#storageClassName: slow# selector:# matchLabels:# release: &quot;stable&quot;# matchExpressions:# - &#123;key: environment, operator: In, values: [dev]&#125;root@k8s-m:/data/volumes/pvc# kubectl apply -f 02-pvc-nfs-yaml 创建一个pod申请pvc12345678910111213141516171819202122232425262728root@k8s-m:/data/volumes/pvc# cat 03-pod-demo.yaml apiVersion: v1kind: Podmetadata: name: pvc-pod-demo namespace: vol labels: app: pvc-podspec: nodeName: k8s-n containers: - name: pvc-pod image: docker.io/ikubernetes/myapp:v1 volumeMounts: - mountPath: /data name: testpvc volumes: - name: testpvc persistentVolumeClaim: claimName: test-pvcroot@k8s-m:/data/volumes/pvc# kubectl apply -f 03-pod-demo.yamlroot@k8s-m:/data# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEtest-vol 2Gi RWO,ROX,RWX Retain Bound vol/test-pvc 11mroot@k8s-m:/data# kubectl get pvc -n volNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEtest-pvc Bound test-vol 2Gi RWO,ROX,RWX 6m47s 总结无它，唯手熟而，理解运用更重要","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Ubuntu20.04 Run k8s","slug":"Kubernetes-ubuntu20.04","date":"2020-12-30T12:51:41.000Z","updated":"2021-01-11T09:55:23.613Z","comments":true,"path":"2020/12/30/Kubernetes-ubuntu20.04/","link":"","permalink":"http://www.digmyth.com/2020/12/30/Kubernetes-ubuntu20.04/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"ELF日志系统实践","slug":"log_elk_实践","date":"2020-12-15T02:12:36.000Z","updated":"2021-04-19T06:15:27.618Z","comments":true,"path":"2020/12/15/log_elk_实践/","link":"","permalink":"http://www.digmyth.com/2020/12/15/log_elk_实践/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb cluster recovery","slug":"mariadb-cluster-recovery","date":"2020-07-10T01:41:54.000Z","updated":"2020-07-06T10:59:33.024Z","comments":true,"path":"2020/07/10/mariadb-cluster-recovery/","link":"","permalink":"http://www.digmyth.com/2020/07/10/mariadb-cluster-recovery/","excerpt":"","text":"mariadb cluster recovery列几个集群检查命令1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+----------------------------------------------+| Variable_name | Value |+--------------------------+----------------------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306,10.0.0.53:3306 |+--------------------------+----------------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 3 |+--------------------+-------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_state_uuid&apos;;+--------------------------+-----------------------------------------+| Variable_name | Value |+--------------------------+-----------------------------------------+| wsrep_cluster_state_uuid | 345098abd2-291a-9893-acbd3-30923abcdef9 |+--------------------------+-----------------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_local_state_comment&apos;;+---------------------------+--------+| Variable_name | Value |+---------------------------+--------+| wsrep_local_state_comment | Synced |+---------------------------+--------+1 row in set (0.01 sec) 场景一 只是很简单的某节点掉线，重启让其重新加入集群即可1234567MariaDB [(none)]&gt; show status like &apos;wsrep_incoming_addresses&apos;;+--------------------------+-------------------------------+| Variable_name | Value |+--------------------------+-------------------------------+| wsrep_incoming_addresses | 10.0.0.51:3306,10.0.0.52:3306 |+--------------------------+-------------------------------+1 row in set (0.01 sec) 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 2 |+--------------------+-------+1 row in set (0.01 sec) 1# systemctl restart mariadb 场景二 唯一有一个幸存节点1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_size&apos;;+--------------------+-------+| Variable_name | Value |+--------------------+-------+| wsrep_cluster_size | 1 |+--------------------+-------+1 row in set (0.01 sec) 幸存节点刚好优雅关闭正确提交了数据，状态为Primary1234567MariaDB [(none)]&gt; show status like &apos;wsrep_cluster_status&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_cluster_status | Primary |+----------------------+---------+1 row in set (0.01 sec) 哪果是non-Primary状态还要单独恢复幸存节点上执行1MariaDB [(none)]&gt; set global wsrep_provider_options=&apos;pc.bootstrap=YES&apos;; 可是 我们一般不这样做，常规做法是直接指定这个幸存节点的主节点，让其它节点加入集群123# systemctl stop mariadb# galera_new_cluster# systemctl restart mariadb 场景三集群崩溃完全不可用,这也分为2种情况，基于最高seqno值恢复状态一是没有集群UUID, seqno: -1,数据定义语言DDL出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 00000000-0000-0000-0000-000000000000seqno: -1safe_to_bootstrap: 0 状态2是有集群UUID，seqno: -1，事务处理数据时出错123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: -1safe_to_bootstrap: 0 状态3是有集群UUID，seqno值最高正值123456# cat /var/lib/mysql/grastate.dat# GALERA saved stateversion: 2.1uuid: 886dd8da-3d07-11e8-a109-8a3c80cebab4seqno: 31929safe_to_bootstrap: 1 此时我们认为状态3是OK的，需要修改状态１、２数据库配置文件去掉IP地址配置项1wsrep_cluster_address=&quot;gcomm://&quot; 这样节点就能正常启动了1systemctl restart mariadb 最后再修改配置文件后把这2个节点正常加入集群就好了1wsrep_cluster_address=&quot;gcomm://10.8.8.53,10.8.8.54,10.8.8.55&quot; 最后是基于Last Committed恢复先修改配置文件让服务启起来，入库查看wsrep_last_committed123#systemctl stop mariadb 编辑配置文件去掉IP地址wsrep_cluster_address=&quot;gcomm://&quot;#systemctl start mariadb 1234567MariaDB [(none)]&gt; show status like &apos;wsrep_last_committed&apos;;+----------------------+---------+| Variable_name | Value |+----------------------+---------+| wsrep_last_committed | 319589 |+----------------------+---------+1 row in set (0.01 sec) 找到节点最大值认为就是主节点，然后在这个主节点上1# galera_new_cluster 其它节点加入集群即可","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"openstack-HA","slug":"openstack-HA","date":"2020-03-14T01:41:54.000Z","updated":"2020-03-29T03:13:34.557Z","comments":true,"path":"2020/03/14/openstack-HA/","link":"","permalink":"http://www.digmyth.com/2020/03/14/openstack-HA/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"calico-原理剖析","slug":"calico-原理剖析","date":"2020-03-07T01:42:54.000Z","updated":"2021-01-07T06:05:08.285Z","comments":true,"path":"2020/03/07/calico-原理剖析/","link":"","permalink":"http://www.digmyth.com/2020/03/07/calico-原理剖析/","excerpt":"","text":"arp之calico本质参考戳穿 Calico 的谎言 什么是代理ARP？当 ARP 请求目标跨网段时，网关设备收到此ARP请求会用自己的MAC地址返回给请求者,这就是代理arp. 实现MAC地址代理,最终使得主机能够通信. 知识点： 跨网段通信时会发广播得到网关MAC 之后发出的网络数据包目标MAC是网关的MAC 网关的IP地址不会出现在任何网络包头中 因此，没有人在乎网关地址是否真的存在，只要设备能响应ARP就行了 我这里用了2台linux主机实验，主机A：192.168.1.109 主机B:192.168.1.110主机A：1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.10/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-A ~]#ip netns exec ns0 route -n # 命名空间里的路由Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.10 dev veth0ip route add 10.10.10.20 via 192.168.1.110 dev eth0 主机B:1234567891011121314151617ip link add veth0 type veth peer name veth0_pip netns add ns0ip link set veth0_p netns ns0ip netns exec ns0 ip link set veth0_p name eth0ip netns exec ns0 ip a add 10.10.10.20/24 dev eth0ip netns exec ns0 ip link set eth0 upip netns exec ns0 ip route add 169.254.1.1 dev eth0ip netns exec ns0 ip route add default via 169.254.1.1 dev eth0[root@testarp-B ~]# ip netns exec ns0 route -n Kernel IP routing tableDestination Gateway Genmask Flags Metric Ref Use Iface0.0.0.0 169.254.1.1 0.0.0.0 UG 0 0 0 eth010.10.10.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0169.254.1.1 0.0.0.0 255.255.255.255 UH 0 0 0 eth0ip link set veth0 upip route add 10.10.10.20 dev veth0ip route add 10.10.10.10 via 192.168.1.109 dev eth0 Linux主机打开路由转发1net.ipv4.ip_forward = 1 网卡开启代理ARP功能1echo 1 &gt; /proc/sys/net/ipv4/conf/veth0/proxy_arp 主机A上网络通信测试12345[root@testarp-A ~]# ip netns exec ns0 ping 10.10.10.20PING 10.10.10.20 (10.10.10.20) 56(84) bytes of data.64 bytes from 10.10.10.20: icmp_seq=1 ttl=62 time=0.951 ms64 bytes from 10.10.10.20: icmp_seq=2 ttl=62 time=0.484 ms64 bytes from 10.10.10.20: icmp_seq=3 ttl=62 time=0.556 ms 1234567[root@testarp-A ~]# tcpdump -nni veth0tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on veth0, link-type EN10MB (Ethernet), capture size 262144 bytes08:18:15.999200 IP 10.10.10.10 &gt; 10.10.10.20: ICMP echo request, id 1486, seq 1, length 6408:18:16.000288 IP 10.10.10.20 &gt; 10.10.10.10: ICMP echo reply, id 1486, seq 1, length 6408:18:21.008712 ARP, Request who-has 10.10.10.20 tell 10.10.10.10, length 2808:18:21.008757 ARP, Reply 10.10.10.20 is-at ee:46:7c:2e:d9:ba, length 28 注意： 这里veth0充当路由角色代理ARP, who is 10.10.10.20 ,返回自己MACee:46:7c:2e:d9:ba来响应. 转发过程分析：1 广播寻找目标IP对应MAC是谁？2 根据路由规则所有数据包都会转发到169.254.1.1，寻找169.254.1.1MAC是谁？2 vet0开启代理ARP进行ARP拦截，返回自己MACee:46:7c:2e:d9:ba给以响应3 封包目标IP为10.10.10.20，MAC为ee:46:7c:2e:d9:ba,发出这样的数据包4 主机A查询本地路由，匹配10.10.10.20 via 192.168.1.110 dev eth0 会把包发送给192.168.1.1105 主机B收到10.10.10.20的包时，匹配本地路由10.10.10.20 dev veth0 scope link,数据包发送到veth0上6 完成通信，回程类似","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"corosync/PacemakerHA","slug":"linux-pacemaker-corosync","date":"2020-02-15T01:42:54.000Z","updated":"2020-03-29T01:27:23.789Z","comments":true,"path":"2020/02/15/linux-pacemaker-corosync/","link":"","permalink":"http://www.digmyth.com/2020/02/15/linux-pacemaker-corosync/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"ingress-nginx 基础","slug":"ingress-nginx","date":"2020-01-20T12:51:41.000Z","updated":"2021-01-14T07:57:51.296Z","comments":true,"path":"2020/01/20/ingress-nginx/","link":"","permalink":"http://www.digmyth.com/2020/01/20/ingress-nginx/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"openvswit_vlan流表","slug":"openvswit_vlan流表","date":"2020-01-01T01:41:54.000Z","updated":"2020-01-13T03:44:37.630Z","comments":true,"path":"2020/01/01/openvswit_vlan流表/","link":"","permalink":"http://www.digmyth.com/2020/01/01/openvswit_vlan流表/","excerpt":"","text":"如果计算节点关闭防火墙，配置文件如下，那么就不会产生bridge桥及相应iptables规则 ml2部份配置文件如下123[securitygroup]#enable_security_group = True#firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver linuxBridge桥接口就会为空12kvm-app-6:~ # brctl show # 为空bridge name bridge id STP enabled interfaces 查看某虚机接口信息123456789kvm-app-6:~ # virsh list Id Name State---------------------------------------------------- 1 instance-00000793 runningkvm-app-6:~ # virsh domiflist instance-00000793Interface Type Source Model MAC-------------------------------------------------------tap790c394d-70 bridge br-int virtio fa:16:3e:1f:11:99 ovs-vsctl show1234567891011121314151617181920212223242526272829303132kvm-app-6:~ # ovs-vsctl show8ba4a76e-8c27-4807-a65a-f05b22a3ef76 Manager &quot;ptcp:6640:127.0.0.1&quot; is_connected: true Bridge br-int Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port int-br-ex Interface int-br-ex type: patch options: &#123;peer=phy-br-ex&#125; Port &quot;tap790c394d-70&quot; tag: 1 Interface &quot;tap790c394d-70&quot; Port br-int Interface br-int type: internal Bridge br-ex Controller &quot;tcp:127.0.0.1:6633&quot; is_connected: true fail_mode: secure Port phy-br-ex Interface phy-br-ex type: patch options: &#123;peer=int-br-ex&#125; Port br-ex Interface br-ex type: internal Port &quot;bond0&quot; Interface &quot;bond0&quot; ovs_version: &quot;2.7.6&quot; 查看br-int桥接口信息ovs-ofctl show br-int12345678910111213141516171819kvm-app-6:~ # ovs-ofctl show br-intOFPT_FEATURES_REPLY (xid=0x2): dpid:00002a77dbc2860an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(int-br-ex): addr:3e:38:8a:6e:c1:de config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(tap790c394d-70): addr:fe:16:3e:1f:11:99 config: 0 state: 0 current: 10MB-FD COPPER speed: 10 Mbps now, 0 Mbps max LOCAL(br-int): addr:2a:77:db:c2:86:0a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-int流表规则ovs-ofctl dump-flows br-int12345678910111213kvm-app-6:~ # ovs-ofctl dump-flows br-intNXST_FLOW reply (xid=0x4): cookie=0x8372d932b48e5321, duration=5395.262s, table=0, n_packets=0, n_bytes=0, idle_age=5395, priority=10,icmp6,in_port=2,icmp_type=136 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=5395.261s, table=0, n_packets=505, n_bytes=21210, idle_age=7, priority=10,arp,in_port=2 actions=resubmit(,24) cookie=0x8372d932b48e5321, duration=7776.549s, table=0, n_packets=366813, n_bytes=36441400, idle_age=5395, priority=2,in_port=1 actions=drop cookie=0x8372d932b48e5321, duration=5395.264s, table=0, n_packets=817, n_bytes=74814, idle_age=4, priority=9,in_port=2 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=5395.379s, table=0, n_packets=840145, n_bytes=83511042, idle_age=0, priority=3,in_port=1,dl_vlan=11 actions=mod_vlan_vid:1,NORMAL cookie=0x8372d932b48e5321, duration=7776.964s, table=0, n_packets=4, n_bytes=320, idle_age=7776, priority=0 actions=NORMAL cookie=0x8372d932b48e5321, duration=7776.965s, table=23, n_packets=0, n_bytes=0, idle_age=7776, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.263s, table=24, n_packets=0, n_bytes=0, idle_age=5395, priority=2,icmp6,in_port=2,icmp_type=136,nd_target=fe80::f816:3eff:fe1f:1199 actions=NORMAL cookie=0x8372d932b48e5321, duration=5395.262s, table=24, n_packets=502, n_bytes=21084, idle_age=7, priority=2,arp,in_port=2,arp_spa=10.8.25.220 actions=resubmit(,25) cookie=0x8372d932b48e5321, duration=7776.964s, table=24, n_packets=3, n_bytes=126, idle_age=5357, priority=0 actions=drop cookie=0x8372d932b48e5321, duration=5395.265s, table=25, n_packets=1319, n_bytes=95898, idle_age=4, priority=2,in_port=2,dl_src=fa:16:3e:1f:11:99 actions=NORMAL 查看br-ex交换机接口信息ovs-ofctl show br-ex123456789101112131415161718 kvm-app-6:~ # ovs-ofctl show br-exOFPT_FEATURES_REPLY (xid=0x2): dpid:0000aa081303781an_tables:254, n_buffers:0capabilities: FLOW_STATS TABLE_STATS PORT_STATS QUEUE_STATS ARP_MATCH_IPactions: output enqueue set_vlan_vid set_vlan_pcp strip_vlan mod_dl_src mod_dl_dst mod_nw_src mod_nw_dst mod_nw_tos mod_tp_src mod_tp_dst 1(bond0): addr:82:01:9b:1b:28:c9 config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max 2(phy-br-ex): addr:c2:06:bb:33:da:7a config: 0 state: 0 speed: 0 Mbps now, 0 Mbps max LOCAL(br-ex): addr:aa:08:13:03:78:1a config: PORT_DOWN state: LINK_DOWN speed: 0 Mbps now, 0 Mbps maxOFPT_GET_CONFIG_REPLY (xid=0x4): frags=normal miss_send_len=0 查看br-ex流表信息12345kvm-app-6:~ # ovs-ofctl dump-flows br-exNXST_FLOW reply (xid=0x4): cookie=0x90f6220dc9413e6e, duration=5441.562s, table=0, n_packets=1328, n_bytes=96564, idle_age=3, priority=4,in_port=2,dl_vlan=1 actions=mod_vlan_vid:11,NORMAL cookie=0x90f6220dc9413e6e, duration=7822.731s, table=0, n_packets=0, n_bytes=0, idle_age=7822, priority=2,in_port=2 actions=drop cookie=0x90f6220dc9413e6e, duration=7822.733s, table=0, n_packets=1213423, n_bytes=120613616, idle_age=0, priority=0 actions=NORMAL","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"linux disk","slug":"linux-disk","date":"2019-12-15T01:42:54.000Z","updated":"2021-07-27T03:38:32.069Z","comments":true,"path":"2019/12/15/linux-disk/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-disk/","excerpt":"","text":"Ubuntu系统分区信息查看：fdisk /dev/vda1234567891011Command (m for help): pDisk /dev/vda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x630fdccbDevice Boot Start End Sectors Size Id Type/dev/vda1 * 2048 1953791 1951744 953M 83 Linux/dev/vda2 1953792 125829119 123875328 59.1G 83 Linux Sart、End、Sectors单位都是扇区， 1扇区=512bytes，那么2扇区就是1KB 通常称为一个block块，那么就有了2sectors=1KB=1 block,可以通过blockdev --getsz /dev/vda得到整块盘扇区数像上面1953791-2048+1=1951744扇,953M=1951744/2/1024KB CentOS差别可能就是 Blocks数显示，上面说了1Block=1KB12345678910Disk /dev/vda: 64.4 GB, 64424509440 bytes, 125829120 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x000afe6d Device Boot Start End Blocks Id System/dev/vda1 * 2048 4196351 2097152 83 Linux/dev/vda2 4196352 125829119 60816384 83 Linux 我来验证一下14196351-2048+1得到扇区数，(4196351-2048+1)/2=2097152刚好等于Blocks数，也就是2097152KB=2048MB=2GB 我们再来学习下dd命令1234bs参数代表逻辑块大小，默认单位字节bytes，bs=512 也就是512bytes,这个512刚好等于count参数代表逻辑块的个数或扇区数，那么处理的存储大小就是bs*countskip 表示跳过if 设备的扇区数开始读数据,单位就是扇区，skip=200代表200个扇区，也就是100KBseek表示跳过of设备的扇区数开始写数据,单位就是扇区，seek=400代表400个扇区，也就是200KB 那么学了这些有什么用呢？一个裸盘有硬件raid卡信息是不能正常被格式化的，这个raid信息会存在硬盘的最后63个扇区的地方，我们可以用dd复盖掉12snumber=$(($(blockdev --getsz /dev/sda)-63))dd if=/dev/zero of=/dev/sda bs=512 count=63 seek=$snumber 总结： 一个扇区512bytes , 1Block=1KB=2扇区 dd参数的skip针对if设备，seek针对of设备（跳过多少扇区再处理）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"nmap工具详解","slug":"linux-nmap详解","date":"2019-12-15T01:42:54.000Z","updated":"2019-01-15T09:13:55.828Z","comments":true,"path":"2019/12/15/linux-nmap详解/","link":"","permalink":"http://www.digmyth.com/2019/12/15/linux-nmap详解/","excerpt":"","text":"1.1 nmap基础在运维过程中有时需要主机存活性探测，一般是namp、tcpdump命令结合使用，相关工具包安装1[root@ ]# yum install nmap tcpdump 列出几种nmap命令语法123-sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans-sU: UDP Scan-sP: ping Scan 下面我们在2台主机间探测，一主机发nmap探测，另一主机tcpdump抓包分析 在A主机正常发一个ping包看看正常情况下的icmp包 ping -c 1 10.17.200.36 在B主机抓包发现icmp包有去有回12345[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:08:38.392418 IP 10.17.200.14 &gt; 10.17.200.36: ICMP echo request, id 5220, seq 1, length 6416:08:43.400811 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 可在一台主机临时禁用icmp协议,再用ping将探测不到这台主机1echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 1.2 nmap ping探测我们开始nmap ping探测， -n表示不进行DNS解析123456[root@ ]# nmap -n -sP 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:12 CSTNmap scan report for 10.17.200.36Host is up (0.00030s latency).MAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds 在B主机探测发现只收到了对方发的请求包，并未回应，但是还是认为这台主机是存活的，这样提高了探测效率1234[root@localhost roles]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:12:28.972321 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 46 1.3 nmapSYN探测我们开始nmap TCP的SYN探测， -n表示不进行DNS解析1234567891011[root@ ]# nmap -n -PE 10.17.200.36Starting Nmap 6.40 ( http://nmap.org ) at 2019-01-15 16:20 CSTNmap scan report for 10.17.200.36Host is up (0.00014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh445/tcp filtered microsoft-dsMAC Address: 00:50:56:B9:21:18 (VMware)Nmap done: 1 IP address (1 host up) scanned in 1.33 seconds 在B主机探测发现，A主机对B主机的各服务都发送了TCP SYN包来进行探测123456789101112[root@ ]# tcpdump -np -i ens192 src host 10.17.200.14tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on ens192, link-type EN10MB (Ethernet), capture size 262144 bytes16:20:07.124327 ARP, Request who-has 10.17.200.36 (Broadcast) tell 10.17.200.14, length 4616:20:07.148867 IP 10.17.200.14.40911 &gt; 10.17.200.36.rtsp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148882 IP 10.17.200.14.40911 &gt; 10.17.200.36.smtp: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148906 IP 10.17.200.14.40911 &gt; 10.17.200.36.domain: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148943 IP 10.17.200.14.40911 &gt; 10.17.200.36.https: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.mysql: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 016:20:07.148950 IP 10.17.200.14.40911 &gt; 10.17.200.36.ssh: Flags [S], seq 3791226815, win 1024, options [mss 1460], length 0信息太多，略过...16:20:12.152833 ARP, Reply 10.17.200.14 is-at 00:50:56:b9:b2:fb, length 46 1.4 arping另外补充一下，arping -D可有效检测IP地址冲突问题,如果命令echo $?返回值为0则表示地址冲突，1则表示不冲突.12345[root@ ]# arping -D -c 2 -I ens192 10.17.200.36ARPING 10.17.200.36 from 0.0.0.0 ens192Unicast reply from 10.17.200.36 [00:50:56:B9:21:18] 0.887msSent 1 probes (1 broadcast(s))Received 1 response(s) 1.5 总结 nmap -sP 可进行ping检测 nmap -PE 可进行tcp SYN检测 nmap -n -sP -PE 可进行ping与SYN结合检测,以免漏扫 arping -D 可进行地址冲突检测 &lt;完结&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"k8s_pod资源清单学习1","slug":"k8s_pod1","date":"2019-12-01T12:51:41.000Z","updated":"2020-01-19T09:37:36.257Z","comments":true,"path":"2019/12/01/k8s_pod1/","link":"","permalink":"http://www.digmyth.com/2019/12/01/k8s_pod1/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"udev定义network","slug":"linux-udev","date":"2019-11-15T01:42:54.000Z","updated":"2020-03-29T02:10:23.637Z","comments":true,"path":"2019/11/15/linux-udev/","link":"","permalink":"http://www.digmyth.com/2019/11/15/linux-udev/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"helm部署efk日志系统","slug":"log_helm-efk","date":"2019-10-15T02:42:36.000Z","updated":"2021-03-17T09:56:58.567Z","comments":true,"path":"2019/10/15/log_helm-efk/","link":"","permalink":"http://www.digmyth.com/2019/10/15/log_helm-efk/","excerpt":"","text":"efk 日志系统3大组件elasticsearchfluent-bitkibana helm部署efk日志系统heml.sh 官网https://artifacthub.io/packages/helm/bitnami/elasticsearch 搜索elasticsearch Charts 1234567[root@k8smaster efk]# helm repo add bitnami https://charts.bitnami.com/bitnami&quot;bitnami&quot; has been added to your repositories[root@k8smaster efk]# helm repo listNAME URL loki https://grafana.github.io/loki/chartsstable https://charts.helm.sh/stable bitnami https://charts.bitnami.com/bitnami 12345[root@k8smaster efk]# helm search repo elasticNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ... helm show values bitnami/elasticsearch &gt; es_values.yaml 有人说k8s 中的APP JDK 最好11以上， data.resources +1G = data.heapsize 这个预留一个G给进程使用，其它才给JVM使用性能更佳12345678910111213141516171819202122232425262728293031[root@k8smaster efk]# helm install myes bitnami/elasticsearch -f es_values.yaml -n logsNAME: myesLAST DEPLOYED: Tue Mar 16 10:34:09 2021NAMESPACE: logsSTATUS: deployedREVISION: 1TEST SUITE: NoneNOTES:------------------------------------------------------------------------------- WARNING Elasticsearch requires some changes in the kernel of the host machine to work as expected. If those values are not set in the underlying operating system, the ES containers fail to boot with ERROR messages. More information about these requirements can be found in the links below: https://www.elastic.co/guide/en/elasticsearch/reference/current/file-descriptors.html https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html This chart uses a privileged initContainer to change those settings in the Kernel by running: sysctl -w vm.max_map_count=262144 &amp;&amp; sysctl -w fs.file-max=65536** Please be patient while the chart is being deployed ** Elasticsearch can be accessed within the cluster on port 9200 at myes-elasticsearch-coordinating-only.logs.svc.cluster.local To access from outside the cluster execute the following commands: kubectl port-forward --namespace logs svc/myes-elasticsearch-coordinating-only 9200:9200 &amp; curl http://127.0.0.1:9200/ 部署日志采集agent12345678910111213141516[root@k8smaster efk]# helm search repo elasNAME CHART VERSION APP VERSION DESCRIPTION bitnami/elasticsearch 14.5.0 7.10.2 A highly scalable open-source full-text search ...stable/elastabot 1.2.1 1.1.0 DEPRECATED A Helm chart for Elastabot - a Slack...stable/elastalert 1.5.1 0.2.4 DEPRECATED ElastAlert is a simple framework for...stable/elastic-stack 2.0.6 6 DEPRECATED A Helm chart for ELK stable/elasticsearch 1.32.5 6.8.6 DEPRECATED Flexible and powerful open source, d...stable/elasticsearch-curator 2.2.3 5.7.6 DEPRECATED A Helm chart for Elasticsearch Curator stable/elasticsearch-exporter 3.7.1 1.1.0 DEPRECATED Elasticsearch stats exporter for Pro...stable/fluentd-elasticsearch 2.0.7 2.3.2 DEPRECATED! - A Fluentd Helm chart for Kubernet...bitnami/grafana 5.2.4 7.4.3 Grafana is an open source, feature rich metrics...bitnami/kibana 7.2.3 7.10.2 Kibana is an open source, browser based analyti...stable/apm-server 2.1.7 7.0.0 DEPRECATED The server receives data from the El...stable/dmarc2logstash 1.3.1 1.0.3 DEPRECATED Provides a POP3-polled DMARC XML rep...stable/fluentd 2.5.3 v2.4.0 DEPRECATED A Fluentd Elasticsearch Helm chart f...stable/kibana 3.2.8 6.7.0 DEPRECATED - Kibana is an open source data visu... 1234567891011121314151617181920[root@k8smaster efk]# helm show values bitnami/kibana &gt; kibana_values.yaml[root@k8smaster efk]# vim kibana_values.yaml[root@k8smaster efk]# helm install kibanaui bitnami/kibana -f kibana_values.yaml -n logsNAME: kibanauiLAST DEPLOYED: Tue Mar 16 15:21:01 2021NAMESPACE: logsSTATUS: deployedREVISION: 1NOTES:1. Get the application URL by running these commands: Get the Kibana URL and associate Kibana hostname to your cluster external IP: export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters echo &quot;Kibana URL: http://kibana.local/&quot; echo &quot;$CLUSTER_IP kibana.local&quot; | sudo tee -a /etc/hostsWARNING: Kibana is externally accessible from the cluster but the dashboard does not contain authentication mechanisms. Make sure you follow the authentication guidelines in your Elastic stack.+info https://www.elastic.co/guide/en/elastic-stack-overview/current/setting-up-authentication.htmlWARNING: Rolling tag detected (bitnami/bitnami-shell:10), please note that it is strongly recommended to avoid using rolling tags in a production environment.+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/ 123456helm repo updatehelm repo list helm search repo fluent-bithelm show values fluent/fluent-bit &gt; fluent-bit-values.yamlhelm install -f fluent-bit-values.yaml -n logshelm list -n logs 总结 helm安装好处是一键安装，坏处是自定义容器内yml配置文件难度极大，如果helm charts提供的原始配置文件里没有(此处不是说修改values.yml值文件),需要重新制作charts部署","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch API","slug":"log_elasticsearch_api","date":"2019-09-15T02:22:36.000Z","updated":"2021-04-19T06:13:15.498Z","comments":true,"path":"2019/09/15/log_elasticsearch_api/","link":"","permalink":"http://www.digmyth.com/2019/09/15/log_elasticsearch_api/","excerpt":"","text":"知识点搜索引擎包括： 索引组件、搜索组件索引组件： 面向数据存储和索引构建搜索组件： 面向用户提供搜索功能以及将用户提供的搜索请求转换成可用的查询语句并通过索引完成查询过程或搜索过程其中一种著名的索引叫做倒排索引 获取数据的组件：工作在pull拉取数据模式， solr/Nutch/grub/ApetureES: 索引index、类型type、文档document、映射mapping 每个索引的分片数量： 5 每个分片也应该有副本： 1用户接口： 9200/tcp集群接口： 9300/tcp 数据类型： string、number、boolean、date、 ES中搜索的数据广义上可被分为2类：12exact: 精确查找，指在原始数据上精确查找full-text: 全文查找，判断文档在多大程度上匹配查询请求，用于评估文档与用户查询请求的相似度 为了完成full-text搜索，ES必须先分析文本并创建出倒排索引，倒排索引中的数据还需要进行“正规化”为标准格式：如单词复数改为单数，助词去掉，这样的分词加正规化的过程即为分析，分析是需要分析器analyzer工作的分析器由3个组件构成： 字符过滤器、分词器、分词过滤器ES内置的分析器有:1234standard analyzer (default analyzer)simple analyzerwhitespace analyzerlanguage analyzer 分析器不仅在创建索引时用到，在构建查询时也会用到并且前后二者的分析器必须一致，否则无法解析 API调用1234567[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/indicesgreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 1628 579.3kb 344kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 14 4.3mb 2.1mbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 3 0 32.9kb 16.4kbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 4 0 48.7kb 27.3kb 12[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/health1618472240 07:37:20 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 123456789101112131415161718[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 7, &quot;active_shards&quot; : 14, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125; 123456[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/master_node?pretty&#123; &quot;cluster_name&quot; : &quot;es-docker-cluster&quot;, &quot;cluster_uuid&quot; : &quot;exgsV0fDSCu826nXkN9w8A&quot;, &quot;master_node&quot; : &quot;WIm1WA75QhSegglRpCn4-Q&quot;&#125; 123[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/state/nodes?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/stats?pretty[root@k8smaster ~]# curl http://192.168.1.40:9200/_nodes/stats?pretty 1234[root@k8smaster ~]# curl http://192.168.1.40:9200/_cluster/pending_tasks?pretty&#123; &quot;tasks&quot; : [ ]&#125; 数据提交1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/1?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 1, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 0, &quot;_primary_term&quot; : 1&#125; 1234567891011121314151617181920[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X PUT http://192.168.1.40:9200/students/class1/2?pretty -d &apos;&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, # 索引，没有会自动创建 &quot;_type&quot; : &quot;class1&quot;, # 类型，没有会自动创建 &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 1, &quot;result&quot; : &quot;created&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 2, &quot;successful&quot; : 2, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 1, &quot;_primary_term&quot; : 1&#125; 获取文档数据123456789101112[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/1&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing&quot;,&quot;last_name&quot;: &quot;Huang&quot;&#125;&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2&#123;&quot;_index&quot;:&quot;students&quot;,&quot;_type&quot;:&quot;class1&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;found&quot;:true,&quot;_source&quot;:&#123;&quot;first_name&quot;: &quot;jing2&quot;,&quot;last_name&quot;: &quot;Huang2&quot;&#125; 更新文档可以PUT方法覆盖原有文档，也可以局部更新用POST方法调用_update接口1234567891011121314151617181920212223242526272829303132[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X POST http://192.168.1.40:9200/students/class1/2/_update?pretty -d &apos;&#123;&quot;doc&quot;: &#123;&quot;last_name&quot;: &quot;Huang2_222&quot;&#125;&#125;&apos;&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;result&quot; : &quot;noop&quot;, &quot;_shards&quot; : &#123; &quot;total&quot; : 0, &quot;successful&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1&#125;[root@node01 ~]# curl -X GET http://192.168.1.40:9200/students/class1/2?pretty # 查看更新&#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_version&quot; : 2, &quot;_seq_no&quot; : 2, &quot;_primary_term&quot; : 1, &quot;found&quot; : true, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2_222&quot; &#125;&#125; 删除文档1[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/class1/2 查看索引123456789[root@node01 ~]# curl -X GET http://192.168.1.40:9200/_cat/indices?vhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.sizegreen open .kibana_task_manager_7.12.0_001 1U4c04_oR--NoqAssK-GhQ 1 1 9 431 1.3mb 630.3kbgreen open .apm-custom-link pxk-mw7-TrSbOOkq-YtGDA 1 1 0 0 416b 208bgreen open .apm-agent-configuration qXAmtdt-Sxme3_b4dAXDrA 1 1 0 0 416b 208bgreen open students em-XgwfsSc--wFnCcLC7jg 1 1 2 0 21.5kb 8.6kbgreen open .kibana-event-log-7.12.0-000001 x2AirAinS8qVwxFEVEyaVQ 1 1 4 0 43.7kb 21.8kbgreen open .kibana_7.12.0_001 dnQirVu_SFukMa2QEvx5ig 1 1 45 4 4.2mb 2.1mbgreen open .tasks JpRquzGeQLWuWLBhT6XTHQ 1 1 6 0 75.8kb 40.9kb 删除索引12[root@node01 ~]# curl -X DELETE http://192.168.1.40:9200/students/&#123;&quot;acknowledged&quot;:true&#125; 以上是基于query DSL language,用于实现诸多类型查询向ES发起查询请求的方式有2种：1 通过RestFul request API查询，也称为query string2 通过发送REST request body 进行查询 query string方式查询12345678910111213141516171819202122232425262728293031323334353637383940[root@node01 ~]# curl http://192.168.1.40:9200/students/_search?pretty&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 2, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125;, &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;2&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing2&quot;, &quot;last_name&quot; : &quot;Huang2&quot; &#125; &#125; ] &#125;&#125; REST request body 方式查询123[root@node01 ~]# curl -H &quot;Content-Type: application/json&quot; -X GET http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;&#125;&apos; 多索引，多类型查询,一般格式为：http://IP:port/&lt;indices1&gt;,&lt;indices2&gt;/&lt;type1&gt;,&lt;type2&gt;/_search?pretty12curl http://192.168.1.40:9200/_search?pretty # 所有索引查询curl http://192.168.1.40:9200/students1,students2/_search?pretty mappping/analysisES对每一个文档会取得其所有域的所有值，生成一个名为”_all”的域，执行查询时，如果在query_string未指定查询的域，则在_all域上执行查询操作 不指定域查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 指定域精确查询123456789101112131415161718192021222324252627282930[root@node01 ~]# curl &apos;http://192.168.1.40:9200/students/_search?q=first_name:&quot;jing&quot;&amp;pretty&apos;&#123; &quot;took&quot; : 4, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 查看指定类型的mapping123456789101112131415161718192021222324252627[root@node01 ~]# curl http://192.168.1.40:9200/students/_mapping?pretty&#123; &quot;students&quot; : &#123; &quot;mappings&quot; : &#123; &quot;properties&quot; : &#123; &quot;first_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125;, &quot;last_name&quot; : &#123; # 字段 &quot;type&quot; : &quot;text&quot;, # 类型为文本 &quot;fields&quot; : &#123; &quot;keyword&quot; : &#123; &quot;type&quot; : &quot;keyword&quot;, &quot;ignore_above&quot; : 256 &#125; &#125; &#125; &#125; &#125; &#125;&#125; request Body 请求查询 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;term&quot;: &#123;&quot;first_name&quot;:&quot;jing&quot;&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 0.6931471, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 0.6931471, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435[root@node01 ~]# curl -X GET -H &quot;Content-Type: application/json&quot; http://192.168.1.40:9200/students/_search?pretty -d &apos;&#123;&quot;query&quot;: &#123; &quot;terms&quot;: &#123;&quot;first_name&quot;:[&quot;jing&quot;,&quot;xx&quot;,&quot;oo&quot;]&#125; &#125;&#125;&apos;&#123; &quot;took&quot; : 3, &quot;timed_out&quot; : false, &quot;_shards&quot; : &#123; &quot;total&quot; : 1, &quot;successful&quot; : 1, &quot;skipped&quot; : 0, &quot;failed&quot; : 0 &#125;, &quot;hits&quot; : &#123; &quot;total&quot; : &#123; &quot;value&quot; : 1, &quot;relation&quot; : &quot;eq&quot; &#125;, &quot;max_score&quot; : 1.0, &quot;hits&quot; : [ &#123; &quot;_index&quot; : &quot;students&quot;, &quot;_type&quot; : &quot;class1&quot;, &quot;_id&quot; : &quot;1&quot;, &quot;_score&quot; : 1.0, &quot;_source&quot; : &#123; &quot;first_name&quot; : &quot;jing&quot;, &quot;last_name&quot; : &quot;Huang&quot; &#125; &#125; ] &#125;&#125; 总结慢慢实践。。。","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"elasticsearch基本使用","slug":"log_elasticsearch-基本使用","date":"2019-08-15T02:42:36.000Z","updated":"2021-04-15T07:13:28.047Z","comments":true,"path":"2019/08/15/log_elasticsearch-基本使用/","link":"","permalink":"http://www.digmyth.com/2019/08/15/log_elasticsearch-基本使用/","excerpt":"","text":"介绍官网： https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html elasticsearch: 借住于LuceneAPI 重新封装实现的搜索组件，增加更强大的能力，将Lucene提供的索引组建成shar形式，分片后分布于各节点上从而构建成分布式时时查询组件。 是一个基Lucene实现的开源、分布式、RestFul的全文本搜索引擎，此外，它还是一个分布式实时文档存储，其中每个文档的每个field均是被索引的数据，且可被搜索，也是一个带实时分析功能的分布式搜索引擎，能够扩展至数以百计的节点实时处理PB级的数据 概念 文档只有被索引后才能被索引，这个文档就放在一个叫索引的文件当中。 在Lucene中每一项相当于MYsql表中一行数据，多个项在一起就组成了索引，但是每个索引会尽量存储同类型数据 大索引的多个片分shard散到多个物理节点上去，可成完成读写负载均衡，分片节点挂了所有数据将丢失，但是分布式不应该这样，它还要通过主从副本实现分布解决单点故障问题。 写操作会自动分配到主分片完成写操作，副本分片只有读权限 索引： 文档的集合，类似于表，索引名只能是小写字母 类型(type): 类型是索引内部的逻辑分区，其意义完全取决于用户需求，一个索引内部可以定义一个或多个类型 拥有相同域的文档的预定义，类似于表的表结构，文档是schema free模式自由, 建议一个索引中只存一个类型的文档数据 文档： 是Lucene搜索和索引的原子单位，包含了一个或多个域，是域容器，基于json格式，每个域的组成部份：一个名字和一个或多个值，拥有多个值的域通常称为多值域 映射 (maping): 定义如何切词，指明一个文档中的数据在被存储之前的分析过程该如何执行，原始内容存储为文档之前事先需要分析，映射就 是定义此分析机制该如何实现 例如; 切词、过滤掉某些词、域中内容排序 elasticsearch集群组件： 每一个物理节点必属于且只属于某ES集群 NODE： 运行了单个ES实例的主机即为节点，用于存储数据部份分片、参与集群索引及搜索操作、节点标识靠节点名（默认会生成字串，可自定义） shard分片: 把一个Luence大索引切分为底层物理数据，完成分割存储机制，或说将索引切割成为物理存储组件，但每一个shard都是一个独立且完整的索引，创建索引时，ES默认创建5个副本 shard有2种类型： primary shard/Replicas shard Primary shard 如何切割定义好后不可更改，但是副本数是可以动态更改的 ES工作过程： 通过多播(default)或单播方式工作在9300/TCP查找同一集群的其它节点，并与之建立通信 集群中的所有节点会选举一个主节点负责管理整个集群状态，以及在集群范围内决定各shard分布方式，用户角度没有主从节点，各节点都可接收请求 安装elasticsearch强制要求工作在普通用户模式下，不能root 直接./bin/elasticsearch启动服务，好像rpm安装没有此限制同时启动也有很多限制，否则启动失败 修改系统参数达到启动服务要求1234561 普通用户模式下安装2 安装jdk,要求1.8以上，有人声称1.11以上更佳3 打开文件数限制，包括系统级/etc/security/limits.conf 和ulimit -n 65535用户级4 打开内核参数级限制,临时设置如下命令sysctl -w vm.max_map_count=655350sysctl -w fs.file-max=65536 配置文件修改123456789cat /home/stack/elasticsearch-7.11.2/config/elasticsearch.yml | grep -v ^# | grep -v ^$cluster.name: wxq-esnode.name: node-es3bootstrap.memory_lock: falsenetwork.host: 192.168.1.30discovery.seed_hosts: [&quot;192.168.1.30&quot;,] # 集群模式相应追加主机cluster.initial_master_nodes: [&quot;192.168.1.30&quot;,]http.cors.enabled: true # 方便plugins head插件时跨站请求成功http.cors.allow-origin: &quot;*&quot; head 插件安装安装好后直接访问 http://IP:9100/ 连接地址填入http://es-server:9200/正确1234git clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start 1./bin/elasticsearch # 直接启动即可 集群状态 123456green 可用状态red: 不可用yellow: 修复状态ES参与集群事务的端口tcp/9300ES接收请求的端口tcp/9200 API接口使用123456确保集群正常； API接口9200Restful接口API： 4类1 检查集群节点索引健康与否，以及获取其相应状态2 管理集群节点索引及元数据3 执行CRUD操作4 执行高级操作：例如paging 、filtering 12345678910111213所有_cat支持的API操作[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat=^.^=/_cat/allocation/_cat/shards/_cat/shards/&#123;index&#125;/_cat/master/_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;/_cat/segments。。。 v=verbose显示详细信息1234567891011http://192.168.1.30:9200/_cat/nodeshttp://192.168.1.30:9200/_cat/nodes?vhttp://192.168.1.30:9200/_cat/masterhttp://192.168.1.30:9200/_cat/master?v例如：[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name172.21.0.5 36 98 14 0.22 0.60 1.09 cdfhilmrstw - es02172.21.0.3 28 98 14 0.22 0.60 1.09 cdfhilmrstw * es01172.21.0.4 61 98 14 0.22 0.60 1.09 cdfhilmrstw - es03 help查看某接口支持查询的详细字段12345678[root@k8smaster ~]# curl http://192.168.1.40:9200/_cat/nodes?helpid | id,nodeId | unique node idpid | p | process idip | i | ip addressport | po | bound transport porthttp_address | http | bound http addressversion | v | es version。。。 查询某接口指定字段1234# curl http://192.168.1.40:9200/_cat/nodes?h=id,pid,ip,port,http_address,version,uptimet_iA 6 172.21.0.5 9300 172.21.0.5:9200 7.12.0 56.8mWIm1 6 172.21.0.3 9300 172.21.0.3:9200 7.12.0 56.8m3bzJ 6 172.21.0.4 9300 172.21.0.4:9200 7.12.0 56.8m health的green状态123# curl http://192.168.1.40:9200/_cat/health?vepoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent1618470428 07:07:08 es-docker-cluster green 3 3 14 7 0 0 0 0 - 100.0% 总结 带着概念参照官网安装还是挺简单的，练习接口可以了解学习集群及ES的概念","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"mariadb-恢复数据","slug":"mariadb-恢复数据","date":"2019-07-25T01:41:54.000Z","updated":"2021-07-29T08:54:36.025Z","comments":true,"path":"2019/07/25/mariadb-恢复数据/","link":"","permalink":"http://www.digmyth.com/2019/07/25/mariadb-恢复数据/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"搜索引擎与Lucene基础","slug":"log_lucene-认识","date":"2019-06-15T02:42:36.000Z","updated":"2021-03-17T09:47:30.627Z","comments":true,"path":"2019/06/15/log_lucene-认识/","link":"","permalink":"http://www.digmyth.com/2019/06/15/log_lucene-认识/","excerpt":"","text":"简单常识：1千万条日志记录存储大小为2G1亿条日志记录 5G8亿条日志记录 40G 程序： 算法+数据结构存储+前端访问接口 开发全文搜索程序： 算法+支持这种场景的特定存储结构海量日志分析： 搜索引擎搜索引擎： 存储时需要有索引链–&gt; 搜索组件（有请求接口有请求返回或展示UI） 收集日志 –&gt; 对收集过来日志检索原始内容–&gt; 构建文档 –&gt;文档分析或切词 –&gt; 建立索引链（创建倒排索引）而SQL的索引： 正排索引 文档数据库： Mongodb、elasticsearch(每一行中每字段文档数据格式各不一样) 著名开源搜索开发库或底层搜索引擎: Lucene添加收集文档，搜索引擎，提供上层搜索接口： Elasticsearch 包含一个或多个域的容器，文档就是由Field、Value组成Lucene没有全局模式：no schema,没有预先定义字段及类型域有很多选项： 索引选项、存储选项、每个域向量使用选项索引选项用于通过倒排索来控制文本是否可被搜索，成为索引中的项才能被搜索： index: ANALYZIED 需要分析或分词并单独构建索引项 index: not_ANALYZIED 不分析或不分词，把整个内容当一个索引项 index: analyzied norms 类似index: ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.Not_analyzied_norms 类似not_ANALYZIED，不会在存储中存储加权信息(Norms:加权基准) index.NO : 不对此域的值进行索引，因此不能被搜索存储选项: 是否需要存储域的真实值 title: This is a Notebook. –&gt; this notebook 有效信息即可 store.YES: 存储真实值 store.NO: 不存储真实值 (每个项或每个域)向量选项用于在搜索期间控制该文档所有的唯一项都能完全从文档域中检索时使用 文档和域的加权操作： 通过改变某一个文档相对于某一个词的加权因子，对值改大改小可以决定它对用户的重要程序，如竟价排名 加权计算标准：方案很多 搜索：查询Lucene索引时，返回一个有序的scoreDoc对象：查询时Lucene会为每个文档计算出score,API: IndexSearcher: 搜索索引入口 Query及其子类：构建搜索查询语句 QueryParser: 搜索分析后返回结果 TopDocs 某查询分值top10 Lucene的多样化查询： IndexSearcher中的search方法，完成搜索时传入Query实例参数进行，就是告之到底要搜索什么，你键入的搜索关键词分析以后作为Query对象，传递给IndexSearch方法 常用几种查询方法123456789101112131415161718TermQuery： 对索引中特定项进行搜索，Term是索引中的最小索引片段，每个Term包含一个域名和文本值title: This is a Desktitle: Tis is a table索引构建方式： This： （1） (2) Desk： (1) table: (2) TermRangeQuery:索引中每个Term对象上的值都会按照字典编排顺序进行排序，并允许在Lucene TermRangeQuery 提供的范围内进行搜索 大白话就是TermQuery指定一个域中搜索，TermRangeQuery可以指定多个域内搜索 NumericRangeQuery： 只是数值范围内搜索 PrefixQuery： 用于搜索以指定字符串开头的域 BooleanQuery：用于实现组合查询，与或非 and 、or、 not PhraseQuery： 能够跟据位置信息定义文档 WildcardQuery：通配符 FuzzyQuery： 模糊查询 levenshtein处理 总结 Lucene是底层搜索引擎或搜索开发库，基于Lucene库开发有了Elasticsearch存储、搜索引擎系统","categories":[{"name":"日志系统","slug":"日志系统","permalink":"http://www.digmyth.com/categories/日志系统/"}],"tags":[]},{"title":"kubernetes-dashboard-TLS坑","slug":"Kubernetes-dashboard-TLS坑","date":"2019-06-11T12:51:41.000Z","updated":"2019-06-15T15:11:45.437Z","comments":true,"path":"2019/06/11/Kubernetes-dashboard-TLS坑/","link":"","permalink":"http://www.digmyth.com/2019/06/11/Kubernetes-dashboard-TLS坑/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"python-celery-Flask","slug":"python-Celery-Flask","date":"2019-02-10T09:03:01.000Z","updated":"2019-02-21T10:31:24.286Z","comments":true,"path":"2019/02/10/python-Celery-Flask/","link":"","permalink":"http://www.digmyth.com/2019/02/10/python-Celery-Flask/","excerpt":"","text":"一、基本使用Celery是由Python开发的一个简单、灵活、可靠的处理大量任务的分发系统，可以实时处理任务，也可以定时异步处理任务。每次分发任务后得到一个ID，然后根据这个ID查询任务执行情况。 并且celery需要rabbitMQ、Redis等充当broker来进行消息的接收。 安装1pip3 install celery eventlet # windows系统需要eventlet模块 下面我们来快速上手celery编辑s1.py1234567891011#!/usr/bin/env python3from celery import Celerycel = Celery(&apos;xxx&apos;, broker=&quot;redis://192.168.1.40&quot;, backend=&apos;redis://192.168.1.40&apos;)@cel.taskdef f1(x,y): return x+y 然后把s1这个work工作起来，进入命令终端,如果在linux系统，不用添加参数-P eventlet1E:\\pro\\xxx_dir&gt; celery worker -A s1 -l info -P eventlet 编辑s2.py1234567891011121314151617#!/usr/bin/env python3import datetimefrom s1 import f1# 立即执行result = f1.delay(4,6)print(result.id)# 定时执行ctime = datetime.datetime.now()# ctime = datetime.datetime(year=2019,month=2,day=21,hour=14,minute=8)utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp())s10 = datetime.timedelta(seconds=10)ctime_x = utc_time + s10result = f1.apply_async(args=[1,3],eta=ctime_x)print(result.id) 编辑s3.py12345678910111213141516171819202122232425#!/usr/bin/env python3from celery.result import AsyncResultfrom demo1.s1 import celasync = AsyncResult(id=&quot;f43bce52-9503-475e-9d19-4a46ed910a8e&quot;,app=cel)if async.successful(): ret = async.get() # 获取值 #async.forget() # 删除值 print(ret)elif async.failed(): print(&apos;执行失败&apos;)elif async.status == &apos;PENDING&apos;: print(&apos;任务等待中被执行&apos;)elif async.status == &apos;RETRY&apos;: print(&apos;任务异常后正在重试&apos;)elif async.status == &apos;STARTED&apos;: print(&apos;任务已经开始被执行&apos;)else: print(&quot;任务执行失败&quot;)async.revoke() # 取消一个任务，当一个任务正在执行，不能取消async.revoke(terminate=True) # 终止一个任务，当一个任务正在执行，可以被终止 二、多目录结构经过上面快速上手的学习，了解了celery的基本使用，那么重组一下代，形成项目中多目录结构看看相互之间如何调用？ 创建一个celery_tasks的目录，里面一般保存2类文件，其中一个文件名称必须为celery,另一类就是定义task任务的文件，可以有多个。 定义celery_tasks/celery.py文件,如果有多个task任务文件，可以用includ列表包含进来123456789101112131415#!/usr/bin/env python3from celery import Celery# from celery.schedules import crontabcel = Celery(&apos;xxxxxx&apos;, broker=&apos;redis://192.168.1.40:6379&apos;, backend=&apos;redis://192.168.1.40:6379&apos;, include=[&apos;celery_tasks.task1&apos;,) #include=[&apos;celery_tasks.task1&apos;,&apos;celery_tasks.task2&apos;])# 时区cel.conf.timezone = &apos;Asia/Shanghai&apos;# 是否使用UTCcel.conf.enable_utc = False 在多目录结构中，跑celery work时不用指定到文件，指定目录即可1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 定义celery_tasks/task1.py1234567#!/usr/bin/env python3from .celery import cel@cel.taskdef f1(x,y): return x+y 有了celery.py文件和task任务文件，我们就可以在任意地方调用任务了。 比如定义test/exec1.py文件来执行任务123456#!/usr/bin/env python3from celery_tasks.task1 import f1result = f1.delay(4,6)print(result.id) 定义test/exec2.py文件来获取任务执行结果,需要提供任务ID1234567891011#!/usr/bin/env python3from celery_tasks.celery import celfrom celery.result import AsyncResultasync = AsyncResult(id=&quot;be6bb021-da48-46a9-b1bc-94b987f7c8a7&quot;,app=cel)if async.successful(): print(async.get())else: print(&quot;任务执行失败&quot;) 三、Flask中的例用有了上面celery的认识，我们来简单写点代码，看一下在Flask框架中celery是如何使用的？ 定义Flask项目启动文件app.py 写线上代码时是要把任务保存在数据库中的，这里仅作示例就保存在了HISTORY全局变量中了.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#!/usr/bin/env python3from flask import Flask,request,render_template,redirectfrom celery_tasks.task2 import deployapp = Flask(__name__)HISTORY = []@app.route(&apos;/index&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def index(): if request.method == &quot;GET&quot;: return render_template(&apos;index.html&apos;,history=HISTORY)@app.route(&apos;/publish&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def publish(): if request.method == &quot;GET&quot;: return render_template(&apos;publish.html&apos;) else: version = request.form.get(&quot;version&quot;) hosts = request.form.getlist(&quot;hosts&quot;) print(version,hosts) import datetime ctime = datetime.datetime.now() utc_time = datetime.datetime.utcfromtimestamp(ctime.timestamp()) ctime_10 = utc_time + datetime.timedelta(seconds=10) result = deploy.apply_async(args=[version,hosts],eta=ctime_10) HISTORY.append(&#123;&quot;version&quot;:version,&quot;hosts&quot;:hosts,&quot;task_id&quot;:result.id&#125;) print(HISTORY) return redirect(&quot;/index&quot;)from celery.result import AsyncResultfrom celery_tasks.celery import cel@app.route(&apos;/check_result&apos;,methods=[&quot;GET&quot;,&quot;POST&quot;])def check_result(): task_id = request.args.get(&quot;task_id&quot;) async = AsyncResult(id=task_id,app=cel) if async.successful(): result = async.get() print(result) # result.forget() # 将结果删除 return &quot;执行成功&quot; elif async.failed(): return &apos;执行失败&apos; elif async.status == &apos;PENDING&apos;: return &apos;任务等待中被执行&apos; elif async.status == &apos;RETRY&apos;: return &apos;任务异常后正在重试&apos; elif async.status == &apos;STARTED&apos;: return &apos;任务已经开始被执行&apos; else: return &quot;unkown status&quot;@app.route(&apos;/cancel&apos;, methods=[&quot;GET&quot;, &quot;POST&quot;])def cancel(): task_id = request.args.get(&quot;task_id&quot;) async =AsyncResult(id=task_id,app=cel) async.revoke(terminate=True) for i in HISTORY: if task_id in i.values(): HISTORY.remove(i) return redirect(&quot;/index&quot;)if __name__ == &apos;__main__&apos;: app.run() 定义其中用到的templates/index.html123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;发布系统&lt;/h1&gt;&lt;a href=&quot;/publish&quot;&gt;添加发布任务&lt;/a&gt;&lt;table&gt; &#123;% for row in history %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.task_id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.version &#125;&#125;&lt;/td&gt; &#123;% for host in row.hosts %&#125; &lt;td&gt; &lt;span&gt;&#123;&#123; host &#125;&#125;&lt;/span&gt; &lt;/td&gt; &#123;% endfor %&#125; &lt;td&gt;&lt;a href=&quot;/check_result?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;查看&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/cancel?task_id=&#123;&#123; row.task_id &#125;&#125;&quot;&gt;取消&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 定义其中用到的templates/publish.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;version&quot; placeholder=&quot;请输入要发布的版本&quot;&gt;&lt;/p&gt; &lt;p&gt; &lt;select name=&quot;hosts&quot; multiple=&quot;multiple&quot;&gt; &lt;option value=&quot;c1.com&quot;&gt;c1.com&lt;/option&gt; &lt;option value=&quot;c2.com&quot;&gt;c2.com&lt;/option&gt; &lt;option value=&quot;c3.com&quot;&gt;c3.com&lt;/option&gt; &lt;/select&gt; &lt;/p&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 定义其中的celery_tasks.task2.py文件,这里的deploy是真正定义任务的地方.12345678#!/usr/bin/env python3from .celery import cel@cel.taskdef deploy(version,hosts): print(version, hosts) # 定义想要执行的任务代码 return &apos;deploy ok&apos; 同样别望了先把work跑起来,再启动Flask1E:\\pro\\xxx_dir&gt; celery worker -A celery_tasks -l info -P eventlet 四、总结还需要多写代码在项目中总结celery…","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"ansible callback 重写","slug":"ansible-Callback-02","date":"2019-01-12T12:39:12.000Z","updated":"2019-01-13T13:01:21.969Z","comments":true,"path":"2019/01/12/ansible-Callback-02/","link":"","permalink":"http://www.digmyth.com/2019/01/12/ansible-Callback-02/","excerpt":"","text":"1.1 adhoc callback重写adhoc-callback.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象#^#Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)#^# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)#^# 重写CallbackBase父类class AdhocResultsCollector(CallbackBase): def __init__(self, *args, **kwargs): super(AdhocResultsCollector, self).__init__(*args, **kwargs) self.host_ok = &#123;&#125; self.host_unreachable = &#123;&#125; self.host_failed = &#123;&#125; def v2_runner_on_unreachable(self, result): self.host_unreachable[result._host.get_name()] = result def v2_runner_on_ok(self, result, *args, **kwargs): self.host_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.host_failed[result._host.get_name()] = resultcallback = AdhocResultsCollector()passwords = dict()tqm = TaskQueueManager(inventory=myinven, variable_manager=varmanager, loader=loader,options=options, passwords=passwords, stdout_callback=callback )result_status_code = tqm.run(play)print(callback.host_ok.items())result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;)for host,result in callback.host_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.host_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.host_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultprint(json.dumps(result_raw,indent=4)) 1.2 playbook callback重写写入示例playbook文件site.yml12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 编写play_book.py 文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;, &apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;, &apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True, )# 重写CallbackBase父类class PlayBookResultsCollector(CallbackBase): CALLBACK_VERSION = 2.0 def __init__(self, *args, **kwargs): super(PlayBookResultsCollector, self).__init__(*args, **kwargs) self.task_ok = &#123;&#125; self.task_skipped = &#123;&#125; self.task_failed = &#123;&#125; self.task_status = &#123;&#125; self.task_unreachable = &#123;&#125; def v2_runner_on_ok(self, result, *args, **kwargs): self.task_ok[result._host.get_name()] = result def v2_runner_on_failed(self, result, *args, **kwargs): self.task_failed[result._host.get_name()] = result def v2_runner_on_unreachable(self, result): self.task_unreachable[result._host.get_name()] = result def v2_runner_on_skipped(self, result): self.task_ok[result._host.get_name()] = result def v2_playbook_on_stats(self, stats): hosts = sorted(stats.processed.keys()) for h in hosts: t = stats.summarize(h) self.task_status[h] = &#123; &quot;ok&quot;:t[&apos;ok&apos;], &quot;changed&quot; : t[&apos;changed&apos;], &quot;unreachable&quot;:t[&apos;unreachable&apos;], &quot;skipped&quot;:t[&apos;skipped&apos;], &quot;failed&quot;:t[&apos;failures&apos;] &#125;# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords )# 把重写的CallbackBase父类加载进playbookcallback = PlayBookResultsCollector()playbook._tqm._stdout_callback = callbackplaybook.run()result_raw = dict( success = &#123;&#125;, failed = &#123;&#125;, unreachable = &#123;&#125;, skipped = &#123;&#125;, status = &#123;&#125;,)for host,result in callback.task_ok.items(): result_raw[&apos;success&apos;][host] = result._resultfor host,result in callback.task_failed.items(): result_raw[&apos;failed&apos;][host] = result._resultfor host,result in callback.task_unreachable.items(): result_raw[&apos;unreachable&apos;][host] = result._resultfor host,result in callback.task_skipped.items(): result_raw[&apos;skipped&apos;][host] = result._resultfor host, result in callback.task_status.items(): result_raw[&apos;status&apos;][host] = resultprint(json.dumps(result_raw,indent=4)) 执行示例python3 play_book.py 返回类似如下结果12345678910111213141516171819202122232425262728293031323334&#123; &quot;success&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;changed&quot;: true, &quot;end&quot;: &quot;2019-01-14 04:50:06.190607&quot;, &quot;stdout&quot;: &quot;&quot;, &quot;cmd&quot;: &quot;touch /tmp/site.txt&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2019-01-14 04:50:06.186466&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;delta&quot;: &quot;0:00:00.004141&quot;, &quot;invocation&quot;: &#123; &quot;module_args&quot;: &#123; &quot;creates&quot;: null, &quot;executable&quot;: null, &quot;_uses_shell&quot;: true, ... 略 &#125; &#125;, &#125; &#125;, &quot;failed&quot;: &#123;&#125;, &quot;unreachable&quot;: &#123;&#125;, &quot;skipped&quot;: &#123;&#125;, &quot;status&quot;: &#123; &quot;192.168.1.6&quot;: &#123; &quot;ok&quot;: 2, &quot;changed&quot;: 1, &quot;unreachable&quot;: 0, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125; &#125;&#125; 总结 adhoc重写方法如host_ok,host_failed,host_unreachable playbook重写方法如task_ok,task_failed,task_unreachable,task_skipped,task_status,task_changed 返回如callback.task_ok.items(),其中键为host,值为result对象，result._result得到一个字典类型的详细结果 &lt;&lt; 完结 &gt;&gt;","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"python3下ansible api学习","slug":"ansible-api-01","date":"2019-01-10T12:39:12.000Z","updated":"2019-01-13T12:36:03.633Z","comments":true,"path":"2019/01/10/ansible-api-01/","link":"","permalink":"http://www.digmyth.com/2019/01/10/ansible-api-01/","excerpt":"","text":"1.1 ansible api基础环境说明： python version: python3 ansible version: 2.7.5 inventory file: dir1/inventory/multinode 清单文件定义： dir1/inventory/multinode12345678910[control]192.168.1.6 var1=&quot;ssss&quot; ansible_ssh_user=root ansible_ssh_pass=&apos;123&apos;[nova:children]control[cinder:children]control[glance:children] 一个单一文件进行简单的接口学习: dir1/f1.py1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python3import os,sys,jsonfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.plugins.callback import CallbackBaseimport ansible.constants as CBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&quot;dir1/inventory/multinode&quot;)loader = DataLoader()inven = InventoryManager(loader=loader,sources=[source,])# print(inven.get_hosts())inven.add_group(&apos;test_group2&apos;)print(inven.get_groups_dict())inven.add_host(host=&apos;192.168.1.7&apos;,port=22,group=&apos;test_group2&apos;)print(inven.get_groups_dict())host = inven.get_host(hostname=&apos;192.168.1.6&apos;)variableman = VariableManager(loader=loader,inventory=inven)vars = variableman.get_vars(host=host)# print(json.dumps(vars,indent=4))variableman.set_host_variable(host=host,varname=&apos;k1&apos;,value=&apos;v1&apos;) # 局部的x = variableman.get_vars(host=host)print(x[&apos;k1&apos;])print(variableman.__dict__)variableman._extra_vars = &#123;&quot;k2&quot;: &quot;v2&quot;&#125; # 添加全局变量x = variableman.get_vars() # 不传host说明是全局的 执行测试1python3 dir1/f1.py # 输出调用信息对照接口就知道只些方法是干什么的了 1.2 adhoc模式示例学习编辑dir1/adhoc.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块play_data = dict( name=&quot;Ansible adhoc example&quot;, hosts=&apos;192.168.1.6,&apos;, gather_facts=&apos;no&apos;, tasks=[ dict(action=dict(module=&apos;shell&apos;, args=&quot;touch /tmp/sss.txt&quot;)), # dict(action=dict(module=&apos;debug&apos;, args=dict(msg=&quot;&#123;&#123; shell_out.stdout &#125;&#125;&quot;))), ],)play = Play().load(data=play_data,loader=loader,variable_manager=varmanager)passwords = &#123;&#125;tqm = TaskQueueManager(inventory=myinven,variable_manager=varmanager, loader=loader,options=options,passwords=passwords)result = tqm.run(play) 执行测试1python3 dir1/adhoc.py 输出信息和命令行ansible直接模块运行一样，任务正常执行 1.3 playbook 示例学习编辑dir1/play_book.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/usr/bin/env python3import os,sys,jsonimport ansible.constants as Cfrom ansible.parsing.dataloader import DataLoaderfrom ansible.vars.manager import VariableManagerfrom ansible.inventory.manager import InventoryManagerfrom ansible.playbook import Playfrom ansible.executor.task_queue_manager import TaskQueueManagerfrom ansible.executor.playbook_executor import PlaybookExecutorfrom ansible.plugins.callback import CallbackBasefrom ansible.inventory.host import Host,Groupfrom collections import namedtupleBaseDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))source = os.path.join(BaseDir,&apos;dir1/inventory/multinode&apos;)loader = DataLoader() # 实例化loader对象myinven = InventoryManager(loader=loader,sources=[source,]) # 实例化inventory对象print(myinven.get_groups_dict())varmanager = VariableManager(loader=loader,inventory=myinven) # 实例化VariableManager对象# Options 选项Options = namedtuple(&apos;Options&apos;,[ &apos;connection&apos;,&apos;module_path&apos;, &apos;forks&apos;, &apos;timeout&apos;, &apos;remote_user&apos;, &apos;ask_pass&apos;, &apos;private_key_file&apos;, &apos;ssh_common_args&apos;, &apos;ssh_extra_args&apos;, &apos;sftp_extra_args&apos;, &apos;scp_extra_args&apos;, &apos;become&apos;, &apos;become_method&apos;, &apos;become_user&apos;, &apos;ask_value_pass&apos;, &apos;verbosity&apos;, &apos;check&apos;, &apos;listhosts&apos;, &apos;listtasks&apos;, &apos;listtags&apos;, &apos;syntax&apos;,&apos;diff&apos;])options = Options(connection=&apos;smart&apos;, module_path=None, forks=100, timeout=10, remote_user=&apos;root&apos;, ask_pass=False, private_key_file=None, ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=None, become_method=None, become_user=&apos;root&apos;, ask_value_pass=False, verbosity=None, check=False, listhosts=False, listtasks=False, listtags=False, syntax=False, diff=True)# 执行对象和模块passwords = &#123;&#125;#传入playbooks, inventory, variable_manager, loader, options, passwordsplaybook = PlaybookExecutor(playbooks=[&apos;site.yml&apos;,], inventory=myinven, variable_manager=varmanager, loader=loader, options=options, passwords=passwords)playbook.run() 用到的site.yml文件示例如下12345678---- hosts: 192.168.1.6 remote_user: root vars: touch_file: &quot;site.txt&quot; tasks: - name: touch file shell: &quot;touch /tmp/&#123;&#123; touch_file &#125;&#125;&quot; 执行测试1python3 play_book.py 输出信息和ansible-playbook命令行输出一样，任务正常执行","categories":[{"name":"ansible","slug":"ansible","permalink":"http://www.digmyth.com/categories/ansible/"}],"tags":[]},{"title":"veth-pair+namespace","slug":"veth-pair+namespace","date":"2019-01-10T01:41:54.000Z","updated":"2021-01-21T09:00:43.702Z","comments":true,"path":"2019/01/10/veth-pair+namespace/","link":"","permalink":"http://www.digmyth.com/2019/01/10/veth-pair+namespace/","excerpt":"","text":"查找对端veth pair12345678root@k8s-m:/data/dashboard# cat /sys/class/net/cali3b4bae3cec1/iflink 4root@k8s-m:/data/dashboard# ethtool -S cali3b4bae3cec1NIC statistics: peer_ifindex: 4 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0 namespace场景参考如下1234567891011121314# ip link add veth-a type veth peer name veth-b # 生成veth pair对，相当于一根网线# ip netns add ns1 # 创建名称空间# ip link set veth-a netns ns1 #将网线A端加入名称容间root@k8s-m:~# ip netns exec ns1 ethtool -S veth-a # veth-a的对端编号16NIC statistics: peer_ifindex: 16 rx_queue_0_xdp_packets: 0 rx_queue_0_xdp_bytes: 0 rx_queue_0_xdp_drops: 0root@k8s-m:~# ip netns exec ns1 cat /sys/class/net/veth-a/iflink # veth-a的对端编号1616# ip a # 查看编号16的设备16: veth-b@if17: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether be:ec:d2:fc:64:3f brd ff:ff:ff:ff:ff:ff link-netns ns1 利用ovs实现跨主机通信的简单应用12345678ovs-vsctl add-br ovs0ovs-vsctl add-port ovs0 eth0物理网卡加进ovs可能会断网，解决办法：# ifconfig ovs0 172.16.10.10/24# ifconfig eth0 0.0.0.0.0# route del default# route add default gw 172.16.10.254 dev ovs0# ifconfig ovs0 hw ether $eth0_mac 注意： 完事后放在开机启动项，不然开机失效连不上机","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"OpenVSwitch","slug":"openvswitch","date":"2019-01-08T01:41:54.000Z","updated":"2019-05-26T15:16:23.168Z","comments":true,"path":"2019/01/08/openvswitch/","link":"","permalink":"http://www.digmyth.com/2019/01/08/openvswitch/","excerpt":"","text":"交换机端口查看12345# ovs-vsctl show# ovs-ofctl show# ovs-ofctl show br-int# ovs-ofctl show br-tun# virsh domiflist instance-00000017 open flow流表查看12345678# ovs-ofctl dump-flows br-int# ovs-ofctl dump-flows br-tun# ip netns exec qrouter-c266eb04-0be8-448f-986f-6eef3a9bcdce ifconfig# dpkg-query -S /sbin/brctl# apt-get install bridge-utils# brctl show 添加br-ex网桥：123456# ovs-vsctl add-br br-ex桥加载到物理网口：# ovs-vsctl add-port br-ex eth0添加到不同vlan与端口模式# ovs-vsctl add-port br-ex eth1 tag=100 //设置为access端口# ovs-vsctl add-port br-ex eth2 trunk=200 //设置为trunk端口,允许vlan200通过，默认允许所有vlan直接转发 列出所有桥：123ovs-vsctl list-brovs-vsctl list-ports br-intovs-vsctl port-to-br port_name 列出桥上所接端口123# ovs-vsctl list-ports br-ex# ovs-ofctl dump-ports br-ex# ovs-vsctl list port 根据交换机某个接口名称查端口号12# ovs-vsctl list interface tap0_br | grep &quot;ofport &quot;ofport : 1 流表操作注意： 流量匹配是有顺序的,table0–&gt;table1—&gt;table3–&gt;table4 –&gt;table5…123456789101112# ovs-vsctl add-br vswitch0#发现有一条actions为NORMAL的流表项，这是默认存在的，用以实现交换机的基本动作# ovs-ofctl dump-flows vswitch0cookie=0x0, duration=267197.837s, table=0, n_packets=459, n_bytes=42190, idle_age=387, hard_age=65534, priority=0 actions=NORMAL# ovs-ofctl del-flows vswitch0 # 流表删除后所有流量将被丢弃# ovs-ofctl dump-flows vswitch0# 可以在table0添加类似规则使流量正常转发,没写表名默认table0# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot; 12345#flow优先级越高，会优先匹配,以下规则drop优先，流量被丢弃# ovs-ofctl del-flows br-int# ovs-ofctl add-flow br-int &quot;priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow br-int &quot;priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl add-flow vswitch0 &quot;priority=3,in_port=1,actions=drop&quot; 将table0的规则添加到table1上，发出流量也是不通的，因为流表是有顺序的，table0没有匹配到，流量被丢弃1234567# ovs-ofctl del-flows vswitch0# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot;# ovs-ofctl dump-flows vswitch0NXST_FLOW reply (xid=0x4): cookie=0x0, duration=3.485s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=1,in_port=1 actions=output:4 cookie=0x0, duration=3.033s, table=1, n_packets=0, n_bytes=0, idle_age=3, priority=2,in_port=4 actions=output:1 现在给table0加上一条将数据包发送到table1处理的flow, 发现流量正常，这就明白了多个table之间是如何协调工作的。1# ovs-ofctl add-flow vswitch0 &quot;table=0,actions=goto_table=1&quot; 组表操作添加一个组表1# ovs-ofctl -O OpenFlow13 add-group vswitch0 &quot;group_id=1,type=select,bucket=resubmit(,1)&quot; 查看组表1# ovs-ofctl -O OpenFlow13 dump-groups vswitch0 在table0中增加两条flow，目的是将数据包发送到group table112# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=1,actions=group:1&quot;# ovs-ofctl -O OpenFlow13 add-flow vswitch0 &quot;table=0,in_port=4,actions=group:1&quot; 向table1中增加两条flow，真正的数据转发在table1中进行,流量也正常通过12# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=1,in_port=1,actions=output:4&quot;# ovs-ofctl add-flow vswitch0 &quot;table=1,priority=2,in_port=4,actions=output:1&quot; 虚机挂在网桥上xml格式定义openvswitch网桥，以便于virt-install –network参数指定网桥启动虚机1234567# ovsbr0.xml&lt;network&gt; &lt;name&gt;ovsbr0&lt;/name&gt; &lt;forward mode=&apos;bridge&apos;/&gt; &lt;bridge name=&apos;ovsbr0&apos;/&gt; &lt;virtualport type=&apos;openvswitch&apos;/&gt;&lt;/network&gt; 123virsh net-define ovsbr0.xmlvirsh net-start ovsbr0virsh net-autostart ovsbr0 在安装kvm虚拟机时使用ovsbr012345678910virt-install \\ -n vm-name \\ -r 4096 \\ --disk path=/data/kvm/rhel75-vm1.qcow2,format=qcow2,size=60 \\ --vcpus 4 \\ --noautoconsole \\ --cdrom=/data/kvm/iso/rhel75-x86_64.iso \\ --os-type=linux \\ --network network:ovsbr0 \\ --vnc --vnclisten=0.0.0.0 --vncport=5901 也可以将正在运行的KVM虚拟机的vnet网络接口强制接到ovs网桥上12#virsh dumpxml $vmname|grep vnet 查看某虚拟机在宿主机上对应的网络接口add-port ovsbr0 vnetxx 网桥接口划vlan并配IP命令12ovs-vsctl add-port ovsbr0 tag10 tag=10 -- set interface tag10 type=internalifconfig tag10 192.168.10.10/24 up 1234# ip link命令设置vlan接口命令ip link add link eth0 name eth0.10 type vlan id 10ifconfig eth0.10 192.168.10.33 netmask 255.255.255.0 broadcast 192.168.10.255 uproute add default gw 192.168.10.1 dev eth0.10 总结：这里只是命令总结，并没有什么实验逻辑","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"download technique","slug":"linux-download-technique","date":"2018-12-01T00:48:08.000Z","updated":"2019-05-26T11:37:37.080Z","comments":true,"path":"2018/12/01/linux-download-technique/","link":"","permalink":"http://www.digmyth.com/2018/12/01/linux-download-technique/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-socket-高级篇","slug":"web-socket-02","date":"2018-11-25T12:51:41.000Z","updated":"2018-11-27T02:19:03.844Z","comments":true,"path":"2018/11/25/web-socket-02/","link":"","permalink":"http://www.digmyth.com/2018/11/25/web-socket-02/","excerpt":"","text":"前面我们学习了WebSocket，我们知道客户端要与服务端进行WebSoccket通信，客户端要和服务端握手，握手成功后才能通信。 握手： 客户端发出握手请求，服务端在握手请求中取出“Sec-WebSocket-Key”，把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 如果给定了“Sec-WebSocket-Key”，那么摘要算法代码如下，服务器会把摘要后值返回给客户端完成握手操作。12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 如果我们己经有一个socket server，真的能收到握手信息吗？socker_server.py1234567891011121314#!/usr/bin/env python3import socketconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)conn.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)conn.bind((&apos;127.0.0.1&apos;,8000))conn.listen(5)client,addr = conn.accept()print(client.recv(8192))print(addr) 如何发送握手请求？方式一：可直接在浏览器console终端下手动发送socket请求，请求中包含握手信息12&gt;var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;)undefined 此时浏览器会报VM44:1 WebSocket connection to &#39;ws://127.0.0.1:8000/xxoo&#39; failed: Connection closed before receiving a handshake response的错，是因为服务器端没有返回摘要后的值，表示没有握手成功。 方式二：直接编写client.html用浏览器运行12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;WebSocket test&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;WebSocket study....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 此时服务器会收到类似b&#39;GET /xxoo HTTP/1.1\\r\\nHost: 127.0.0.1:8000\\r\\nConnection: Upgrade...client_max_window_bits\\r\\n\\r\\n&#39;信息，里面包含“Sec-WebSocket-Key” 如果我们用一个函数手动取出“Sec-WebSocket-Key”，然后手动摘要后把值再手动返回给客户端，这样就握手成功不会报错了。 处理握手信息的函数(get_headers)如下123456789101112131415161718192021def get_headers(data): &quot;&quot;&quot; 将请求头格式化成字典 :param data: :return: &quot;&quot;&quot; header_dict = &#123;&#125; data = str(data, encoding=&apos;utf-8&apos;) for i in data.split(&apos;\\r\\n&apos;): print(i) header, body = data.split(&apos;\\r\\n\\r\\n&apos;, 1) header_list = header.split(&apos;\\r\\n&apos;) for i in range(0, len(header_list)): if i == 0: if len(header_list[i].split(&apos; &apos;)) == 3: header_dict[&apos;method&apos;], header_dict[&apos;url&apos;], header_dict[&apos;protocol&apos;] = header_list[i].split(&apos; &apos;) else: k, v = header_list[i].split(&apos;:&apos;, 1) header_dict[k] = v.strip() return header_dict 把摘要后的值返回给客户端1234567891011121314conn, address = sock.accept()data = conn.recv(1024)headers = get_headers(data) # 提取请求头信息# 对请求头中的sec-websocket-key进行加密response_tpl = &quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot; \\ &quot;Upgrade:websocket\\r\\n&quot; \\ &quot;Connection: Upgrade\\r\\n&quot; \\ &quot;Sec-WebSocket-Accept: %s\\r\\n&quot; \\ &quot;WebSocket-Location: ws://%s%s\\r\\n\\r\\n&quot;magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;value = headers[&apos;Sec-WebSocket-Key&apos;] + magic_stringac = base64.b64encode(hashlib.sha1(value.encode(&apos;utf-8&apos;)).digest())response_str = response_tpl % (ac.decode(&apos;utf-8&apos;), headers[&apos;Host&apos;], headers[&apos;url&apos;])conn.send(bytes(response_str, encoding=&apos;utf-8&apos;)) 摘要后的值返回给客户端后就完成了握手过程，客户端就不会再报连接错误了。 接收客户端发来的数据完成握手操作后就客户端就可以向服务器发送数据了，只需console终端sock.send(&#39;dimyth&#39;) 服务端接收12info = conn.recv(1024)print(info) # 这里是字节 服务器端收到客户端发来的数据，这个数据需要服务器解包，解包过程如下1234567891011121314151617181920payload_len = info[1] &amp; 127if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:]elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:]else: extend_payload_len = None mask = info[2:6] decoded = info[6:]bytes_list = bytearray()for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk)body = str(bytes_list, encoding=&apos;utf-8&apos;)print(body) # 解出真正数据 那么服务器给客户端发送数据要就封包。123456789101112131415161718192021def send_msg(conn, msg_bytes): &quot;&quot;&quot; WebSocket服务端向客户端发送消息 :param conn: 客户端连接到服务器端的socket对象,即： conn,address = socket.accept() :param msg_bytes: 向客户端发送的字节 :return: &quot;&quot;&quot; import struct token = b&quot;\\x81&quot; length = len(msg_bytes) if length &lt; 126: token += struct.pack(&quot;B&quot;, length) elif length &lt;= 0xFFFF: # 65535 token += struct.pack(&quot;!BH&quot;, 126, length) else: token += struct.pack(&quot;!BQ&quot;, 127, length) msg = token + msg_bytes conn.send(msg) return True 对上面BHQ说明一下，B代表1个字节，H代表2个字节，Q代表8个字节 客户端如何收消息呢？1234567891011&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var sock = new WebSocket(&apos;ws://127.0.0.1:8000/xxoo&apos;); sock.onmessage = function (event) &#123; /* 服务器端向客户端发送数据时，自动执行 */ var response = event.data; var newTag = document.createElement(&apos;div&apos;); newTag.innerHTML = response; document.getElementById(&apos;content&apos;).appendChild(newTag); &#125;;&lt;/script&gt;","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"web-socket-基础知识","slug":"web-socket-01","date":"2018-11-06T12:51:41.000Z","updated":"2018-11-25T11:24:51.562Z","comments":true,"path":"2018/11/06/web-socket-01/","link":"","permalink":"http://www.digmyth.com/2018/11/06/web-socket-01/","excerpt":"","text":"WebSocket在什么场景下使用？页面实时展示数据 轮询：setInterval()前端轮询请求，性能低下 长轮询：把请求pending住多少秒后再返回，量大时也损耗服务器性能 WebSocket: 建立socket双向传输数据，高效。 那么什么是WebSocket参考链接 先来看下http协议 http协议： 1 格式：请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接：一次请求，一次响应，然后断开连接。 那么WebSocket协议是怎么样的呢？ WebSocket： 1 格式： 请求头、请求体之间\\r\\n\\r\\n分隔，请求头或请求体内部\\r\\n分隔。 2 连接： 创建socket通道后不断开，全双工(full-duplex)通信，可以相互发消息。 WebSocket实现了浏览器与服务器全双工(full-duplex)通信，能主动向浏览器发送消息，但需要浏览器支持websocket封包解包或加密解密。其本质是保持TCP连接，在浏览器和服务端通过Socket进行通信。 WebSocket特性 WebSocket 是独立的、创建在 TCP 上的协议。 Websocket 通过 HTTP/1.1 协议的101状态码进行握手。 为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking） 总结起来：WebSocket是一种在单个TCP连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。 WebSokcet工作原理首先客户端要验证服务器是否支持websocket协议，能不能一起玩耍？ 客户端发送playload data之前会发送握手字符串，服务器把握手字符串加密后返回给客户端，此时客户端也把字符串按特定算法加密，把客户端加密后的字符串与服务器加密后的字符串进行比较，如果一致则客户端认为服务器支持WebSocket协议通信，可以相互一起玩耍。 握手时的特定算法是什么呢？代码如下12345678910111213#!/usr/bin/python3import hashlibimport base64SecKey = &apos;sN9cRrP/n9NdMgdcy2VJFQ==&apos; # browser 自动携带的随机字符串Magic_string = &apos;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&apos;def server_algorithm(SecKey): str = SecKey + Magic_string sec_str = base64.b64encode(hashlib.sha1(str.encode(&apos;utf-8&apos;)).digest()) return sec_strprint(server_algorithm(SecKey)) 能不能一起玩耍，官方术语就是创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）. 不管怎么说，WebSocket允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。 什么？看不懂，一言不合上代码，下面是一个典型的Websocket握手请求. 客户端请求1234567GET / HTTP/1.1Upgrade: websocketConnection: UpgradeHost: example.comOrigin: http://example.com:8002Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==Sec-WebSocket-Version: 13 服务器回应12345HTTP/1.1 101 Switching ProtocolsUpgrade: websocketConnection: UpgradeSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=Sec-WebSocket-Location: ws://example.com:8002/ 字段说明 Connection必须设置Upgrade，表示客户端希望连接升级。 Upgrade字段必须设置Websocket，表示希望升级到Websocket协议。 Sec-WebSocket-Key是随机的字符串，服务器端会用这些数据来构造出一个SHA-1的信息摘要。把“Sec-WebSocket-Key”加上一个特殊字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”，然后计算SHA-1摘要，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。如此操作，可以尽量避免普通HTTP请求被误认为Websocket协议。 Sec-WebSocket-Version 表示支持的Websocket版本。RFC6455要求使用的版本是13. Origin字段是可选的，通常用来表示在浏览器中发起此Websocket连接所在的页面，类似于Referer。但是,与Referer不同的是，Origin只包含了协议和主机名称。 服务器解包细节官方WebSocket instructions 注意的是客户端和服务端传输数据时，需要对数据进行封包解包。客户端有 javascript类库实现封包解包，但服务器需要手动实现。 当conn,addr = sk.accept()时，服务器端代码如下12345678910111213141516171819202122info = conn.recv(8096) payload_len = info[1] &amp; 127 if payload_len == 126: extend_payload_len = info[2:4] mask = info[4:8] decoded = info[8:] elif payload_len == 127: extend_payload_len = info[2:10] mask = info[10:14] decoded = info[14:] else: extend_payload_len = None mask = info[2:6] decoded = info[6:] bytes_list = bytearray() for i in range(len(decoded)): chunk = decoded[i] ^ mask[i % 4] bytes_list.append(chunk) body = str(bytes_list, encoding=&apos;utf-8&apos;) print(body) 要看懂这段代码必须了解websocket解包细节. 当客户端加密发送了socket data数据时，服务端收到数据是这样的. b&#39;\\x81\\x82\\xac\\xde\\xdd\\xf4\\xdc\\xae&#39; 需要对这样的数据解密才能拿到真的数据，跟据第二个字节后7位的值取数据.1234567891011121314151617180 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len | Extended payload length ||I|S|S|S| (4) |A| (7) | (16/64) ||N|V|V|V| |S| | (if payload len==126/127) || |1|2|3| |K| | |+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +| Extended payload length continued, if payload len == 127 |+ - - - - - - - - - - - - - - - +-------------------------------+| |Masking-key, if MASK set to 1 |+-------------------------------+-------------------------------+| Masking-key (continued) | Payload Data |+-------------------------------- - - - - - - - - - - - - - - - +: Payload Data continued ... :+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +| Payload Data continued ... |+---------------------------------------------------------------+ 1234value = socket_data[1] &amp; 127value &lt;=125 b&apos;\\x81\\x82 \\xac\\xde\\xdd\\xf4\\xdc\\xae&apos; # 数据在第2个节字后value =126 b&apos;\\x81\\x82\\xac\\xde \\xdd\\xf4\\xdc\\xae&apos; # next 16bit(2个字节)，数据在第4个节字后 value =127 xxx... # next 64bit(8个字节), 数据在第10个节字后 其中头32bits为掩码，真正数据还要去掉这4字节，取真正数据真不容易。 好了,WebSocket所有知识都在这里了，慢慢品味知识的韵味。","categories":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://www.digmyth.com/categories/WebSocket/"}],"tags":[]},{"title":"kubernetes-dashboard","slug":"Kubernetes-dashboard","date":"2018-10-01T12:51:41.000Z","updated":"2019-06-15T04:02:25.581Z","comments":true,"path":"2018/10/01/Kubernetes-dashboard/","link":"","permalink":"http://www.digmyth.com/2018/10/01/Kubernetes-dashboard/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"linux dmesg时间戳换算","slug":"linux-dmesg","date":"2018-08-16T01:42:54.000Z","updated":"2021-01-29T09:46:40.249Z","comments":true,"path":"2018/08/16/linux-dmesg/","link":"","permalink":"http://www.digmyth.com/2018/08/16/linux-dmesg/","excerpt":"","text":"dmesg系统内核里的时间戳转换为人类可以看懂的时间 dmesg记录的是自系统开机那刻到出事故时的时间戳 开机时间戳=当时时间戳-机器运行时间戳dmesg_time=开机时间戳+ dmesg记录时间戳再拿着dmesg_time时间戳换算就好了 123456789dmesg_time=`echo &quot;$(date +%s) - $(cat /proc/uptime | cut -f 1 -d&apos; &apos;) + 84679.822059&quot; | bc`echo $dmesg_time/proc/uptime 第一列表示为系统开机时间，根据这个值和当前时间可以获取到dmesg日志中时间发生的时间时间戳的转换为时间[root@site1 ~]# date -d &quot;@$&#123;dmesg_time&#125;&quot; &apos;+%Y-%m-%d %H:%M:%S&apos;2019-01-03 11:10:54","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"cinder多后端逻辑","slug":"cinder-vol-多后端","date":"2018-08-08T01:41:54.000Z","updated":"2019-05-26T12:41:06.912Z","comments":true,"path":"2018/08/08/cinder-vol-多后端/","link":"","permalink":"http://www.digmyth.com/2018/08/08/cinder-vol-多后端/","excerpt":"","text":"cinder配置逻辑123456789101112131415enable_backens=backend1,backend2,backend3[backend1]volume_driver=cinder.xxvolume_backend_name=sata[backend2]volume_driver=cinder.xxvolume_backend_name=ssd[backend3]volume_driver=cinder.xxvolume_backend_name=rbdcinder type-create satacinder type-key sata set volume_backend_name=satacinder create --volume-type sata --display-name vol_stat 20 vmware启用thick配置123456789101、运行命令：cinder type-create thick_volume（注：创建云硬盘类型）2、运行命令：cinder type-key thick_volume set vmware:vmdk_type=thick（注：thick为Vmware使用）3、运行命令：cinder type-key thick_volume set volume_backend_name=fusionstorage_sata3copy（注：指定后端）4、运行命令：glance image-list（注：查看镜像ID）5、运行命令：cinder create --image-id “镜像ID” --volume-type thick_volume --display-name vol-thick 20（注：创建一个20G大小的云硬盘，使用刚刚创建的云硬盘类型）","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"kubernetes-kubeadm","slug":"Kubernetes-kubeadm","date":"2018-08-01T12:51:41.000Z","updated":"2021-05-13T05:42:11.860Z","comments":true,"path":"2018/08/01/Kubernetes-kubeadm/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes-kubeadm/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"kubernetes-入门","slug":"Kubernetes","date":"2018-08-01T12:51:41.000Z","updated":"2018-08-26T04:03:32.956Z","comments":true,"path":"2018/08/01/Kubernetes/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Kubernetes/","excerpt":"","text":"k8s 的世界12345678910- charts , k8s 的包， 类似 *.rpm 的东西- helm , k8s 的包管理机制，类似 yum 的东西openstack 容器化 ( docker 版本）- kolla-ansible- tripleoopenstack 容器化( k8s 版本）- openstack-helm- kolla-kubernetes openshift中有几种网络端口模式(暴露服务) hostnetworkhostnetwork 就是Docker的host网络，pod直接占用宿主机IP及端口，没什么可说的 hostporthostport 是在单宿主机通过IP+端口来映射容器或pod(-p 参数), 实现外部能访问容器服务或pod服务 nodeportnodeport也是在宿主机通过IP+端口来映射，与hostport不同之处是映射ServiceIP+端口，再转到pod服务 routerrouter是以hostnetwork网络模式跑在宿主机上的容器化haproxy pod, pod IP和端口就是节点的IP和端，对外暴露80、443、1936端口，haproxy中有service query 信息来自于etcd, 再通过service访问到pod服务。 注： router是hostnetwork网络模式就意味着一个节点只能运行一个router","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Openshift-入门","slug":"Openshift","date":"2018-08-01T12:51:41.000Z","updated":"2018-07-29T10:51:12.609Z","comments":true,"path":"2018/08/01/Openshift/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Openshift/","excerpt":"","text":"前言","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"Dockerfile-详解","slug":"Dockerfile-详解","date":"2018-08-01T12:51:41.000Z","updated":"2018-10-24T06:18:33.872Z","comments":true,"path":"2018/08/01/Dockerfile-详解/","link":"","permalink":"http://www.digmyth.com/2018/08/01/Dockerfile-详解/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"容器世界","slug":"容器世界","permalink":"http://www.digmyth.com/categories/容器世界/"}],"tags":[]},{"title":"CentOS 7.x/Mysql limit","slug":"mysql-limit","date":"2018-07-25T01:41:54.000Z","updated":"2018-08-25T06:25:06.410Z","comments":true,"path":"2018/07/25/mysql-limit/","link":"","permalink":"http://www.digmyth.com/2018/07/25/mysql-limit/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"python-08-07-抽象类抽象方法.md","slug":"python-08-07-抽象类抽象方法","date":"2018-06-15T12:39:12.000Z","updated":"2018-12-21T18:24:42.815Z","comments":true,"path":"2018/06/15/python-08-07-抽象类抽象方法/","link":"","permalink":"http://www.digmyth.com/2018/06/15/python-08-07-抽象类抽象方法/","excerpt":"","text":"接口当多个类都有同样的方法，此时可以把相同的方法提练出来放在父类，但对继承父类的子类作约束就要用到接口了。 下面来段伪代码，在其它语言中普遍使用的语法，不适于python,这里主要学习其思想12345678910111213141516interface IFoo(): # 这个叫IFoo接口，约束实现该接口的类必须实现定义的方法 def exec(self):passclass A(IFoo): # 这个叫实现了IFoo接口，接口中的方法必须在当前类实现 def exec(self): return &quot;A.exec&quot;class B(IFoo): def exec(self): return &apos;B.exec&apos;def f1(arg): arg.exec()obj = A()print(f1.obj) 上面就是接口的概念或者用法，下面是用抽象类、抽象方法实现同样功能的原理伪代码123456789101112AbstractClass Foo(): 抽象类，抽象方法(有继承的特性，也有约束的特性) def abstractmethod():passclass A(Foo): def exec(self): return &apos;A.exec&apos; def f1(self): return &quot;A.f1&quot;obj = A()obj.exec() 那么如何用代码实现python抽象类、抽象方法呢？ 要用到from abc import abstractmethod,ABCMeta1234567891011121314151617from abc import abstractmethod,ABCMetaclass IFoo(metaclass=ABCMeta): @abstractmethod def exec(self):pass def f1(self): return &quot;cloud implement really method&quot;class A(IFoo): # 当前类继承了抽象类，当前类必须实现抽象类中的所有抽象方法，其它方法可以不用定义且可以直接继承使用。 def exec(self): return &quot;really method&quot;obj = A()print(obj.exec())print(obj.f1()) 好了， 这个接口或抽象类、抽象方法的学习完结。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Rabbitmq集群","slug":"Rabbitmq","date":"2018-06-08T01:41:54.000Z","updated":"2021-03-03T07:10:17.722Z","comments":true,"path":"2018/06/08/Rabbitmq/","link":"","permalink":"http://www.digmyth.com/2018/06/08/Rabbitmq/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 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","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"shell function语法","slug":"shell-func","date":"2018-05-29T01:41:54.000Z","updated":"2018-06-25T02:18:08.139Z","comments":true,"path":"2018/05/29/shell-func/","link":"","permalink":"http://www.digmyth.com/2018/05/29/shell-func/","excerpt":"","text":"Linux shell中函数语法很重要，它能让你写出很漂亮的shell,来看个例子学习下 1234567891011121314151617181920212223242526272829cat /usr/local/bin/show #!/bin/basha=&apos;df -hT&apos;b=&quot;ls&quot;echo_print() &#123; echo -e &quot;\\033[1;32m$1\\033[0m&quot;&#125;exec() &#123; echo_print &quot;$1&quot; $1 echo &quot;&quot;&#125;info () &#123; exec $a exec $b&#125;case &quot;$1&quot; ininfo) info;;*) echo &quot;Usage: show info&quot;;;esac 相当于定制了一个shell命令，运行一下看下效果12345678910111213#[root@wxqnode opt]# show infodfFilesystem 1K-blocks Used Available Use% Mounted on/dev/mapper/centos-root 22001156 1946776 20054380 9% /devtmpfs 2962076 0 2962076 0% /devtmpfs 2973096 0 2973096 0% /dev/shmtmpfs 2973096 33268 2939828 2% /runtmpfs 2973096 0 2973096 0% /sys/fs/cgroup/dev/sda1 1038336 145652 892684 15% /boottmpfs 594620 0 594620 0% /run/user/0lsrestart_cob study venv","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"get namespace","slug":"shell-get-namespace","date":"2018-01-29T01:41:54.000Z","updated":"2019-05-26T11:41:52.484Z","comments":true,"path":"2018/01/29/shell-get-namespace/","link":"","permalink":"http://www.digmyth.com/2018/01/29/shell-get-namespace/","excerpt":"","text":"get namespace shell123456789101112131415161718# read me :please mv this file to ns;use method #ns info#!/bin/bash#echo_print () &#123; echo -e &quot;\\033[32m$1\\033[0m&quot;&#125;nsinfo () &#123;for i in $(ip netns);do echo_print $i;ip netns exec $i ifconfig | grep &quot;inet addr:10&quot; |awk &apos;$1=$1&apos;;echo &apos;&apos; ;done&#125;case &quot;$1&quot; ininfo) nsinfo ;;*) echo_print &quot;Usage: ns info command&quot; ;;esac","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"linux awk","slug":"linux-awk","date":"2018-01-15T02:48:54.000Z","updated":"2021-01-29T09:59:47.621Z","comments":true,"path":"2018/01/15/linux-awk/","link":"","permalink":"http://www.digmyth.com/2018/01/15/linux-awk/","excerpt":"","text":"知识1： awk中,字符串或空串参与运算时会被当作数字0 1234[root@cloud-site mnt]# awk &apos;BEGIN&#123;a=&quot;test&quot;;print a; a=a+1;print a;a++;print a&#125;&apos;test12 知识2：直接引用一个数组中不存在的元素时，awk会自动创建这个元素，并且为其赋值为”空字符串”，同样参与运算时被当作数字0 123[root@cloud-site mnt]# awk &apos;BEGIN&#123;print t[&quot;ip&quot;]; t[&quot;ip&quot;]++;print t[&quot;ip&quot;]&#125;&apos;1 123456789101112示例;[root@cloud-site mnt]# cat test.txtaa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.txt | awk &apos;&#123;A[$1]++&#125;END&#123;for (i in A)&#123; print i,A[i]&#125; &#125;&apos;bb 2cc 2aa 2 示例一123456789101112[root@cloud-site mnt]# cat a.log1|aa|3|45|5|6|7|8|9|2|aa|3|44|5|6|7|8|9|3|aa|3|43|5|6|7|8|9|4|aa|3|44|5|6|7|8|9|5|bb|3|45|5|6|7|8|9|6|bb|3|4 |5|6|7|8|9|[root@cloud-site mnt]# awk -F&apos;|&apos; &apos;&#123;counxxt[$4]++;&#125;END&#123;for (i in counxxt) &#123;print i&quot;|&quot;counxxt[i]&#125;&#125;&apos; a.log44|245|24 |143|1 示例二12345678910111213141516171819202122if 表达式1？那么表达式2 ： 否则 表达式3[root@cloud-site mnt]# cat test.txt aa 99bb 75cc 55aa 100cc 99bb 40[root@cloud-site mnt]# cat test.sh#awk &apos;BEGIN &#123;#printf &quot;%s,%5s,%4s\\n&quot;,&quot;IP&quot;,&quot;AVG&quot;,&quot;MAX&quot;#&#125;awk &apos;&#123;A[$1]++;SNF[$1]+=$NF;MAXNF[$1]=($NF&gt;MAXNF[$1]?$NF:MAXNF[$1])&#125;END&#123;for (IP in A) print IP,SNF[IP]/A[IP],MAXNF[IP]&#125;&apos; test.txt[root@cloud-site mnt]# sh test.shbb 57.5 75cc 77 99aa 99.5 100","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"python-django-26-API验证","slug":"python-django-26-API验证","date":"2018-01-06T12:51:41.000Z","updated":"2018-02-12T12:44:12.444Z","comments":true,"path":"2018/01/06/python-django-26-API验证/","link":"","permalink":"http://www.digmyth.com/2018/01/06/python-django-26-API验证/","excerpt":"","text":"前言 验证原理 代码实现 讲解Django api验证，基于Tornado签名Cookie源码 验证原理客户端 服务端和客户端共同存一个字符串，客户端用这个字符串和时间戳算一个md5值，把这个md5和时间戳组成一个字符串在请求头里发送给服务端。 服务端 服务端收到这个字符串，分别取出md5和时间戳，用这个时间戳与自己存的key&#39;也算一个md5`值，这个md5值与客户端发来的md5值作比较。 当然这里还是不够的，比如黑客拿到md5和时间戳呢？ 我们还需要作进一步策略 策略一：发来的时间戳+5秒小于服务器时间戳，认为是非法请求 策略二：基于字符串和时间戳算的md5不等于客户端发来的md5值，认为是非法请求 策略三：5秒钟内的请求作进一步验证，维护一个5秒钟内的合法请求md5值,再来这个md5值的，认为是非法请求。5秒钟失效需要借住memcache redis，它们都自带过期时间。 策略四：如果基于网络原因，黑客的非法请求比客户端的请求先到达服务器，这样只能数据AES加密了。 代码实现客户端发送请求头 123456import timeimport hashlibdef md5(arg): hs = hashlib.md5() hs.update(arg.encode(&quot;utf-8&quot;)) return hs.hexdigest() 12345ctime=time.time()key=&apos;sdgasgsdgsdffsdf&apos;new_key=&quot;%s|%s&quot; %(key,ctime)md5_str = md5(new_key)auth_md5_str=&quot;%s|%s&quot; %(mdr_str,ctime) 发送请求 1requests.get(url=&quot;http://127.0.0.1:8000/test_api/&quot;,headers = &#123;&apos;auth-api&apos;:auth_md5_str&#125;) 服务端 123456789server_float_time = time.time()auth_header_val = requests.META.get(&apos;HTTP_AUTH_API&apos;)client_md5_str,client_ctime=auth_header_val.rsplit(&apos;|&apos;,maxsplit=1)if (client_float_time + 5) &lt; server_float_time : return HttpResponse(&quot;已过期&quot;)server_md5_str != client_md5_str: return HttpResponse(&quot;非法请求&quot;)if visited_keys.get(client_md5_str): return HttpResponse(&quot;来晚了，你是非法的&quot;) &lt;数据加密待续&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Flask-基础","slug":"web-Flask-基础","date":"2018-01-01T12:51:41.000Z","updated":"2018-04-23T07:00:52.290Z","comments":true,"path":"2018/01/01/web-Flask-基础/","link":"","permalink":"http://www.digmyth.com/2018/01/01/web-Flask-基础/","excerpt":"","text":"前言","categories":[{"name":"WebFlask开发","slug":"WebFlask开发","permalink":"http://www.digmyth.com/categories/WebFlask开发/"}],"tags":[]},{"title":"web-Django-25-DjangoAdmin","slug":"web-django-25-DjangoAdmin","date":"2017-12-28T12:37:00.000Z","updated":"2019-01-15T03:53:24.763Z","comments":true,"path":"2017/12/28/web-django-25-DjangoAdmin/","link":"","permalink":"http://www.digmyth.com/2017/12/28/web-django-25-DjangoAdmin/","excerpt":"","text":"目录 DjangoAdmin工作流程 制作启动文件 单例模式应用 博客参考 一 Django admin工作流程1 注册models_class，生成_registry 中model_class 字典1234admin.py注册models_class如models.UserInfofrom django.contrib import adminfrom app01 import modelsadmin.site.register(models.UserInfo) 2 admin.site.urls admin.site.urls循环_registry={}字典生成相应URL12345生成4个URL分别是如下：app01/userinfo/app01/userinfo/add/app01/userinfo/1/change/app01/userinfo/1/delete/ 其中要深入理解URL include原理： url(r’^xx’, “可以是视图函数，也可以是元组”),1234567partterns = [ url(r&apos;^admin&apos;, admin.site.urls), # admin.site.urls 返回形如（[],None,None）的元组. url(r&apos;^backend&apos;, include(&apos;backend.urls&apos;)), # include 同样返回形如（[],None,None）的元组. # 也可以写成形如 include([],None,None) 格式. ] 二 制作stack启动文件 1 创建一个stack 的app 2 settings.py 注册app- &apos;stack.apps.StackConfig&apos;, 3 在stack apps.py文件定义ready方法 stack/apps.py文件ready()方法123456from django.utils.module_loading import autodiscover_modulesclass StackConfig(AppConfig): name = &apos;stack&apos; def ready(self): autodiscover_modules(&quot;xxx&quot;) 4 启动项目时会先在执行所有app下的xxx.py文件. (当然前提是这些app也是settings.py注册好的) 三 单例模式单例模式有很多种实现方式 其中一种：利用模块多次导入时，除第一次外不会真正执行模块代码。 如果模块中有实例化对象操作，那么多次导入也不会真正实例化多个对象，而是同一个实例 如果在一个程序先运行的文件改变了实例数据或属性，后运行的文件导入后读这个实例就会有数据或属性. 示例： 随便定义一个实例化对象的文件stack/service.v1 123456789class StackSite(): def __init__(self): self._registry = &#123;&#125; def register(self,class_name,config_class): self._registry[class_name] = config_class site = StackSite()## 单例 在我们定义的启动文件app01/xxx.py中写入代码(因为会先执行xxx.py) 1234from stack.service import v1v1.site.register(&quot;k1&quot;,&quot;v1&quot;)v1.site.register(&quot;k2&quot;,&quot;v2&quot;)v1.site.name = &apos;wxq&apos; 项目urls.py中写入 from stack.service import v1 print(v1.site._registry) print(v1.site.name) 总结启动项目时，先执行app01/xxx.py,后执行urls.py文件，程序读到了实例的数据并不是重新实例化新对象，这就是单例模式的运用。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-24-Django中间件","slug":"web-django-24-Django中间件","date":"2017-12-26T12:26:37.000Z","updated":"2018-01-18T03:43:22.000Z","comments":true,"path":"2017/12/26/web-django-24-Django中间件/","link":"","permalink":"http://www.digmyth.com/2017/12/26/web-django-24-Django中间件/","excerpt":"","text":"目录 官方解释 Django默认 定义中间件 示例 总结 Django中间件学习 官方解释1234This document explains all middleware components that come with Django.For information on how to use them and how to write your own middleware, see the middleware usage guide.Middleware is a framework of hooks into Django’s request/response processing.It’s a light, low-level “plugin” system for globally altering Django’s input or output. Django 中间件是一个钩进request/response处理过程的框架，轻量且较为底层的插件系统，全局改变Django输入输出。 Django默认12345678910Django默认中间件MIDDLEWARE = [ &apos;django.middleware.security.SecurityMiddleware&apos;, &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;, &apos;django.middleware.common.CommonMiddleware&apos;, &apos;django.middleware.csrf.CsrfViewMiddleware&apos;, &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;, &apos;django.contrib.messages.middleware.MessageMiddleware&apos;, &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,] 定义中间件在Django中就表现为一个类.123456789101112m1.process_exception(self, request, exception): print(&quot;m1.process_exception1&quot;)m1.process_requestm2.process_requestm1.process_viewm2.process_viewviews.pym2.process_exceptionm1.process_exceptionm2.process_responsem1.process_response 中间件流1234process_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_responseprocess_request process_view process_exception process_response 示例1... 总结：基于Django中间件我们能实现一些功能，这些处理是在请求到来之前或views视图函数处理过后。 process_request可以有返回值，也可以没有返回值。 process_response必须有返回值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-17-ModelForm","slug":"web-django-17-ModelForm","date":"2017-12-20T12:26:37.000Z","updated":"2018-01-18T03:48:11.260Z","comments":true,"path":"2017/12/20/web-django-17-ModelForm/","link":"","permalink":"http://www.digmyth.com/2017/12/20/web-django-17-ModelForm/","excerpt":"","text":"目录 回顾Form ModelForm特性 ModelForm使用 html前端展示 ModelForm简介1 回顾FormForm作用：第一： 用于Form验证第二： 用于生成 html标签，并且可以保留数据（如编辑） 缺点：多表查询时需要手动查出数据在前端渲染，跨表保存数据同样需要手动update() 2 ModelForm特性解决办法，引用ModelForm 1 它可以循环model class字段在前端生成表单或html标签并保留数据 2 调用save()方法自动跨表保存数据。 3 可以自定义models class以外的fields字段,很灵活，如果自定义的字段名与model class字段名重名， 那么model class字段将被重写 4 ModelForm同样可以做数据验证包括钩子函数 5 ModelForm中的fields字段是可以循环的，循环在前端生成不必写 6 当编辑数据时传入instance=obj 可以循环生成表单并且表单有值。 ModelForm适用场景 Form与ModelForm没有谁好谁不好，只是适用场景不同。 ModelForm依赖modelsclass, modelForm必须和models.py在一起。 3 ModelForm使用12345678910111213141516171819from django.forms import Formfrom django.forms import ModelFormfrom django.forms import fieldsfrom django.forms import widgets as fwidgetsfrom app01 import modelsclass TestForm(ModelForm): class Meta: model = models.Book fields = &quot;__all__&quot; # 可以是[&quot;&quot;,&quot;&quot;,] labels = &#123; &apos;title&apos;:&quot;书名&quot;, &quot;price&quot;:&quot;价格&quot;, &#125; error_messages = &#123; &quot;title&quot;:&#123;&quot;requried&quot;:&quot;书名不能为空&quot;,&#125;, &#125; widgets=&#123; &quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;) &#125; 4 html前端展示1234567&lt;form action=&quot;/addbook/&quot; method=&quot;POST&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;% for field in form %&#125; &lt;p&gt;&#123;&#123; field.label &#125;&#125;:&#123;&#123; field &#125;&#125; &#123;&#123; field.errors.0 &#125;&#125;&lt;/p&gt; &#123;% endfor %&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; 引入bootstrap时，querySet for循环展示:注意时间格式的转换1234567891011121314&lt;div class=&quot;container&quot; style=&quot;width: 700px;margin-top: 50px&quot;&gt; &lt;table class=&quot;table table-bordered&quot;&gt; &lt;thead&gt;&lt;/thead&gt; &lt;tbody&gt; &#123;% for row in data_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; row.title &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.price &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; row.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"03-GET/POST/ContentType知识","slug":"web-get_post_contentype知识","date":"2017-12-15T12:51:41.000Z","updated":"2018-02-12T09:50:11.623Z","comments":true,"path":"2017/12/15/web-get_post_contentype知识/","link":"","permalink":"http://www.digmyth.com/2017/12/15/web-get_post_contentype知识/","excerpt":"","text":"前言 ContentType知识 requests发送get/post请求分析 requests发送get/post请求示例 表格总结 一、ContentType知识contentType 定义： 客户端告知服务器如何组装数据来发送，服务器那边就必须以相应编码解开。 contentType一般为 application/x-www–form-urlencode12如form就默认enctype=&quot;application/x-www-form-urlencoded&quot;形如b&apos;user=wxq&amp;pwd=123&apos; 组装数据。 Django帮我们默认以enctype=”application/x-www-form-urlencoded”解开后放在request.GET或 request.POST里方便我们取数据。如果是application/json 格式，双引号字符串 {“user”:”wxq”,”pwd”:123}，需自行解数据。 1form文件传送时必须指明enctype=&quot;multipart/form-data&quot; 如果是application/json,就要用相应格式解开后组装数据。application/json 双引号字符串 {“user”:”wxq”,”pwd”:123} request.body 报文元数据12345application/json data: JSON.stringfy(&#123;d&#125;) # 前端以json 格式发数据s=request.body.decode(&quot;utf8&quot;)d=json.loads(s) # 后端以json格式解数据d[&apos;name&apos;] 当ajax处理数据时，后端数据以json格式传过来的，那么前端需手动JSON.parse()反序列化操作， 我们可以添加参数datatype: “JSON” ，添加后就自动反序列化了。 二、 requests发送get/post请求分析分析知识点 分析如何组装数据发送 分析get/post请求组装数据方式的不同 分析get/post方式不同，requests参数写法上的不同 大家都知道请求头之间用\\r\\n分隔，请求头与请求体用\\r\\n\\r\\n分隔。 GET请求头get请求发送数据封装在请求头，形如http://www.baidu.com/?a=1&amp;b=2 get请求发送数据用params,params中的数据会组装在请求头上12requests.get(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;)data=&quot;http GET /index?a=1&amp;b=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&quot; POST请求头post请求发送数据可以像get一样?a=1&amp;b=2封装在请求头，但决大多数情况封装在请求体，形如1data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时可以data传参，数据在请求体里，封装为name=wxq&amp;age=18,请求头ContentType为application/x-www-form-urlencoded12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,data=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\nname=wxq&amp;age=18&quot; post时也可以json传参,数据在请求体里，封装为json.dumps({‘name’:’wxq’,’age’:18})后的字符串。请求头ContentType为application/json12requests.post(url=&quot;http://www.baidu.com/&quot;,params=&#123;&apos;a&apos;:1&#125;,json=&#123;&apos;name&apos;:&apos;wxq&apos;,&apos;age&apos;:18&#125;)# data=&quot;http POST /index?a=1 http1.1\\r\\nhost:baidu.com\\r\\n....\\r\\n\\r\\n&#123;&quot;name&quot;: &quot;wxq&quot;, &quot;age&quot;: 18&#125;&quot; 服务器解析当服务器接收到客户端发来的数据，所有的数据会放到request.FILES或request.body里，再跟据ContentType的不同放到相应变量里,如request.POST里是Content-Type:application/x-www-form-urlencoded; charset=UTF-8,也就是data而非json格式发来的数据。 12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 三、requests发送get/post请求示例data传参可以是字典可以是字符串可以是字节可以是文件对象1 requests.request(method=”post”,data=字典)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}1requests.post(url=&quot;xxx&quot;,data=&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;) 2 requests.request(method=”post”,data=字符串)默认加headers={&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}12requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq&amp;pwd=123&quot;) # 或requests.post(url=&quot;xxx&quot;,data=&quot;name=wxq;pwd=123&quot;) 基于HTTP本质，上面2种数据最终转为请求体\\r\\n\\r\\nname=wxq&amp;pwd=123 3 手动构建json字符串发送手动加headers={&#39;Content-Type&#39;: &#39;application/json&#39;}1234requests.post( url=&quot;xxx&quot;, data=json.dumps(&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;:123&#125;), headers=&#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;) json传参requests.request(method=”post”,json=…)1) 将json中对应的数据进行序列化成一个字符串，json.dumps(…)2) 然后发送到服务器端的body中3) 并且自动Content-Type是 {‘Content-Type’: ‘application/json’}1234def param_json(): requests.request(method=&apos;POST&apos;, url=&apos;http://127.0.0.1:8000/test/&apos;, json=&#123;&apos;k1&apos;: &apos;v1&apos;, &apos;k2&apos;: &apos;水电费&apos;&#125;) json方式传输数据的一种场景Content type: application/x-www-form-urlencode不支持传键所对应的值为字典的字典.1request.post(url=url,data=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 不支持 传键所对应的值为字典的字典,这种情况只能以json方式传送数据12request.post(url=url,json=&#123;&apos;name&apos;:&#123;&#125; &#125; ) # 支持Content type: application/json 四、总结 methond 传参 解析为 浏览器显示标识名 GET params ?page=1&amp;k1=v1 Query String Parameter POST data \\r\\n\\r\\nname=wxq&amp;pwd=123 Form Data POST json \\r\\n\\r\\n{“name”:”wxq”,”age”:18}” Request Payload","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"python-spider-基础知识","slug":"python-spider01-基础知识","date":"2017-12-06T12:51:41.000Z","updated":"2018-02-12T11:57:36.272Z","comments":true,"path":"2017/12/06/python-spider01-基础知识/","link":"","permalink":"http://www.digmyth.com/2017/12/06/python-spider01-基础知识/","excerpt":"","text":"前言 爬虫简介 具备技能 爬虫实现 爬虫示例 简介爬虫：利用python模块伪造浏览器行为，读取网页源码，再经过正则匹配取出HTML文本的一系列处理，数据分析称为爬虫 基本内容：123456789- python实现浏览器行为： requests- beautifulsoup4 对HTML内容进行分析- HTTP相关知识： - cookie - csftToken - 请求头：其中ContenType表明什么格式封装的数据，服务器需要用相应格式解数据 请求： 请求头(cookie)/请求体(发送的内容) 响应： 响应头（浏览器读取头数据）/响应体（我们看到的网页或网页源码）- 数据持久化（数据库存储） 具备技能1234567891011性能相关：批量get URL可想而知性能重要性1 线程池，进程池，2 协程coroutine（微线程）： 协程本身没有用，只做切换，具有切换特性,要想性能很高，刚好遇到IO时切换 3 异步非阻塞（如twisted,gevent,asyncio,tornado内部集成） 其中gevent异步模块由2个东西组成: greenlet协程: greenlet就是利用yield实现的协程 libevent: libevent做异步IO库 七牛云进程线程分享 异步非阻塞123遇到IO请求不等待继续执行其它任务,如果IO请求响应内容回来了,自动回调某个函数.异步： 回调（相关于通知机制）非阻塞： 不等待 后面会学到爬虫框架：scrapy1231 内部是twisted实现异步2 写入URL自动下载网页3 自动将下载的网页解析为对象方便我们处理 后面也会学到分布式爬虫组件redis-scrapy 爬虫实现基本模块：12pip3 install requestspip3 install beautifulsoup4 （将网页字符串解析为对象，用于直接取文本内容） 爬虫实现123451 代码发送get请求： 请求头+请求体2 接收返回值： 响应头+响应体（本质字符串）3 获取响应体后进行解析，方便获取文本内容 import requests from bs4 import BeautifulSoup 注意几点：1231 回车时得到token和cookies,如果有token和cookies的话取出来,一般get请求2 提交用户名密码时带上token和cookies,一般post请求,并且取出登录成功后的cookies3 登录后才能看到的网页(前2次请求的cookies都带上) 示例示例这里就不展开了，可以基于这几个站点简单入门 github或汽车之家 抽届点赞 博客园用户名密码密文发送给服务器的情况，其实是利用js三方模块在浏览器端加密再发送的（python rsa模块加密） 知乎，新浪微博这种有图形验证码的网站，需要第三方平台做图像识别（类似滑动验证码这种验证其实是向后台发送鼠标坐标）","categories":[{"name":"Web爬虫开发","slug":"Web爬虫开发","permalink":"http://www.digmyth.com/categories/Web爬虫开发/"}],"tags":[]},{"title":"web-Django-23-Django序列化","slug":"web-django-23-Django序列化","date":"2017-12-01T12:26:37.000Z","updated":"2018-01-18T03:43:21.996Z","comments":true,"path":"2017/12/01/web-django-23-Django序列化/","link":"","permalink":"http://www.digmyth.com/2017/12/01/web-django-23-Django序列化/","excerpt":"","text":"目录 序列化 Django中的序列化操作序列化操作参考ajax学习Django返回前端数据一般为json格式，那么就要数据进行序列化。方法一：Django内置serializers123from django.core import serializersret = models.BookType.objects.all()data = serializers.serialize(&quot;json&quot;, ret) 方法二：json.dumps123456import json #ret = models.BookType.objects.all().values(&apos;caption&apos;)ret = models.BookType.objects.all().values_list(&apos;caption&apos;)ret=list(ret)result = json.dumps(ret,nsure_ascii=False) 方法三：由于json.dumps时无法处理datetime日期，所以可以通过自定义处理器来做扩展12345678910111213import json from datetime import date from datetime import datetime class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return o.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) elif isinstance(field, date): return o.strftime(&apos;%Y-%m-%d&apos;) else: return json.JSONEncoder.default(self, field) # ds = json.dumps(d, cls=JsonCustomEncoder) 有时在前端渲染也需要date:&#39;Y-m-d&#39;处理一下1&lt;p&gt;出版日期&lt;input type=&quot;date&quot; name=&quot;pubdate&quot; value=&quot;&#123;&#123; edit_book.pubDate | date:&apos;Y-m-d&apos; &#125;&#125;&quot;&gt;&lt;/p&gt; 如果用到了Form或ModelForm，同样需要widgets处理下时间格式12widgets=&#123;&quot;pubDate&quot;:fwidgets.DateInput(attrs=&#123;&quot;type&quot;:&quot;date&quot;,&quot;class&quot;:&quot;c1&quot;&#125;)","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-21-图片上传","slug":"web-django-21-图片上传","date":"2017-11-21T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/21/web-django-21-图片上传/","link":"","permalink":"http://www.digmyth.com/2017/11/21/web-django-21-图片上传/","excerpt":"","text":"目录 上传文件版本一 上传文件版本二 上传文件版本三 上传文件版本一定义views.py123456789101112def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) else: obj=request.FILES.get(&quot;fff&quot;) # obj.name 文件名 # obj.chunks 文件块 f = open(obj.name,&apos;wb&apos;) for chunk in obj.chunks(): f.write(chunk) f.close() return render(request,&quot;upload.html&quot;) upload.html12345&lt;form action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &#123;% csrf_token %&#125; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt;&lt;/form&gt; 上传文件版本二版本一中form表单上传文件或图片无法做预览，并无法做失败验证及上传文件大小限制，那么就要用到ajax 方式发送。下面学习下ajax方式上传文件。定义views.py12345678910111213def upload(request): if request.method==&quot;GET&quot;: return render(request,&quot;upload.html&quot;) elif request.is_ajax(): file_obj= request.FILES.get(&apos;obj&apos;) print(obj) f = open(file_obj.name, &apos;wb&apos;) for chunk in file_obj.chunks(): f.write(chunk) f.close() return HttpResponse(&quot;ok&quot;) else: pass 12345678910111213141516171819202122232425262728293031&lt;h1&gt;ajax形式上传文件&lt;/h1&gt;&lt;input type=&quot;file&quot; id=&quot;f4&quot;/&gt;&lt;input type=&quot;button&quot; value=&quot;提交&quot; id=&quot;btn&quot;&gt; #input的button默认不会有任何事件，除非绑定事件&#123;% csrf_token %&#125;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(function () &#123; $(&quot;#btn&quot;).click(function () &#123; var fm=new FormData(); fm.append(&apos;obj&apos;,$(&quot;#f4&quot;)[0].files[0]); fm.append(&apos;csrfmiddlewaretoken&apos;,$.cookie(&apos;csrftoken&apos;)); //自行组数据$(&quot;input[name=&apos;csrfmiddlewaretoken&apos;]&quot;).val()); // fm.append(&apos;file_obj&apos;,document.getElementById(&quot;f4&quot;).files[0]); //document.getElementById(&quot;f4&quot;) # dom对象 // $(&quot;#f4&quot;) # jquery对象 // $(&quot;#f4&quot;)[0] #jquery对象转dom对象 $.ajax(&#123; url:&apos;/upload/&apos;, type:&apos;POST&apos;, data:fm, processData: false, contentType: false, success:function (data) &#123; console.log(data); &#125; &#125;) &#125;) &#125;)&lt;/script&gt; 上传文件版本三版本二中对各种浏览器兼容不好，可以再次改进. 利用form+iframe特性做的，业内都是这么做的，很重要，兼容性非常好。形式上与ajax很像但不是ajax,称伪ajax,后端不能用request.is_ajax()判断请求方式。不得不先来学习下iframe标签12&lt;iframe id=&quot;ifm&quot; src=&quot;http://www.chouti.com&quot;&gt;&lt;/iframe&gt;$(&quot;#ifm&quot;).attr(&apos;src&apos;, &apos;http://www.qq.com&apos;) # 修改iframe src属性但页面不刷新，返回的数据不在整个页面，而在iframe body里，基于这样的特性我们可以上传文件。 当form表单以iframe形式发送数据到后端，后端返回的数据会在iframe body里form 的target属性值要与iframe的name属性值保持一致。12345&lt;form id=&quot;ff1&quot; action=&quot;/upload/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &lt;p&gt;&lt;input onchange=&quot;changeImg();&quot; type=&quot;file&quot; name=&quot;fff&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;input id=&quot;sb&quot; type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/p&gt; &lt;/form&gt;&lt;iframe id=&quot;ifm&quot; name=&quot;ifr&quot; onload=&quot;sucessBack();&quot; &gt;&lt;/iframe&gt; 那么如何取出iframe body里的值呢？1$(&quot;#ifm&quot;).html(); # iframe会重新生成一个子document,有html/head/body,这种方法无法取出。 1$(&quot;#ifm&quot;).find(&apos;body&apos;).html(); # 有这种想法是好的，这种找只会在当前document里找，但是这样的document嵌套递归查找需要一个额外方法处理.contents()后再查找 1$(&quot;#ifm&quot;).contents().find(&apos;body&apos;).html(); # iframe最终正确的方法 文件上传完整版utils.py12345class BaseResponse(): def __init__(self): self.status=False self.data=None self.error=None views.py123456789101112131415161718192021from django.shortcuts import render,HttpResponse,redirectimport os,jsonfrom utils import BaseResponseret=BaseResponse()def upload(request): if request.method == &quot;GET&quot;: return render(request, &quot;upload.html&quot;) else: try: file_obj=request.FILES.get(&apos;fff&apos;) # file_obj.name # file name # file_obj.chunks() #file block file_path = os.path.join(&apos;static&apos;, file_obj.name) with open(file_path,&apos;wb&apos;) as f: for chunk in file_obj.chunks(): f.write(chunk) ret.status=True ret.data=file_path except Exception as e: ret.error=&quot;上传失败&quot; return HttpResponse(json.dumps(ret.__dict__,ensure_ascii=False)) upload.html123456789101112131415161718192021222324252627282930&lt;form id=&quot;sb&quot; action=&quot;/upload/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; target=&quot;ifr&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;file&quot; name=&quot;fff&quot; onchange=&quot;changeImg();&quot;/&gt; &lt;!-- 元素更新时触发onchange事件 --&gt;&#123;# &lt;input type=&quot;submit&quot;&gt;#&#125;&lt;/form&gt;&lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; onload=&quot;successBack();&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;&lt;div id=&quot;prevImg&quot;&gt;&lt;/div&gt;&lt;!-- 我们这里不是真正的ajax,是没有success回调函数的,上传成功后会返回数据到前端，文本载入会触发onload事件。 --&gt;&lt;script src=&quot;/static/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;&lt;script&gt; function successBack() &#123; var v=$(&quot;#ifr&quot;).contents().find(&quot;body&quot;).html(); var v=JSON.parse(v); if(v.status)&#123; var tag=document.createElement(&apos;img&apos;); tag.src=&quot;/&quot;+v.data; $(&quot;#prevImg&quot;).append(tag); &#125;else &#123; console.log(v.error) &#125; &#125; function changeImg() &#123; $(&quot;#sb&quot;)[0].submit(); // document.getElementById(&apos;sb&apos;).submit(); &#125;&lt;/script&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-20-ajax","slug":"web-django-20-ajax","date":"2017-11-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.992Z","comments":true,"path":"2017/11/20/web-django-20-ajax/","link":"","permalink":"http://www.digmyth.com/2017/11/20/web-django-20-ajax/","excerpt":"","text":"目录 代码例子 代码例子 ajax前端组装数据 ajax涉及的序列化 ajax错误验证 ajax的3种csrf_token Ajax 学习详情参考Ajax 武佩齐博客 这里只是对Ajax学习做一个记录和总结，内容还有很多没有包括。 代码例子普通请求 —&gt; render渲染全部HTMLAjax – -&gt; render生成己经渲染好的局部HTML, 功能单一。Ajax — &gt; HttpResponse(‘data’) 得到原始数据，ajax前端自行展示，定制化强，一般用于提供接口，为别人提供数据。 render和HttpResponse的关系？render:1 模板+数据进行替换2 HttpResponse(数据) HttpResponse:1 HttpResponse(数据) Ajax请求时，响应内容时可以是render和HttpResponse,不要认为只能用HttpResponse. views.py里不能return redirect(&quot;&quot;)跳转是在前端跳转location.href = “http://www.baidu.com&quot; ajax前端组装数据ajax形式发input数据时在前端取数据并组装数据后给后台123ajax取input数据时，可以用data:&#123;&quot;user&quot;:$(&quot;#user&quot;).val(),&quot;pwd&quot;:$(&quot;#pwd&quot;).val()&#125;获取数据，更简单的数据组装方法是加form表单:&lt;form id=&quot;ff&quot;&gt;&lt;input /&gt;&lt;/form&gt;此时取数据可以用：data: $(&quot;#ff&quot;).serialize(), ajax涉及的序列化Django 中Ajax方式获取ORM数据时，涉及序列化操作的5种方法1234567891011121314151617181920212223242526272829303132333435363738394041424344# # 方式一 我们伪造的数据是可以序列化实现展示的# # 模板渲染后生成字符串# # user_list = models.UserInfo.objects.all()# ## # return render(request,&quot;tpl.html&quot;,&#123;&quot;user_list&quot;:user_list&#125;)# user_list = [# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# &#123;&apos;id&apos;:1,&apos;name&apos;:&apos;wxq&apos;, &apos;pwd&apos;:123&#125;,# ]## import json# data = json.dumps(user_list)# return HttpResponse(data)# # 方式二： 这里是失败的， QuerySet不支持Json序列化，经测试失败# user_list = models.UserInfo.objects.all()# import json# return HttpResponse(json.dumps(user_list))# # 方式三 也是成功的,但不常见## user_list = models.UserInfo.objects.all()# from django.core import serializers# data= serializers.serialize(&quot;json&quot;, user_list)# return HttpResponse(data)# 方式四 推荐用法user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data)# 方式五 user_list = models.UserInfo.objects.values_list(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;)user_list=list(user_list)print(user_list)import jsondata = json.dumps(user_list)return HttpResponse(data) Ajax 错误验证123456789101112## 异常判断 import json ret = &#123;&apos;status&apos;:False,&apos;data&apos;:None,&apos;error&apos;:None&#125; try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret[&apos;status&apos;]= True ret[&apos;data&apos;] = user_list except Exception as e: ret[&apos;error&apos;] = &apos;获取数据失败&apos; data = json.dumps(ret) return HttpResponse(data) 或者以类的形式调用更为简洁123456789101112131415161718app01项目下新建utls.pyclass BaseResponse(): def __init__(self): self.status = False self.data = None self.error = Noneviews.py中导入：from app01.utils import BaseResponseret = BaseResponse()try: user_list = models.UserInfo.objects.values(&quot;id&quot;,&quot;username&quot;,&quot;pwd&quot;) user_list=list(user_list) ret.status= True ret.data = user_listexcept Exception as e: ret.error = &apos;获取数据失败&apos; data = json.dumps(ret.__dict__,ensure_ascii=False) # False表示不要中文为变为unicode编码 return HttpResponse(data) 1234var tag.createElement(&quot;a&quot;)tag.innertHTML=&quot;hello&quot;div.append(tag) # &lt;div&gt; &lt;a&gt;hello&lt;/a&gt;&lt;/div&gt; 加在标签里面div.after(tag) # &lt;div&gt;&lt;/div&gt;&lt;a&gt;hello&lt;/a&gt; 加在标签后面 ajax的3种csrf_token方法一： 自己组装数据csrf_token12&#123;% csrf_token %&#125; 会生成带csrfmiddlewaretoken的input标签data:&#123;&apos;csrfmiddlewaretoken&apos;:$(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val()&#125; 方法二：加 form表单后用$(“#form_id”).serialize()方法自动组装数据 121 添加form HTML 标签 &lt;form id=&quot;form_id&quot;&gt;&lt;input /&gt;&lt;/form&gt;2 用data: $(&quot;#form_id&quot;).serialize(),自动组装数据 方法三：自行在cookies里取csrf_token放在请求头里参考1234561 导入jquery.cookie.js: &lt;script src=&quot;/static/jquery.cookie.js&quot;&gt;&lt;/script&gt;2 jquery方式操作cookie取值: csrf_token=$.cookie(&apos;csrftoken&apos;) 3 ajax形式添加到请求头里，注意写法是定死的 $.ajax(&#123; header: &#123;&quot;X-CSRFToken&quot;: $.cookie(&apos;csrftoken&apos;)&#125;， )&#125;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux nginx基础","slug":"linux-nginx","date":"2017-11-12T01:41:54.000Z","updated":"2018-10-21T11:30:26.599Z","comments":true,"path":"2017/11/12/linux-nginx/","link":"","permalink":"http://www.digmyth.com/2017/11/12/linux-nginx/","excerpt":"","text":"目录 nginx基本介绍 nginx URI优先级 nginx URI优先级第一优先级精确匹配此路径123location = URI &#123;&#125; 第二优先级不使用正则表达式的模糊匹配123location ^~ URI &#123;&#125; 第三优先级可使用正则表达式的模糊匹配123location ~ URI &#123;&#125; 第四优先级匹配当前路径及其子路径123location URI &#123;&#125; 补充 ~ 区分字符大小写匹配 ~* 不区分字符大小写匹配 ! 表过不匹配 !~* 不区分字符大小写非匹配","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux haproxy基础","slug":"haproxy-基础","date":"2017-11-12T01:41:54.000Z","updated":"2018-04-23T06:57:35.510Z","comments":true,"path":"2017/11/12/haproxy-基础/","link":"","permalink":"http://www.digmyth.com/2017/11/12/haproxy-基础/","excerpt":"","text":"目录 haproxy基本介绍 haproxy基础语法 haproxy应用 haproxy基本介绍haproxy基础语法当有多个缓存key/value服务器时，app缓存到服务器1，那么必须到服务器1才能找到缓存。 取模法：key- hash(16进制数值)–这个数值除以服务器数量的余数就是哪台服务器 当有服务器添加或移走这种缓存就失效了 如何解决，是有办法的，那就是改进上面那种方法，称一致性hash算法：consitent hash 有一个环，用32位二进制从0开始计数，环上分布有离散的2^32 点。key hash 后的值除以2^32时取余数，这个余数一定在0到2^32-1范围内，也就是在这个环上那么数据就是存储在余数的下一台服务器上，服务器是离散分布在这样的环上的。缺点：服务器分布可能存在偏斜，也就是可能所有服务器集中在环三分之一处。当存储数据找下一台服务器，那台服务器存储量太大了。 解决办法：使用虚拟节点离散分布在环上来代替物理节点。hadoop前身开源搜索引擎，任何搜索引擎首先是大数据搜索平台，其次才是高性能分析平台。 流式数据存储处理平台：storm spark大数据处理平台。12345678910111213141516nginx:server &#123;&#125;server &#123; proxy_pass: &#125;upstream &#123;&#125;upstream &#123;&#125; haproxy应用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"kolla Pike on CentOS 7.3","slug":"kolla-Pike-on-CentOS7.3","date":"2017-11-09T00:41:54.000Z","updated":"2017-11-08T07:15:16.901Z","comments":true,"path":"2017/11/09/kolla-Pike-on-CentOS7.3/","link":"","permalink":"http://www.digmyth.com/2017/11/09/kolla-Pike-on-CentOS7.3/","excerpt":"","text":"openstack Pike发布很长一段时间了，一直没有时间整理一份在kolla on CentOS7.3 的文档参考：沙克老师单节点ocata安装 环境准备12yum install epel-release yum install axel vim git curl wget lrzsz ansible gcc python-devel docker-ce yum12add docker-ce yum:yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo docker-ce install12install docker-ce# yum install docker-ce docker-ce configuration12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof 编辑 /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker kolla-ansible install github项目 openstack kolla镜像地址 openstack-ansible是用ansible部署openstack用的 ceph-ansible是用ansible部署ceph用的 kolla-ansible是用ansible部署kolla用的，其中openstack+ceph环境均分散在一个一个的docker容器里 安装pike版本 kolla-ansible，pip install 安装方式存在版本问题或非最新代码，这里直接git下载代码安装。12345678910cd /optgit clone https://github.com/openstack/kolla-ansible.gitcd /opt/kolla-ansiblegit branch -avgit checkout remotes/origin/stable/pikecp -r /opt/kolla-ansible/etc/kolla/ /etc/# 安装相关依赖包cd /opt/kolla-ansiblepip install -r requirements.txt 生成密码12cd /opt/kolla-ansible/toolspython generate_passwords.py 安装镜像仓库123456# docker pull registry下载最新pike 容器镜像：http://tarballs.openstack.org/kolla/images/centos-source-registry-pike.tar.gztar xf centos-source-registry-pike.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry eg:1234mkdir /registrytar -zxf /root/docker-registry.tar.gz -C /registrydocker load &lt; /root/registry.tardocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry check docker hub12345curl http://192.168.200.2:4000/v2/_catalog[root@controller01 ~]# curl 192.168.200.2:4000/v2/99cloud/centos-source-memcached/tags/list&#123;&quot;name&quot;:&quot;99cloud/centos-source-memcached&quot;,&quot;tags&quot;:[&quot;4.0.1.1&quot;]&#125;docker pull 192.168.200.2:4000/99cloud/centos-source-memcached:4.0.1.1 ceph disk set1# for i in vdb vdc vdd; do parted /dev/$i -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1; done in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 edit global.yml12edit /etc/kolla/global.yml此处略过。。。 kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient access dashboard1curl http://openstack_VIP/horizon","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"Mysql MGR 集群","slug":"mysql-MGR","date":"2017-11-08T22:41:54.000Z","updated":"2021-08-04T22:54:23.414Z","comments":true,"path":"2017/11/09/mysql-MGR/","link":"","permalink":"http://www.digmyth.com/2017/11/09/mysql-MGR/","excerpt":"","text":"目录 MGR简介 MGR安装 数据库Galera集群的笔记做过了，今天来讲一讲MySQL Group Replication组复制技术。 一 MGR简介MySQL当前存在的三种复制模式有：异步模式、半同步模式和组复制模式。MySQL Group Replication（简称MGR）官方推出的高可用解决方案， 原生复制技术，基于插件的方式工作。 分为以下两种 single primary mode 单主模式只有一个读写，其余都是只读。 multi primary mode多主模式全部可读写 不管组复制单主还是多主的故障切换都无法让应用无感知，需要自主实现。 包含以下特性： 复制管理操作更为自动化。 通过Paxos协议提供数据库集群节点数据强一致性保证。 多主模式所有节点都可读写操作。 解决网络分区导致的脑裂问题，提升复制数据的可靠性。 官方引言1Quite obviously, regardless the mode Group Replication is deployed, it does not handle client-side fail-over. That must be handled by the application itself, connector or a middleware framework such as a proxy or router. 意思就是说MGR内部没有提供一种机制来实现主节点故障切换对应用的无感知。应用的这种故障无感知需要借助外力实现。 组复制存在以下局限性123456789101112131415161. 所有涉及的数据都必须发生在InnoDB存储引擎的表内。2. 所有的表必须有明确的主键定义。3. 网络地址只支持IPv4。4. 需要低延迟，高带宽的网络。5. 目前集群限制最多允许9个节点。6. 必须启用binlog。7. binlog 格式必须是row格式。8. 必须打开gtid模式。9. 复制相关信息必须使用表存储。10.事务写集合（Transaction write set extraction）必须打开。（这个目前与savepoint冲突，这也是导致mysqldump无法备份GR实例的原因）11. log slave updates必须打开。12. binlog的checksum目前不支持。13. 由于事务写集合的干扰，无法使用savepoint。14. SERIALIZABLE 隔离级别目前不支持。15. 对同一个对象，在集群中不同的实例上，并行地执行DDL（哪怕是相互冲突的DDL）是可行的，但会导致数据一致性等方面的错误，目前阶段不支持在多节点同时执行同一对象的DDL。16. 外键的级联约束操作目前的实现并不完全支持，不推荐使用。 二 MGR安装3.1 软件安装官方单库安装官方集群安装 参考链接 :1234https://dev.mysql.com/doc/refman/5.7/en/replace-third-party-yum.html # 禁用第三方源或安装包https://dev.mysql.com/doc/refman/5.7/en/linux-installation.html # 根据您的系统安装相应版本https://dev.mysql.com/doc/refman/5.7/en/linux-installation-yum-repo.html #CentOS7.3安装mysql 5.7https://dev.mysql.com/doc/refman/5.7/en/group-replication.html # mysql Group Replication安装 如何找官方软件 repo.mysql.com1http://repo.mysql.com/yum/ 找到需要的版本12# CentOS7 mysql yum源http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/ 12# download mysql57-community-release-el7-10.noarch.rpmwget http://repo.mysql.com/yum/mysql-cluster-7.5-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm 123# rpm -ivh /opt/mysql57-community-release-el7-10.noarch.rpm# yum install mysql-community-server# systemctl start mysqld 3.2 内置策略说明mysql5.7启动服务后会生成一个随机密码用于临时登录，内置策略强制让你进入数据库后马上更改登录密码，并且有一套密码复杂度管理的策略。我们可以在数据库my.cnf中过滤掉复杂度策略或临时修改全局变量来忽略复杂度。123456789101112131415161718192021mysql&gt; select @@validate_password_length;+----------------------------+| @@validate_password_length |+----------------------------+| 8 |+----------------------------+1 row in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &apos;validate_password%&apos;;+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+--------------------------------------+--------+7 rows in set (0.01 sec) 或者/etc/my.cnf添加5行策略来忽略掉。12345validate_password_length = 0validate_password_mixed_case_count = 0validate_password_number_count = 0validate_password_policy =0validate_password_special_char_count =0 当然也可以类似以下命令临时全局修改1set global validate_password_special_char_count =0; # 全部设置为0 查询临时密码1# grep &apos;temporary password&apos; /var/log/mysqld.log 马上修改临时密码用以后续操作。123mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;;Query OK, 0 rows affected (0.00 sec)#否则收到提示：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. 3.3 为复制授权1234567mysql&gt; SET SQL_LOG_BIN=0;mysql&gt; CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;mysql&gt; GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;mysql&gt; FLUSH PRIVILEGES;mysql&gt; SET SQL_LOG_BIN=1;mysql&gt; CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3.4 启动组复制123456789101112mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; Query OK, 0 rows affected (0.02 sec)mysql&gt; show plugins;+----------------------------+----------+--------------------+----------------------+---------+| Name | Status | Type | Library | License |+----------------------------+----------+--------------------+----------------------+---------+...| validate_password | ACTIVE | VALIDATE PASSWORD | validate_password.so | GPL || group_replication | ACTIVE | GROUP REPLICATION | group_replication.so | GPL |+----------------------------+----------+--------------------+----------------------+---------+46 rows in set (0.01 sec) 启动复制通道123SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF; 查看集群成员1234567mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+1 row in set (0.00 sec) 创建测试同步数据1234mysql&gt; CREATE DATABASE test;mysql&gt; USE test;mysql&gt; CREATE TABLE t1 (c1 INT PRIMARY KEY, c2 TEXT NOT NULL);mysql&gt; INSERT INTO t1 VALUES (1, &apos;Luis&apos;); 检查同步数据和Binlog1234567mysql&gt; select * from t1;+----+------+| c1 | c2 |+----+------+| 1 | Luis |+----+------+1 row in set (0.01 sec) mysql&gt; show binlog events;12345678+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 1 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 1 | 150 | || binlog.000001 | 150 | Stop | 1 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec 3.5 加入集群其余节点加入集群1 先定义主配文件与主机hosts2 建立通道授权 123456SET SQL_LOG_BIN=0;CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos; ;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos; IDENTIFIED BY &apos;rpl_pass&apos;;SET SQL_LOG_BIN=1;CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;rpl_pass&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 3 添加插件1mysql&gt; INSTALL PLUGIN group_replication SONAME &apos;group_replication.so&apos;; 4 启动复制通道1mysql&gt; START GROUP_REPLICATION; 如果有失败，尝试12mysql&gt; set global validate_password_policy=0; mysql&gt; set global group_replication_allow_local_disjoint_gtids_join=ON; 5 查看集群成员123456789mysql&gt; SELECT * FROM performance_schema.replication_group_members;+---------------------------+--------------------------------------+--------------+-------------+--------------+| CHANNEL_NAME | MEMBER_ID | MEMBER_HOST | MEMBER_PORT | MEMBER_STATE |+---------------------------+--------------------------------------+--------------+-------------+--------------+| group_replication_applier | 2863475f-c490-11e7-b93e-fa163ebc6e6c | 172.18.23.8 | 3306 | ONLINE || group_replication_applier | 9c1ded3e-c495-11e7-8c62-fa163ea91040 | 172.18.23.33 | 3306 | ONLINE || group_replication_applier | f2d4456f-c48b-11e7-94f2-fa163e894684 | 172.18.23.34 | 3306 | ONLINE |+---------------------------+--------------------------------------+--------------+-------------+--------------+3 rows in set (0.01 sec) 6 查看集群中的主节点1234567mysql&gt; SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= &apos;group_replication_primary_member&apos;;+--------------------------------------+| VARIABLE_VALUE |+--------------------------------------+| f2d4456f-c48b-11e7-94f2-fa163e894684 |+--------------------------------------+1 row in set (0.01 sec) 7 binlog123456789mysql&gt; show binlog events;+---------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name | Pos | Event_type | Server_id | End_log_pos | Info |+---------------+-----+----------------+-----------+-------------+---------------------------------------+| binlog.000001 | 4 | Format_desc | 3 | 123 | Server ver: 5.7.20-log, Binlog ver: 4 || binlog.000001 | 123 | Previous_gtids | 3 | 150 | || binlog.000001 | 150 | Stop | 3 | 169 | |+---------------+-----+----------------+-----------+-------------+---------------------------------------+3 rows in set (0.00 sec) 8 my.cnf优化项1234max_connections = 4096max_prepared_stmt_count=100000query_cache_type = 1query_cache_size = 10M 9 命令123456789mysql&gt; show full processlist;+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+| 3 | root | localhost | test | Query | 0 | starting | show full processlist || 11 | system user | | NULL | Connect | 490 | executing | NULL || 14 | system user | | NULL | Connect | 490 | Slave has read all relay log; waiting for more updates | NULL |+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+3 rows in set (0.00 sec) mysql8.0基本操作片段修改root口令1234alter user &apos;root&apos;@&apos;localhost&apos; identified by &quot;test123&quot;;create user &apos;root&apos;@&apos;%&apos; identified by &apos;test123&apos;;grant all privileges on *.* to &apos;root&apos;@&apos;%&apos;;flush privileges; 配置MGR参数my.cnf1234567891011121314151617181920212223skip_log_bin#log-bin=mysql-binssl=0table_open_cache=30000max_connect_errors=2000innodb_adaptive_hash_index=0disabled_storage_engines=&quot;MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY&quot;server_id=4 ##组内每个成员有各自的server_idgtid_mode=ONenforce_gtid_consistency=ONbinlog_checksum=NONElog_bin=binloglog_slave_updates=ONbinlog_format=ROWmaster_info_repository=TABLErelay_log_info_repository=TABLEtransaction_write_set_extraction=XXHASH64plugin_load_add=&apos;group_replication.so&apos; ##服务器启动时，加载该参数设置的引擎group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; ##配置Group replication的组名group_replication_start_on_boot=off ##Mysql服务起来以后，引擎不会自动起来。如果所有group 成员配置完成，可以设置成ongroup_replication_local_address= &quot;10.99.0.18:33061&quot; ##本机地址和端口,此地址只是用来与group communication engine进行交互，不能等同于client端连接的地址和端口，8.0.14以后，可以使用IPV6group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot; ##所有group成员的地址和端口group_replication_bootstrap_group=off ##此参数不能在参数文件里设置成on 修改group其他成员的group_replication_group_seeds参数,my.cnf配置文件同步修改1set global group_replication_group_seeds= &quot;10.99.0.15:33061,10.99.0.16:33061,10.99.0.17:33061,10.99.0.18:33061&quot;; 新增节点添加复制账号123456SET SQL_LOG_BIN=0; # 关闭binlog日志 CREATE USER rpl_user@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;GRANT REPLICATION SLAVE ON *.* TO rpl_user@&apos;%&apos;;GRANT BACKUP_ADMIN ON *.* TO rpl_user@&apos;%&apos;;FLUSH PRIVILEGES;SET SQL_LOG_BIN=1; # 打开binlog日志 在新增节点执行以下命令，设置认证信息1CHANGE MASTER TO MASTER_USER=&apos;rpl_user&apos;, MASTER_PASSWORD=&apos;123456&apos; FOR CHANNEL &apos;group_replication_recovery&apos;; 重启确认123show pluginsSTART GROUP_REPLICATION;SELECT * FROM performance_schema.replication_group_members; 总结无","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-22-验证码","slug":"web-django-22-验证码","date":"2017-11-08T12:26:37.000Z","updated":"2018-04-23T07:00:07.330Z","comments":true,"path":"2017/11/08/web-django-22-验证码/","link":"","permalink":"http://www.digmyth.com/2017/11/08/web-django-22-验证码/","excerpt":"","text":"目录 生成验证码 认证验证码 插件认证 生成验证码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108def get_valid_img(request): # 第一步 # f=open(&quot;default.jpg&quot;,&apos;rb&apos;) # data=f.read() # 第二步 # import PIL # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(123, 222, 255)) # f=open(&apos;code.png&apos;,&apos;wb&apos;) # img.save(f,&apos;png&apos;) # f = open(&apos;code.png&apos;, &apos;rb&apos;) # data=f.read() # f.close() # 第三步 # from io import BytesIO # f=BytesIO() # # from PIL import Image # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(255, 255, 66)) # img.save(f,&quot;png&quot;) # data=f.getvalue() # # 第四步： # # from io import BytesIO # # f = BytesIO() # from PIL import Image, ImageDraw, ImageFont # # # 画字 # img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(0, 255, 0)) # draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) # font=ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;,28) # draw.text([15,0],&apos;y&apos;,&quot;red&quot;,font=font) # # img.save(f,&quot;png&quot;) # data=f.getvalue() # 第五步： import random from io import BytesIO from PIL import Image, ImageDraw, ImageFont f = BytesIO() img = Image.new(mode=&apos;RGB&apos;, size=(120, 30), color=(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))) draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;) char_list = [] # # 画字 for i in range(5): char = random.choice([chr(random.randint(65, 90)), str(random.randint(1, 9)), chr(random.randint(97, 122)), ]) font = ImageFont.truetype(&quot;blog/static/dist/fonts/kumo.ttf&quot;, 28) draw.text([i * 24, 0], char, (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)),font=font) char_list.append(char) # # # ========================= width = 120 height = 30 def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写干扰点 for i in range(40): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # # 写干扰圆圈 # for i in range(40): # draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # x = random.randint(0, width) # y = random.randint(0, height) # draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # # # 画干扰线 # for i in range(5): # x1 = random.randint(0, width) # y1 = random.randint(0, height) # x2 = random.randint(0, width) # y2 = random.randint(0, height) # # draw.line((x1, y1, x2, y2), fill=rndColor()) img.save(f, &quot;png&quot;) data = f.getvalue() s = &apos;&apos;.join(char_list) request.session[&quot;valid_code&quot;] = s &apos;&apos;&apos; Dajngo: set_cookie(&quot;sessionId&quot;,&quot;asdsa234asd3sad&quot;) in session表 sessionkey sessiondata asdsa234asd3sad &#123;&quot;valid_code&quot;:s&#125; &apos;&apos;&apos; return HttpResponse(data) 认证验证码注意： 验证码的验证过程也是基于session/cookie,session/cookie知识必备12345678910111213141516171819202122232425262728from PIL import Imagefrom blog.utils import BaseResponsefrom django.contrib import authfrom blog import modelsimport jsonfrom blog.forms import RegFormdef login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.is_ajax(): username=request.POST.get(&quot;username&quot;) password=request.POST.get(&quot;password&quot;) valid=request.POST.get(&quot;valid&quot;) # 输入的验证码 keep_valid = request.session.get(&quot;valid_code&quot;) loginResponse = BaseResponse() if valid.upper() == keep_valid.upper(): user=auth.authenticate(username=username,password=password) # auth模块做认证 if user: loginResponse.user = username auth.login(request,user) # auth模块加session else: loginResponse.error = &quot;用户名或密码错误&quot; else: loginResponse.error=&quot;验证码错误&quot; return HttpResponse(json.dumps(loginResponse.__dict__)) 插件认证这个插件用于拦截机器识别，确定人为登录，使认证系统更加安全等补充… 参考","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"Mysql Galera集群搭建","slug":"mysql-Galera","date":"2017-11-08T01:41:54.000Z","updated":"2017-11-07T13:25:31.456Z","comments":true,"path":"2017/11/08/mysql-Galera/","link":"","permalink":"http://www.digmyth.com/2017/11/08/mysql-Galera/","excerpt":"","text":"目录 wsrep简介 Galera集群搭建 wsrep简介wsrep是writeset replication的简称，是一种API，在底层调用各库实现数据库同步写.通过wsrep协议在全局实现复制,任何一节点都可读写. 基于wsrep协议提供的一种底层复制机制，实现了Galera cluster数据库集群。因此Galera cluster需要特定研发的一个数据库版本,只有支持了特别的研发版本，才能借住于wsrep协议实现复制机制. 多个节点之上有了信息层，上层应用完成高可用，研发时调用信息层所提供的api去开发，并基于这个api去完成集群事务决策，不然就要自行加入中间层称资源管理器crm，如pacemaker galera cluster不是专为数据库提供的，只是一个工作在较为底层能够为你的服务提供数据复制功能的底层组件. mysql只有在研发时调用了galera cluster api写的mysql才能利用galera cluster完成复制,它的复制不再是让其它节点通过读取主节点二进制日志文件在本地重放，而是你指明了复制哪个数据库文件，由galera cluster自己在底层完成同步，mysql本身不感知. 12percona-cluster 版本支持galera clusterMariaDB-cluster 版本支持galera cluster 复制的问题和解决方案:(1) 数据损坏或丢失1234语句或行记录二进制日志，从而在从服务器上重放，重放机制也可能主从不一致的情况硬件故障、软件bug也会有数据损坏或丢失Master: MHA + semi replication(至少有一个从节点接收到了提交的binlog事件才返回成功，也是半同步复制)如果主节点数据损坏或丢失，就必须手动在从节点通过gtid来判断出己经提交的所有应用或事务，然后合并出一个较新的从节点提升为主节点Slave: 重新复制数据即可 (2) 运维部署注意事项：12345关键业务监控重要数据要备份和冗余不能混合使用存储引警MyISM: 不支持事务InnoDB: 支持事务 (3) 设置了不唯一的server ID12不唯一，整个复制集群数据产生错乱，每一个服务节点都不会在本地重放由同一个server ID 所产生的事件会导致重新复制数据 (4) 复制延迟12345需要额外监控工具的辅助自写一些脚本监控从节点有一个落后于主节点的时间判定，这个时间不为0时，尝试重启从节点服务对于从服务器延迟，主节点的事务是可以并发的，往二进制写入是单线程的，有先有后，从服务器重放也是单线程的，从服务器延迟落后也是必然的mysql5.6/mariadb 10以后引入了多线程复制机制，三节点集群可设置wsrep_slave_threads = 4 数据库服务衡量指标12qps : query per second 查询量tps: transaction per second 事务量 Galera集群搭建最新文档请参考Galera 集群官方链接 一 准备工作1 关闭防火墙2 关闭selinux3 同步主机时间4 设置hosts文件 二 MariaDB源在MariaDB 10.1以前需要卸载mariadb包，单独准备MariaDB-Galera-server源来安装MariaDB-Galera-server包例：123456789101112yum list all | grep -i galerayum remove mariadb*yum -y install MariaDB-Galera-server.rpm galera-25.3rpm -ql MariaDB-Galera-serverrpm -qa | grep MariaDB MariaDB-common-10.0.32-1.el7.centos.x86_64 MariaDB-shared-10.0.32-1.el7.centos.x86_64 MariaDB-Galera-server-10.0.32-1.el7.centos.x86_64 MariaDB-client-10.0.32-1.el7.centos.x86_64vim /etc/my.cnf.d/server.cnf[galera]... 而在MariaDB 10.1以后MariaDB-server己经自带Galera集群了，不必单独安装MariaDB-Galera-server包，只需准备如下源 编辑/etc/yum.repos.d/Mariadb.repo1234567# MariaDB 10.2 CentOS repository list - created 2017-11-07 12:07 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.2/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1 三 软件安装1yum install MariaDB-server MariaDB-client 四 修改配置编辑/etc/my.cnf.d/server.cnf123456789101112[galera]#Mandatory settingswsrep_provider=/usr/lib64/galera/libgalera_smm.so # 可查rpm -ql galera | grep -i smm.sowsrep_cluster_address = &apos;gcomm://172.16.100.67,172.16.100.68,172.16.100.69&apos;wsrep_cluster_name = &apos;cluster&apos;wsrep_node_name = &apos;node1&apos;wsrep_node_address= &apos;172.16.100.67&apos;binlog_format = rowdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2bind-address = 0.0.0.0wsrep_on=ON 五 启动服务任意一个节点启动123/etc/init.d/mysql start --wsrep-new-cluster或service mysql bootstrap或systemctl start mariadb --wsrep-new-cluster 然后在其它节点正常启动即可12systemctl start mariadbMariaDB [(none)]&gt; show status like &apos;%wsrep%&apos;; 简单验证1234567create database mydb;use mydbcreate table tb1 (id int, name char(10));desc tb1;create table tb2 (id int unsigend auto_increment not null primary key, name char(30));insert into tb2(name) values (&apos;hi&apos;, &apos;hello&apos;)select * from tb2; 有关认证及集群检测自行研究1234wsrep_sst_method = xtrabackup-v2wsrep_sst_auth = root:NtEXLlZGF9KeXYUE79e7H8N5C9Vdy0EkHlBfFPtrwsrep_slave_threads = 4wsrep_notify_cmd = /usr/local/bin/wsrep-notify.sh # 注意定义这个脚本","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"ceph-01-运维那事","slug":"ceph-01-运维那事","date":"2017-11-05T01:41:54.000Z","updated":"2017-11-22T08:06:37.975Z","comments":true,"path":"2017/11/05/ceph-01-运维那事/","link":"","permalink":"http://www.digmyth.com/2017/11/05/ceph-01-运维那事/","excerpt":"","text":"待整理ceph运维笔记 12ceph osd set nooutceph osd unset noout 1rbd create wxq --size 1 12345678(ceph-mon)[root@pike-vm /]# rbd info rbd/wxqrbd image &apos;wxq&apos;: size 1024 kB in 1 objects order 22 (4096 kB objects) block_name_prefix: rbd_data.498102ae8944a format: 2 features: layering, exclusive-lock, object-map, fast-diff, deep-flatten flags: 12(ceph-mon)[root@pike-vm /]# ceph osd map rbd rbd_data.498102ae8944aosdmap e183 pool &apos;rbd&apos; (0) object &apos;rbd_data.498102ae8944a&apos; -&gt; pg 0.455bea7d (0.3d) -&gt; up ([1], p1) acting ([1], p1) 123456[root@lab8106 ]#ceph-objectstore-tool \\ --data-path /var/lib/ceph/osd/ceph-1/ \\ --journal-path /var/lib/ceph/osd/ceph-1/journal \\ --pgid 0.3d \\ rbd_data.498102ae8944a remove 12(ceph-mon)[root@pike-vm /]# ceph pg map 8.7d osdmap e183 pg 8.7d (8.7d) -&gt; up [2] acting [2] 12345(ceph-mon)[root@pike-vm /]# ceph pg 8.7d query&#123; &quot;state&quot;: &quot;active+clean&quot;, &quot;snap_trimq&quot;: &quot;[]&quot;,... 1234ceph pg dumpceph osd dumpceph pg map 8.7dceph pg 8.7d list_missing 12ceph pg 4.438 mark_unfound_lost revertceph pg 4.438 mark_unfound_lost delete 12ceph pg repair 0.44ceph osd pool set rbd min_size 1","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"webssh-shellinabox","slug":"linux-shellinabox","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:43:37.447Z","comments":true,"path":"2017/10/31/linux-shellinabox/","link":"","permalink":"http://www.digmyth.com/2017/10/31/linux-shellinabox/","excerpt":"","text":"利用http/https协议网页连接linux服务器，Webssh中最简单最方便的一种,还有GateOne/原生webssh yum安装1yum install shellinabox -y 查看安装文件，主要是主题相关，可以根据其位置自定义主题123456789101112131415161718rpm -ql shellinabox/etc/sysconfig/shellinaboxd/usr/lib/systemd/system/shellinaboxd.service/usr/sbin/shellinaboxd/usr/share/doc/shellinabox-2.20/usr/share/doc/shellinabox-2.20/AUTHORS/usr/share/doc/shellinabox-2.20/NEWS/usr/share/doc/shellinabox-2.20/README/usr/share/doc/shellinabox-2.20/README.Fedora/usr/share/doc/shellinabox-2.20/print-styles.css/usr/share/doc/shellinabox-2.20/shell_in_a_box.js/usr/share/doc/shellinabox-2.20/styles.css/usr/share/man/man1/shellinaboxd.1.gz/usr/share/shellinabox/usr/share/shellinabox/color.css/usr/share/shellinabox/monochrome.css/usr/share/shellinabox/white-on-black.css/var/lib/shellinabox 编辑配置文件/etc/sysconfig/shellinaboxd1OPTS=&quot;--css=/usr/share/shellinabox/white-on-black.css --disable-ssl-menu -s /:SSH:192.168.1.244&quot; 启动服务12systemctl enable shellinaboxd.servicesystemctl start shellinaboxd.service 网页登录服务器 https://192.168.1.244:4200","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"proxy-01-代理","slug":"proxy-01-代理","date":"2017-10-31T00:48:08.000Z","updated":"2018-10-21T08:45:24.259Z","comments":true,"path":"2017/10/31/proxy-01-代理/","link":"","permalink":"http://www.digmyth.com/2017/10/31/proxy-01-代理/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-19-auth认证系统","slug":"web-django-19-auth认证系统","date":"2017-10-09T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/10/09/web-django-19-auth认证系统/","link":"","permalink":"http://www.digmyth.com/2017/10/09/web-django-19-auth认证系统/","excerpt":"","text":"目录 auth模块 Django内置补充 auth模块可以基于Cookie/Session自己写登录、注销的用户认证，这里我们学习Django自带的auth模块实现用户的登录、注销认证系统。 模块引入123from django.contrib import auth # 模块引入#from django.contrib.auth.models import User,AbstractUser#from app01 import models 下面2条命令会生成Django默认表，其中有张表auth_user用于存认证用户信息。12python manage.py makemigrationspython manage.py migrate 创建一个超级用户，auth_user可查看1python manage.py createsuperuser 自己写登录系统123456789101112131415161718192021def login(request): if request.method==&quot;GET&quot;: return render(request,&quot;login.html&quot;) elif request.method==&quot;POST&quot;: username=request.POST.get(&quot;username&quot;) pwd=request.POST.get(&quot;pwd&quot;) user_obj=auth.authenticate(username=username,password=pwd) # 验证 if user_obj: auth.login(request,user_obj) # 写入session return redirect(&quot;/home/&quot;) else: return redirect(&quot;/login/&quot;)def log_out(request): auth.logout(request) #相当于request.session.flush() 去除session return redirect(&quot;/login/&quot;)def home(request): if not request.user_obj.is_authenticated(): # 是否认证过有没写入session return redirect(&quot;/login/&quot;) return render(request,&quot;home.html&quot;) 注意：利用Django自带的表创建用户，不能对Django自带的表直接操作，那怎么创建呢，Django提供一个接口，通过auth模块操作User表.12from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;） 当Django自带User表字段不够用时，可以自己建表继承User表字段，方法:123from django.contrib.auth.models import AbstractUserclass UserInfo(AbstractUser): detail = modoles.CharField(max_length=32) 自建表记得settins.py配置AUTH_USER_MODEL123456789STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS =[ os.path.join(BASE_DIR,&quot;blog&quot;,&quot;static&quot;),]# MEDIA_ROOT=os.path.join(BASE_DIR,&apos;blog&apos;,&apos;media&apos;,&apos;upload&apos;)# MEDIA_URL = &apos;/media/&apos;AUTH_USER_MODEL= &quot;blog.UserInfo&quot; Django 内置补充1234567891011121314151617181920212223242526272829303132333435363738django已经为我们设计好了一个用于此种情况的装饰器：login_requierd()from django.contrib.auth.decorators import login_required @login_requireddef my_view(request): ...若用户没有登录，则会跳转到django默认的 登录URL &apos;/accounts/login/ &apos; (这个值可以在settings文件中通过LOGIN_URL进行修改)。并传递当前访问url的绝对路径 (登陆成功后，会重定向到该路径)。User对象User 对象属性：username， password（必填项）password用哈希算法保存到数据库is_staff ： 用户是否拥有网站的管理权限.is_active ： 是否允许用户登录, 设置为``False``，可以不用删除用户来禁止 用户登录2.1 、is_authenticated()表明是否认证通过并有session,当使用auth模块时，前端`&#123;&#123; request.user &#125;&#125;`可以直接使用不需要后端传入request.user变量。request.user.username 为AnonymousUser或用户名2.2 、创建用户使用 create_user 辅助函数创建用户:from django.contrib.auth.models import Useruser = User.objects.create_user（username=&apos;&apos;,password=&apos;&apos;,email=&apos;&apos;）2.3 、check_password(passwd)用户需要修改密码的时候 首先要让他输入原来的密码 ，如果给定的字符串通过了密码检查，返回 True2.4 、修改密码使用 set_password() 来修改密码user = User.objects.get(username=&apos;&apos;)user.set_password(password=&apos;&apos;)user.save 简单示例注册：1234567891011121314151617181920def sign_up(request): state = None if request.method == &apos;POST&apos;: password = request.POST.get(&apos;password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) email=request.POST.get(&apos;email&apos;, &apos;&apos;) username = request.POST.get(&apos;username&apos;, &apos;&apos;) if User.objects.filter(username=username): state = &apos;user_exist&apos; else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect(&apos;/book/&apos;) content = &#123; &apos;state&apos;: state, &apos;user&apos;: None, &#125; return render(request, &apos;sign_up.html&apos;, content) 修改密码：123456789101112131415161718192021222324@login_requireddef set_password(request): user = request.user state = None if request.method == &apos;POST&apos;: old_password = request.POST.get(&apos;old_password&apos;, &apos;&apos;) new_password = request.POST.get(&apos;new_password&apos;, &apos;&apos;) repeat_password = request.POST.get(&apos;repeat_password&apos;, &apos;&apos;) if user.check_password(old_password): if not new_password: state = &apos;empty&apos; elif new_password != repeat_password: state = &apos;repeat_error&apos; else: user.set_password(new_password) user.save() return redirect(&quot;/log_in/&quot;) else: state = &apos;password_error&apos; content = &#123; &apos;user&apos;: user, &apos;state&apos;: state, &#125; return render(request, &apos;set_password.html&apos;, content) 补充原文","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-19-Cookies-Session","slug":"web-django-19-Cookies-Session","date":"2017-10-08T12:26:37.000Z","updated":"2019-01-20T03:34:50.249Z","comments":true,"path":"2017/10/08/web-django-19-Cookies-Session/","link":"","permalink":"http://www.digmyth.com/2017/10/08/web-django-19-Cookies-Session/","excerpt":"","text":"目录 Cookies Session 代码学习 相关配置 总结 Cookies用户第一次请求时，服务器会在浏览器上写入cookies键值对，下一次请求会把这个键值对带上，服务器会验证这个cookies键值对，基于这样的特性cookies可以做登录验证和投票。如果没有cookies时，会先让你做用户登录。 Session所有的用户信息都写入客户端浏览器存在安全问题也不现实，我们把这些信息都写到服务器端，对应一个随机字符串，再把这个随机字符串写入cookies，格式为{“sessionid”:”随机字符串”},问题就得到了解决。 cookies就是能在客户端浏览器写键值对的一种机制，类似’user’:’abc’, 如果写的是’sessionid’:’随机字符串’，那么session就诞生了，服务端再拿到这样的随机字符串，记录信息格式如’随机字符串’:’你想存的敏感信息’ 代码学习Cookies 工作特性：在浏览器F12 network-&gt;cookies中首次请求时可以看到 Response Cookies有写入的键值对，下次再访问时Request Cookies有这个键值对，证明此时浏览器会带着这个键值对发给服务器。可以简单用下面代码测试123456def ck(request): print(request.COOKIES) # cookies会封装在request.COOKIES内 obj = render(request, &quot;ck.html&quot;, &#123;&quot;msg&quot;: &quot;&quot;&#125;) obj.set_cookie(&apos;user&apos;, &apos;wxq&apos;) # 向浏览器写入cookies键值对 return obj 下面用代码描述Cookies、Session各自工作：login.html123456&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; &#123;% csrf_token %&#125; &lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;&lt;span&gt;&#123;&#123; msg &#125;&#125;&lt;/span&gt;&lt;/form&gt; views.py视图12345678910111213141516171819202122232425from app01 import modelsdef login(request): if request.method == &quot;GET&quot;: return render(request, &apos;login.html&apos;,&#123;&quot;msg&quot;: &quot;&quot;&#125;) else: u = request.POST.get(&quot;username&quot;) p = request.POST.get(&quot;pwd&quot;) v=models.UserInfo.objects.filter(username=u, pwd=p).exists() if v: # obj.set_cookie(&quot;user&quot;, u,max_age=5) request.session[&quot;user&quot;] = u request.session[&quot;pwd&quot;] = p return redirect(&quot;/home/&quot;) else: return render(request,&quot;login.html&quot;,&#123;&quot;msg&quot;: &quot;用户名或密码错误&quot;&#125;)def home(request): # v = request.COOKIES.get(&quot;user&quot;) v = request.session.get(&quot;user&quot;) if v: return HttpResponse(&quot;登录成功&quot;) else: return redirect(&quot;/login/&quot;) 利用session注销1234567891011def logout(request): &apos;&apos;&apos; obj=HttpResponse(&quot;xxx&quot;) obj.set_cookie(&quot;user&quot;,&quot;name&quot;) # 设置cookie request.COOKIES.get(&quot;user&quot;) # 获取cookie obj.delete_cookie(&apos;user&apos;) # 清除cookie &apos;&apos;&apos; #request.session[&apos;user&apos;] = &apos;wxq&apos; # 设置session #request.session.get(&apos;user&apos;) # 获取session request.session.clear() # 清除session return redirect(&quot;/login/&quot;) Cookies、Session相关配置配置参考 settings.py配置12345678910SESSION_ENGINE = &apos;django.contrib.sessions.backends.db&apos; # 引擎（默认） SESSION_COOKIE_NAME ＝ &quot;sessionid&quot; # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）SESSION_COOKIE_PATH ＝ &quot;/&quot; # Session的cookie保存的路径（默认）SESSION_COOKIE_DOMAIN = None # Session的cookie保存的域名（默认）SESSION_COOKIE_SECURE = False # 是否Https传输cookie（默认）SESSION_COOKIE_HTTPONLY = True # 是否Session的cookie只支持http传输（默认）SESSION_COOKIE_AGE = 1209600 # Session的cookie失效日期（2周）（默认）SESSION_EXPIRE_AT_BROWSER_CLOSE = False # 是否关闭浏览器使得Session过期（默认）SESSION_SAVE_EVERY_REQUEST = True # 是否每次请求都保存Session，默认修改之后才保存（默认） 总结1 cookies是记录在浏览器上的键值对，本身与登录没有任何关系。 cookies信息保存在request.COOKIES.2 session是记录在服务器上的键值对，key是一个随机字符串, session信息保存在request.session字典里的.3 只有Django框架有session 相关的封装,Flask/tornado等其它web框架是没有的，需要自己写Cookies、session.","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(三)","slug":"web-django-orm(三)","date":"2017-09-15T12:51:41.000Z","updated":"2018-01-18T03:45:03.508Z","comments":true,"path":"2017/09/15/web-django-orm(三)/","link":"","permalink":"http://www.digmyth.com/2017/09/15/web-django-orm(三)/","excerpt":"","text":"目录 Orm Shell FQ查询 聚合查询 参考资料官方昊练习一练习二pythoncode 一 Orm Shell pycharm中models我们己经学习过了，这里记录下在linux操作系统中启动Orm Shell需要做的几件事儿. 1 模块导入12345pip3 install pymysqlpycharm中可以在应用目录下__init__.py,也可以在项目目录__init__.py下import pymysqlpymysql.install_as_MySQLdb()但是linux系统里只能在项目目录下 2 models.py的区别1234在建立一对一或一对多关系表时需要位置参数on_delete=models.CASCADE，多对多不需要author=models.OneToOneField(&quot;Author&quot;,on_delete=models.CASCADE)publisher=models.ForeignKey(to=&quot;Publish&quot;,on_delete=models.CASCADE)authors=models.ManyToManyField(&quot;Author&quot;) 3 数据库12345678910DATABASES = &#123;&apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125; &#125; 4 明确指明INSTALLED_APPS123456789 INSTALLED_APPS = [ &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;app01.apps.App01Config&apos;, ] 5 启动Orm Shell可以命令行操作orm语句学习了123python3 manage.py shell&gt;&gt;&gt; from app01 import models&gt;&gt;&gt; 6 联表sql示例原始sql语句的一个精典联表操作示例123456789101112131415161718 MariaDB [wxq_db]&gt; select sum(app01_book.price) as bookSumPrice,app01_publish.name -&gt;from app01_book_authors -&gt;left join app01_book -&gt;on app01_book.nid=book_id -&gt;left join app01_author -&gt;on author_id=app01_author.id -&gt;left join app01_publish -&gt;on publisher_id=app01_publish.id -&gt;group by app01_publish.name -&gt;having bookSumPrice &gt; 100 -&gt;order by bookSumPrice desc;+--------------+-----------------+| bookSumPrice | name |+--------------+-----------------+| 176.40 | 工业出版社 || 124.00 | 人民出版社 |+--------------+-----------------+2 rows in set (0.00 sec) 二 FQ查询123456789101112131415161718def FQQuery(request): from django.db.models import F,Q # F查询 # F查询用于自修改或字段比较或一个字段值赋值给另一字段的场景 # ret1=models.Book.objects.filter(comment_num__gt=50) # ret2=models.Book.objects.filter(comment_num__gt=F(&quot;read_num&quot;)*2) # print(ret2) #models.Book.objects.all().update(price=F(&quot;price&quot;)+10) ################################## Q查询 ret3=models.Book.objects.filter(comment_num__gt=50,read_num__gt=50) # 并且 ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100)) # 或者 print(ret3) return HttpResponse(&quot;OK&quot;) F查询总结1234F查询适用场景:场景1： 两个字段间值的比较F(&apos;price&apos;)场景2： 自运算，如F(&apos;price&apos;) + 10 Q查询总结12345# 注意事项：不同顺序的区别，不同放置的区别# 关键字语句放在Q查询的后面，并且只要有(逗号)就是(且)的意思#ret3=models.Book.objects.filter(price__lt=100,(Q(comment_num__gt=100)|Q(read_num__gt=100))) # 有效语句#ret3=models.Book.objects.filter(Q(comment_num__gt=100)|Q(read_num__gt=100),price__lt=100) # 有效语句#ret3=models.Book.objects.filter(price__lt=100,Q(comment_num__gt=100)|Q(read_num__gt=100)) # 无效语句 三 聚合查询1234567891011121314151617181920212223242526272829303132def juheQuery(reqeuest): from django.db.models import F,Q,Avg,Count,Sum,Min,Max # 单纯聚合函数 # 计算所有图书的平均价格 # ret=models.Book.objects.all().aggregate(priceSum=Sum(&quot;price&quot;)) # print(ret) # &#123;&apos;priceSum&apos;: Decimal(&apos;2158.00&apos;)&#125; # 统计每一本书的作者个数 # ret2=models.Book.objects.all().annotate(authors_num=Count(&quot;authors&quot;)) # 返回QuerySet # print(ret2) # [book_obj1,book_obj2,book_obj3,book_obj4,....] # # for obj in ret2: # print(obj.nid,obj.title,obj.authors_num) # 查询每一个出版社出版过的所有书籍的总价格 #方式1： # ret3=models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)) # # for obj in ret3: # print(obj.id,obj.name,obj.priceSum) # ret4 = models.Publish.objects.all().annotate(priceSum=Sum(&quot;bookList__price&quot;)).values(&quot;name&quot;,&quot;priceSum&quot;) # print(ret4) # 方式2： # ret5=models.Book.objects.all().values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&quot;publisher__name&quot;,&quot;priceSum&quot;) # print(ret5) return HttpResponse(&quot;OK&quot;) 实践示例12345In [178]: models.Publish.objects.annotate(priceSum=Sum(&quot;book__price&quot;)).values(&apos;name&apos;,&apos;priceSum&apos;)Out[178]: &lt;QuerySet [&#123;&apos;priceSum&apos;: Decimal(&apos;12.00&apos;), &apos;name&apos;: &apos;人民出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;工业出版社&apos;&#125;, &#123;&apos;priceSum&apos;: Decimal(&apos;8.80&apos;), &apos;name&apos;: &apos;清华版社&apos;&#125;]&gt;In [179]: models.Book.objects.values(&quot;publisher__name&quot;).annotate(priceSum=Sum(&quot;price&quot;)).values(&apos;publisher__name&apos;,&apos;priceSum&apos;)Out[179]: &lt;QuerySet [&#123;&apos;publisher__name&apos;: &apos;人民出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;12.00&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;清华版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;, &#123;&apos;publisher__name&apos;: &apos;工业出版社&apos;, &apos;priceSum&apos;: Decimal(&apos;8.80&apos;)&#125;]&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"ceph-luminous安装","slug":"ceph-luminous安装","date":"2017-09-05T01:41:54.000Z","updated":"2017-11-13T05:12:03.615Z","comments":true,"path":"2017/09/05/ceph-luminous安装/","link":"","permalink":"http://www.digmyth.com/2017/09/05/ceph-luminous安装/","excerpt":"","text":"这里只简单列下luminous12.X 安装，默认存储引警Bluestore及监控界面 1 /etc/hosts解析略2 ntpservers时间同步略3 系统配置123456sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/configsetenforce 0systemctl stop firewalld systemctl disable firewalldsystemctl stop NetworkManagersystemctl disable NetworkManager 添加yum源123456789[root@cluster-sql ~]# cat ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 4 新建集群123456# mkdir /mnt/cluster# cd /mnt/cluster # yum -y install ceph-deploy# ceph-deploy install --no-adjust-repos node01 node02 node03# ceph-deploy new node01 node02 node03 5 生成原始文件12[root@node01 cluster]# ls /mnt/clusterceph.conf ceph-deploy-ceph.log ceph.mon.keyring 6 根据需要更新原始文件添加需的ceph.conf配置12345678910111213[root@node01 cluster]# cat ceph.conf [global]fsid = d8fa6509-0196-41bc-838e-6226c927e680mon_initial_members = node01, node02, node03mon_host = 192.168.1.10,192.168.1.11,192.168.1.12auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_allow_pool_delete=true[mgr]mgr modules = dashboard 7 初始化同时推送配置文件1# ceph-deploy mon create-initial 9 推送密钥文件1[root@node01 cluster]# ceph-deploy admin node01 node02 node03 10 查看集群状态12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: 11 添加激活osd磁盘12345[root@node01 cluster]# ceph-deploy osd create --bluestore node01:/dev/sdb node02:/dev/sdb node03:/dev/sdb --zap-disk[root@node01 cluster]# lsceph.bootstrap-mds.keyring ceph.bootstrap-osd.keyring ceph.client.admin.keyring ceph-deploy-ceph.logceph.bootstrap-mgr.keyring ceph.bootstrap-rgw.keyring ceph.conf ceph.mon.keyring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[root@node01 cluster]# systemctl status ceph-osd@2 # 查看单个osd进程[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN no active mgr clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: no daemons active osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 0 kB used, 0 kB / 0 kB avail pgs: ####[root@node01 cluster]# ceph quorum_status --format json-pretty[root@node01 cluster]# ceph osd treeID CLASS WEIGHT TYPE NAME STATUS REWEIGHT PRI-AFF -1 0.14607 root default -3 0.04869 host node01 0 hdd 0.04869 osd.0 up 1.00000 1.00000 -5 0.04869 host node02 1 hdd 0.04869 osd.1 up 1.00000 1.00000 -7 0.04869 host node03 2 hdd 0.04869 osd.2 up 1.00000 1.00000 [root@node01 cluster]# df -hTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/vg-root xfs 16G 1.7G 14G 11% /devtmpfs devtmpfs 482M 0 482M 0% /devtmpfs tmpfs 493M 0 493M 0% /dev/shmtmpfs tmpfs 493M 6.9M 486M 2% /runtmpfs tmpfs 493M 0 493M 0% /sys/fs/cgroup/dev/sda1 xfs 497M 159M 338M 32% /boot/dev/mapper/vg-data xfs 3.9G 33M 3.9G 1% /datatmpfs tmpfs 99M 0 99M 0% /run/user/0/dev/sdb1 xfs 97M 5.4M 92M 6% /var/lib/ceph/osd/ceph-0[root@node01 cluster]# cat /var/lib/ceph/osd/ceph-0/type bluestore[root@node01 cluster]# parted /dev/sdb printModel: VMware, VMware Virtual S (scsi)Disk /dev/sdb: 53.7GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 106MB 105MB xfs ceph data 2 106MB 53.7GB 53.6GB ceph block 12 配置ceph-mgr1[root@node01 cluster]# ceph-deploy mgr create node01 node02 node03 可以看到己被激活12345678910111213141516[root@node01 cluster]# ceph -s cluster: id: d8fa6509-0196-41bc-838e-6226c927e680 health: HEALTH_WARN clock skew detected on mon.node02, mon.node03 services: mon: 3 daemons, quorum node01,node02,node03 mgr: node01(active), standbys: node02, node03 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0 bytes usage: 3164 MB used, 146 GB / 149 GB avail pgs: 123456789101112131415[root@node01 cluster]# ceph config-key put mgr/dashboard/server_addr 192.168.1.10set mgr/dashboard/server_addr[root@node01 cluster]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@node01 cluster]# ceph mgr module enable dashboard[root@node01 cluster]# ceph mgr module ls[ &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot;][root@node01 cluster]# netstat -tnlp | grep 7000tcp 0 0 192.168.1.10:7000 0.0.0.0:* LISTEN 34774/ceph-mgr 13 ceph-fs部署123456789101112# ceph-deploy mds create node01 node02 node03# ceph osd pool create cephfs_data &lt;pg_num&gt;# ceph osd pool create cephfs_metadata &lt;pg_num&gt;# ceph fs new cephfs cephfs_metadata cephfs_data(ceph-mds)[root@pike-vm /]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ](ceph-mds)[root@pike-vm /]# ceph fs get cephfsFilesystem &apos;cephfs&apos; (1)fs_name cephfs... 14 cephfs文件系统挂载确保客户端存在/etc/ceph/ceph.client.admin.keyring /etc/ceph/ceph.conf 方法一：12345[root@admin:]# yum install ceph-commonroot@admin:~# ceph-authtool -l /etc/ceph/ceph.client.admin.keyring[client.admin]key = AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg==mount -t ceph 172.16.170.135:6789:/ /mnt/cephdir/ -o name=admin,secret=AQBABNZTMCBWNhAAUYPXxFpHYMHvyACdSAZoCg== 方法二：123456[root@wxq ceph]# yum install ceph-fuse[root@wxq ceph]# ceph-fuse -m 172.18.23.17:6789 /mnt/cephdir/ceph-fuse[25849]: starting ceph clientceph-fuse[25849]: starting fuse[root@wxq ceph]# df -hT | grep fuseceph-fuse fuse.ceph-fuse 135G 116M 135G 1% /mnt/cephdir 总结几点1 ceph quorum_status –format json-pretty 可查看选举详情2 ceph osd pool application enable volumes rbd 标记一个池的应用(cephfs/rbd/rgw),不标记可以使用但集群状态将为warning3 保护机制的存在默认删除池是不允许的12345[root@ceph cluster]# ceph --show-config | grep deletemon_allow_pool_delete = falsemon_fake_pool_delete = falseosd_pool_default_flag_nodelete = falserbd_mirror_delete_retry_interval = 30.000000 需要编辑ceph.conf12[global]mon_allow_pool_delete=true 界面视图","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"kolla on redhat 7.2","slug":"kolla-on-redhat7.2","date":"2017-08-08T01:41:54.000Z","updated":"2017-09-10T16:06:09.587Z","comments":true,"path":"2017/08/08/kolla-on-redhat7.2/","link":"","permalink":"http://www.digmyth.com/2017/08/08/kolla-on-redhat7.2/","excerpt":"","text":"在一次项目中客户要求在redhat 7.2系统安装部署kolla ocata版本，在这种特定要求下还是实践一把的，在此把详细文档做个记录。 1. install wget最小化安装，系统很干净1rpm -ivh ftp://195.220.108.108/linux/centos/7.3.1611/os/x86_64/Packages/wget-1.14-13.el7.x86_64.rpm 2. remove yum of redhat 首先删除redhat原有的yum ，因为redhat 原本的yum 没有注册为redhat用户是用不了的12rpm -aq|grep yum|xargs rpm -e --nodeps rpm -aq|grep python-iniparse|xargs rpm -e --nodeps 3. install new yum123456wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-3.4.3-132.el7.centos.0.1.noarch.rpmwget http://vault.centos.org/7.2.1511/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm wget http://vault.centos.org/7.2.1511/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-34.el7.noarch.rpm rpm ivh *.rpm 4. yum sourece configure123456789101112131415161718192021222324252627edit /etc/yum.repos.d/Centos72.repo[base]name=CentOS-$releasever - Basebaseurl=http://vault.centos.org/7.2.1511/os/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=http://vault.centos.org/7.2.1511/updates/$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[extras]name=CentOS-$releasever - Extrasbaseurl=http://vault.centos.org/7.2.1511/extras//$basearch/gpgcheck=1gpgkey=http://vault.centos.org/7.2.1511/os/x86_64/RPM-GPG-KEY-CentOS-7[centosplus]name=CentOS-$releasever - Plusbaseurl=http://vault.centos.org/7.2.1511/centosplus//$basearch/gpgcheck=1enabled=0 5. update yum123yum clean allyum updateyum install epel-release axel vim git curl wget net-tools git gcc lrzsz python-devel vsftpd createrepo 6. optimization system123close selinuxclose NetworkManagerclose firewalld 7. add docker yum12345678tee /etc/yum.repos.d/docker.repo &lt;&lt; &apos;EOF&apos;[dockerrepo]name=Docker Repositorybaseurl=https://yum.dockerproject.org/repo/main/centos/7/enabled=1gpgcheck=1gpgkey=https://yum.dockerproject.org/gpgEOF 8. install docker1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 如果安装很慢，可以挂载ocata_20170420.iso光盘进入目录Packages/d 下面有相应软件包，执行下面命令1yum localinstall docker-engine-selinux-1.12.6-1.el7.centos.noarch.rpm docker-engine-1.12.6-1.el7.centos.x86_64.rpm 再执行完成安装1yum install -y ansible docker-engine-1.12.6 docker-engine-selinux-1.12.6 git gcc python-setuptools python-devel 9. 配置docker12345mkdir /etc/systemd/system/docker.service.d/tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt; eof [Service]MountFlags=sharedeof edit /usr/lib/systemd/system/docker.service1ExecStart=/usr/bin/dockerd --insecure-registry 192.168.200.2:4000 启动docker:1234systemctl daemon-reloadsystemctl enable dockersystemctl restart dockersystemctl status docker 10. install pip1234yum install python-pippip install -U pip#easy_install -U pip # 或者easy_install工具安装pip install docker-py 11. install kolla-ansible1234# yum install gcc libffi-devel python-devel openssl-devel# pip install kolla-ansible#cp -rf /usr/share/kolla-ansible/etc_examples/kolla/ /etc/# kolla-genpwd 12. install docker registry123456789mount /dev/sr0 /mntdocker load &lt; registry.tarmkdir /opt/registrytar -zxf docker-registry.tar.gz -C /opt/registrydocker run -d -p 4000:5000 --restart=always --name registry -v /opt/registry/:/var/lib/registry registry# curl http://172.16.100.100:4000/v2/_catalog# curl http://172.16.100.100:4000/v2/kolla/centos-source-nova-api/tags/list&#123;&quot;name&quot;:&quot;kolla/centos-source-nova-api&quot;,&quot;tags&quot;:[&quot;4.0.0.3&quot;]&#125; 13. ceph disk set123parted /dev/sdb -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdc -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1parted /dev/sdd -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP 1 -1 14. in case of vm如果只是在虚机中实验搭建kolla，需要额外配置12345mkdir -p /etc/kolla/config/novavim /etc/kolla/config/nova/nova-compute.conf[libvirt]virt_type = qemucpu_mode = none 创建 /etc/kolla/config/ceph.conf123[global]osd pool default size = 1osd pool default min size = 1 如果有需要，请手动调整副本数1ceph osd pool set rbd size 1 15. edit global.yml12edit /etc/kolla/global.yml此处略过。。。 16. kolla-ansible deploy1234kolla-ansible precheckskolla-ansible pullkolla-ansible deploykolla-ansible post-deploy 17. cli-commands install12yum install ceph-common pip python-openstackclient python-neutronclient 18. access dashboard1curl http://172.16.100.100/horizon 如果在openstack平台虚机中搭建kolla情况下，让其能通过浮动地址访问内部地址的dashboard1iptables -t nat -I PREROUTING -d 172.18.128.244 -p tcp --dport 80 -j DNAT --to 172.16.100.100 1成功访问：http://172.18.128.244 《成功》。。。","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-ganesha-manila","slug":"cephfs-manila","date":"2017-08-05T01:41:54.000Z","updated":"2017-11-16T03:31:22.380Z","comments":true,"path":"2017/08/05/cephfs-manila/","link":"","permalink":"http://www.digmyth.com/2017/08/05/cephfs-manila/","excerpt":"","text":"openstack manila项目最近很活跃，ceph刚好发布luminous版,具说cephfs性能得到很大提升，那么manila 后端存储cephfs找到了着力点，得到在大力发展。这里对manila cephfs实验做下记录。官网链接参考 驱动简介manila cephfs驱动分为两种：一种： cephfs native share相当于租户虚机直接连接cephfs集群，存在安全问题，生产环境中很难推行。 1 ceph-common包安装在manila-share中2 ceph-common/ceph-fuse 软件安装在租户虚机Guest里3 ceph集群与manila-share网络打通4 ceph集群与租户虚机网络打通 二种： cephfs nfs share官网说明1234567891 Pike or later versions of manila.2 Kraken or later versions of Ceph.3 2.5 or later versions of NFS-Ganesha.4 A Ceph cluster with a filesystem configured5 ceph-common package installed in the servers running the manila-share service.6 NFS client installed in the guest.7 Network connectivity between your Ceph cluster’s public network and the servers running the manila-share service.8 Network connectivity between your Ceph cluster’s public network and NFS-Ganesha server.9 Network connectivity between your NFS-Ganesha server and the manila guest. 在cephfs nfs share驱动，借住nfs-Ganesha解决了网络安全性问题，避免ceph public网直接暴露。直观的理解就是Ganesha为协议转换层，FSAL_CEPH把guest vm的NFS协议调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. 安装openstack+ceph跟据官网所说准备一套openstack pike + ceph luminous 环境，安装过程略。。。。 ceph luminous 源12345678[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-luminous/el7/noarch/gpgcheck=0 安装nfs-ganesha 需要nfs-ganesha 版本为2.5以上，只能编译安装了,具体[请参考(http://www.digmyth.com/2017/06/05/cephfs-Ganesha/)1234567891011yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -ycd /optgit clone --recursive git://github.com/nfs-ganesha/nfs-ganesha.gitmkdir /opt/build &amp;&amp; cd /opt/buildcmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 配置manila-share必要客户端安装 1234yum instal ceph ceph-fuse ceph-common libcephfs1-devel librgw2-develscp ceph_mon:/etc/ceph/* /etc/ceph #^# 复制相关配置文件``` ceph授权 如下命令会生成manila.keyring文件，一并复制到 manila-share的/etc/ceph目录下123456789101112read -d &apos;&apos; MON_CAPS &lt;&lt; EOFallow r,allow command &quot;auth del&quot;,allow command &quot;auth caps&quot;,allow command &quot;auth get&quot;,allow command &quot;auth get-or-create&quot;EOFceph auth get-or-create client.manila -o manila.keyring \\mds &apos;allow *&apos; \\osd &apos;allow rw&apos; \\mon &quot;$MON_CAPS&quot; 编辑manila-share的/etc/ceph/ceph.conf 添加如下配置1234567...[client.manila]client mount uid = 0client mount gid = 0log file = /var/logs/ceph-client.manila.logadmin socket = /run/ceph/ceph-mon.172.18.23.17.asokkeyring = /etc/ceph/manila.keyring 允许快照支持1ceph mds set allow_new_snaps true --yes-i-really-mean-it 编辑manila-share的/etc/manila/manila.conf 添加如下配置12345678910111213141516[DEFAULT]...enabled_share_backends = generic, cephfsnfs1default_share_type = default_share_typeenabled_share_protocols = NFS,CIFS,CEPHFS[cephfsnfs1]driver_handles_share_servers = Falseshare_backend_name = CEPHFSNFS1share_driver = manila.share.drivers.cephfs.driver.CephFSDrivercephfs_protocol_helper_type = NFScephfs_conf_path = /etc/ceph/ceph.confcephfs_auth_id = manilacephfs_cluster_name = cephcephfs_enable_snapshots = Falsecephfs_ganesha_server_is_remote= Falsecephfs_ganesha_server_ip = 172.18.23.17 # 指明nfs-ganesha服务器位置 验证服务验证12345678910(manila-share)[root@pike-vm /]# manila service-list+----+------------------+--------------------+------+---------+-------+----------------------------+| Id | Binary | Host | Zone | Status | State | Updated_at |+----+------------------+--------------------+------+---------+-------+----------------------------+| 1 | manila-data | pike-vm | nova | enabled | up | 2017-11-15T10:14:37.000000 || 2 | manila-scheduler | pike-vm | nova | enabled | up | 2017-11-15T10:14:38.000000 || 3 | manila-share | pike-vm@generic | nova | enabled | up | 2017-11-15T10:14:40.000000 || 4 | manila-share | pike-vm@cephfsnfs1 | nova | enabled | up | 2017-11-15T10:14:40.000000 |+----+------------------+--------------------+------+---------+-------+----------------------------+ 创建manila实例123manila type-create cephfsnfstype falsemanila type-key cephfsnfstype set vendor_name=Ceph storage_protocol=NFSmanila create --share-type cephfsnfstype --name cephnfsshare1 nfs 1 查看共享路径123456(manila-share)[root@pike-vm /]# manila share-export-location-list cephnfsshare1+--------------------------------------+---------------------------------------------------------------------+-----------+| ID | Path | Preferred |+--------------------------------------+---------------------------------------------------------------------+-----------+| 18cf503a-9357-40e2-925a-53333031a3e6 | 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 | False |+--------------------------------------+---------------------------------------------------------------------+-----------+ 权限管理 1manila access-allow cephnfsshare1 ip 172.24.4.225 guest vm 挂载1mount -t nfs 172.18.23.17:/volumes/_nogroup/7f53c663-57c5-4740-977b-039e4df7fc86 /mnt/nfs/","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-16-Form验证","slug":"web-django-16-Form","date":"2017-07-20T12:26:37.000Z","updated":"2018-01-18T03:41:15.272Z","comments":true,"path":"2017/07/20/web-django-16-Form/","link":"","permalink":"http://www.digmyth.com/2017/07/20/web-django-16-Form/","excerpt":"","text":"目录 基本功能 基本使用 常用字段 常用插件 总结 这篇博客记录Django Form功能的学习，链接请参考Django Form武佩齐权威博客 基本功能 Form验证 生成html标签（保留上次提交的内容） 详细：12345678class TestForm(forms.Form): username = fields.CharField( # 静态字段 required=True, min_length=6, max_length=8, error_messages=&#123;&quot;required&quot;:&quot;用户名不能为空&quot;, &quot;min_length&quot;:&quot;最少6位&quot;&#125;， widget = widgets.TextInput(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # 插件 ) 基本使用模块导入-&gt;类定义-&gt;定义字段-&gt; 定义插件-&gt; 实例化-&gt; 传入前端-&gt;前端渲染12from django import formsfrom django.forms import fields,widgets views.py定义Form类，写出来常用插件用法1234567891011121314151617class TestForm(forms.Form): n1 = fields.CharField( widget = widgets.TextInput() ) n2 = fields.CharField( widget = widgets.PasswordInput() ) n3 = fields.CharField( widget=widgets.Textarea() ) n4 = fields.CharField( widget=widgets.Select(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]) ) 单选多选总结：1 把上面CharField改为ChoiceField就好了，并choices=[]提到前面来2 单选CharField就可以，多选一定记得用ChoicField,并且choices=[]提前 123456789# n5 = fields.CharField( # # 这里是有问题的，CharField只能是字符串，&quot;n5&quot;:[1,3]默认值是一个列表，后端没法接收数据。# widget=widgets.SelectMultiple(choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)])# )n5 = fields.ChoiceField( choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget=widgets.SelectMultiple()) 12345678910111213141516n6 = fields.IntegerField( widget=widgets.RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)]))n7 = fields.CharField( # 这里只会生成CheckboxInput标签 &lt;input type=&quot;checkbox&quot; name=&quot;n7&quot; required=&quot;&quot; id=&quot;id_n7&quot;&gt; widget=widgets.CheckboxInput())n8 = fields.ChoiceField( # 真正生成checkbox组写法 choices=[(1, &quot;北京&quot;), (2, &quot;上海&quot;), (3, &quot;成都&quot;)], widget = widgets.CheckboxSelectMultiple())n9 = fields.FileField( widget=widgets.FileInput()) 实例化Form类时传入默认值用于前端展示，主要学习文件上传的方法123456789101112131415161718192021222324252627def test(request): if request.method == &quot;GET&quot;: obj = TestForm( initial=&#123;&quot;n1&quot;:&quot;请输入&quot;,&quot;n2&quot;:&quot;xxx&quot;,&quot;n3&quot;:&quot;文本输入&quot;,&quot;n4&quot;:1,&quot;n5&quot;:[1,3], &quot;n6&quot;:2,&quot;n7&quot;:&quot;&quot;,&quot;n8&quot;:[2,3]&#125; ) return render(request, &quot;test.html&quot;,&#123;&quot;obj&quot;:obj&#125;) if request.method == &quot;POST&quot;: # 文件提交保存在request.FILES # obj = TestForm(data=request.POST,files=request.FILES) # if obj.is_valid(): # # obj.cleaned_data[&apos;n9&apos;] 这是上传的文件对象 # #obj.cleaned_data[&apos;n9&apos;].name 这是上传文件名 # files_obj = obj.cleaned_data[&apos;n9&apos;] # f = open(files_obj.name, &apos;wb&apos;) # for chunck in files_obj.chunks(): # f.write(chunck) # f.close() # else: # pass files_obj = request.FILES.get(&quot;n9&quot;) f = open(files_obj.name, &apos;wb&apos;) for chunck in files_obj.chunks(): f.write(chunck) f.close() return redirect(&apos;/test/&apos;) 提交文件需要enctype=&quot;multipart/form-data&quot;测试时忽略其它值用novalidatetest.html12345678910111213&lt;form action=&quot;/test/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; novalidate&gt; &#123;% csrf_token %&#125; &#123;&#123; obj.n1 &#125;&#125; &#123;&#123; obj.n2 &#125;&#125; &#123;&#123; obj.n3 &#125;&#125; &#123;&#123; obj.n4 &#125;&#125; &#123;&#123; obj.n5 &#125;&#125; &#123;&#123; obj.n6 &#125;&#125; &#123;&#123; obj.n7 &#125;&#125; &#123;&#123; obj.n8 &#125;&#125; &#123;&#123; obj.n9 &#125;&#125; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 常用字段123456CharField 字符串 EmailField 字符串（邮箱格式）IntegerField 字符串（整形格式）GenericIPAddressField 字符串（Ip格式）RegexField 字符串（正则自定义）FileField 文件对象 常用插件123456789101112TextInputPasswordInputTextareaFileInput()Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;，choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])SelectMultiple(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;) # choices=[(1,&quot;北京&quot;),(2,&quot;上海&quot;),(3,&quot;成都&quot;)]RadioSelect(choices=[(1,&quot;超级管理员&quot;),(2,&quot;普通用户&quot;)])CheckboxInput()CheckboxSelectMultiple() Form问题在前端使用选择标签渲染时，多表foreigh key跨表查询数据源无法实时更新。比如choices的选项可以从数据库中获取，但是由于是静态字段获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。 方法有很多，推荐123456789101112131415161718from django.forms import Formfrom django.forms import widgetsfrom django.forms import fieldsfrom django.core.validators import RegexValidator class MyForm(Form): user = fields.ChoiceField( # choices=((1, &apos;上海&apos;), (2, &apos;北京&apos;),), initial=2, widget=widgets.Select ) def __init__(self, *args, **kwargs): super(MyForm,self).__init__(*args, **kwargs) # self.fields[&apos;user&apos;].widget.choices = ((1, &apos;上海&apos;), (2, &apos;北京&apos;),) # 或 self.fields[&apos;user&apos;].widget.choices = models.Classes.objects.all().value_list(&apos;id&apos;,&apos;caption&apos;) 总结Django Form功能一是验证，功能二是用于生成html标签并且能保留上次提交的内容。注意Form验证读取数据时的数据源实时更新问题，一般我们自定义Form类的构造方法实现。 还有很多要学习的。。。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"基于CentOS 7的PXE装机","slug":"基于CentOS7的PXE装机","date":"2017-07-01T01:41:54.000Z","updated":"2021-01-27T08:35:19.030Z","comments":true,"path":"2017/07/01/基于CentOS7的PXE装机/","link":"","permalink":"http://www.digmyth.com/2017/07/01/基于CentOS7的PXE装机/","excerpt":"","text":"网上各种贴子各种飞总说不到重点，本人表示不喜欢。 基于Centos7PXE装机基本概念 pxe装机依赖几个服务： dhcp/tftp/fileserver dhcp: 为装机分配地址及指明tftp server服务器是谁，下载什么文件 tftp: 提供网络引导文件pxelinux.0及内核文件vmlinuz、initrd.img (具体文件： boot.msg initrd.img pxelinux.0 pxelinux.cfg splash.png vesamenu.c32 vmlinuz) fileserver: 提供安装树输出，一般指yum repository (yum 仓库或yum源) syslinux: 网络引导文件pxelinux.0由syslinux软件包提供 dhcp服务1234yum -y install dhcprpm -ql dhcp/etc/dhcp/dhcpd.conf # 主配置文件/var/lib/dhcpd/dhcpd.leases # 租约文件 12345678910111213141516[root@master ~]# cat /etc/dhcp/dhcpd.conf | grep -v ^# | grep -v ^$option domain-name &quot;digmyth.com&quot;;option domain-name-servers 114.114.114.114;default-lease-time 600;max-lease-time 7200;log-facility local7;subnet 172.16.10.0 netmask 255.255.255.0 &#123; range 172.16.10.20 172.16.10.30; option domain-name-servers 172.16.10.1; option domain-name &quot;digmyth.com&quot;; option routers 172.16.10.254; default-lease-time 600; max-lease-time 7200;&#125;filename &quot;pxelinux.0&quot;; # 定义网络引导文件名next-server 172.16.10.1; # 定义tftp server地址 启动服务123# systemctl start dhcpd[root@master ~]# netstat -unlp | grep 67udp 0 0 0.0.0.0:67 0.0.0.0:* 995/dhcpd syslinux提供引导文件1234准备网络引导文件pxelinux.0 相当于bootloader# yum -y install syslinux[root@master tftpboot]# ll /usr/share/syslinux/pxelinux.0 -rw-r--r--. 1 root root 26764 Nov 6 2016 /usr/share/syslinux/pxelinux.0 tftp server12345# yum -y install tftp tftp-server[root@master ~]# rpm -ql tftp-server/etc/xinetd.d/tftp # 启动文件/usr/sbin/in.tftpd/var/lib/tftpboot # 服务根目录 1234567891011121314# cat /etc/xinetd.d/tftpservice tftp&#123; socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /var/lib/tftpboot disable = no #改为no per_source = 11 cps = 100 2 flags = IPv4&#125; 启动tftp服务1234# cp /usr/share/syslinux/pxelinux.0 /var/lit/tftpboot# systemctl start tftp# tftp localhost&gt; get pxelinux.0 # 测试成功 准备内核及其它相关文件 此时pxe己经能够获得地址并下载pxelinux.0进行网络引导，接下来是下载内核文件vmlinuz、initrd.img继续完成装机。 这里我拿CentOS7.2为例：CentOS-7-x86_64-DVD-1511.iso 12345[root@master ~]# mount -o loop CentOS-7-x86_64-DVD-1511.iso /mntmount: /dev/loop0 is write-protected, mounting read-only[root@master pxeboot]# cd /mnt/images/pxeboot/[root@master pxeboot]# cp vmlinuz /var/lib/tftpboot/[root@master pxeboot]# cp initrd.img /var/lib/tftpboot/ 12345678910111213mkdir /var/lib/tftpboot/pxelinux.cfgcp /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg /default [root@master pxelinux.cfg]# cat default default vesamenu.c32#default linux # 这里是一个标签，对找后面相应的labeltimeout 600menu title CentOS 7 wxq # 此处定义titlelabel linux menu label ^Install CentOS 7 # 此处定义系统安装时显示版本 kernel vmlinuz append initrd=initrd.img method=http://172.16.10.1/pub/ ks=http://172.16.10.1/pxe/CentOS72.ks# 注意： 如果此处只定义method,那么装机过程将全手动。 此外还有一些额外文件12345[root@master ~]# ls /mnt/isolinux/boot.cat grub.conf isolinux.bin memtest TRANS.TBL vesamenu.c32boot.msg initrd.img isolinux.cfg splash.png upgrade.img vmlinuz[root@master ~]# ll /var/lib/tftpboot/boot.msg initrd.img pxelinux.0 splash.png vesamenu.c32 vmlinuz 定义安装树12345# yum -y install httpd# mkdir /var/www/html/pxe# mkdir /var/www/html/pub# mount --bind /mnt /var/www/html/pub/ # systemctl start httpd 定义ks文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172/pxe/CentOS72.ks[root@master pxe]# cat CentOS72.ks#version=DEVEL# System authorization informationinstall# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;auth --enableshadow --passalgo=sha512# Use CDROM installation media# Run the Setup Agent on first boot#firstboot --enable# System languagelang en_US.UTF-8url --url=http://172.16.10.1/pub/# Use graphical installgraphical#textselinux --disabledskipxreboot# Network information#network --bootproto=static --device=ens33 --gateway=172.16.10.254 --ip=172.16.10.30 --nameserver=114.114.114.114 --netmask=255.255.255.0 --onboot=on --ipv6=auto --activatenetwork --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=auto --activatenetwork --hostname=digmyth# Root password=123456rootpw --iscrypted $6$6ErC1johQ5LVAYwQ$cGGxb6Q6./SpvXCZs.K39d9LpV/IeFnspUT6mHmsVsARzToRCSsZ4fLxcOh0tYWpt38Yh6JoMzmSEkEtCtMlS/# System servicesservices --disabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc --nontp# System bootloader configurationclearpart --all --initlabelbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda# Partition clearing information#clearpart --drives=sda --initlabel#clearpart --none --initlabel# Disk partitioning information#ignoredisk --only-use=sda#part pv.735 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=19979#volgroup vg --pesize=4096 pv.735#logvol /boot --fstype=&quot;xfs&quot; --size=500 --name=boot --vgname=vg#logvol / --fstype=&quot;xfs&quot; --size=16000 --name=root --vgname=vg#logvol /data --fstype=&quot;xfs&quot; --size=3000 --name=data --vgname=vg#logvol swap --fstype=&quot;swap&quot; --grow --size=1%packages@^minimal@corekexec-toolsvimnet-toolssysstat%end%posttouch /root/wxq.txt%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end 上面的装机将进入图形界面手动分区安装 到此完结，可以结合cobbler实现多pxe环境并存。 cobbler 一些概念： distro发行版： 其实就是pxe所说的相应内核文件 profile: 提供pxeboot引导文件、KS文件、安装树（用现有iso镜像mirror/import方式） 是不是很完美 。。。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux java install","slug":"linux-java-install","date":"2017-06-21T03:42:54.000Z","updated":"2021-01-29T10:01:54.393Z","comments":true,"path":"2017/06/21/linux-java-install/","link":"","permalink":"http://www.digmyth.com/2017/06/21/linux-java-install/","excerpt":"","text":"download jdk1.812[root@nodeadm ]# mkdir /usr/local/java[root@nodeadm ]# tar xf jdk-8u181-linux-x64.tar.gz -C /usr/local/java uncompress1234567891011121314151617[root@nodeadm java]# pwd/usr/local/java[root@nodeadm java]# ll jdk1.8.0_181/total 25976drwxr-xr-x 2 root root 4096 Sep 21 08:54 bin-r--r--r-- 1 root root 3244 Sep 21 08:54 COPYRIGHTdrwxr-xr-x 3 root root 132 Sep 21 08:54 include-rw-r--r-- 1 root root 5207314 Sep 21 08:54 javafx-src.zipdrwxr-xr-x 5 root root 185 Sep 21 08:54 jredrwxr-xr-x 5 root root 245 Sep 21 08:54 lib-r--r--r-- 1 root root 40 Sep 21 08:54 LICENSEdrwxr-xr-x 4 root root 47 Sep 21 08:54 man-r--r--r-- 1 root root 159 Sep 21 08:54 README.html-rw-r--r-- 1 root root 424 Sep 21 08:54 release-rw-r--r-- 1 root root 21099920 Sep 21 08:54 src.zip-rw-r--r-- 1 root root 106782 Sep 21 08:54 THIRDPARTYLICENSEREADME-JAVAFX.txt-r--r--r-- 1 root root 154222 Sep 21 08:54 THIRDPARTYLICENSEREADME.txt set java_env123456[root@nodeadm java]# tail -n 5 /etc/profileexport JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=/usr/local/java/jdk1.8.0_181/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 仅作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"web-Django-11-模板渲染","slug":"web-django-11-模板渲染","date":"2017-06-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.984Z","comments":true,"path":"2017/06/20/web-django-11-模板渲染/","link":"","permalink":"http://www.digmyth.com/2017/06/20/web-django-11-模板渲染/","excerpt":"","text":"目录 基本方法 过滤器 标签 Django对template中html的渲染有着一套语法, 基本方法1234567891011return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 过滤器filter内置一些方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 1 add ： 给变量加上相应的值 # # 2 addslashes : 给变量中的引号前加上斜线 # # 3 capfirst : 首字母大写 # # 4 cut ： 从字符串中移除指定的字符 # # 5 date ： 格式化日期字符串 # # 6 default ： 如果值是False,就替换成设置的默认值，否则就是用本来的值 # # 7 default_if_none: 如果值是None，就替换成设置的默认值，否则就使用本来的值#value1=&quot;aBcDe&quot;&#123;&#123; value1|upper &#125;&#125;&lt;br&gt;#value2=5&#123;&#123; value2|add:3 &#125;&#125;&lt;br&gt;#value3=&apos;he llo wo r ld&apos;&#123;&#123; value3|cut:&apos; &apos; &#125;&#125;&lt;br&gt;#import datetime#value4=datetime.datetime.now()&#123;&#123; value4|date:&apos;Y-m-d&apos; &#125;&#125;&lt;br&gt;#value5=[]&#123;&#123; value5|default:&apos;空的&apos; &#125;&#125;&lt;br&gt;#value6=&apos;&lt;a href=&quot;#&quot;&gt;跳转&lt;/a&gt;&apos;&#123;&#123; value6 &#125;&#125;&#123;% autoescape off %&#125; &#123;&#123; value6 &#125;&#125;&#123;% endautoescape %&#125;&#123;&#123; value6|safe &#125;&#125;&lt;br&gt;&#123;&#123; value6|striptags &#125;&#125;#value7=&apos;1234&apos;&#123;&#123; value7|filesizeformat &#125;&#125;&lt;br&gt;&#123;&#123; value7|first &#125;&#125;&lt;br&gt;&#123;&#123; value7|length &#125;&#125;&lt;br&gt;&#123;&#123; value7|slice:&quot;:-1&quot; &#125;&#125;&lt;br&gt;#value8=&apos;http://www.baidu.com/?a=1&amp;b=2&apos;&#123;&#123; value8|urlencode &#125;&#125;&lt;br&gt; value9=&apos;hello I am pythoner&apos; 标签Django 提供的函数: simple_tag 可以有多个参数 filter 只能有2个参数，并且可以做条件语句的条件 自定义过滤器、自定义标签 形如for/if123&#123;% for item in todo_list %&#125; &lt;p&gt;&#123;&#123; forloop.counter &#125;&#125;: &#123;&#123; item &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125; 自定义标签当内置函数不满足需求时，可自定义filter/simple_tag 1 在Django app中创建目录名心须为templatetags的目录 2 在templatetags下随意定义.py 文件 如my_tag.py12345678910111213141516#!/usr/bin/env python3__author__ = &quot;wxq&quot;from django import templatefrom django.utils.safestring import mark_saferegister = template.Library()# register变量名是固定的，不可以改变@register.filter # 自定义过滤器def multip(x,y): return x*y@register.simple_tag # 自定义标签def multi_tag(x,y,z): return x*y*z 3 使用自定义simple_tag和filter的html文件中导入之前创建的 my_tag.py, 注意格式百分号.1&#123;% load &quot;my_tag&quot; %&#125; 4 使用定义的simple_tag和filter123456# html首行导入&#123;% load my_tag %&#125;&lt;body&gt; &lt;p&gt;&#123;&#123; 10 |add:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;&#123; n | multip:6 &#125;&#125;&lt;/p&gt; &lt;p&gt;&#123;% multi_tag 10 320 30 %&#125;&lt;/p&gt;&lt;/body&gt; 模板继承123456&#123;% block content %&#125;...&#123;% endblock %&#125;使用模板标签： &#123;% block %&#125; 。 所有的 &#123;% block %&#125; 标签告诉模板引擎，子模板可以重载这些部分。每个&#123;% block %&#125;标签所要做的是告诉模板引擎，该模板下的这一块内容将有可能被子模板覆盖。 总结：1 后端是字典如[“key”]取值，模板里都用.key2 后端是元组或列表如[0]取值，模板里都用.03 后端是函数或类方法用跨号()调用，模板里不加跨号，切记","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-02-前端html","slug":"web-02-前端html","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:47:19.192Z","comments":true,"path":"2017/06/15/web-02-前端html/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-02-前端html/","excerpt":"","text":"前言单选框提交时以{“gender”:”男”}形式, checked表示默认选中1234&lt;div&gt; &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;男&quot; checked=&quot;checked&quot; /&gt;男 &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;女&quot;/&gt;女&lt;/div&gt; 多选框提交时以{“hobby”:”[11,12.13]”}形式，checked表示默认选中123456&lt;div&gt; &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;11&quot; checked=&quot;checked&quot; /&gt;乒乓球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;12&quot;/&gt;监球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;13&quot;/&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;14&quot;/&gt;排球&lt;/div&gt; 下拉框multiple表示多选，没有multiple表示单选，selected表示默认选中1234567&lt;div&gt; &lt;select name=&quot;city&quot; id=&quot;&quot; multiple&gt; &lt;option value=&quot;北京&quot; selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;/div&gt; 提交type=”button” 不能提交表单数据，除非事件绑定type=”submit” 默认事件就是提交表单数据。12345&lt;form&gt; &lt;button&gt;提交&lt;/button&gt; # button标签在form里也会有事件，会提交 &lt;input type=&quot;submit&quot;&gt; # 有事件，也会提交 &lt;input type=&quot;button&quot; value=&quot;提交&quot;&gt; # 没有事件，不会提交&lt;/form&gt; 前端相关概念Jquery学习可参考基本概念： html很骨感. css就是装饰或样式. js 就是让其能动起来, js=javascript，Javascript是一门编程语言，我们用它来编写客户端浏览器脚本 jQuery是一个快速、简洁的JavaScript框架,一种javascript工具库，把我们常用的一些功能进行封装，方便我们调用，极大简化了Javascript编程，提高了开发效率。jQuery设计的宗旨就是“write Less，Do More” Bootstrap是一个开发框架，集成了很多现成的网页格式和网页布局，封装了很多CSS样式和JS代码 Javascipt跟jQuery的区别：jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。 position定位的学习12345position position: relative # 与absolute一起使用 position: absolute #随滚动条滚动而滚动 随滚动条滚动而滚动，并且一直往上找，直到找到一个relative后进行定位 position: fixed # 永远在窗口某位置 引用图标要想用图标有很多种方法方法一：当我们引入了bootstrap.css时，我们可以用它官网的图标https://v3.bootcss.com/components/ 图标名字即类名就可使用了 方法二：fontawesome也有很多图标需要下载font-awesome文件来引入 https://fontawesome.io/icons/ # 每一个图标可点击，点开后能看到引用方法。 方法三：这个也是图标库，方法见官网http://fontawesome.dashgame.com/#basic","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(二)","slug":"web-django-orm(二)","date":"2017-06-15T12:51:41.000Z","updated":"2018-01-18T03:44:48.308Z","comments":true,"path":"2017/06/15/web-django-orm(二)/","link":"","permalink":"http://www.digmyth.com/2017/06/15/web-django-orm(二)/","excerpt":"","text":"目录 一对多查询 多对多查询 查询优化 一对多查询1.1 创建测试数据models.py数据库模型1234567from django.db import modelsclass DePart(models.Model): title=models.CharField(max_length=32)class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(DePart) 创建测试数据12345678models.DePart.objects.create(title=&quot;IT&quot;)models.DePart.objects.create(title=&quot;咨询&quot;)models.DePart.objects.create(title=&quot;公关&quot;)models.UserInfo.objects.create(username=&quot;user1&quot;,pwd=123,dp_id=1)models.UserInfo.objects.create(username=&quot;user2&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user3&quot;,pwd=456,dp_id=1)models.UserInfo.objects.create(username=&quot;user4&quot;,pwd=456,dp_id=2) 注：12p=models.UserInfo.objects.create(username=&apos;wxq&apos;,pwd=123) # 返回对象本身print(p.username,p.pwd) 1.2 一对多正向查询all() 返回Queryset123v = models.DePart.objects.all()for row in v: print(row.id,row.title,row.userinfo_set.all()) values()返回Queryset1234# values()每一个字典代表一行数据# v = models.UserInfo.objects.values(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)# for row in v:# print(row[&apos;username&apos;],row[&apos;dp__title&apos;]) values_list()返回Queryset1234# values_list()每一个元组代表一行数据v = models.UserInfo.objects.values_list(&apos;username&apos;,&apos;dp_id&apos;,&apos;dp__title&apos;)for row in v: print(row[0],row[2]) 1.3 一对多反向查询all()1234567 v=models.DePart.objects.all() for row in v: print(row.id, row.title, row.userinfo_set.all())打印结果：1 IT &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;2 咨询 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;3 公关 &lt;QuerySet []&gt; values()123456789v = models.DePart.objects.values(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[&apos;title&apos;],row[&apos;userinfo__username&apos;],row[&apos;userinfo__dp_id&apos;])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None values_list()123456789v = models.DePart.objects.values_list(&apos;title&apos;,&apos;userinfo__username&apos;,&apos;userinfo__dp_id&apos;)for row in v: print(row[0],row[1],row[2])#打印结果IT user1 1IT user2 1IT user3 1咨询 user4 2公关 None None 1.4 总结正向查询用字段（这里字段是指外键字段） all: 字段+.跨表字段 values: 字段 + __跨表字段 values_list 字段+ __跨表字段反向查询用表名 all: 表名小写+_set values: 表名小写 + __跨表字段 values_list 表名小写+ __跨表字段 总结一句话就是： 正向查询用字段，反向查询用表名 多对多查询2.1 多对多自建表当我们自己建第三张表时，第三张表列数没有限制，更加灵活，更能满足复杂需求1234567表模型class UserGroup(models.Model): caption= models.CharField(max_length=32)class U2G(models.Model): ui = models.ForeignKey(UserInfo) ug = models.ForeignKey(UserGroup) 12345678910111213创建测试数据models.U2G.objects.create(ui_id=1,ug_id=1)models.U2G.objects.create(ui_id=2,ug_id=1)models.U2G.objects.create(ui_id=3,ug_id=2)models.U2G.objects.create(ui_id=4,ug_id=2)v=models.U2G.objects.all()for row in v: print(row.ug.caption,row.ui.username)# 打印结果A组 user1A组 user2B组 user3B组 user4 2.2 多对多非自建多对多关系Django ManyToMany帮我们建第三张表时，我们不能对第三张直接操作，并且第三张只有三列（2张表的分别ForeighKey列，自增ID列）。只能通过如下面的ManyToMany字段间接操作12345678910111213#表模型class UserInfo(models.Model): username=models.CharField(max_length=32) pwd=models.CharField(max_length=32) dp = models.ForeignKey(&quot;DePart&quot;)class UserGroup(models.Model): caption= models.CharField(max_length=32) m = models.ManyToManyField(&quot;UserInfo&quot;)&apos;&apos;&apos;第三张表只有三列id userinfo_id usergroup_id&apos;&apos;&apos;&apos; 添加几个组做如下增删及更新数据操作123456obj = models.UserGroup.objects.filter(id=2).first() #id为2的组是B组print(obj.id,obj.caption,obj.m)obj.m.add(*[1,2]) #ID为1，2的用户加入B组# obj.m.remove(*[1,]) # 删除B组中用户id为1的记录obj.m.clear() # 清除组id为2的所有记录obj.m.set([1,]) # 不管id为2的组有几个用户都清空后把用户id为1的加入B组 2.3 多对多查询学习多对多查询注意：first/get返回对象，filter/all/values/values_list返回QuerySet1234obj=models.UserGroup.objects.filter(id=2).first() # 得到组对象v=obj.m.all() # obj.m表示UserInfo表for row in v: print(row.username, row.dp.title) 123obj=models.UserGroup.objects.filter(id=2).first() # 得到组ID为2的对象v=obj.m.filter(dp__title=&quot;IT&quot;).first() # UserInfo表中查部门为IT的记录print(v.username) # 打印符合条件的username 优化select_related优化12345user_list=models.UserInfo.objects.all() # 这里是1次sql请求for row in user_list: #如果有10条数据,会有10次sql请求 print(row.username,row.dp.title) # 每一次row.dp.title都会跨表查询那么返回结果经历了11次sql请求,做select_related优化后只有2次sql请求,其中1次是跨表请求models.UserInfo.objects.all().select_related(&quot;ForeighKeyname&quot;) #优化方法一 prefetch_related优化,推荐用优化方法二123456789models.UserInfo.objects.all().prefetch_related(&quot;ForeighKeyname&quot;) # 优化方法二prefetch_related可以分解为models.UserInfo.objects.all()一次单表查询取到了ForeighKeyname_id=[1,2,3,4,5] 然后DJango会发起第2次单表查询，models.DePart.objects.filter(id__in = [1,2,3,4,5]) 2次单表查询明显轻量了。#only:只取相应字段，否则性能下降# defer:不取相应字段，否则性能下降models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;) # 只取哪几列models.UserInfo.objects.all().defer(&apos;id&apos;,&apos;name&apos;) # 不取哪几列 还有更多","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"linux_iptables应用","slug":"linux-iptables应用","date":"2017-06-15T01:42:54.000Z","updated":"2018-04-23T06:57:19.754Z","comments":true,"path":"2017/06/15/linux-iptables应用/","link":"","permalink":"http://www.digmyth.com/2017/06/15/linux-iptables应用/","excerpt":"","text":"iptables 规则应用总结防火墙端口重定向规则1iptables -t nat -I PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to 8080 反向代理防火墙规则12iptables -I INPUT -d 123.125.168.130 -i eth0 -p tcp --dport 80 -j ACCEPTiptables -I INPUT -s 10.10.10.0/24 -i eth1 -p tcp --sport 9999 -j ACCEPT 此包为input状态检测可省略12iptables -I OUTPUT -p tcp -o eth1 -s 10.10.10.1 -d 10.10.10.10 --dport 9999 -j ACCEPTiptables -I OUTPUT -p tcp -o eth0 -s 123.125.168.130 --sport 80 -j ACCEPT 目标地址转换：123iptables -t nat -I PREROUTING -i eth0 -d 123.125.168.130 -p tcp --dport 80 -j DNAT --to 10.10.10.10:9999iptables -A FORWARD -d 10.10.10.10 -p tcp --dport 9999 -j ACCEPTiptables -A FORWARD -s 10.10.10.10 -p tcp --sport 9999 -j ACCEPT 如果10.10.10.10机器默认网关不是10.10.10.1或没有指网关,则网关防火墙需如下:有点奇怪的规则1iptables -t nat -I POSTROUTING -d 10.10.10.10 -p tcp --dport 9999 -j SNAT --to 10.10.10.1 源地址转换：12iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j SNAT --to 123.125.168.130iptables -t nat -I POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE 此条开销较大，与上条可二选一12iptables -I FORWARD -s 10.10.10.0/24 -j ACCEPT 注：forward不指网卡，要指也是内网卡iptables -I FORWARD -d 10.10.10.0/24 -j ACCEPT","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"git 利器","slug":"git-01","date":"2017-06-15T01:42:54.000Z","updated":"2018-08-25T03:35:15.638Z","comments":true,"path":"2017/06/15/git-01/","link":"","permalink":"http://www.digmyth.com/2017/06/15/git-01/","excerpt":"","text":"目录 git建版本库 git别名设置 git基本配置 git基本命令 git分支管理 git创建版本库12git init # 把当前目录变成git可管理的仓库生成的.git目录是用来跟踪管理版本库的,称为git的一个版本库 git别名设置1234为命令设置别名$ git config --global alias.co checkout$ git config --global alias.ci commit$ git config --global alias.br branch git配置123每台机器自报家门$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 12优先级从高到低是.git/config--&gt; --global --&gt; system 12345全局生效: 配置保存在/etc/gitconfig[root@wxq-srv git_work]# git config --system user.name &quot;wxq&quot;[root@wxq-srv git_work]# cat /etc/gitconfig [user] name = wxq 12345678当前用户所有仓库生效：配置保存在~/.gitconfig[root@wxq-srv git_work]# cat /root/.gitconfig [user] name = wxq email = you@example.com[root@wxq-srv git_work]# git config --global user.name &quot;wxq&quot;[root@wxq-srv git_work]# git config --global user.email &quot;you@example.com&quot; 12345678910只对某仓库生效：配置保存在reponame/.git/config[root@wxq-srv git_work]# git config user.name &quot;wxq1&quot;[root@wxq-srv git_work]# cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true[user] name = wxq1 基本命令1234567git log # 每一次提交的记录git reset --hard HEAD^ #HEAD表示当前版本，HEAD^^表示上上个版本，依次类推，上100个版本是HEAD~100git reset --hard $commit_id # 回到指定版本git reflog # 只要改变都会在这里记录，用于回到未来的某个版本。git add index.html # 添加更改至state暂存 区git reset HEAD index.html # unstage 退出暂存区git diff HEAD -- readme.txt # 查看当前工作区和版本库有什么不同 放弃修改除了版本回退外，只要未commit之前都可以放弃工作区所做的修改。如果有add 动作，需要先从暂存区回退到工作区git reset HEAD index.html如果没有add动作，可直接放弃修改git checkout -- index.txt或者可以这么理解git checkout -- index.txt 都会从暂存区或版本库(优先从暂存区)恢复到工作区. 分支管理123456查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt; 待续","categories":[{"name":"Git","slug":"Git","permalink":"http://www.digmyth.com/categories/Git/"}],"tags":[]},{"title":"Mysql sysbench 压测","slug":"mysql-sysbench","date":"2017-06-10T01:41:54.000Z","updated":"2017-11-10T09:01:54.314Z","comments":true,"path":"2017/06/10/mysql-sysbench/","link":"","permalink":"http://www.digmyth.com/2017/06/10/mysql-sysbench/","excerpt":"","text":"目录 工具安装 执行压测 针对优化 示例结果 数据库指标对于mysql压力测试，大多用sysbench/tpcc-mysql工具。主要针对数据库OLTP（在线事务处理）指标。 12qps : query per second 查询量tps: transaction per second 事务量 工具安装123yum install sysbench -y[root@mysql sysbench]# sysbench --versionsysbench 1.0.9 在sysbench压测时会调用内置lua脚本, 这些脚本为于/etc/share/sysbench目录下12345678910111213141516/usr/share/sysbench[root@mysql sysbench]# lltotal 64-rwxr-xr-x 1 root root 1452 Sep 18 12:29 bulk_insert.lua-rw-r--r-- 1 root root 13762 Sep 18 12:29 oltp_common.lua-rwxr-xr-x 1 root root 1290 Sep 18 12:29 oltp_delete.lua-rwxr-xr-x 1 root root 2018 Sep 18 12:29 oltp_insert.lua-rwxr-xr-x 1 root root 1265 Sep 18 12:29 oltp_point_select.lua-rwxr-xr-x 1 root root 1649 Sep 18 12:29 oltp_read_only.lua-rwxr-xr-x 1 root root 1824 Sep 18 12:29 oltp_read_write.lua-rwxr-xr-x 1 root root 1118 Sep 18 12:29 oltp_update_index.lua-rwxr-xr-x 1 root root 1127 Sep 18 12:29 oltp_update_non_index.lua-rwxr-xr-x 1 root root 1440 Sep 18 12:29 oltp_write_only.lua-rwxr-xr-x 1 root root 1919 Sep 18 12:29 select_random_points.lua-rwxr-xr-x 1 root root 2118 Sep 18 12:29 select_random_ranges.luadrwxr-xr-x 4 root root 4096 Nov 10 02:57 tests 执行压测方便压测时找到内置lua脚本，以下命令都在/etc/share/sysbench目录下执行 在远端连接数据库时，授权1grant all on test.* to root@&apos;%&apos; identified by &apos;123&apos;; 生成压测数据12cd /usr/share/sysbench/sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 prepare 执行压测1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 run 清理压测数据1sysbench oltp_read_write.lua --mysql-host=127.0.0.1 --mysql-port=3306 --db-driver=mysql --mysql-db=test --mysql-user=root --mysql-password=MyNewPass4! --table_size=50000 --tables=10 --threads=300 --time=60 --report-interval=10 cleanup 优化数据库在压测过程中可能出现一些错误，连接数不够，max_prepared_stmt_count不够，可优化/etc/my.cnf 做适当调整123456789101112max_connections = 4096max_prepared_stmt_count=100000 # 默认16384压测时需调大query_cache_type = 1query_cache_size = 10Mwsrep_slave_threads = 4#wsrep_notify_cmd = /usr/local/bin/wsrep-notify.shmax_connections = 10000key_buffer_size = 64Mmax_heap_table_size = 64Mtmp_table_size = 64Minnodb_buffer_pool_size = 8192M 示例结果1234567891011121314151617181920212223242526272829303132333435Initializing worker threads...Threads started![ 10s ] thds: 300 tps: 198.33 qps: 5741.67 (r/w/o: 4335.25/830.02/576.41) lat (ms,95%): 3706.08 err/s: 81.77 reconn/s: 0.00[ 20s ] thds: 300 tps: 222.61 qps: 6095.90 (r/w/o: 4553.90/924.16/617.84) lat (ms,95%): 4203.93 err/s: 102.31 reconn/s: 0.00[ 30s ] thds: 300 tps: 221.01 qps: 5899.58 (r/w/o: 4399.84/899.83/599.92) lat (ms,95%): 4055.23 err/s: 93.20 reconn/s: 0.00[ 40s ] thds: 300 tps: 198.06 qps: 5400.91 (r/w/o: 4032.79/827.03/541.09) lat (ms,95%): 4683.57 err/s: 89.98 reconn/s: 0.00[ 50s ] thds: 300 tps: 186.14 qps: 5162.76 (r/w/o: 3866.39/783.36/513.00) lat (ms,95%): 5312.73 err/s: 90.12 reconn/s: 0.00[ 60s ] thds: 300 tps: 158.49 qps: 4433.94 (r/w/o: 3325.93/670.45/437.56) lat (ms,95%): 5507.54 err/s: 78.99 reconn/s: 0.00SQL statistics: queries performed: read: 246736 write: 50340 other: 33317 total: 330393 transactions: 12147 (195.34 per sec.) queries: 330393 (5313.17 per sec.) ignored errors: 5477 (88.08 per sec.) reconnects: 0 (0.00 per sec.)General statistics: total time: 62.1815s total number of events: 12147Latency (ms): min: 16.10 avg: 1503.84 max: 14267.54 95th percentile: 4683.57 sum: 18267086.41Threads fairness: events (avg/stddev): 40.4900/6.29 execution time (avg/stddev): 60.8903/0.59","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"KVM introduction","slug":"KVM-introduction","date":"2017-06-08T01:41:54.000Z","updated":"2018-03-30T06:58:49.290Z","comments":true,"path":"2017/06/08/KVM-introduction/","link":"","permalink":"http://www.digmyth.com/2017/06/08/KVM-introduction/","excerpt":"","text":"1. kvm简介kvm as a kernel based virtual machine,现如今较为流行的虚拟化技术，openstack后端就是kvm虚拟化。 2. 模拟与虚拟 模拟： 完全由软件模拟：ring0 ring1 ring2 ring3都需要软件模拟， 底层硬件架构与虚拟机硬件架构可以不同 虚拟： 底层硬件架构与虚机硬件架构必须相同，如cpu平台架构都为x86_64 3.虚拟化分类虚拟化分类无非2种方式： 一种：直接运行于硬件平台–&gt; hypervisor: dom0 如xen ,esxi,这里xen不好理解，装xen不也要安装操作系统后安装xen4软件包么？为什么它也说直接运行在硬件平台，是因为安装完xen4后，切换了xen4的内核来启动，并非原有操作系统内核. 二种：先有host系统，再安装虚拟软件（如vmware station）或统称virtual machine mintor(虚拟机监视器) 如kvm, 虚拟机的cpu,内存通过kvm模块来调用，但IO不行，虚拟机的IO是通过host系统的qemu程序模拟提供的，再由host系统的内核提供IO 那么什么是半虚拟化？ 半虚拟化是要修改内核的，要让虚拟机知道自己运行在虚拟机环境下的，知道的结果是当虚拟机发起cpu指令时不能直接操作硬件，需要发起hypercall调用. 那么什么是完全虚拟化？ 1) 早期BT技术实现加速，binary translation 边运行边翻译,虚机内核就是运行ring1上专用于翻译加速 2) hvm: 硬件辅助虚拟化，需要cpu硬件支持，就是cpu多了ring-1，这样虚拟机直接运行在ring0上，宿主机内核运行在ring-1,ring-1捕获ring0的特权指令直接运行，性能可想而知提高了","categories":[{"name":"Openstack","slug":"Openstack","permalink":"http://www.digmyth.com/categories/Openstack/"}],"tags":[]},{"title":"cephfs-Ganesha","slug":"cephfs-Ganesha","date":"2017-06-05T01:41:54.000Z","updated":"2017-11-14T09:43:43.912Z","comments":true,"path":"2017/06/05/cephfs-Ganesha/","link":"","permalink":"http://www.digmyth.com/2017/06/05/cephfs-Ganesha/","excerpt":"","text":"nfs-ganesha简介因工作需要调研了cephfs 导为nfs,目前有两种方法： 方法一：内核mount挂载或 ceph-fuse 挂载至NFS server，如/data再正常搭建NFS-server即可。 方法二 : 借用nfs-ganesha协议转换间接存储在cephfs集群中。 nfs-ganesha不仅可以导 cephfs,也可以导RGW.ceph RGW理解: 相当于协议转换层，把符合S3和swift协议的 restFul API 请求转换为rados存储在ceph对象存储中. 换一种说法： Ceph 导出为 NFS，一种通过 RGW，一种通过 CephFS，通过 FSAL 模块 连接到 RGW 或者 CephFS FSAL_RGW 调用 librgw2 将 NFS 协议转义为 S3 协议再通过 RGW 存入到 Ceph 中. FSAL_CEPH 调用 libcephfs1 将 NFS 转义为 Cephfs 协议再存入到 Ceph 中. FSAL： File System Abstraction Layer 文件系统抽像层 题外话，openstack项目manila后端存储驱动，其中一种就是Ganesha Driver12345## manila 4驱动Default Driver: 使用 RBD 作为 Manila Service VM 的后端，在 VM 上启动 NFS 实例提供服务Ganesha Driver: 使用 Ganesha 将 CephFS 重新 Reexport 出去Native CephFS Driver: 在 Guest VM 上直接使用原生 CephFS Module 访问VirtFS Driver: 将 CephFS 挂载在 Host 端，VM 通过 VirtFS 访问 nfs-ganesha安装在CentOS7系统中有nfs-ganesha rpm软件包，但没有ceph相关模块，所以我这里是编译安装，把FSAL_RGW 模块/FSAL_CEPH 模块编译进去。 1git clone -b V2.4-stable https://github.com/nfs-ganesha/nfs-ganesha.git --recursive 由于ceph-jewel版本才有libcephfs1-devel软件包，所以这里ganesha客户端 ceph用 jewel版本，服务器ceph版本Luminousceph-jewel源123456789[root@ ganesha]# cat /etc/yum.repos.d/ceph.repo [ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0 软件安装12345yum install gcc git cmake autoconf libtool bison flex doxygen openssl-devel gcc-c++ libuuid-devel nfs-utils -y# 如果要生成 FSAL_RGW 模块，需要安装 librgw2-develyum install librgw2-devel -y # 如果要生成 FSAL_CEPH 模块，需要安装 libcephfs1-develyum install libcephfs1-devel -y 如果需要生成 FSAL_RGW 模块，则在编译选项中添加： -DUSE_FSAL_RGW=ON 如果需要生成 FSAL_CEPH 模块，则在编译选项中添加： -DUSE_FSAL_CEPH=ON 12345mkdir /opt/build/cd /opt/build/cmake -DUSE_FSAL_CEPH=ON /opt/nfs-ganesha/src/makemake install 在cmake输出中确保有12345-- USE_FSAL_CEPH = ON-- USE_FSAL_CEPH_MKNOD = OFF-- USE_FSAL_CEPH_SETLK = OFF-- USE_FSAL_CEPH_LL_LOOKUP_ROOT = ON-- USE_FSAL_RGW = ON 确保： – USE_FSAL_CEPH 为 ON,以及 – USE_FSAL_RGW 为 ON。 如果过程中出错，请删除/tmp/build/* 及/tmp/build/CMakeCache.txt重新编译 make install成功输出中有:12&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/rgw.conf&gt; -- Up-to-date: /usr/share/doc/ganesha/config_samples/ceph.conf 这两个文件就是配置将 RGW 和 CephFS 配置为 nfs-ganesha的配置模板。 nfs-ganesha 配置123456789101112131415161718192021222324252627282930313233cat /etc/ganesha/ganesha.confEXPORT&#123; Export_ID=1; Path = /; Pseudo = /cephfs; Access_Type = RW; NFS_Protocols = 4; Transport_Protocols = TCP; Squash = No_Root_Squash; FSAL &#123; Name = CEPH; &#125;&#125;EXPORT&#123; Export_ID=2; Path = /; Pseudo = /rgw; Access_Type = RW; Squash = No_root_squash; NFS_Protocols = 4; Transport_Protocols = TCP; FSAL &#123; Name = RGW; User_Id = &quot;admin&quot;; Access_Key_Id =&quot;RDS4VW60OA48ZW1HSU61&quot;; Secret_Access_Key = &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;; &#125;&#125;RGW &#123; ceph_conf = &quot;/etc/ceph/ceph.conf&quot;;&#125; 其中Access_Key_Id Secret_Access_Key部份在ceph-rgw中读取123456789101112131415 (ceph-mon)[root@pike-vm /]# radosgw-admin user info --uid=admin&#123; &quot;user_id&quot;: &quot;admin&quot;, &quot;display_name&quot;: &quot;admin&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;admin&quot;, &quot;access_key&quot;: &quot;RDS4VW60OA48ZW1HSU61&quot;, &quot;secret_key&quot;: &quot;zLmFRu3mmzmsosNk07FPKpMZAARCSvCc3UjToP6Y&quot;... 启动nfs-ganesha1ganesha.nfsd -L /var/log/ganesha.log 挂载使用在客户端进行挂载使用：1 安装ceph-common ceph-fuse libcephfs1-devel librgw2-devel2 拷贝ceph.conf配置文件及keyring文件至/etc/ceph3 挂载：mount -t nfs4 {$ganesha-server-ip}:/ /mnt如果出现I/O error,请ceph-fuse -m 172.18.23.17:6789 /mnt 挂载一遍，就是这么神奇，不要问我为什么。。。12[root@-3 mnt]# lsls: reading directory .: Remote I/O error 成功123456[root@-3 cephfs]# ll /mnt/total 1drwxrwxrwx 1 root root 33 Nov 14 08:31 cephfs[root@-3 cephfs]# echo &quot;99cloud new data...&quot; &gt; cephfs.txt [root@-3 cephfs]# cat cephfs.txt cephfs data... 在cephfs集群中我们可以看到客户端写入的数据12345678[root@-3 ~]# ceph-fuse -m 172.18.23.17:6789 /data/ceph-fuse[4579]: starting ceph clientceph-fuse[4579]: starting fuse[root@-3 ~]# cd /data/[root@-3 data]# lscephfs.txt[root@3 data]# cat cephfs.txt cephfs data...","categories":[{"name":"Ceph","slug":"Ceph","permalink":"http://www.digmyth.com/categories/Ceph/"}],"tags":[]},{"title":"web-Django-02-分页示例","slug":"web-django-03-分页示例","date":"2017-05-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/05/20/web-django-03-分页示例/","link":"","permalink":"http://www.digmyth.com/2017/05/20/web-django-03-分页示例/","excerpt":"","text":"1 django 分页功能app01/views.py Paginator模块的使用123456789101112131415161718192021222324def users(request): from django.core.paginator import Paginator,EmptyPage,PageNotAnInteger user_list = models.UserInfo.objects.all() paginator = Paginator(user_list,10) # paginator.per_page 每页显示条目数量 # paginator.count 数据总个数 # paginator.num_pages 总页数 # paginator.page_range 总页数的索引范围，如(1,10),(1,20) current_page = request.GET.get(&apos;p&apos;) try: page_obj=paginator.page(current_page) except EmptyPage as e: page_obj = paginator.page(1) except PageNotAnInteger as e: page_obj = paginator.page(1) # page_obj.has_next() 是否有下一页 # page_obj.next_page_number() 下一页页码 # page_obj.has_previous() 是否有上一页 # page_obj.previous_page_number() 上一页页码 # page_obj.object_list 分页之后的数据列表 # page_obj.number 当前页 # page_obj.paginator paginator对象 return render(request,&quot;users.html&quot;, &#123;&apos;page_obj&apos;:page_obj&#125;) templates/users.html12345678910111213141516171819&#123;% if page_obj.has_previous %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;上一页&lt;/a&gt;&#123;% endif %&#125;&#123;% for i in page_obj.paginator.page_range %&#125; &lt;a href=&quot;/users?p=&#123;&#123; i &#125;&#125;&quot;&gt;&#123;&#123; i &#125;&#125;&lt;/a&gt;&#123;% endfor %&#125;&#123;% if page_obj.has_next %&#125; &lt;a href=&quot;/users?p=&#123;&#123; page_obj.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;&#123;% else %&#125; &lt;a href=&quot;#&quot;&gt;下一页&lt;/a&gt;&#123;% endif %&#125;&lt;span&gt; &lt;a&gt;&#123;&#123; page_obj.number &#125;&#125;/&#123;&#123; page_obj.paginator.num_pages &#125;&#125;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-加密解密加签验签","slug":"python加密解密加签验签","date":"2017-05-15T12:51:41.000Z","updated":"2018-04-23T06:59:41.630Z","comments":true,"path":"2017/05/15/python加密解密加签验签/","link":"","permalink":"http://www.digmyth.com/2017/05/15/python加密解密加签验签/","excerpt":"","text":"python加密解密，加签验签(转)在与第三方服务对接时，加密与解密，加签与验签是这个过程中的关键一步 一般情况下，对接服务中会有两对公私钥。使用对方公钥进行加密，使用自己私钥进行加签。传回来的数据，使用自己的私钥解密，使用对方的公钥验签。 12345678import base64from Crypto.PublicKey import RSAfrom Crypto.Hash import SHAfrom Crypto.Cipher import PKCS1_v1_5from Crypto.Signature import PKCS1_v1_5 as SIGN_PKCSPUB_KEY = RSA.importKey(open(&apos;rsa_public_key.pem&apos;,&apos;r&apos;).read())PRI_KEY = RSA.importKey(open(&apos;rsa_private_key.pem&apos;,&apos;r&apos;).read()) 加密 12345678910def split_data(l, n): for i in range(0, len(l), n): yield l[i: i+n] def encrypt(params): raw = params.encode(&apos;utf-8&apos;) cipher = PKCS1_v1_5.new(PUB_KEY) ＃ 加密超长字节117个字节一加密 content = b&apos;&apos;.join([cipher.encrypt(x) for x in chunks(raw, 117)]) return base64.b64encode(content) 解密123456def decrypt(data): raw = data.encode(&apos;utf-8&apos;) decrypt = PKCS1_v1_5.new(PRI_KEY).decrypt # 解密超长字符128一解密 content = b&apos;&apos;.join(decrypt(x, object()) for x in chunks(raw, 128)) return content.decode() 加签1234def signer(data): signstr = data.encode(&apos;utf-8&apos;) sign = SIGN_PKCS.new(PRI_KEY).sign(SHA.new(signstr)) return base64.b64encode(sign) 验签1234def verify_sign(unsign, raw_sign): # unsign: 签名 # raw_sign: 待验证签名 assert SIGN_PKCS.new(PUB_KEY).verify(SHA.new(unsign.encode(&apos;utf-8&apos;)), raw_sign)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"linux_Suse init","slug":"linux-SUSE-init","date":"2017-05-15T01:42:54.000Z","updated":"2018-09-04T13:15:50.755Z","comments":true,"path":"2017/05/15/linux-SUSE-init/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-SUSE-init/","excerpt":"The article has been encrypted, please enter your password to view.","text":"同意条款 ","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"linux_7.X内核升级","slug":"linux-7.x内核升级","date":"2017-05-15T01:42:54.000Z","updated":"2018-08-04T08:38:33.350Z","comments":true,"path":"2017/05/15/linux-7.x内核升级/","link":"","permalink":"http://www.digmyth.com/2017/05/15/linux-7.x内核升级/","excerpt":"","text":"查看版本12# uname -r3.10.0-693.el7.x86_64 升级内核需要先导入elrepo的key，然后安装elrepo的yum源12345678910111213141516171819202122232425262728293031# rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmRetrieving http://elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmPreparing... ################################# [100%]Updating / installing... 1:elrepo-release-7.0-3.el7.elrepo ################################# [100%]# yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list availableLoaded plugins: fastestmirrorelrepo-kernel | 2.9 kB 00:00:00 elrepo-kernel/primary_db | 1.8 MB 00:00:01 Determining fastest mirrors * elrepo-kernel: mirrors.neusoft.edu.cnAvailable Packageskernel-lt.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-doc.noarch 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-headers.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-lt-tools-libs-devel.x86_64 4.4.145-1.el7.elrepo elrepo-kernelkernel-ml.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-doc.noarch 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-headers.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs.x86_64 4.17.11-1.el7.elrepo elrepo-kernelkernel-ml-tools-libs-devel.x86_64 4.17.11-1.el7.elrepo elrepo-kernelperf.x86_64 4.17.11-1.el7.elrepo elrepo-kernelpython-perf.x86_64 4.17.11-1.el7.elrepo elrepo-kernel 安装你需要的版本12# yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 查看内核是否安装完成123456# rpm -qa |grep kernelkernel-tools-3.10.0-693.el7.x86_64kernel-ml-4.17.11-1.el7.elrepo.x86_64kernel-3.10.0-693.el7.x86_64kernel-ml-devel-4.17.11-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-693.el7.x86_64 查看并修改grub的启动顺序1234# awk -F\\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfgCentOS Linux (4.17.11-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d14171e79a9e4b5da1a69e7348d0f45f) 7 (Core) 注： 最新内核为第一个，故启动项为012345678# vim /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=saved(这里改成0)GRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 生成grub重新创建内核配置并重启12345678910# grub2-mkconfig -o /boot/grub2/grub.cfgGenerating grub configuration file ...Found linux image: /boot/vmlinuz-4.17.11-1.el7.elrepo.x86_64Found initrd image: /boot/initramfs-4.17.11-1.el7.elrepo.x86_64.imgFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.imgFound linux image: /boot/vmlinuz-0-rescue-d14171e79a9e4b5da1a69e7348d0f45fFound initrd image: /boot/initramfs-0-rescue-d14171e79a9e4b5da1a69e7348d0f45f.imgdone[root@localhost ~]# reboot 确认内核版本12# uname -r4.17.11-1.el7.elrepo.x86_64","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.digmyth.com/categories/Linux/"}],"tags":[]},{"title":"Python 操作mysql","slug":"mysql-pyton操作mysql","date":"2017-04-29T01:41:54.000Z","updated":"2017-11-19T09:00:13.663Z","comments":true,"path":"2017/04/29/mysql-pyton操作mysql/","link":"","permalink":"http://www.digmyth.com/2017/04/29/mysql-pyton操作mysql/","excerpt":"","text":"这里记录下python操作mysql的知识点，详细参见链接 模块安装在python2中使用模块MySQLdb在python3中使用模块pymysql1pip3 install pymysql 基本使用基本操作过程就是 创建连接 创建游标 发送语句 获取数据 事务提交 关闭游标 关闭连接1234567891011121314151617181920212223import pymysql# 创建连接conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;db1&apos;)# 创建游标cursor = conn.cursor()# 发送语句cursor.execute(sqlstatement)cursor.executemany(sqlstatement)# 获取数据cursor.fetchone()cursor.fetchmany(3)cursor.fetchall() # 事务提交，不然无法保存新建或者修改的数据conn.commit() # 关闭游标cursor.close()# 关闭连接conn.close() 基本知识点获取新创建数据自增ID1234567891011import pymysql conn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)cursor = conn.cursor()cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;1.1.1.11&quot;,1),(&quot;1.1.1.11&quot;,2)])conn.commit()cursor.close()conn.close() # 获取最新自增IDnew_id = cursor.lastrowid 游标操作1234在fetch数据时按照顺序进行，可以使用cursor.scroll(num,mode)来移动游标位置，如：cursor.scroll(1,mode=&apos;relative&apos;) # 相对当前位置移动cursor.scroll(2,mode=&apos;absolute&apos;) # 相对绝对位置移动 fetch 数据类型关于默认获取的数据是元组类型，如果想要获取字典类型的数据，如下pymysql.cursors.DictCursor：1234567import pymysqlconn = pymysql.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, passwd=&apos;123&apos;, db=&apos;t1&apos;)# 游标设置为字典类型cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)r = cursor.execute(&quot;call p1()&quot;) result = cursor.fetchone() 1234567891011# 执行SQL，并返回受影响行数effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos;&quot;)# 执行SQL，并返回受影响行数#effect_row = cursor.execute(&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot;, (1,)) 这里值得注意的是不能把上面语句替换成下面语句，否则会被sql注入statement=&quot;update hosts set host = &apos;172.16.0.1&apos; where nid &gt; %s&quot; % 1effect_row = cursor.execute(statement)# 执行SQL，并返回受影响行数#effect_row = cursor.executemany(&quot;insert into hosts(host,color_id)values(%s,%s)&quot;, [(&quot;172.16.0.1&quot;,1),(&quot;1.1.1.11&quot;,2)]) SQLAlchemySQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果1pip3 install SQLAlchemy SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：12345678910111213MySQL-Python mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; pymysql mysql+pymysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;dbname&gt;[?&lt;options&gt;] MySQL-Connector mysql+mysqlconnector://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt; cx_Oracle oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...] 更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"web-Django-04-路由分发与别名.md","slug":"web-django-04-路由分发与别名","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.980Z","comments":true,"path":"2017/04/20/web-django-04-路由分发与别名/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-04-路由分发与别名/","excerpt":"","text":"目录 别名设置 namespace设置 reverse include本质 Django URLS 路由分发流程己经学习过了，这里了解一下url中的别名设置，reverse反向生成URL，以及include本质如何路由分发的。 别名设置URL有别名name的设置，添加在最后一级分发视图函数的后面1url(r&apos;^login/&apos;, views.login,name=&quot;alias_name&quot;), namespace设置URL有namespace的设置当多个app多级分发时可能存在别名相同,这时就用到namespace来加以区分 namespace添加12url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)), 或url(r&apos;^app01&apos;,([url(&apos;^hosts&apos;,oviews.hosts,name=&quot;nnnn&quot;),],None,&quot;oo&quot;)), reverse用法reverse反向生成url1234from django.urls import reversedef login(request): url = reverse(&quot;namespace1:namespace2:alias_name&quot;) return redirect(url) include本质include原生写法是1url(r&apos;^openstack/&apos;, include(&quot;openstack.urls&quot;,namespace=&quot;o&quot;)) include用于路由下级分发，本质是返回元组，最后一个None表示namespace,也就是形如1url(r&apos;^openstack/&apos;, ([url映射关系，],None,None)) 总结：了解分发基础知识有利于我们后面学习Django admin，如何动态生成URL的代码学习。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-Django-02-基本配置示例","slug":"web-django-02-基本配置示例","date":"2017-04-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.976Z","comments":true,"path":"2017/04/20/web-django-02-基本配置示例/","link":"","permalink":"http://www.digmyth.com/2017/04/20/web-django-02-基本配置示例/","excerpt":"","text":"1 django安装1pip install django pymysql 2 新建django project1django-admin.py startproject mysite 或用pycharm新建一个项目 3 该项目下创建一个应用1cd mysite &amp;&amp; python manage.py startapp app01 4 配置Djangosettings.py文件确保有下面代码，用于在static目录放置静态1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS= ( os.path.join(BASE_DIR, &apos;static&apos;),) 确保INSTALLED_APPS = []有app01,应用 5 Django mysql配置settings.py文件确保有12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;wxq_db&apos;, &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;123&apos;, &apos;HOST&apos;: &apos;localhost&apos;, &apos;PORT&apos;: &apos;3306&apos;, &#125;&#125; app01下 init.py12import pymysqlpymysql.install_as_MySQLdb() 对于初学者建议配置此项，用于打印orm翻译后的sql语后，便于对照学习1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 6 django生成数据models.py12345from django.db import modelsclass UserInfo(models.Model): username = models.CharField(max_length=32) password = models.CharField(max_length=32) email = models.CharField(max_length=32) 12python manage.py makemigrationspython manage.py migrate 7 urls.py定义123456from app01 import viewsurlpatterns = [ url(r&apos;^admin/&apos;, admin.site.urls), url(r&apos;^users/$&apos;, views.users), # url(r&apos;^create_data/&apos;, views.create_data),] 8 views.py定义123456789101112131415from django.shortcuts import render,HttpResponse, redirectfrom app01 import modelsdef create_data(request): for i in range(1,104): models.UserInfo.objects.create( username = &quot;root%s&quot; %i, password = &quot;123&quot;, email = &quot;root%s@qq.com&quot; %i, ) return HttpResponse(&quot;data generate...&quot;)def users(request): user_list = models.UserInfo.objects.all() return render(request,&quot;users.html&quot;, &#123;&apos;user_list &apos;:user_list &#125;) 9 templates/users.html定义12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap-3.3.7-dist/css/bootstrap.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=&quot;width: 700px; margin: 10px auto&quot;&gt; &lt;h1&gt;用户列表&lt;/h1&gt; &lt;table class=&quot;table table-hover table-bordered&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; 用户名&lt;/th&gt; &lt;th&gt; 密码&lt;/th&gt; &lt;th&gt;邮箱&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for user in page_obj.object_list %&#125; &lt;tr&gt; &lt;td&gt;&#123;&#123; user.username &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.password &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; user.email &#125;&#125;&lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 10 注意bootstrap应用bootstrap下载链接 11 启动项目运行项目1python manage.py runserver 127.0.0.1:8000","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"web-django-orm(一)","slug":"web-django-orm(一)","date":"2017-04-15T12:51:41.000Z","updated":"2018-01-18T03:44:22.364Z","comments":true,"path":"2017/04/15/web-django-orm(一)/","link":"","permalink":"http://www.digmyth.com/2017/04/15/web-django-orm(一)/","excerpt":"","text":"目录 简单介绍 初识ORM 简单介绍声明：ORM原理请参考 一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 初识ORM下面学习下Django里sql操作的基本语法 通过简单设置，可以在logging查看翻译成的sql语句settings.py1234567891011121314151617LOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;handlers&apos;: &#123; &apos;console&apos;:&#123; &apos;level&apos;:&apos;DEBUG&apos;, &apos;class&apos;:&apos;logging.StreamHandler&apos;, &#125;, &#125;, &apos;loggers&apos;: &#123; &apos;django.db.backends&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;], &apos;propagate&apos;: True, &apos;level&apos;:&apos;DEBUG&apos;, &#125;, &#125;&#125; 2.1 创建表12345from django.db import modelsclass UserInfo(models.Model): nid=models.AutoField(primary_key=True) name=models.CharField(max_length=32) pwd = models.CharField(max_length=32) 2.2 操作表123456789101112q = models.UserInfo.objects.all()Queryset = [obj(id,name,pwd), obj(id,name,pwd),obj(id,name,pwd),]q=models.UserInfo.objects.values(&apos;name&apos;,&apos;pwd&apos;)Queryset = [&#123;&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123&#125;, &#123;&quot;name&quot;:&quot;user1&quot;,&quot;pwd&quot;:123&#125;, &#123;&#125;] # 字典q = models.UserInfo.objects.value_list(&apos;name&apos;,&apos;pwd&apos;)Queryset = [(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123), (&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123),(&quot;name&quot;:&quot;wxq&quot;,&quot;pwd&quot;: 123)]#元组q = models.UserInfo.objects.filter(name=&quot;wxq&quot;)q = models.UserInfo.objects.get(name=&apos;wxq&apos;) # 多个或没有值都会报错q = models.UserInfo.objects.filter(name=&apos;wxq&apos;).first() # 推荐 2.3 操作表的其它方法12345678910111213141516171819202122232425261. all() 返回的是querySet2. filter(id__lt=10, id__gt=1) 并且查， 返回的是querySet3. get() 只有一个值，否则报错， 返回的是对象4. first() 只找第一个值，返回的是对象5. exclude 取反model.Book.objects.exclude(prince=134) 返回querySet6. countmodeles.Book.objects.exclude(prince=134).count() #querySet对象才有.count()调用方法 7. order_by(*field)models.Book.objects.objects.all().order_by(&quot;prince&quot;) 小到大排序models.Book.objects.objects.all().order_by(&quot;-prince&quot;) 大到小排序8.distinct() 提除重复的记录9 values 返回字典querySet集合10 values_list 返回元组querySet集合11 existret = models.Book.objects.all().exist()","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-09-02-网络编程","slug":"python-10-02-网络编程","date":"2017-03-31T14:26:46.000Z","updated":"2018-02-08T09:19:59.999Z","comments":true,"path":"2017/03/31/python-10-02-网络编程/","link":"","permalink":"http://www.digmyth.com/2017/03/31/python-10-02-网络编程/","excerpt":"","text":"目录 socket概念 socket基本使用 socket简单示例 总结 一、socket概念什么是socket ? socket常称为’套接字’，用于描述IP地址和端口，是一个通信链的句柄，应用程序通常通过”套接字”向网络发出请求或应答网络请求。 Unix中一切皆文件，socket是一种特殊的套接字文件，对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。 所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。 对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。 二、socket基本使用服务器端第一步： 创建 套接字对够用123456789import socketsocket.socket(family, type)family AF_INET AF_UNIXtype SOCK_STREAM -------&gt; TCP SOCK_DGRAM -------&gt; UDPconns = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 绑定地址使用套接字对象的 bind方法绑定于地址和端口组成的元组1conns.bind((&apos;ip&apos;,port)) 第三步： 使用套接字的Listen()方法进行监听1conns.listen(10) #等待队列长度 第四步： 进入循环监听状态 使用套接字的accept()方法接收用户连接请求help(tcpconn.accept)1client_sock,client_addr = conns.accept() 编写客户端程序第一步： 创建套接字对象以连接服务器端1client_conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM) 第二步： 请求连接服务器client_conn.conncet((‘server_ip’, port)) 第三步： 发送数据 1client_conn.send(b&apos;hello world&apos;) 示例server.py1234567891011121314import socketsock = socket.socket()sock.bind((&apos;127.0.0.1&apos;,8000))sock.listen(5)while True: conn,addr = sock.accept() client_data = conn.recv(1024) print(client_data) conn.sendall(&apos;response info from server&apos;) conn.close() client.py1234567891011import socketsk = socket.socket()sk.connect((&apos;127.0.0.1&apos;,8000))sk.sendall(&apos;请求数据&apos;)server_reply = sk.recv(1024)print(server_reply)sk.close() 三、socket简单示例python中网络编程主要有socket/socketserver和异步相关的Twisted/tornado/ socket这里包括自己用select实现的伪异步IO多路复用 2.1 示例一web浏览器和socket_server交互,浏览器将收到服务端返回的数据123456789101112131415161718192021# socket_server.pyimport socketdef handle_process(client): data = client.recv(1024) print(data.decode(&quot;utf-8&quot;)) client.send(b&quot;HTTP/1.1 200 OK\\r\\n\\r\\n&quot;)#一定要先发送合规请求头 client.send(b&apos;hello worldfdds&apos;)def main(): sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM) sock.bind((&apos;127.0.0.1&apos;,8003)) sock.listen(5) while True: conn,addr = sock.accept() handle_process(conn) conn.close()if __name__ == &apos;__main__&apos;: main() 2.2 示例二socket + select 实现IO多路复用1234567891011121314151617181920212223242526272829303132333435363738394041# socket_server.pyimport selectimport socket# 单线程里同时监听多个socket对象，实现了&quot;伪&quot;并发IO操作： IO多路复用sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8001))sk1.listen(5)sk2 = socket.socket()sk2.bind((&apos;127.0.0.1&apos;,8002))sk2.listen(5)inputs = [sk1,sk2]w_inputs = []while True: # IO多路复用： # select: 内部循环，主动查看 # poll: 内部循环，主动查看 # epoll: 非循环， 异步回调或被动通知 r,w,e = select.select(inputs,w_inputs,[],0.05) for obj in r: if obj in [sk1,sk2]: print(&quot;新的连接来了。。&quot;) conn,addr = obj.accept() inputs.append(conn) else: print(&quot;新的数据来了&quot;) try: data=obj.recv(1024) except Exception as e: data = &quot;&quot; if data: # obj.sendall(data) w_inputs.append(obj) else: inputs.remove(obj) w_inputs.remove(obj) obj.close() for obj in w: obj.sendall(b&apos;ok&apos;) w_inputs.remove(obj) 定义2个socket_client 1234567891011# socket_client01.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8001))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 12345678910# socket_client02.pyimport socketclient = socket.socket()client.connect((&apos;127.0.0.1&apos;,8002))while True: v = input(&quot;&gt;&gt;&gt;&quot;) client.sendall(v.encode()) ret = client.recv(1024) print(&quot;server response:&quot;,ret) 测试服务端并发： 先启动socket_server.py,后启动socket_clientx.py 小结：服务端单线程同时监听了多个socket对象，表明实现了并发连接或IO多路复用，但真正实现了并发吗？当并发边连接有IO请求时还是占住了资源,那么在下一个例子中用线程处理IO请求实现真正的IO并发 4.2 示例三select + 线程实现真正的多并发123456789101112131415161718192021222324import selectimport socketimport threadingdef process_request(conn): while True: v = conn.recv(1024) conn.sendall(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\ndownload page ...&apos;) conn.close() break # 任务处理完成后终止这个线程sk1 = socket.socket()sk1.bind((&apos;127.0.0.1&apos;,8009))sk1.listen(5)inputs = [sk1,]while True: r,w,e = select.select(inputs,[],[],0.05) for obj in r: if obj in [sk1,]: conn,addr = obj.accept() t=threading.Thread(target=process_request,args=(conn,)) t.start() 设计思路可参考 socketserver源代码1234567import socketserverclass MyHandler(socketserver.BaseRequestHandler): def handle(self): pass server = socketserver.ThreadingTCPServer((&apos;127.0.0.1&apos;,8001),MyHandler)server.serve_forever() 4.2 示例四浏览器会自动向服务端请求头的一些数据，process_data()函数对请求头做了结构化处理，同时浏览器请求什么URL，服务端就会返回什么URL, 在此基础上可以用类封装为一个web框架邹形, 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import selectimport socketdef process_data(client): data = bytes() while True: try: chunk = client.recv(1024) except Exception as e: chunk = None if not chunk: break data += chunk data_str = str(data, encoding=&quot;utf-8&quot;) header,body = data_str.split(&apos;\\r\\n\\r\\n&apos;,1) header_list = header.split(&apos;\\r\\n&apos;,1) header_dict = &#123;&#125; for line in header_list: value = line.split(&apos;:&apos;, 1) if len(value) == 2: k, v = value header_dict[k] = v else: header_method, header_url, header_protocal = line.split(&quot; &quot;) header_dict[&quot;header_method&quot;] = header_method header_dict[&quot;header_url&quot;] = header_url header_dict[&quot;header_protocal&quot;] = header_protocal return header_dict,bodysock = socket.socket()sock.setblocking(False) # setblocking表示是否设置为阻塞模式,这里是对accept生效sock.bind((&apos;127.0.0.1&apos;,8008))sock.listen(5)# while True:# conn,addr = sock.accept() #setblocking(False)后不阻塞了，有连接就拿连接，没有连接就直接报错# conn.setblocking(False)# conn.recv(1024) # 有数据拿数据，没有数据就直接报错inputs = [sock,]while True: rList,wList,eList = select.select(inputs,[],[],0.05) for client in rList: if client == sock: # 建立新的连接 conn,addr = client.accept() conn.setblocking(False) # 有数据拿数据，没有数据就直接报错 inputs.append(conn) else: header_dict,body=process_data(client) request_url=header_dict[&apos;header_url&apos;] client.send(b&apos;HTTP/1.1 200 OK\\r\\n\\r\\n&apos;) client.send(request_url.encode(&quot;utf-8&quot;)) inputs.remove(client) client.close() 总结对网络的编程就是对服务器，客户端socket对象打开 读写 关闭 的过程。所不同的是对于服务器而言，连接进来了，socket套接字为可读状态，发送数据为可写状态。对于客户端而言，创建连接后socket套接字为可写状态，发送数据为可读状态。掌握socket可读可写状态","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-02-面象对象编程中级","slug":"python-08-02-面象对象编程中级","date":"2017-03-26T13:28:41.000Z","updated":"2018-02-06T09:05:12.632Z","comments":true,"path":"2017/03/26/python-08-02-面象对象编程中级/","link":"","permalink":"http://www.digmyth.com/2017/03/26/python-08-02-面象对象编程中级/","excerpt":"","text":"目录 staticmethod classmethod staticmethod几个魔法方法说明： @classmethod @staticmethod不依赖任何具体的对象来执行类当中是方法，这个方法要么是静态方法， 要么是类方法，要么是属性 12345678910@classmethoddef test_func(cls): # 类方法传入cls参数（类本身） pass@staticmethoddef test_func(): # 静态方法时没有任何变量 passdef test_func(self): # 普通实例方法时传入self参数（实例本身） pass staticmethod语法12345678In [4]: class Foo(object): ...: @staticmethod ...: def spam(x,y,z): # 静态方法时方法定义不写self ...: print(x,y,z) In [5]: In [5]: Foo.spam(1,2,3) # 静态方法属于类的，用类名调用。虽然实例能调用，但不要那样混用,不规范1 2 3 staticmethod用法场景123456789101112131415161718192021In [7]: import timeIn [6]: class Date(object): ...: def __init__(self,year,mon, day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @staticmethod ...: def now(): ...: t = time.localtime() ...: return Date(t.tm_year, t.tm_mon, t.tm_mday) ...: In [8]: d1 = Date(1989, 8,20) # 获得一个对象In [9]: d2 = Date.now() # 这里也能获得一个对象In [10]: d1.dayOut[10]: 20In [11]: d2.dayOut[11]: 12 classmethod@classmethod语法1234567891011In [12]: class C1(object): ....: name = &apos;wxq&apos; ....: @classmethod ....: def test(cls): # 这里需要传入cls, 谁调用谁就是cls ....: print(cls, cls.name) ....: In [14]: C1.test() # 这里cls就是C1&lt;class &apos;__main__.C1&apos;&gt; wxqIn [13]: c = C1() # 正常实例化对象 @classmethod用法场景1234567891011121314151617In [2]: import timeIn [3]: class Date(object): ...: def __init__(self, year, mon,day): ...: self.year = year ...: self.mon = mon ...: self.day = day ...: @classmethod ...: def now(cls): ...: t = time.localtime() ...: return cls(t.tm_year, t.tm_mon, t.tm_mday) ...: In [4]: d = Date.now()In [5]: print(d.year,d.mon, d.day)2017 3 12 staticmethod与classmethod区别的牛逼之处123456789101112131415161718192021root@ubuntu:~# cat method.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @staticmethod def now(): t = time.localtime() return Date(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 method.py &lt;__main__.Date object at 0x7f5514658940&gt; 上面并没有我们想要的结果分析：e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。也就是return Date(t.tm_year, t.tm_mon, t.tm_mday), 实例print时调Date类的__str__方法，故打印return Date(t.tm_year, t.tm_mon, t.tm_mday)后的内存地址，不会打印EuroDate类中定义的__str__方法 123456789101112131415161718192021root@ubuntu:~# cat goodmethod.py #!/usr/bin/env python3import timeclass Date(object): def __init__(self, year,mon,day): self.year = year self.mon = mon self.day = day @classmethod def now(cls): t = time.localtime() return cls(t.tm_year, t.tm_mon, t.tm_mday)class EuroDate(Date): def __str__(self): return &apos;year: %s mon:%s day:%s&apos; % (self.year, self.mon,self.day)e = EuroDate.now()print(e)root@ubuntu:~# python3 goodmethod.py year: 2017 mon:3 day:12 这样才是我们想要的结果，好象参悟了点什么分析:e = EuroDate.now()实例化时，EuroDate类并没有now()方法，但继承自Date类，它会去调父类Date.now()方法实例化。这一点和上面是一致的。但此时return cls(t.tm_year, t.tm_mon, t.tm_mday)中的cls不是Date,而是EuroDate,符合谁调谁就是cls的原则。这样实例化e = EuroDate.now()时print(e)就会去调EuroDate中的__str__方法，得到我们想要的结果 小结：staticmethod与classmethod在一定场景中是有区别的。细节参照上面的例子练习","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-08-06-异常","slug":"python-08-06-异常","date":"2017-03-25T12:39:12.000Z","updated":"2018-02-06T09:07:40.152Z","comments":true,"path":"2017/03/25/python-08-06-异常/","link":"","permalink":"http://www.digmyth.com/2017/03/25/python-08-06-异常/","excerpt":"","text":"目录 1 2 3 12345678910class WxqException(Exception): def __init__(self, msg): self.message = msg def __str__(self): return self.messagetry: raise WxqException(&quot;Game Over!&quot;)except WxqException as e: print(e)","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-09-01-进程和线程","slug":"python-09-01-进程和线程","date":"2017-03-20T14:26:37.000Z","updated":"2018-02-07T07:46:27.544Z","comments":true,"path":"2017/03/20/python-09-01-进程和线程/","link":"","permalink":"http://www.digmyth.com/2017/03/20/python-09-01-进程和线程/","excerpt":"","text":"目录 基本概念 进程 线程 协程 总结 基本概念我们都知道现代操作是支持“多任务”的，什么叫“多任务”呢？。简单地说，就是操作系统可以同时运行多个任务。打个比方一边微信一边QQ。 单核cpu是如何执行“多任务”的？简单的说，就是cpu时间分片，同一时间单核cpu只能执行一个任务，cpu计算时间分片到每个任务交替运行，进程切换或上下文切换时间很短，我们无法感知而己。真正并发执行多任务还要靠多核cpu来完成。 并发执行任务方案， 多进程 多线程 多进程+多线程 Python线程有GIL(Global Interpreter Lock), 这种锁在单核cpu单进程里同一时间只能有一个线程被cpu调度。 那么多线程并发就没有用了吗？计算密集型多进程不就解决了IO密集型多线程不就解决了，同一时间只有一个线程调度，其它时间线程处理IO啊 进程，多进程，进程池进程定义: 程序由指令+数据组成，进程就是这样一种描述的实体(process),简单的认为一个任务就是一个进程。 一个进程至少一个线程，进程间相互隔离（数据不共享），一个子进程挂了并不影响程序运行，当然主进程挂了程序也就挂了，进程切换开销较大。 多进程： 用于解决计算密集型作务的多并发。 进程池： 内部维护一个进程序列，当使用时创建一个新的进程放入池中，再从池中取出来使用，当达到进程池个数时，不再创建进程，请求直接从进程池中取出来用，其它请求只能等待直到进程池中有进程可用。 进程示例：12345678910111213from multiprocessing import Processimport timedef task(arg): time.sleep(arg) print(arg)if __name__ == &apos;__main__&apos;: for i in range(10): p = Process(target=task, args=(i,)) # p.daemon=True p.start() p.join(0.5) print(&quot;end&quot;) 进程池与线程池用法一样，细节不展开1from concurrent.futures import ProcessPoolExecutor 进程锁也是和线程锁一样的用法，细节不展开 进程与线程不同的是进程数据不共享，那如何实现数据交互，方法很多rpc,Queue,pipe,自己实现socket也可以实现 ,借住第三方工具，python本身也可以实现，2种方法： Array (基于C语言数据类型) Manager (基于socket) 1234567891011from multiprocessing import Processdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: v = [] for i in range(10): p = Process(target=task,args=(i, v)) #每个进程数据独立存在 p.start() C语言里Array存的元素是定义时定死的，和python 的列表有很大不同。1234567891011from multiprocessing import Process,Arraydef task(num,li): li[num] = 1 print(list(li))if __name__ == &apos;__main__&apos;: v = Array(&apos;i&apos;, 10) #i在c语言是的int，10表示长度 for i in range(10): p = Process(target=task,args=(i, v)) p.start() Manger().list() Manger().dict()12345678910111213from multiprocessing import Process,Array,Managerdef task(num,li): li.append(num) print(li)if __name__ == &apos;__main__&apos;: # dic = Manager().dict() v = Manager().list() for i in range(10): p = Process(target=task,args=(i, v)) p.start() p.join() 线程，多线程，线程池线程定义：一个任务可以再划分为多个小任务，进程内独立执行这些小任务的最小单元。 一个进程可以有多个线程，线程间共享内存数据，一个线程挂了，其它线程也会崩溃，线程切换开销较进程小一些。 多线程： 用于解决IO密集型任务的多并发 线程池： 内部维护一个线程序列. (与进程池同理) 线程示例123456789101112import threadingimport timedef task(arg): time.sleep(1) print(arg)for i in range(5): t = threading.Thread(target=task,args=(i,)) t.setDaemon(False) # 等子线程完成后再结束主线程 t.start() t.join() # 变为串行,一直等 t.join(3) # 变为串行,只等3秒print(&quot;end&quot;) # 先打印主线程的end,再一起打印子线程的i 自定义线程类示例123456789101112131415161718import threadingimport timeclass MyThread(threading.Thread): def __init__(self,target=None,args=(),**kwargs): super(MyThread,self).__init__(target=None,args=(),**kwargs) self.target =target self._args = args def run(self,): return self.target(*self._args)def task(arg): time.sleep(1) print(arg)t = MyThread(target=task, args=(123,))t.run()print(&quot;end&quot;) 线程锁线程共享数据，共同修改一份数据是有问题的，pycharm环境下可能看不出效果，cmd命令行下可以看到数据修改混乱了。123456789101112import threadingimport timev=10def task(arg): global v v-=1 print(v)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 数据修改乱了，就要加锁了：普通锁，递归锁RLock,事件锁、条件锁，互斥锁普通锁 1234567891011import threadingimport timev=10lock = threading.Lock()def task(arg): lock.acquire() # 申请锁 global v v-=1 print(v) lock.release() # 释放锁 普通锁不能开多重没锁，如果是下面这种设置会造成死锁123456# 死锁lock = threading.Lock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 递归锁RLock递归锁RLock可以开多重锁，不会造成死锁123456# 不会死锁lock = threading.RLock()lock.acquire() # 申请锁lock.acquire() # 申请锁lock.release() # 释放锁lock.release() # 释放锁 信号量BoundedSemaphore多个线程同时使用锁，当然这里3个同时修改数据也可能混乱。 12345678910111213141516import threadingimport timev=10lock = threading.BoundedSemaphore(3)def task(arg): lock.acquire() # 申请锁 time.sleep(1) global v v-=1 print(v) lock.release() # 释放锁for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()print(&quot;end&quot;) 事件锁条件式批量解锁12345678910111213141516import threadingimport timelock = threading.Event()def task(arg): time.sleep(1) lock.wait() #锁住所有线程 print(arg)for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = input(&quot;&gt;&gt;&gt;&quot;) if value == &apos;1&apos;: lock.set() # 解锁 条件锁123456789101112131415161718import threadingimport timelock = threading.Condition()def task(arg): time.sleep(1) lock.acquire() lock.wait() #锁住所有线程 print(&apos;线程&apos;,arg) lock.release()for i in range(10): t=threading.Thread(target=task,args=(i,)) t.start()while True: value = int(input(&quot;&gt;&gt;&gt;&quot;)) lock.acquire() lock.notify(value) # 传几就解几个锁 lock.release() 线程池pool.submit(download,url)取出一个线程执行任务，返回future对象future.add_done_callback(write)future对象有一个add_done_callback方法，传入我们自己写的回调函数write, future对象也会自动传给write回调函数。download 函数的返回值=future.result() 12345678910111213141516171819202122232425import requestsfrom concurrent.futures import ThreadPoolExecutordef write(future): response = future.result() f=open(&apos;xx.txt&apos;,&apos;wb+&apos;) f.write(response.content) f.close()url_list = [ &apos;http://www.baidu.com&apos;, &apos;http://www.digmyth.com&apos;, &apos;http://www.github.com&apos;,]def download(url): response=requests.get(url) print(&quot;得到结果&quot;,url) return responsepool = ThreadPoolExecutor(2)for url in url_list: print(&quot;开始请求：&quot;,url) future=pool.submit(download,url) # 池中取一个连接 # ruture自动传给write调函数:write(future) future.add_done_callback(write) 封装1234567891011121314import requestsfrom concurrent.futures import ThreadPoolExecutordef download(url): response=requests.get(url) return responsedef run(url_list=None): pool = ThreadPoolExecutor(2) for item in url_list: url = item[&apos;url&apos;] callback = item[&apos;callback&apos;] future=pool.submit(download, url) future.add_done_callback(callback) 1234567891011121314151617def f1(future): print(future.result().content)def f2(arg): print(&quot;future&quot;)def f3(future): print(&quot;future&quot;)url_list = [ &#123;&apos;url&apos;:&apos;http://www.baidu.com&apos;,&apos;callback&apos;:f1&#125;, &#123;&apos;url&apos;:&apos;http://www.digmyth.com&apos;,&apos;callback&apos;:f2&#125;, &#123;&apos;url&apos;:&apos;http://www.github.com&apos;,&apos;callback&apos;:f3&#125;,]import nb_threadnb_thread.run(url_list) 协程协程定义： 协程不同于进程，线程对于操作系统可见且是一种资源，协程只是代码层面的来回切换，对于操作系统不可见且并非是一种资源。 1pip3 install greenlet # python中原生协程 单独协程没什么用，结合协程切换特性+IO+select+socket可以编写出牛逼的异步IO模块或异步非阻塞框架 gevent就是基于greenlet+libvent+IO二次加工实现的python异步模块1pip3 instal gevent 示例：和多线程不同，这里是单线程并发IO任务123456789101112import geventimport requestsdef func(url): response = requests.get(url) print(response.url)gevent.joinall([ gevent.spawn(func,&apos;http://www.baidu.com&apos;), gevent.spawn(func,&apos;http://www.digmyth.com&apos;), gevent.spawn(func,&apos;http://www.github.com&apos;),]) 当然我们也可以自己用select来写IO多路复实现并发 总结即使有了多进程多线程或进程池，线程池处理多任务，但如果一个任务在执行的过程中大部分时间都在等待IO操作，单进程单线程模型也只能处理一个任务，无法并发执行。 还好现代操作系统支持异步IO，这是一个很牛逼的东东，单进程单线程模型并发执行任务得以实现。这种称为事件驱动模型，Nginx就是支持异步IO的Web服务器。 单线程的异步编程或异步IO多路复用会是趋势，可以基于事件驱动编写高效的多任务程序。Twisted,Tornado之所以牛逼，就是因为它们的高性能也是基于事件驱动，基于异步IO多路复用。","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-Django-01-入门","slug":"web-django-01-入门","date":"2017-03-20T12:26:37.000Z","updated":"2018-01-18T03:43:21.948Z","comments":true,"path":"2017/03/20/web-django-01-入门/","link":"","permalink":"http://www.digmyth.com/2017/03/20/web-django-01-入门/","excerpt":"","text":"目录 什么是WSGI 什么是mvc/mtv模型 orm如何工作 Django安装 一、什么是WSGI对浏览器而言，远端是服务器程序和应用程序，而服务器程序就是socket Server,用于接收用户请求，解析用户请求，响应用户请求，这部份工作永远不变的。可变的是应用程序，那么服务器程序与应用程序解耦偶就有了必要。 接收用户请求，解析用户请求，响应用户请求这些封装为WSGI接口简化开发。 定义web app与web server之间接口解耦规则就是WSGI. Python标准库提供的独立wsgi服务器称为wsgiref 二、什么是mvc/mtv模型init.py: 告诉python它不是一个目录文件夹而是一个包 mvc: model(数据库交互) view(模板) control (业务处理逻辑) mtv: model（数据库交互）view(视图，业务逻辑处理) templates(模板） 注： templates模板可以放在项目下或各个app下 三、orm如何工作一个类对应一张表一个类对象对应一行表记录一个类属性对应记录字段值 自动路由： 反射应用，自定义扩展 四、Django安装安装Djangopip3 install django pika pymysql 查看安装pip3 list 创建一个Django项目cd /optmkdir /opt/templates # 用于整个项目存放模板文件django-admin startproject Mysite #创建一个项目 生成目录结构如下123456789101112/opt/Mysite - Mysite # 还有一个与项目同名的文件夹/opt/Mysite/Mysite，对整个程序进行配置 - __init__.py - settings.py # 配置文件 - urls.py # URL对应关系 - wsgi.py # 遵循WSGI规范，一般使用 uwsgi + nginx - manage.py # /opt/Mysite/manage.py管理Django程序：如下 - python manage.py runserver # 运行程序 - python manage.py startapp xx # 创建app # Django的orm框架 - python manage.py makemigrations - python manage.py migrate 创建一个应用：12345678910cd /opt/Mysitepython manage.py startapp app01生成/opt/Mysite/app01目录结构如下：/opt/Mysite/app01/__init__.py # 说明app01是一个包/opt/Mysite/app01/migrations # django orm框架，修改表结构的操作记录（差异化）/opt/Mysite/app01/admin.py # Django提供的后台管理程序/opt/Mysite/app01/apps.py # 配置当前app/opt/Mysite/app01/models.py # 数据库交互：orm-写指定的类，通过命令可以创建数据库结构/opt/Mysite/app01/views.py # 视图函数，业务逻辑处理/opt/Mysite/app01/test.py # 单元测试 初始练习：12Mysite/Mysite/urls.py (导入from blog import views及编写业务逻辑url(r&apos;^index&apos;,views.index)) ---&gt; 练习各种例子。。。 URLS别名用法：12345url(r&apos;^/login$&apos;, views.login, name=&quot;LOGIN&quot;)那么前端templates中的html代码需要用别名方式，语法如下：&lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt; 改为&lt;form action=&quot;&#123;% url &apos;LOGIN&apos; %&#125;&quot; mothod=&quot;post&quot;&gt; 1234567891011121314151617181920212223urls url(正则表达式 视图函数，参数，别名）正则这里匹配到的或者说捕获到的数据都是字符串类型，post提交的数据get post都可以向server端发送数据，区别是提交数据的方式不同：格式如下get ?id=2&amp;page=3post 数据在body里 无命名分组 位置参数有命名分组 关键字参数--在函数定义时，只能用命名的key，这一点是要注意的获取登录首页是以GET方法提交 -----GET用户名，密码表单submit时是以POST方式提交 -----POST时间表达：1 时间戳2 字符串3 结构化时间 五、Django生命周期 5.1 路由系统URLS123456789101112131 /index/ -&gt; def index(request)2 /detail-(\\d+)/ -&gt; def detail(request, nid) /detail-(?P&lt;nid&gt;\\d+)/ -&gt; def detail(request,nid)3 /index/ -&gt; def index(request) name=n1 使用别名生成URL： 模板语言： &#123;% url n1 %&#125; -&gt; /index/ 视图函数：（需要导入reverse模块） reverse(name=&quot;n1&quot;) --&gt; /index/ 4 /web/ include(&quot;app01.urls&quot;) 5.2 视图函数1 函数至少一个参数 request2 request12345678request.method # 请求方法request.GET # 请求方法为GET的数据request.POST # 请求方法为POST的数据 注： 如何获取request.post数据的呢，如果有请求头 （Content-Type:application/x-www-form-urlencoded; charset=UTF-8）， 则从request.body里取出post数据request.body # 请求时发送的所有数据request.FILES # 请求时发送的文件数据 注意:form表单提交方法只能是get或post当提交文件时特别注明enctype=&quot;multipart/form-data&quot;12345&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;filename&quot;&gt;&lt;/form&gt; 3 返回方式123HttpResponse()render(request,)redirect() 5.3 ORM操作各数据库操作是一种外对sql api接口的封装 第一层封装：数据库存储最底层是db驱动，对外开放SQL API用于操作数据库 第二层封装：python3 中操作mysql数据库的库为pymysql,是对SQL API之上的一层封装 第三层封装: orm操作是最高级封装，pymsql之上的一层封装 最终：orm翻译成pymsql,pymysql再翻译成sql语句 Django 数据库操作具体语法介绍请参考 5.4 模板引警Django对template中html的渲染有着一套语法,我有专门一篇博客讲解模板渲染语法渲染语法博客参考 1 基本方法12345678910111213return render(request, &quot;x.html&quot;, &#123;&apos;k&apos;:[1,2,3,4], &quot;d&quot;:&#123;&quot;k1&quot;:&quot;v1&quot;,&quot;k2&quot;:&quot;v2&quot;&#125;&#125;) x.html &#123;&#123; k.2 &#125;&#125; &#123;% for i in d %&#125; &#123;&#123; i &#125;&#125; --key &#123;% endfor %&#125; &#123;% for k,v in d.items %&#125; &#123;&#123; k &#125;&#125; &#123;&#123; v &#125;&#125; &#123;% endfor %&#125; 2 函数 Django 提供的函数:12simple_tag 可以有多个参数filter 只能有2个参数，并且可以做条件语句的条件","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-08-03-面象对象编程高级","slug":"python-08-03-面象对象编程高级","date":"2017-03-15T14:28:41.000Z","updated":"2018-02-21T04:38:02.994Z","comments":true,"path":"2017/03/15/python-08-03-面象对象编程高级/","link":"","permalink":"http://www.digmyth.com/2017/03/15/python-08-03-面象对象编程高级/","excerpt":"","text":"目录(魔法方法) 类内置方法 构造方法 @property getattr系列 getitem系列 metaclass系列 importlib 字符串形式运行函数 内置方法1234567891 Foo.__name__ 字符串形式的类名2 Foo.__doc__ Foo的文档字符串3 Foo.__bases__ 父类组成的元组4 Foo.__class__ Foo类所在5 Foo.__bases__ Foo的所有父类构成的元组7 Foo.__module__ Foo类所在模块8 obj.__class__ obj对象所在的类 9 dir(Foo)` Foo类所有属性名组成的列表10 Foo.__dict__ Foo类所在属性组成的字典 构造方法12__init__ 构造方法，通过类创建对象时自动触发执行__del__ 析构方法，当对象在内存中被释放时自动触发执行 __str__ __repr__ __call__123__str__ 对象打印时自动触发__repr__ 对象直接回车自动触发（仅供程序员使用）__call__ 对象后面加括号调用时自动触发 @property属性方法把一个类方法变为属性来用12345678910111213141516171819class Dog(object): def __init__(self,name): self.name = name self.__food = None @property def eat(self): print(&quot;%s is eating %s&quot; %(self.name, self.__food)) @eat.setter # 赋值调用属性，调这个方法 def eat(self,food): print(&quot;set to food:&quot;,food) self.__food = food @eat.deleter # 删除属性 def eat(self): del self.__food print(&quot;Delete the finished&quot;)obj=Dog(&apos;w..w&apos;)obj.eat = &quot;fish&quot; # 自动调用@eat.setter赋值obj.eat property 原理就是property类里定义了__get__() __set__() __delete__()方法，是描述符的运用123456定义： 描述符就是将某种特殊类的实例指派给另一个类的属性，__get__ __set__ __delete__实现了 描述符协议，用于property描述符编写。一种调用方式之一： property(fget=None, fset=None, fdel=None, doc=None)__get__(self, instance, owner) #用于访问属性，它返回属性的值__set__(self, instance, value) #将在属性分配操作中调用，不返回任何内容__delete__(self, instance) # 控制删除操作，不返回任何内容 getattr setattr hasattr反射系列用于通过字符串找到函数或方法 示例：1234567891011121314151617181920def func1(self): print(self.name,&apos;say Hi&apos;) return &quot;func1&quot;class Foo(object): def __init__(self): self.name = &apos;wxq&apos; def func2(self): print(self.name) return &quot;method func2&quot;obj = Foo()choice = input(&quot;请输入调用方法名:&quot;)if hasattr(obj,choice): # 实例中有这个方法，执行实例中的方法 func=getattr(obj,choice) func() # 绑定方法自动传入self参数else: # 动态加载函数封装到类中 setattr(obj,choice,func1) func = getattr(obj,choice) func(obj) # 函数时需手动传入self参数 __getattr__ __setattr__ __hasattr__ __delattr__ 进行__dict__拦截一般来讲，obj.name = &#39;wxq&#39;python自动基于self.__dict__赋值取值操作，无需关心，这里只是对这种自动操作进行拦截，用于高级代码重写操,self.xx不存在变量xx时先访问__getattribute__,再访问__getattr__,默认返回None,self.xx存在变量xx时不会访问getattr，直接取出值返回，self.name=’wxq’赋值先访问setattr`方法，没有该方法就用默认内置. 示例一12345678910111213141516171819class Foo(): def __init__(self): pass def __getattribute__(self, item): print(&apos;__getattribute__&apos;) return object.__getattribute__(self,item) def __getattr__(self, item): print(&apos;__getattr__&apos;) return &quot;%s variable don&apos;t exists&quot; % item def __setattr__(self, item, value): print(&apos;__setattr__&apos;) self.__dict__[item] = &apos;test&apos;+valueobj=Foo()obj.name = &apos;wxq&apos;print(obj.name) 打印123__setattr____getattribute__testwxq 示例二： 当没有.xx变量属性时会访问__getattr__方法12345678910111213class Foo(): def __init__(self): pass def __getattr__(self, item): if item == &apos;name&apos;: return &apos;wxq&apos; elif item == &apos;age&apos;: return 25obj = Foo()print(obj.age) 示例三：123456789101112class Foo(): def __init__(self,path=&apos;&apos;): self.path = path def __getattr__(self, item): return Foo(&quot;%s/%s&quot;%(self.path, item)) def __str__(self): return self.pathobj = Foo(&quot;www&quot;).bai.comprint(obj) # 打印 www/bai/com __getitem__ __setitem__ __delitem__用于索引操作，如字典形式：obj[&#39;k1&#39;]如Session设置 request.session[&#39; user_info&#39;] = &#39;user&#39; 1234567891011121314151617181920class Foo(object): def __init__(self,attrs=&#123;&#125;): self.attrs = attrs def __getitem__(self, key): print(&apos;__getitem__&apos;,key) return self.attrs.get(key) def __setitem__(self, key, value): print(&apos;__setitem__&apos;,key,value) self.attrs[key] = value def __delitem__(self, key): print(&apos;__delitem__&apos;,key) del self.attrs[key] print(self.attrs) obj = Foo(&#123;&apos;name&apos;:&apos;wxq&apos;&#125;)obj[&apos;k1&apos;] = &apos;v1&apos; # 设置，自动触发执行 __setitem__print(obj.attrs)print(obj[&apos;k1&apos;]) # 获取值，自动触发执行 __getitem__del obj[&apos;name&apos;] # 触发__delitem__ __new__和 __metaclass____new__与实例化对象相关123456789class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): # 其实是运行了__new__(),不再调用__init__()方法了 print(&quot;Foo __new__&quot;)obj = Foo(&apos;wxq&apos;) # 打印 Foo __new__,这里obj是None 这里可以看出实例化是先运行的__new__()方法，如果__new__()没有返回值，Foo.__init__()就不会运行了，obj也就为None了要想运行Foo.__init__(), 那么__new__()必须有返回值1234567891011class Foo(): def __init__(self,name): print(&quot;Foo __init__&quot;) self.name = name def __new__(cls, *args, **kwargs): print(&quot;Foo __new__&quot;) return object.__new__(cls)obj = Foo(&apos;wxq&apos;)print(obj) 总结实例化过程 看起来__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。 __metaclass__与类的创建相关12print type(f) # 输出：&lt;class &apos;__main__.Foo&apos;&gt; 表示，obj 对象由Foo类创建print type(Foo) # 输出：&lt;type &apos;type&apos;&gt; 表示，Foo类对象由 type 类创建 培析类 的创建过程123456789def func(self): print(&apos;hello fgf&apos;)Foo = type(&apos;Foo&apos;,(object,), &#123;&apos;talk&apos;: func&#125;)# type第一个参数：类名# type第二个参数：当前类的基类# type第三个参数：类的成员f = Foo()f.talk() 12345678910def func(self): print(&quot;hello %s %s&quot;%(self.name,self.age))def __init__(self,name,age): self.name = name self.age = ageFoo = type(&apos;Foo&apos;,(object,),&#123;&apos;func&apos;:func, &apos;__init__&apos;:__init__&#125;) # 用type创建出Foo这个对象（类）f = Foo(&quot;wxq&quot;,25) # 再用Foo对象创建f对象f.func() Metaclass元类创建过程1234567891011121314151617181920212223242526272829#print(globals())class MyType(type): def __init__(self,*args,**kwargs): print(&quot;MyType __init__&quot;,self,*args,**kwargs) def __call__(self, *args, **kwargs): print(&quot;MyType __call__&quot;,self, *args, **kwargs) obj = self.__new__(self) self.__init__(obj, *args, **kwargs) obj.age= 25 return obj def __new__(cls, *args, **kwargs): print(&quot;MyType __new__&quot;,cls, *args, **kwargs) obj = type.__new__(cls, *args, **kwargs) return objclass Foo(object,metaclass=MyType): def __init__(self, name): self.name = name print(&quot;Foo __init__&quot;) def __call__(self, *args, **kwargs): print(&quot;call...&quot;)#print(globals()f = Foo(&quot;test&quot;)print(f.name,f.age) 总结Type创建类过程 前面实例化对象的结论是__new__什么也没有干，只是有了一块内存地址或对象地址用于返回给__init__()，再__init__()执行。那么type创建Foo对象(类)也是这个流程，因为是Type实例化Foo类，MyType执行__new__创建Foo,返回给MyType.__init__()执行，当f=Foo() 实例化对象也就是加()调用MyType.__call__()方法,__call__()方法来执行实例化，实例化过程又是执行Foo.__new__()返回给Foo.__init__()，完成实例化。 importlib字符串模块导入123456import importlibx=&apos;scrapy.crawler.CrawlerProcess&apos;model_path,model_name = x.rsplit(&apos;.&apos;,maxsplit=1)md=importlib.import_module(model_path) # 字符串形式模块导入cls=getattr(md,model_name)print(cls) 字符串形式运行函数1 eval(字符串)1234def func(arg): return argeval(&apos;func(&quot;hello wolrd&quot;)&apos;) Tornado编写session组件会用到这个知识点，结合工厂设计模式 2 eval获取函数1234567def f1(arg): print(arg)x=&quot;f1&quot;func=eval(x) # 获取函数func(&quot;wxq&quot;) 3 sys.modules获取函数1234567891011import sysdef process(arg): return argf=&quot;process&quot;func=getattr(sys.modules[__name__], f) # 获取函数ret=func(&apos;hello world&apos;)print(ret) 4 运用类中getattr123456789class Foo(): def f1(self): return &quot;hello world&quot; obj = Foo()x=&quot;f1&quot;func=getattr(obj,x)print(func()) &lt;完结&gt;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-06-01-正则表达式","slug":"python-06-01-正则表达式","date":"2017-03-01T09:03:01.000Z","updated":"2017-02-27T08:36:47.909Z","comments":true,"path":"2017/03/01/python-06-01-正则表达式/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-06-01-正则表达式/","excerpt":"","text":"目录 基础 进阶 re模块 分组 切分字符串 编译compile 贪婪模式匹配 基础元字符：(Meta-Characters)是正则表达式中具有特殊意义的专用字符比如：\\d表示数字 \\s表示空格 \\w表示[a-zA-Z0-9_]大小写字母数字下划线元字符表 链接字符类：又字符集，一组可以匹配[ ]中字符串的字符12345678910111213141516171819202122. # 任意单个字符[] # 集合内[^] # 集合内取反? # 表示前一个字符长度为0或1+ # 表示前一个字符长度为1或1以上* # 表示前一个字符长度为任意，等同于?+的并集&#123;m&#125;&#123;m,n&#125;&#123;0,n&#125;&#123;m,&#125;^$pat1|pat2() # 分组\\b # 嘛意思[0-9] \\d[0-9a-zA-Z_] \\w\\s # 任意空白字符\\nna*? # 这里？使用非贪婪模式（正则表达式默认工作在贪婪模式，尽可能多的去匹配）(*|+|?|&#123;&#125;)?` # 使用非贪婪模式match # 只匹配首项以开头的，与shell中^相同 进阶re模块12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; res = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; print(res)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt; # 没有匹配到打印为None&gt;&gt;&gt; res.group() # 匹配到时用.group()取出匹配结果 &apos;wxq&apos;&gt;&gt;&gt; &quot;I love wxq &quot;.find(&apos;wxq&apos;)7&gt;&gt;&gt; re.search(r&apos;.&apos;, &apos;I love digmyth.com&apos;) # 匹配任意单个字符，所以匹配到&quot;I&quot;&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\.&apos;, &apos;I love digmyth.com&apos;) # 只匹配.需要转义&lt;_sre.SRE_Match object; span=(14, 15), match=&apos;.&apos;&gt;&gt;&gt;&gt; re.search(r&apos;wx.&apos;, &apos;I love wxq.com&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;wxq&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d&apos;, &apos;I love 123 wxq&apos;) # 匹配单个数字&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt; &gt;&gt;&gt; re.search(r&apos;\\d\\d\\d&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 10), match=&apos;123&apos;&gt;&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.10&apos;) # 少一位匹配不到&gt;&gt;&gt; re.search(r&apos;\\d\\d\\d.\\d\\d\\d.\\d\\d\\d.\\d\\d\\d&apos;, &apos;192.168.100.100&apos;) # 匹配到&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.100.100&apos;&gt; 12345678910111213141516171819202122232425262728293031323334353637&gt;&gt;&gt; re.search(r&apos;[aeiou]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(3, 4), match=&apos;o&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[aeiouAEIOU]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[a-z]&apos;, &apos;I love wxq&apos;)&lt;_sre.SRE_Match object; span=(2, 3), match=&apos;l&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[2-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(8, 9), match=&apos;2&apos;&gt; &gt;&gt;&gt; re.search(r&apos;[0-9]&apos;, &apos;I love 123 wxq&apos;)&lt;_sre.SRE_Match object; span=(7, 8), match=&apos;1&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3&#125;c&apos;, &apos;abbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;abbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;ab&#123;3,10&#125;c&apos;, &apos;abbbbbc&apos;)&lt;_sre.SRE_Match object; span=(0, 7), match=&apos;abbbbbc&apos;&gt;&gt;&gt;&gt; re.search(r&apos;[0-255]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;1&apos;&gt;&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[0-2][0-5][0-5]&apos;, &apos;188&apos;) # 没有匹配到&gt;&gt;&gt; &gt;&gt;&gt; re.search(r&apos;[01]\\d\\d|2[0-2]\\d|25[0-5]&apos;, &apos;188&apos;)&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;188&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5]))&apos;, &apos;192.168.1.1&apos;) # 只匹配到192&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;192&apos;&gt;&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5])\\.&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;([01]\\d\\d|2[0-4]\\d|25[0-5]\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]\\d\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]\\d\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配不到&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.1.1&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 11), match=&apos;192.168.1.1&apos;&gt; ip地址匹配最终完美写法：12345&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;([01]?\\d?\\d|2[0-4]\\d|25[0-5])&apos;, &apos;192.168.240.240&apos;) # 匹配有误细看&lt;_sre.SRE_Match object; span=(0, 14), match=&apos;192.168.240.24&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.)&#123;3&#125;(2[0-4]\\d|25[0-5]|[0-1]?\\d?\\d)&apos;, &apos;192.168.240.240&apos;) # 这个写法完美&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;192.168.240.240&apos;&gt; [0-255]表示的是0，1，2后跟上55[0-2][0-5][0-5]只是三个占位上的数字，没有个位，百位这样的区分，当然不能匹配188了 1234567891011121314&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;3&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 重复&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1, 5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 注意没有空格&gt;&gt;&gt; re.search(r&apos;(daemon_D)&#123;1,5&#125;&apos;, &apos;daemon_Ddaemon_Ddaemon_D&apos;) # 匹配到了&lt;_sre.SRE_Match object; span=(0, 24), match=&apos;daemon_Ddaemon_Ddaemon_D&apos;&gt;&gt;&gt;&gt; s = &quot;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt;&quot;&gt;&gt;&gt; re.search(r&apos;&lt;.+?&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 6), match=&apos;&lt;html&gt;&apos;&gt;&gt;&gt;&gt; re.search(r&apos;&lt;.+&gt;&apos;, s)&lt;_sre.SRE_Match object; span=(0, 50), match=&apos;&lt;html&gt;&lt;title&gt;I love www.digmyth.com&lt;/title&gt;&lt;/html&gt; 12345&gt;&gt;&gt; re.findall(r&apos;\\bFishC\\b&apos;, &quot;FishC.com!FishC_com!(FishC)&quot;) # 待续。#^#[&apos;FishC&apos;, &apos;FishC&apos;]&gt;&gt;&gt; &gt;&gt;&gt; re.findall(r&apos;\\w&apos;, &quot;牛X工作室Love_FishC_com!)&quot;)[&apos;牛&apos;, &apos;X&apos;, &apos;工&apos;, &apos;作&apos;, &apos;室&apos;, &apos;L&apos;, &apos;o&apos;, &apos;v&apos;, &apos;e&apos;, &apos;_&apos;, &apos;F&apos;, &apos;i&apos;, &apos;s&apos;, &apos;h&apos;, &apos;C&apos;, &apos;_&apos;, &apos;c&apos;, &apos;o&apos;, &apos;m&apos;] re-replace/sub的例子如下字符串的strip方法只能去前后空格、字符串的replace方法是字符替换、re.sub方法也是替换功能。123456789&gt;&gt;&gt; name = &apos; w x q&apos;&gt;&gt;&gt; name.strip()&apos;w x q&apos;&gt;&gt;&gt; name.replace(&apos; &apos;, &apos;&apos;)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; re.sub(&apos;wxq&apos;, &apos;love&apos;, &apos;I wxq wxq wxq&apos;, count=2)&apos;I love love wxq&apos; 分组eg1:123&gt;&gt;&gt; name = re.search(r&apos;wxq&apos;, &apos;I love wxq&apos;)&gt;&gt;&gt; name.group() # .group()打印匹配对象&apos;wxq&apos; eg2:12345678910&gt;&gt;&gt; s = &apos;aa bb cc dd &apos;&gt;&gt;&gt; p = re.compile(r&apos;\\w+\\s+\\w+&apos;) # 匹配单词空格单词这样的分组&gt;&gt;&gt; p.findall(s) # 匹配分为了2组[&apos;aa bb&apos;, &apos;cc dd&apos;]&gt;&gt;&gt; p = re.compile(r&apos;(\\w+)\\s+\\w+&apos;) # 只匹配单词空格单词中括号那个单词&gt;&gt;&gt; p.findall(s)[&apos;aa&apos;, &apos;cc&apos;]&gt;&gt;&gt; p = re.compile(r&apos;((\\w+)\\s+\\w+)&apos;) # 先打印外括号，后打印内括号，先后内容组成元组，最后列表呈现&gt;&gt;&gt; p.findall(s)[(&apos;aa bb&apos;, &apos;aa&apos;), (&apos;cc dd&apos;, &apos;cc&apos;)] eg3:12&gt;&gt;&gt; re.search(&quot;(?P&lt;province&gt;[0-9]&#123;4&#125;)(?P&lt;city&gt;[0-9]&#123;2&#125;(?P&lt;birthday&gt;[0-9]&#123;4&#125;))&quot;, &quot;371481199306143242&quot;).groupdict()&#123;&apos;province&apos;: &apos;3714&apos;, &apos;birthday&apos;: &apos;1993&apos;, &apos;city&apos;: &apos;811993&apos;&#125; 切分字符串re.split用法split 以至少2个空格为分隔, 两种写法:re.split(r’\\s{2,}’, str)re.split(r’\\s\\s+’，str) 12345&gt;&gt;&gt; import re&gt;&gt;&gt; re.split(r&apos;\\s&#123;2,&#125;&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;) # 以2个空隔分割字符串返回列表[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;]&gt;&gt;&gt; re.split(r&apos;\\s\\s+&apos;, &apos;17:19:28 up 2:00, 3 users, load average: 0.01, 0.03, 0.05&apos;)[&apos;17:19:28 up&apos;, &apos;2:00,&apos;, &apos;3 users,&apos;, &apos;load average: 0.01, 0.03, 0.05&apos;] 12345678910111213# cat whodata.txt 17:24:49 up 2:05, 3 users, load average: 0.00, 0.02, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/1 192.168.109.1 15:33 9.00s 0.17s 0.04s python3&gt;&gt;&gt; import re&gt;&gt;&gt; with open(&apos;whodata.txt&apos;, &apos;r&apos;) as f:... for line in f:... res = re.split(&apos;\\s\\s+&apos;, line)... print(res)... [&apos; 17:24:49 up&apos;, &apos;2:05,&apos;, &apos;3 users,&apos;, &apos;load average: 0.00, 0.02, 0.05\\n&apos;][&apos;USER&apos;, &apos;TTY&apos;, &apos;FROM&apos;, &apos;LOGIN@&apos;, &apos;IDLE&apos;, &apos;JCPU&apos;, &apos;PCPU WHAT\\n&apos;][&apos;root&apos;, &apos;pts/1&apos;, &apos;192.168.109.1&apos;, &apos;15:33&apos;, &apos;9.00s&apos;, &apos;0.17s&apos;, &apos;0.04s python3\\n&apos;] eg1:123456789101112&gt;&gt;&gt; re.sub(&apos; &apos;, &apos;&apos;, name)&apos;wxq&apos;&gt;&gt;&gt; p = re.compile(&apos;\\.&apos;)&gt;&gt;&gt; p.split(&apos;www.digmyth.com&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; url = &apos;www.digmyth.com&apos;&gt;&gt;&gt; re.compile(&apos;\\.&apos;).split(url)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;]&gt;&gt;&gt; re.sub(&apos;www&apos;, &apos;mail&apos;, url)&apos;mail.digmyth.com&apos;&gt;&gt;&gt; url.split(&apos;.&apos;)[&apos;www&apos;, &apos;digmyth&apos;, &apos;com&apos;] eg2:123456789&gt;&gt;&gt; import re&gt;&gt;&gt; name = &apos;hello world&apos;&gt;&gt;&gt; str_a, str_b = re.split(r&apos;\\s+&apos;, name)&gt;&gt;&gt; str_a, str_b(&apos;hello&apos;, &apos;world&apos;)&gt;&gt;&gt; str_a&apos;hello&apos;&gt;&gt;&gt; str_b&apos;world&apos; eg3:123456789101112root@ubuntu:~# cat put_split.py #!/usr/bin/env python3import osimport reinput = input(&quot;enter you str: &quot;).strip()cmd, path = re.split(r&apos;\\s+&apos;, input)print(cmd.strip())print(path.strip())root@ubuntu:~# python3 put_split.py enter you str: put /root/demo.txtput/root/demo.txt 编译compile正则表达式工作流程： 检测语法–&gt; 编译–&gt; 匹配当一个正则表达式多次调用时，建议预先编译好，后续直接用于匹配以提高效率 123456789&gt;&gt;&gt; p = re.compile(r&apos;[A-Z]&apos;)&gt;&gt;&gt; type(p)&lt;class &apos;_sre.SRE_Pattern&apos;&gt;&gt;&gt;&gt; p.search(&quot;I Love www.DigMyth.Com&quot;)&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;I&apos;&gt;&gt;&gt;&gt; p.findall(&quot;I LLove www.DigMyth.Com&quot;)[&apos;I&apos;, &apos;L&apos;, &apos;L&apos;, &apos;D&apos;, &apos;M&apos;, &apos;C&apos;] 贪婪模式匹配","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-07-01-面象对象编程初级","slug":"python-07-01-面象对象编程初级","date":"2017-03-01T00:28:28.000Z","updated":"2018-02-06T09:03:55.804Z","comments":true,"path":"2017/03/01/python-07-01-面象对象编程初级/","link":"","permalink":"http://www.digmyth.com/2017/03/01/python-07-01-面象对象编程初级/","excerpt":"","text":"目录 相关概念 创建类和对象 面向对象内置变量 继承、封装、多态 抽象方法 相关概念定义： 面向对象编程(oop=object-oriented programming): 相对于面对过程编程，它只是一种编程范示。 状态和转换这种状态的操作: 状态其实就是数据，转换这种状态的操作其实就是方法 类：将同一种具体的共同特性抽象出来数据：如变量方法：函数：操作变量引用的数据的代码方法是类的组成部份，属性也是在类中定义的, 但数据是在类实例化时赋值的. 对象是类的实例，对象的某个方法的调用理解为对其发消息，或接口调用同一个类的所有对象都能接收相同的消息，也就是同种方法依赖 一个类中的方法操作另一个类的对象聚合 类A的对象包含类B的对象继承：描述特殊或具体与一般性的关系面向对象的模型机制有3原则：封装，继承，多态 类或类成员有数据和方法一个类的行为和接口是通过类的方法来定义的对象是类的实例自定义类—实例化—–对象–对象间的操作—消息传递这里消息就是调用请求 创建类和对象1234567891011121314class Foo(): data=&apos;hello world&apos; #类数据变量作用于所有实例 def __init__(self,name=&apos;default&apos;): # 构造器 self.name = name # 实例变量作用于调用对象或调用实例 def set_score(self,value): # 类方法属性 self.score = value def get_score(self): return self.scoreobj = Foo(&apos;wxq&apos;) obj.set_score(100)print(obj.get_score()) 可以给一个对象添加属性123456class Foo(): data = &apos;default data&apos;obj = Foo()obj.name = &apos;wxq&apos;print(obj.name) 可以把某个方法绑定给一个实例或 一个类，当绑定给类时，这个方法对此类的所有实例都生效方法绑定给一个实例12345678910def set_age(self,age): self.age = age class Foo(): data = &apos;default data&apos; from types import MethodTypeobj.set_age = MethodType(set_age, obj)obj.set_age(20) 方法绑定给一个类12345678910111213from types import MethodTypeclass Foo(): data = &apos;default data&apos;def set_age(self,age): self.age = ageFoo.set_age = MethodType(set_age, Foo)obj = Foo()obj.set_age(23)print(obj.age) 面向对象内置变量1 类变量作用于所有对象或实例2 实例变量作用于调用对象或调用实例3 __init__() 构造器 __del__() 析构器4 Foo.__name__ 字符串形式的类名5 Foo.__doc__ Foo的文档字符串6 Foo.__bases__ Foo的所有父类构成的元组 7Foo.moduleFoo类所在模块 8obj.classobj对象所在的类 9dir(Foo)` Foo类所有属性名组成的列表1[&apos;__class__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;__weakref__&apos;, &apos;data&apos;] 10 Foo.__dict__Foo类的所有属性组成的字典1&#123;&apos;data&apos;: &apos;hello&apos;, &apos;__weakref__&apos;: &lt;attribute &apos;__weakref__&apos; of &apos;Foo&apos; objects&gt;, &apos;__dict__&apos;: &lt;attribute &apos;__dict__&apos; of &apos;Foo&apos; objects&gt;, &apos;__init__&apos;: &lt;function Foo.__init__ at 0x0000000000ABC9D8&gt;, &apos;__module__&apos;: &apos;__main__&apos;, &apos;__doc__&apos;: None&#125; 类的继承，封装，多态3特性继承1234567891011121314class Foo(): def f1(self): return self.f2() def f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def f2(self): return &quot;Bar.f2&quot;obj = Bar()obj.f1() # 打印Bar.f2# 描述运行过程:self=obj,没有f1就先调用父类的f1,再找当前类的f2, 不是直接找父类的f2,如果非要找父类的f2,参考下面引藏示例 有时子类直接继承父类，在继承基础上重构子类属性，那么就要用到super()方法用法： super(当前类，self.).__init__()或py3 supuer().__init__() 12345678class Foo(): def __init__(self,*args,**kwargs): passclass Bar(): def __int__(self,name,*args,**kwargs): super(Bar,self).__init__() self.name = name Boolean型判断123456789判断一个类是不是另一个类的子类issubclass(CC,PP)issubclass(PP,object)判断一个实例是不是那个类生成的isinstance(ins1,CC)判断一个实例有没有那个属性值hasattr(ins1,&apos;name&apos;) 12345678from types import FunctionTypeclass Foo(): def f1(self,name): return nameobj = Foo()print(isinstance(Foo.f1,FunctionType)) # Trueprint(isinstance(obj.f1,FunctionType)) # False 封装python数据封装只要写代码就会有，对数据结构化存储; 如1234567class Base(): def __init__(self): self.status = False self.data = None self.errors = Noneobj=Base()obj.status/obj.data/obj.errors # 这就是一种数据封装 封装可以__开头隐藏属性，但在类内部不受限制，外部是无法访问的，当然只是语法变形的隐藏，在名称空间还是能找到的123456789101112131415161718class Foo(): __N = &apos;NN&apos; def __init__(self,name): self.__name = name def __f1(self): # 外部无法直接访问 return self.__name def f2(self): return self.__f1() # 在内部调用不受限制obj = Foo(&apos;wxq&apos;)print(obj.__f1()) # 无法直接调用,直正调用还是可以的obj._Foo__f1()print(obj.f2())obj.__dict__ # &#123;&apos;_Foo__name&apos;: &apos;wxq&apos;&#125;obj.__x = &quot;xx&quot; # 语法隐藏变形是在定义类时，实例化后再__不会变形obj.__xx # 实例化后不会隐藏 继承类时，我们就想调用Foo的f2(),方法很多，这里用一下隐藏实现1234567891011121314 class Foo(): def f1(self): return self.__f2() #变形为 self._Foo__f2 def __f2(self): return &quot;Foo.f2&quot;class Bar(Foo): def __f2(self): # self._Bar__f2 return &quot;Bar.f2&quot;obj = Bar()x=obj.f1() # 打印Foo.f2print(x) 多态python原生就是多态，没什么可说的 123456789101112131415161718192021222324252627class Animal(): def __init__(self,name): self.name = name def talk(self): pass @staticmethod def animal_talk(obj): obj.talk()class Dog(Animal): def talk(self): print(&quot;wang...&quot;)class Cat(Animal): def talk(self): print(&quot;miao miao...&quot;)d=Dog(&apos;dog&apos;)# d.talk()c = Cat(&apos;cat&apos;)# c.talk()Animal.animal_talk(d)Animal.animal_talk(c) 抽象方法抽象方法作用：定义子类必须实现的父类的某些方法使用：12345678910111213141516171819import abcclass Base(metaclass=abc.ABCMeta): @abc.abstractmethod def read(self): pass @abc.abstractmethod def write(self): passclass dev(Base): def read(self): pass def write(self): passobj = dev() 如果子类没有实现父类规定的@abc.abstractmethod装饰的方法就会报错1TypeError: Can&apos;t instantiate abstract class dev with abstract methods read, write","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-02-模块","slug":"python-05-02-模块","date":"2017-02-20T02:09:10.000Z","updated":"2018-01-03T10:57:43.240Z","comments":true,"path":"2017/02/20/python-05-02-模块/","link":"","permalink":"http://www.digmyth.com/2017/02/20/python-05-02-模块/","excerpt":"","text":"目录 相关概念 模块os 模块sys 模块time 模块random 模块pickle 模块json 模块logging 模块paramiko 模块configparser 模块MySQLdb 模块hashlib 模块uuid 模块md5 模块 相关概念 过程编程 , 函数式编程, 模块化编程是一个意思，区别于面向对象编程 面向对象编程好处：（特性: 封装，继承，多态） python程序可以分解成模块，语句，表达式和 对象 程序由模块构成 模块包含语句 语句包含表达式 表达式建立并处理对象表达式是”某事“， 语句是“做某事”即指令语句的特性：它们改变了事物，例如，赋值语句改变了变量，print改变了屏幕输出。 模块导入的使用 123456&gt;&gt;&gt; import platform&gt;&gt;&gt; print(platform.uname())uname_result(system=&apos;Linux&apos;, node=&apos;ubuntu&apos;, release=&apos;4.2.0-35-generic&apos;, version=&apos;#40~14.04.1-Ubuntu SMP Fri Mar 18 16:37:35 UTC 2016&apos;, machine=&apos;x86_64&apos;, processor=&apos;x86_64&apos;)&gt;&gt;&gt; import platform&gt;&gt;&gt; dir(platform)[&apos;DEV_NULL&apos;, &apos;_UNIXCONFDIR&apos;, &apos;__builtins__&apos; 此处略... ] 模块导入区别 import 导入会形成以模块名同名的名称空间，如果有个方法叫uname(),那么我们调用是print(platform.uname())加上platform名称空间前缀不会冲突 123456&gt;&gt;&gt; import random # 独立名称空间&gt;&gt;&gt; random.choice([3,5,6,7,8,9]) 7&gt;&gt;&gt; from random import choice # 没有独立名称空间，当前有choice方法会覆盖，这就是区别&gt;&gt;&gt; choice([3,5,6,7,8,9])6 from-import是导入指定模块的某些方法和属性，会导入在当前名称空间里，如果当前名称空间也有choice方法，那么会覆盖choice方法。import和from-import是可执行语句，独立可执行片断，可以嵌套在if测试中，或出现在def中，这样在我们满足条件再导入模块。 己知模块查找此模块在系统中的路径，用法module_name.__file__123&gt;&gt;&gt; import random&gt;&gt;&gt; random.__file__&apos;/usr/lib/python3.4/random.py&apos; 反射有一种说法叫反射1 以字符串的形式导入模块2 以字符串的形式调用函数 例子：12345678910111213root@apt:~# cat /usr/local/lib/python2.7/dist-packages/pkg/mysql.py#!/usr/bin/python2.7def count(): return 3306root@apt:~#In [1]: var = &apos;pkg.mysql&apos;In [2]: mode = __import__(var)In [3]: mode.mysql.count()Out[3]: 3306In [4]: func = &apos;count&apos;In [5]: Func = getattr(mode.mysql, func)In [6]: Func()Out[6]: 3306 模块osMore info 详情 模块sys利用sys模块模拟#滚动条12345678import sys,timeIn [111]: for i in range(50): .....: sys.stdout.write(&quot;\\033[32;1m#\\033[0m&quot;) .....: sys.stdout.flush() .....: time.sleep(0.05) .....: ################################################## time模块random模块博客参考 几个有用的方法1234import randomprint(random.randint(1,10)) # 取1-9print(random.randrange(1,20,2)) # 步长为2，意味着取奇数print(random.sample([1,2,3,4,5,6,7,8],3)) # 取一个3个元素的列表[3, 6, 1] 生成随机码(一)123456789checkcode = &apos;&apos;for i in range(4): current=random.randrange(0,4) if current != i: tmp = chr(random.randint(65,90)) else: tmp = random.randint(0,9) checkcode += str(tmp)print(checkcode) 生成随机码(二)1234import string# print(string.ascii_uppercase + string.ascii_lowercase+string.digits)source = string.ascii_uppercase + string.ascii_lowercase+string.digitsprint(&quot;&quot;.join(random.sample(source,4))) pickle模块pickle只是python支持，那么可以序列化python内所有数据类型 在程序运行的过程中，所有的变量都是在内存中,过程中可能改变变量，程序结束，内存变量回收。此时如果没有把修改过的变量存到磁盘上，下次程序运行又是最初的变量，怎么解决这个问题，序列化就派上用场了。 序列化： 把内存中的变量变成可存储可传输的过程称为序列化，pickling反序列化：把变量从序列化对象重新读入内存称为反序列化，unpickling pickle.dump() 序列化入文件pickle.dumps() 序列化为字符串，可赋值pickle.load() 从文件加载pickle.loads() 从字符串加载 1234567891011In [27]: import pickleIn [29]: my_listOut[29]: [0, 2, 4, 6, 8, 10]In [30]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;wb&apos;) # 打开一个文件In [31]: pickle.dump(my_list, pickle_file) # 序列化入这个文件In [32]: pickle_file.close()In [33]: pickle_file = open(&apos;/root/my_list.pkl&apos;, &apos;rb&apos;) # 打开文件In [34]: pickle.load(pickle_file) # 从一个文件加载回来Out[34]: [0, 2, 4, 6, 8, 10] 12345678910111213In [36]: import pickleIn [37]: list1 = [&apos;wxq&apos;, 11, 22,&apos;good&apos;]In [38]: dumpsed = pickle.dumps(list1)In [39]: type(dumpsed)Out[39]: builtins.bytesIn [40]: loadsed = pickle.loads(dumpsed)In [41]: loadsedOut[41]: [&apos;wxq&apos;, 11, 22, &apos;good&apos;]In [42]: type(loadsed)Out[42]: builtins.list json模块json是各语言通用的序列化数据交换格式，只支持序列化数据类型：str int float set dict list tuple JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输，并且可以直接在Web页面中读取，这也是为什么json这么通用的原因。 1234567891011121314import json# d=&#123;&quot;user&quot;:&quot;wxq&quot;&#125;## json_s=(json.dumps(d)) # 这里d是什么不管，json.dumps后是把d 序列化为符合json标准(只支持双引号)的字符串# json.loads(json_s) # json_s必须符合json双引号标准才能反序列化## json.loads(&quot;&#123;&apos;user&apos;:&apos;wxq&apos;&#125;&quot;) # 这里虽然是字符串，但里面是单引号，不符合json标准，会报错的json_s=json.dumps(&#123;&apos;user&apos;:&apos;wxq&apos;&#125;)# 可以看到这里传入的不是标准的(双引号)，但json_dumps后成为字符串&#123;&quot;user&quot;: &quot;wxq&quot;&#125;，是符合json标准(只支持双引号)的字符串。in javascriptJSON.stringfy() # 序列化JSON.parse() # 反序列化 logging模块python的logging模块提供了标准的日志接口，我们来看一下简单用法123456789101112root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;)root@apt:/tmp# python3 log.py WARNING:root:warning messageERROR:root:error message 上面的日志是直接输出，怎么才能让应用程序日志写入文件呢？ 也很简单定义一个log.py的文件12345678910111213root@apt:/tmp# cat log.py #!/usr/bin/env python3import logging#日志级别： DEGUG INFO WARNING ERROR CRITICAL#数字表示分别为 10 20 30 40 50log_file = &apos;example.log&apos;logging.basicConfig(filename=log_file,level=logging.INFO)logging.debug(&apos;program debug message ...&apos;)logging.info(&apos;info message&apos;)logging.warning(&quot;warning message&quot;)logging.error(&quot;error message&quot;) 运行一下log.py文件12345root@apt:/tmp# python3 log.pyroot@apt:/tmp# cat example.log INFO:root:info messageWARNING:root:warning messageERROR:root:error message 我们注意到logging.debug信息并没有写入，为什么呢？因为level=logging.INFO定义要写入日志的日志级别，只有达到定义的日志级别才会记录。 但是发现记录的日志太丑了，怎么样才能让打印的日志人性化呢，就需要格式化输出。 格式 说明 %(name)s Logger的名字 %(levelno)s 数字形式的日志级别 %(levelname)s 文本形式的日志级别 %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有 %(filename)s 调用日志输出函数的模块的文件名 %(module)s 调用日志输出函数的模块名 %(funcName)s 调用日志输出函数的函数名 %(lineno)d 调用日志输出函数的语句所在的代码行 %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示 %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数 %(asctime)s 字符串形式的当前时间。默认格式是 “2017-02-01 16:49:45,896”。逗号后面的是毫秒 %(thread)d 线程ID。可能没有 %(threadName)s 线程名。可能没有 %(process)d 进程ID。可能没有 %(message)s 用户输出的消息 如果想同时把log打印在屏幕和文件日志里，或者有日志切割的需求，可能要复杂些 logger提供了应用程序可以直接使用的接口； handler将(logger创建的)日志记录发什么方式输出，是屏幕还是文件，或二都都要； filter提供了细度过滤来决定哪些日志不要输出，如密码敏感信息； formatter决定日志记录的最终输出格式。 logger工作原理图 屏幕和文件都输出123456789101112131415161718192021222324252627282930import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugsh = logging.StreamHandler()sh.setLevel(logging.DEBUG)# create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;)# add formatter to sh and fhsh.setFormatter(formatter)fh.setFormatter(formatter)# add ch and fh to loggerlogger.addHandler(sh)logger.addHandler(fh)# &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;) 日志切割handlers.RotatingFileHandler：按文件大小切割handlers.TimedRotatingFileHandler： 按时间切割 示例1：1大小切割略 示例2：12345678910111213141516import loggingfrom logging import handlerlogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) 模块paramiko123456789`pycrypto-2.6.1.tar.gz`# 下载安装apt-get install python-devpython setup.py buildpython setup.py installimport Crypto`paramiko-1.10.1.tar.gz` 下载安装python setup.py buildpython setup.py installimport paramiko 模块configparser生成如下example.ini 文件，该如何做呢12345678910111213root@ubuntu:~# cat example.ini[DEFAULT]compression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes[bitbucket.org]user = wxq[topsecret.server.com]host port = 5000forwardx11 = no 编写如下脚本执行 python3 create_example.py即可 12345678910111213141516171819root@ubuntu:~# cat create_example.py #!/usr/bin/env python3#import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;wxq&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;5000&apos; # mutates the parsertopsecret[&apos;Forwardx11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;Forwardx11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 那么有了example.ini 这样的文件，如何读取呢12345678910111213141516171819202122&gt;&gt;&gt; import configparser # 导入模块&gt;&gt;&gt; config = configparser.ConfigParser() # 类实例化&gt;&gt;&gt; config.sections() # 调用类中一个方法[]&gt;&gt;&gt; config.read(&apos;example.ini&apos;) # 文件读入[&apos;example.ini&apos;]&gt;&gt;&gt; config.sections() # 除了[DEFAULT]还有哪些区块，列表呈现[&apos;bitbucket.org&apos;, &apos;topsecret.server.com&apos;]&gt;&gt;&gt; &apos;bitbucket.org&apos; in configTrue&gt;&gt;&gt; config[&apos;bitbucket.org&apos;][&apos;user&apos;] # 指定区块指定字典键对应值&apos;wxq&apos;&gt;&gt;&gt; config[&apos;DEFAULT&apos;][&apos;compression&apos;]&apos;yes&apos;&gt;&gt;&gt; for i in config[&apos;bitbucket.org&apos;]: # 指定区块打印键... print(i) # 注意：包括[DEFAULT]区块的键也在这里呈现... usercompressionserveraliveintervalcompressionlevelforwardx11 123456789&gt;&gt;&gt; d1 = config[&apos;bitbucket.org&apos;] # 指定区块读出其实是一个字典&gt;&gt;&gt; for k,v in d1.items():... print(&quot;%s = %s&quot; % (k,v))... user = wxqcompression = yesserveraliveinterval = 45compressionlevel = 9forwardx11 = yes 12345678910111213141516171819202122232425root@ubuntu:~# cat wxq.txt # 有这么一个文件[section1]k1 = v1k2: v2[section2]k1 = v111&gt;&gt;&gt; import configparser&gt;&gt;&gt; config = configparser.ConfigParser()&gt;&gt;&gt; config.read(&apos;/root/wxq.txt&apos;) # 读入这样的文件[&apos;/root/wxq.txt&apos;]&gt;&gt;&gt; config.sections() # 查看这个文件的区块[&apos;section1&apos;, &apos;section2&apos;]&gt;&gt;&gt; config.items(&apos;section1&apos;) # 查看指定区块的键值对[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;)]&gt;&gt;&gt; config.options(&apos;section1&apos;) ＃ 只显示指定区块的键[&apos;k1&apos;, &apos;k2&apos;]&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 判断某区块是否存在返回True/FalseFalse&gt;&gt;&gt; config.add_section(&apos;section3&apos;) # 添加一个区块&gt;&gt;&gt; config.has_section(&apos;section3&apos;) # 有了这个区块True&gt;&gt;&gt; config.set(&apos;section3&apos;, &apos;k1&apos;, &apos;v1&apos;) ＃ 添加一行配置，也就是设置一个区块的键值对&gt;&gt;&gt; config.write(open(&apos;wxq&apos;, &apos;w&apos;)) 12345678910root@ubuntu:~# cat wxq # 按照上面的写入会生成了一个新文件[section1]k1 = v1k2 = v2[section2]k1 = v111[section3]k1 = v1 123456&gt;&gt;&gt; config.remove_option(&apos;section3&apos;, &apos;k1&apos;) # 删除某键值对True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;))&gt;&gt;&gt; config.remove_section(&apos;section3&apos;) # 删除某区块True&gt;&gt;&gt; config.write(open(&apos;wxq.txt&apos;, &apos;w&apos;)) 模块MySQLdbpython连接数据库操作 建立数据库连接 创建游标cursor(用于发送sql语句，获取sql结果，解析返回结果) 关闭游标cursor curname.close() 关闭数据库连接 conname.close() 模块安装apt-get install python-mysqldb查看模块help(‘modules’)加载数据库模块import MySQLdb as mysql 创建连接，会生成一个con.cursor()的类con = mysql.connect(host=’127.0.0.1’,user=’root’,passwd=’dbpass’) 游标类实例化cur = con.cursor() cur.execute 传入一个参数执行sql语句cur.executemany 传入多个参数执行sql语句 cur.fetchall 查询执行后的结果返回所有cur.fetchmany查询执行后的结果返回多个cur.fetchone 查询执行后的结果返回一个游标回滚help(cur.scroll)scroll(self, value, mode=’relative’) cur.scroll(0,mode=’absolute’) hashlib模块用于加密相关操作，3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法123456789import hashlibstr = hashlib.sha1(b&apos;admin123&apos;) # python3中必须bytes格式str.hexdigest()&apos;f865b53623b121fd34ee5426c792e5c33af8c227&apos;str = hashlib.md5(b&apos;admin123&apos;)str.hexdigest()&apos;0192023a7bbd73250516f069df18b500&apos; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import hashlib m = hashlib.md5()m.update(b&quot;Hello&quot;)m.update(b&quot;It&apos;s me&quot;)print(m.digest())m.update(b&quot;It&apos;s been a long time since last time we ...&quot;) print(m.digest()) #2进制格式hashprint(len(m.hexdigest())) #16进制格式hash&apos;&apos;&apos;def digest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of binary data. &quot;&quot;&quot; pass def hexdigest(self, *args, **kwargs): # real signature unknown &quot;&quot;&quot; Return the digest value as a string of hexadecimal digits. &quot;&quot;&quot; pass &apos;&apos;&apos;import hashlib# ######## md5 ########hash = hashlib.md5()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha1 ########hash = hashlib.sha1()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha256 ########hash = hashlib.sha256()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha384 ########hash = hashlib.sha384()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) # ######## sha512 ########hash = hashlib.sha512()hash.update(b&apos;admin&apos;)print(hash.hexdigest()) python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密1234import hmach = hmac.new(b&apos;wxq&apos;)h.update(b&apos;hi&apos;)print(h.hexdigest()) 来个实用例子：注意：bytes只接收ascii的值，字符串为unicode,需转为ascii样的值，比如utf-8 1234567891011121314151617root@wxq:~# cat md5.py #!/usr/bin/env python3import hashlibimport timedef create_md5(): m = hashlib.md5() m.update(bytes(str(time.time()),encoding=&apos;utf-8&apos;)) return m.hexdigest()res = create_md5()print(res)root@wxq:~# python3 md5.py ebd8a4dd680e2e29b1a44b27b2bdd2f7root@wxq:~# python3 md5.py 4e178ffe5eaa58584434d3b519708638 更多关于md5,sha1,sha256等介绍的文章.看这里 模块uuid直接来个例子：12345678910root@wxq:~# cat create_uuid.py #!/usr/bin/env python3import uuiddef create_uuid(): return (str(uuid.uuid1()))res = create_uuid()print(res)root@wxq:~# python3 create_uuid.py 2cad772c-fe7d-11e6-b3db-3a71234db8d2 模块md512345678910111213#password=form.cleaned_data[&apos;password&apos;]from utils import md5form.cleaned_data[&apos;password&apos;]=md5(form.cleaned_data[&apos;password&apos;])app01/utils/md.pyimport hashlibdef md5(text): m = hashlib.md5() m.update(text.encode(&apos;utf-8&apos;)) # python3接收bytes格式，encode后就是bytes return m.hexdigest()if __name__ == &apos;__main__&apos;: text=&apos;123&apos; return md5(text) update可以执行多次，效果一样123m.update(b&quot;hello &quot;)m.update(b&quot;world&quot;)等同于m.update(b&quot;hello world&quot;) 模块模块模块","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-05-01-列表解析_生成器_迭代器","slug":"python-05-01-列表解析-生成器-迭代器","date":"2017-02-18T02:53:38.000Z","updated":"2018-02-06T05:22:07.452Z","comments":true,"path":"2017/02/18/python-05-01-列表解析-生成器-迭代器/","link":"","permalink":"http://www.digmyth.com/2017/02/18/python-05-01-列表解析-生成器-迭代器/","excerpt":"","text":"目录 列表解析 生成器 迭代器 列表解析什么是列表解析？定义： 基于一个列表生成另外一个列表，或动态生成一个列表。如：12345In [26]: [ i ** 2 for i in range(2,8)] # 对原列表乘以2Out[26]: [4, 9, 16, 25, 36, 49]In [25]: [ i for i in range(1,10) if i % 2 ] # 对原列表取奇数Out[25]: [1, 3, 5, 7, 9] 练习1： 有如下文件123# cat word.txtrender practice inventory indent accelerate,trigger status,wxq. 我们计算word.txt单词个数1234567891011In [29]: f = open(&apos;/root/word.txt&apos;, &apos;r&apos;)In [31]: word_list = [ word for line in f for word in line.split() ]In [36]: print(word_list)[&apos;render&apos;, &apos;practice&apos;, &apos;inventory&apos;, &apos;indent&apos;, &apos;accelerate,&apos;, &apos;trigger&apos;, &apos;status,wxq.&apos;]In [37]: f.seek(0) # 上面读取过文件，指针己然在最后了，这里是把指针移到文件首部Out[37]: 0In [38]: len([ word for line in f for word in line.split() ]) # 计算结果为7Out[38]: 7 我们计算word.txt非空白字符数12345In [37]: f.seek(0) # 把指针移到文件首部Out[37]: 0In [41]: sum([ len(word) for line in f for word in line.split() ])Out[41]: 58 练习2： 打印一个3行5列的矩阵123In [45]: list1 = [ (x+1, y+1) for x in range(3) for y in range(5) ]In [47]: print(list1)[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5)] 练习3：123&gt;&gt;&gt; d = &#123;&apos;x&apos;: &apos;A&apos;, &apos;y&apos;: &apos;B&apos;, &apos;z&apos;: &apos;C&apos; &#125;&gt;&gt;&gt; [k + &apos;=&apos; + v for k, v in d.items()][&apos;y=B&apos;, &apos;x=A&apos;, &apos;z=C&apos;] 练习4：1234In [61]: L = [&apos;I&apos;, &apos;WILL&apos;, &apos;STUDY&apos;, &apos;HARD&apos;, &apos;PYTHON&apos;]In [62]: [ s.capitalize() for s in L ]Out[62]: [&apos;I&apos;, &apos;Will&apos;, &apos;Study&apos;, &apos;Hard&apos;, &apos;Python&apos;] 生成器列表解析会创建完整列表占用内存，那么有没有一种算法或机制让我们循环使用时推算出后续元素，这样节省了内存空间。定义：这种边循环边计算的机制，称为生成器generator 创建一个生成器，其中一个方法就是把前面的列表解析[] 换成()123456789101112131415161718192021222324In [107]: g = (i for i in range(4))In [108]: gOut[108]: &lt;generator object &lt;genexpr&gt; at 0x7f98a27ba150&gt;In [117]: g.send(None) Out[117]: 0In [118]: g.send(None)Out[118]: 1In [119]: next(g)Out[119]: 2In [120]: next(g)Out[120]: 3In [122]: next(g)---------------------------------------------------------------------------StopIteration Traceback (most recent call last)&lt;ipython-input-122-5f315c5de15b&gt; in &lt;module&gt;()----&gt; 1 next(g)StopIteration: 利用yield创建一个生成器，取出完整元素需要用for 循环来迭代1234567891011In [123]: def genNum(x): .....: i = 0 .....: while i &lt; x: .....: yield i .....: i += 1 In [124]: g = genNum(5)In [136]: for i in g: .....: print(i, end=&apos; &apos;) .....: 0 1 2 3 4 来看一下yield工作细节1234567891011121314151617In [138]: def consumer(): .....: print(&quot;yield starting&quot;) .....: m = yield 5 .....: print(&quot;m_values: %s&quot; % m) .....: n = yield 12 .....: print(&quot;Game over&quot;) .....: In [139]: c = consumer()In [140]: c.send(None)yield startingOut[140]: 5In [141]: c.send(&apos;to be brave&apos;)m_values: to be braveOut[141]: 12 小结: c.send(None)遇到第一个yield停止，在解释器中out yield中的值，在python yield.py却不会. c.send(‘to be brave’)会上次中止处继续，’to be brave’会赋值给yield 5,即m = ‘to be brave’, 遇到第二个yield停止. g.send(None)启动迭代器，遇到第一个yield返回.1234567891011121314151617root@apt:~/script_study# cat yield.py #!/usr/bin/env python3#def h(): print(&quot;yield starting&quot;) m = yield 5 print(&quot;m_values: %s&quot; % m) d = yield 12 print(&apos;Game over&apos;) c = h()# print test infoc.send(None)c.send(&apos;Fighting!&apos;)root@apt:~/script_study# python3 yield.py yield startingm_values: Fighting! 后面协程正是用的这个知识点。 迭代器细心的朋友不难发现生成器可以被next()函数不断调用并返回下一个值，直到最后抛出StopIteration错误表示无法继续返回下一个值为止。 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 可以直接作用于for循环的对象统称为可迭代对象：Iterable 哪些是可迭代对象呢？或说可作用于for循环呢？有以下几种数据类型： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function。 可以使用isinstance()判断一个对象是否是Iterable对象：1234567891011&gt;&gt;&gt; from collections import Iterable&gt;&gt;&gt; isinstance([], Iterable)True&gt;&gt;&gt; isinstance(&#123;&#125;, Iterable)True&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterable)True&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)True&gt;&gt;&gt; isinstance(100, Iterable)False 可以使用isinstance()判断一个对象是否是Iterator对象：123456789&gt;&gt;&gt; from collections import Iterator&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)True&gt;&gt;&gt; isinstance([], Iterator)False&gt;&gt;&gt; isinstance(&#123;&#125;, Iterator)False&gt;&gt;&gt; isinstance(&apos;abc&apos;, Iterator)False 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 把list、dict、str等Iterable变成Iterator可以使用iter()函数：1234&gt;&gt;&gt; isinstance(iter([]), Iterator)True&gt;&gt;&gt; isinstance(iter(&apos;abc&apos;), Iterator)True 为什么list、dict、str等数据类型不是Iterator 呢？ 这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。 Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。 Python的for循环本质上就是通过不断调用next()函数实现的，例如： for x in [1, 2, 3, 4, 5]: pass实际上完全等价于：12345678910# 首先获得Iterator对象:it = iter([1, 2, 3, 4, 5])# 循环:while True: try: # 获得下一个值: x = next(it) except StopIteration: # 遇到StopIteration就退出循环 break 总结1234567凡是可作用于for循环的对象都是Iterable类型；凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。迭代器：能够作用于next()函数，不断向后返回值，称为迭代器 iter([1,2,3,4])生成器：yield返回，并且可以next(),是一种特殊的迭代器可迭代对象：一个类中有__iter__()方法，并返回迭代器(包括生成器),那么这个类的对象就是可迭代对象，可for循环","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"web-01-开发入门","slug":"web-01-开发入门","date":"2017-02-15T12:51:41.000Z","updated":"2018-01-18T03:54:37.780Z","comments":true,"path":"2017/02/15/web-01-开发入门/","link":"","permalink":"http://www.digmyth.com/2017/02/15/web-01-开发入门/","excerpt":"","text":"前言从现在开始，此时此刻写点web开发和Django 的知识，便于以后查阅学习。廖雪峰老师的博客写得特别好，我也是摘抄参考其内容。廖雪峰老师博客原文 一. HTTP协议简介web历程web开发经历几个阶段1 静态页面: 直接由编辑器生成静态html2 CGI: 交互与动态数据处理出现了CGI（common gateway interface）,由C/C++编写3 脚本语言（ASP/JSP/PHP）: 脚本语言开发效率高，与html结合紧密4 框架：mvc mtv mvvm HTTP协议服务器把网页传给浏览器，实际上就是把网页的html代码发送给浏览器，让浏览器显示出来。而浏览器和服务器之间的传输协议就是HTTP HTML是一种用来定义网页的文本，会HTML就会编写网页http是在网络上传输html的协议，用于浏览器和服务器的通信 Elements显示网页的结构，Network显示浏览器和服务器的通信。我们点Network，确保第一个小红灯亮着，Chrome就会记录所有浏览器和服务器之间的通信。 GET / HTTP/1.1： 注：1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐 当浏览器读取到新浪首页的HTML源码后，它会解析HTML，显示页面，然后，根据HTML里面的各种链接，再发送HTTP请求给新浪服务器，拿到相应的图片、视频、Flash、JavaScript脚本、CSS等各种资源，最终显示出一个完整的页面。所以我们在Network下面能看到很多额外的HTTP请求。 HTTP请求流程步骤1：浏览器向服务器发送http请求 方法：GET仅请求资源 POST 会附带用户数据body部份 路径; /full/url/path 域名： 步骤2：服务器向浏览器返回HTTP响应 响应代码：200表示成功 3** 表示重定向 4** 表示客户端发送的请求有错误 5** 表示服务器处理错误 响应类型： 由Content-Type指定 通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中 步骤3：如果浏览器还需要继续向服务器请求其他资源，比如图片，就再次发出HTTP请求，重复步骤1、2 Web采用的HTTP协议采用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们只需要在HTTP请求中把HTML发送出去，不需要考虑如何附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源 HTTP协议同时具备极强的扩展性，虽然浏览器请求的是http://www.sina.com.cn/的首页，但是新浪在HTML中可以链入其他服务器的资源，比如&lt;img src=&quot;#url&quot;/&gt;，从而将请求压力分散到各个服务器上，并且一个站点可以链接到其他站点，无数个站点互相链接起来，就形成了World Wide Web，简称WWW。 二. HTML简介HTML是一种用来定义网页的文本，会HTML就会编写网页 。其它前端知识不在这里展开。略。。。 三 . WSGI接口了解了HTTP协议和HTML文档，我们其实就明白了一个Web应用的本质就是：浏览器发送一个HTTP请求；服务器收到请求，生成一个HTML文档；服务器把HTML文档作为HTTP响应的Body发送给浏览器；浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。 所以，最简单的Web应用就是先把HTML用文件保存好，用一个现成的HTTP服务器软件，接收用户请求，从文件中读取HTML，返回。Apache、Nginx、Lighttpd等这些常见的静态服务器就是干这件事情的。 如果要动态生成HTML，就需要把上述步骤自己来实现。不过，接受HTTP请求、解析HTTP请求、发送HTTP响应都是苦力活，如果我们自己来写这些底层代码，还没开始写动态HTML呢，就得花个把月去读HTTP规范。 正确的做法是底层代码由专门的服务器软件实现，我们用Python专注于生成HTML文档。因为我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。 这个接口就是WSGI：Web Server Gateway Interface。 WSGI接口定义非常简单，它只要求Web开发者实现一个函数，就可以响应HTTP请求。我们来看一个最简单的Web版本的“Hello, web!”：123def application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数： environ：一个包含所有HTTP请求信息的dict对象；start_response：一个发送HTTP响应的函数。 在application()函数中，调用：start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;, &#39;text/html&#39;)])就发送了HTTP响应的Header，注意Header只能发送一次，也就是只能调用一次start_response()函数。start_response()函数接收两个参数，一个是HTTP响应码，一个是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示。 通常情况下，都应该把Content-Type头发送给浏览器。其他很多常用的HTTP Header也应该发送。然后，函数的返回值b&#39;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#39;将作为HTTP响应的Body发送给浏览器。 有了WSGI，我们关心的就是如何从environ这个dict对象拿到HTTP请求信息，然后构造HTML，通过start_response()发送Header，最后返回Body。 整个application()函数本身没有涉及到任何解析HTTP的部分，也就是说，底层代码不需要我们自己编写，我们只负责在更高层次上考虑如何响应请求就可以了。 不过，等等，这个application()函数怎么调用？如果我们自己调用，两个参数environ和start_response我们没法提供，返回的bytes也没法发给浏览器。 所以application()函数必须由WSGI服务器来调用。有很多符合WSGI规范的服务器，我们可以挑选一个来用。但是现在，我们只想尽快测试一下我们编写的application()函数真的可以把HTML输出到浏览器，所以，要赶紧找一个最简单的WSGI服务器，把我们的Web应用程序跑起来。 好消息是Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。 运行WSGI服务我们先编写hello.py，实现Web应用程序的WSGI处理函数：12345# hello.pydef application(environ, start_response): start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;, &apos;text/html&apos;)]) return [b&apos;&lt;h1&gt;Hello, web!&lt;/h1&gt;&apos;] 然后，再编写一个server.py，负责启动WSGI服务器，加载application()函数：12345678910111213# server.py# 从wsgiref模块导入:from wsgiref.simple_server import make_server# 导入我们自己编写的application函数:from hello import application# 创建一个服务器，IP地址为空，端口是8000，处理函数是application:httpd = make_server(&apos;&apos;, 8000, application)print(&apos;Serving HTTP on port 8000...&apos;)# 开始监听HTTP请求:httpd.serve_forever()确保以上两个文件在同一个目录下，然后在命令行输入python server.py来启动WSGI服务器：python server.py 执行程序启动 四 web 框架了解了WSGI框架，我们发现：其实一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。 但是如何处理HTTP请求不是问题，问题是如何处理100个不同的URL。方法是一个函数处理一个URL, 我们专注于写业务处理函数，URL和函数对应关系交给web框架完成，这就是 web框架其中一个价值。","categories":[{"name":"WebDjango开发","slug":"WebDjango开发","permalink":"http://www.digmyth.com/categories/WebDjango开发/"}],"tags":[]},{"title":"python-04-01-装饰器","slug":"python-04-01-装饰器","date":"2017-02-04T10:08:26.000Z","updated":"2017-03-01T12:12:35.805Z","comments":true,"path":"2017/02/04/python-04-01-装饰器/","link":"","permalink":"http://www.digmyth.com/2017/02/04/python-04-01-装饰器/","excerpt":"","text":"目录 装饰器 Python装饰器，英文decorator, 以被装饰函数作为参数对其装饰。这里会用到函数，我们可以像使用变量一样使用函数，函数有对象一致特性。 函数可以被赋值给其它变量 函数可以内部再定义函数 函数可以作为参数传递给另外一个函数 函数可以直接返回给外层函数 简单函数进行装饰有这么一个函数12def hello(): return &apos;hello world&apos; 我们想在不修改原函数的情况下，让函数返回特定标签1234def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper 我们定义了一个函数maketag(),该函数有一个参数func,这个参数必须是一个函数，内部又定义了一个wrapper()函数，并直接返回给maketag()123&gt;&gt;&gt; hello = maketag(hello) # 将 hello 函数传给 maketag&gt;&gt;&gt; hello()&apos;&lt;h&gt;hello world&lt;/h&gt;&apos; 上面我们把最初hello函数传给maketag()函数并将返回赋值给变量hello,此时调用hello得到我们想要的结果。注意： maketag()返回赋值给hello,hello函数本身还存在，但函数名引用己经变为了maketag返回函数的名称wrapper,不在是原来的hello,验证一下1234567In [6]: a = maketag(hello)In [8]: a.__name__Out[8]: &apos;wrapper&apos;In [9]: hello = maketag(hello)In [10]: hello.__name__Out[10]: &apos;wrapper&apos; 总结一下：为了增强原函数hello的功能定义了一个maketag函数，它接收一个函数作为参数，maketag返回一个新的函数赋值给一个变量hello,然后hello可直接调用。 一般情况下，我们使用装饰器提供的 @ 语法糖（Syntactic Sugar）来简化上面的写法：12345678def maketag(func): def wrapper(): return &quot;&lt;h&gt;&quot; + func() + &quot;&lt;/h&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 像上面的情况，可以动态修改函数（或类）功能的函数就是装饰器。本质上，它是一个高阶函数，以被装饰的函数（比如上面的 hello）为参数，并返回一个包装后的函数（比如上面的 wrapper）给被装饰函数（hello）。 单/多个装饰器的使用形式装饰器的一般使用形式如下：12345678@decoratordef func(): pass等价于下面的形式：def func(): passfunc = decorator(func) 装饰器可以定义多个，离函数定义最近的装饰器先被调用，比如：12345678910@decorator_one@decorator_twodef func(): pass等价于：def func(): passfunc = decorator_one(decorator_two(func)) 看下多个装饰器的例子，为了简单起见，下面的例子就不使用带参数的装饰器。1234567891011121314def maketag1(func): def wrapper(): return &apos;&lt;html&gt;&apos; + func() + &apos;&lt;/html&gt;&apos; return wrapper def maketag2(func): def wrapper(): return &apos;&lt;i&gt;&apos; + func() + &apos;&lt;/i&gt;&apos; return wrapper@maketag1@maketag2def hello(): return &apos;hello world&apos; 上面定义了两个装饰器，对 hello 进行装饰，上面的最后几行代码相当于：12345678def hello(): return &apos;hello world&apos; hello = maketag1(maketag2(hello))调用函数 hello：&gt;&gt;&gt; hello() &apos;&lt;html&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/html&gt;&apos; 似乎理解深刻了：当多个装饰器时，离函数定义最近的装饰器先被调用 对带参数的函数进行装饰让被装饰函数带有参数，对前面例子中的 hello() 函数进行改写使其带参数，如下： 12345678910111213def maketag(func): def wrapper(*args, **kwargs): res = func(*args, **kwargs) return &apos;&lt;h&gt;&apos; + res + &apos;&lt;/h&gt;&apos; return wrapper@maketagdef hello(name): return &apos;hello %s&apos; % name @maketagdef hello2(name1=&apos;user1&apos;, name2=&apos;user2&apos;): return &apos;hello %s, %s&apos; % (name1, name2) 由于函数 hello 带参数，因此内嵌包装函数 wrapper 也做了一点改变： 内嵌包装函数的参数传给了 func，即被装饰函数，也就是说内嵌包装函数的参数跟被装饰函数的参数对应，这里使用了 (*args, **kwargs)，是为了适应可变参数。看看使用：1234&gt;&gt;&gt; hello1(&apos;python&apos;)&apos;&lt;h&gt;hello python&lt;/h&gt;&apos;&gt;&gt;&gt; hello2(&apos;python&apos;, &apos;java&apos;)&apos;&lt;h&gt;hello python, java&lt;/h&gt;&apos; 带参数的装饰器装饰器还可以带参数，比如：123456789@decorator(args1, args2)def func(): pass等价于：def func(): passfunc = decorator(args1, args2)(func) 我们想改用标签 &lt;html&gt;...&lt;/html&gt; 是不是要再定义一个装饰器呢？不必，其实我们可以装饰器外层再定义一个函数，将标签作为参数，返回一个装饰器，比如：12345678def outer_decorator(tag): # 外层函数参数传给装饰器 def decorator(func): # 真正的装饰器参数必然是被装饰器函数func def wrapper(*args, **kwargs): # 装饰器内层函数的参数是func的参数 res = func(*args, **kwargs) # 被装饰函数正常调用# return &apos;&lt;&apos; + tag + &apos;&gt;&apos; + res + &apos;&lt;/&apos; + tag + &apos;&gt;&apos; return &apos;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&apos;.format(tag=tag, res=res) return wrapper # 内层函数作返回值返回给装饰器 return decorator # 装饰器本身作为返回值返回给最外层函数 现在，我们可以根据需要生成想要的装饰器了：1234567outer_decorator = outer_decorator(&apos;html&apos;)@outer_decoratordef hello(name): return &apos;hello %s&apos; % name &gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 上面的形式也可以写得更加简洁：123@outer_decorator(&apos;html&apos;) # @语法糖syntactic sugardef hello(name): return &apos;hello, %s&apos; % name 这就是带参数的装饰器，其实就是在装饰器外面多了一层包装，根据不同的参数返回不同的装饰器。 基于类的装饰器前面的装饰器都是一个函数，其实也可以基于类定义装饰器，看下面的例子：12345678910111213class Deco_C(object): def __init__(self, func): self.func = func def __call__(self, *args, **kwargs): return &apos;&lt;html&gt;&apos; + self.func(*args, **kwargs) + &apos;&lt;/html&gt;&apos;@Deco_Cdef hello(name): return &apos;hello %s&apos; % name&gt;&gt;&gt; hello(&apos;world&apos;)&apos;&lt;html&gt;hello world&lt;/html&gt;&apos; 可以看到，类 Deco_C 有两个方法： __init__()：它接收一个函数作为参数，也就是被装饰的函数__call__()：让类对象可调用，就像函数调用一样，在调用被装饰函数时被调用还可以让类装饰器带参数： 123456789101112131415class Tag(object): def __init__(self, tag): self.tag = tag def __call__(self, func): def wrapper(*args, **kwargs): return &quot;&lt;&#123;tag&#125;&gt;&#123;res&#125;&lt;/&#123;tag&#125;&gt;&quot;.format(res=func(*args, **kwargs), tag=self.tag) return wrapper@Tag(&apos;html&apos;)def hello(name): return &apos;hello %s&apos; % name&gt;&gt; hello(&apos;, welcome&apos;)&apos;&lt;html&gt;hello, welcome&lt;/html&gt;&apos; 需要注意的是，如果类装饰器有参数，则 init 接收此参数，而 call 接收 func函数，并多了一层wrapper(*args, **kwargs)来接收func函数的参数。 装饰器的副作用前面提到装饰器有一个瑕疵，就是被装饰函数的函数名称已经不是原来的名称了，回到最开始的例子：12345678def maketagc(func): def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos; 函数 hello 被 maketag 装饰后，它的函数名称已经改变了：12&gt;&gt;&gt; hello.__name__&apos;wrapper&apos; 为了消除这样的副作用，Python 中的 functool 包提供了一个 wraps 的装饰器：1234567891011121314from functools import wrapsdef maketag(func): @wraps(func) # 加上 wraps 装饰器 def wrapper(): return &quot;&lt;i&gt;&quot; + func() + &quot;&lt;/i&gt;&quot; return wrapper@maketagdef hello(): return &apos;hello world&apos;&gt;&gt;&gt; hello.__name__&apos;hello&apos; 小结:本质上，装饰器就是一个有返回函数的高阶函数。装饰器可以动态地修改一个类或函数的功能，通过在原有的类或者函数上包裹一层修饰类或修饰函数实现。事实上，装饰器就是闭包的一种应用，但它比较特别，以被装饰函数为参数，并返回一个函数，赋给被装饰函数，闭包则没这种限制。 装饰器生产化进阶eg1:1234567891011121314def deco(func): def wrapper(x): print(&quot;what ...&quot;) func(x) print(&apos;Game over ...&apos;) return wrapper@decodef show(x): print(x)&gt;&gt;&gt;show(&quot;I am a pythoner&quot;)what ...I am a pythonerGame over ... eg2:","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"Mysql 基础篇","slug":"mysql-基础篇","date":"2017-01-29T01:41:54.000Z","updated":"2017-11-19T10:00:09.447Z","comments":true,"path":"2017/01/29/mysql-基础篇/","link":"","permalink":"http://www.digmyth.com/2017/01/29/mysql-基础篇/","excerpt":"","text":"目录 知识扫盲 基础语句 主键、外键 修改表 分组与聚合 连表查询 其它查询 shell终端获取数据 数据库操作无非就是insert`deleteupdateselete,这篇博客对mysql`数据库语句做个总结记录便于学习 知识扫盲 什么是事务： 原子性操作(不可拆分)就是要么全成功，要么全失败。 mysql语句的注释符是 --，在SQL注入或别的场景中语句形如：username=”root” and 1 =1 – and password=’123’很明显 username=&quot;root&quot; and 1 =1将永远成立， and password=’123’ 部份将被注释，这点需要注意。 基础语句基础语句过于简单，这里就简单逻列下。 创建数据库1CREATE DATABASE db1 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; 创建一张表注意：auto_increment表示自增，primary key 表示id 这列为主键default charset utf8指定默认字符集engine=innodb指定因默认引警 1234create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 插入数据1insert into tb1(name,age) values(&apos;wxq&apos;,20),(&apos;pp&apos;,18); 更改数据1update tb1 set age=25 where name=&apos;wxq&apos;; 删除某条数据1delete from tb1 where id&gt;1; 删除表内所有数据12delete from 表名 # 不会删除自增序列truncate table 表名 # 会删除自增序列，再次插入数据将从0开始，删除更辙底 删除表1drop table tb1 主键12345主键create table tb1(id int not null auto_increment primary key,name char(20) not null,age int) engine=innodb default charset utf8; 123456组合主键create table tb1( nid int not null, num int not null, primary key(nid,num) ) 外键1constraint fk_任意字符 foreign key (department_id自己字段) references department外面的表(nid外面表的字段) 12345678外键(约束):一对多 create table tb1( id int not null primary key, name char(32) null , age int not null, department_id int not null constraint fk_department_nid foreign key (department_id) references department(nid) ) 双向外键（约束）：多对对创建主机与部门之间的多对多关系12345678910111213141516create table host (id int not null auto_increatement primary key,host char(20) not null );create table department(id int not null auto_increatement primary key,title char(20) not null);create table de_2_host (id int not null auto_increatement primary key,hid int not null,did int not null,constraint fk_hid_host foreign key (hid) references host(id)，constraint fk_did_department foreign key (did) references department(id)) 修改表1234567891011121314151617添加列：alter table 表名 add 列名 类型删除列：alter table 表名 drop column 列名修改列： alter table 表名 modify column 列名 类型; -- 类型 alter table 表名 change 原列名 新列名 类型; -- 列名，类型 添加主键： alter table 表名 add primary key(列名);删除主键： alter table 表名 drop primary key; alter table 表名 modify 列名 int, drop primary key; 添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);删除外键：alter table 表名 drop foreign key 外键名称 修改默认值：ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT; 1234show variables like &apos;%char%&apos;; 查看整个mysql字符集show create table migrate_version; 查看表字符集alter table migrate_version character set utf8; 设置表字符集或者如下条：alter table migrate_version default character set utf8 collate utf8_general_ci; 分组与聚合group by - 对列进行聚合 sum(sid),max(sid),min(sid),count(sid) - 聚合条件过滤,having count(sid) &gt; 7 123456789分组 select num from 表 group by num select num,nid from 表 group by num,nid select num,nid from 表 where nid &gt; 10 group by num,nid order nid desc select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid select num from 表 group by num having max(id) &gt; 10 特别的：group by 必须在where之后，order by之前 连表查询示例1234select A.sid,A.sname,B.captionfrom student as A left join class as B on A.class_id = class.cid; left join 表名 on 多出的数据将会出现NULL数据 rigth join 表名 on 相对left 只是表位置变化，其它没有区别 inner join 表名 on 不会出现NULL数据，没有关联的数据将不会显示 1234567891011121314151617181920连表 无对应关系则不显示 select A.num, A.name, B.name from A,B Where A.nid = B.nid 无对应关系则不显示 select A.num, A.name, B.name from A inner join B on A.nid = B.nid A表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A left join B on A.nid = B.nid B表所有显示，如果B中无对应关系，则值为null select A.num, A.name, B.name from A right join B on A.nid = B.nid 其它查询12345678910111213141516171819202122232425262728293031323334353637a、条件 select * from 表 where id &gt; 1 and name != &apos;wxq&apos; and num = 12; select * from 表 where id between 5 and 16; select * from 表 where id in (11,22,33) select * from 表 where id not in (11,22,33) select distinct name from 表 where id in (select nid from 表) # distinct重复数所将只显示一条 b、通配符 select * from 表 where name like &apos;wxq%&apos; - wxq开头的所有（多个字符串） select * from 表 where name like &apos;wx_&apos; - wx开头的所有（一个字符） c、限制 select * from 表 limit 5; - 前5行 select * from 表 limit 4,5; - 从第4行开始的5行 select * from 表 limit 5 offset 4 - 从第4行开始的5行 d、排序 select * from 表 order by 列 asc - 根据 “列” 从小到大排列 select * from 表 order by 列 desc - 根据 “列” 从大到小排列 select * from 表 order by 列1 desc,列2 asc - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序 e、组合 组合，自动处理重合 select nickname from A union select name from B 组合，不处理重合 select nickname from A union all select name from B shell终端获取数据下面介绍在shell终端获取mysql的几种方法 用法一：123456[root@mysql ~]# mysql -p123 -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+---------------+-------+| Variable_name | Value |+---------------+-------+| Uptime | 8025 |+---------------+-------+ 用法二：1234[root@mysql ~]# mysql -p123 -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;+--------+------+| Uptime | 8029 |+--------+------+ 用法三：12[root@mysql ~]# mysql -p123 -s -N -e &quot;show global status where variable_name=&apos;uptime&apos;&quot;Uptime 8037 用法四：12[root@mysql ~]# echo &quot;show global status where variable_name=&apos;uptime&apos;;&quot; | mysql -N -p123Uptime 8072 123456789# echo &quot;show databases;&quot; | mysql -h 127.0.0.1 -uroot -A -p123 | tail -n +2 | head -n 2 -A 表示不自动rehash tail -n +2 表示从第二行开始打印 head -n 2表示打印前2行# echo &quot;use nova01 ; show tables;&quot; | mysql -uroot -padmin# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock -e &quot;use nova01;show tables;&quot;# mysql -uroot -padmin -S /var/run/mysqld/mysqld.sock \\ -e &quot;grant all on *.* to user1@&apos;localhost&apos; identified by \\&quot;user1\\&quot;;&quot;","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.digmyth.com/categories/Mysql/"}],"tags":[]},{"title":"shell getopts语法","slug":"shell-getopts语法","date":"2017-01-29T01:41:54.000Z","updated":"2018-04-23T06:58:29.638Z","comments":true,"path":"2017/01/29/shell-getopts语法/","link":"","permalink":"http://www.digmyth.com/2017/01/29/shell-getopts语法/","excerpt":"","text":"Linux shell中getopts语法是一个很高级的语法，它能让你写出很漂亮的shell,来看个例子学习下 12345678910111213141516171819202122232425262728293031323334353637root@ubuntu:~# cat getopts.sh #!/bin/bash# a: b: c: 表示脚本运行时接受选项&lt;-a options_1&gt; &lt;-b options_2&gt; &lt;-c options_3&gt;# first: 表示友好， 给出错误选项时尽量少的打印错误信息# OPTARG 表示选项给的值# OPTIND 表示选项指针（下一位）# 比如：(-a 指针为2) (-a a1 -b 指针为4) (-a a1 -b b1 -c c1指针为7)while getopts &quot;:a:b:c:&quot; OPT;docase $OPT in a) echo &quot;a is OPTARG: $OPTARG&quot; echo &quot;a is OPTIND: $OPTIND&quot; ;; b) echo &quot;b is OPTARG: $OPTARG&quot; echo &quot;b is OPTIND: $OPTIND&quot; ;; c) echo &quot;c is OPTARG: $OPTARG&quot; echo &quot;c is OPTIND: $OPTIND&quot; ;; *) echo &quot;Usage: $0 [-a arg1] [-b arg2] [-c arg3]&quot;esacdoneshift $(($OPTIND-1))echo &quot;\\$1 is: $1&quot;root@ubuntu:~# bash getopts.sh -a a1 -b b1 -c c1 test.sha is OPTARG: a1a is OPTIND: 3b is OPTARG: b1b is OPTIND: 5c is OPTARG: c1c is OPTIND: 7$1 is: test.sh","categories":[{"name":"Shell","slug":"Shell","permalink":"http://www.digmyth.com/categories/Shell/"}],"tags":[]},{"title":"python-03-02-函数","slug":"python-03-02-函数","date":"2017-01-23T12:42:06.000Z","updated":"2017-02-20T10:41:23.378Z","comments":true,"path":"2017/01/23/python-03-02-函数/","link":"","permalink":"http://www.digmyth.com/2017/01/23/python-03-02-函数/","excerpt":"","text":"目录 函数概念 普通函数 匿名函数 递归函数 闭包 高阶函数 函数概念什么是函数 函数是python为了代码最大程度地重用和最小化代码冗余而提供的基本程序结构 函数是一种设计工具，它能让程序员将复杂的程序逻辑分解为可管理的部件 函数用于将相关功能打包并参数化，一个函数可以当参数传给变量或另一个函数 python自带有许多内置函数 在python有4种函数表现形式：1234全局函数： 定义在模块中局部函数：嵌套于其它函数中lambda函数：表达式，可以出现在任意表达式可以出现的地方(又称匿名函名)方法：定义在类中与特定数据类型关联的函数，并且只能与数据类型关联一起使用. 函数语法 函数代码表现12def functionName(parameters): 函数主体代码 相关概念def 是一个可执行语句,因此可以出现在任意语句可以出现的地方，甚至可以嵌套于其它if/while语句中def 创建了一个对象并将其赋值给一个变量名，也就是函数名return 用于返回结果对象,其为可选,无return语句时函数自动返回None对象,多个返回值时用逗号分隔，并组合为元组形式返回一个对象def 语句运行之后可以在程序中通过函数后附加括号的形式进行调用 普通函数函数传参内置函数官方 详解More info 动我试试 Built-in Functions abs() dict() help() main() setattr() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() eval() int() open() str() bool() exec() isinstance() ord () sum() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() __import__() complex() hasattr() max() round() delattr() hash() memoryview() set() 拿几个作下说明：123456789101112131415ASCII编码表查询：ord(&apos;a&apos;) 字符在编码表中的数字表示chr(97) 数字在编码表中的字符表示global() 查看全局变量locals() 查看局部变量vars() 无参数时等于locals(), 有参数时vars(a) == a.__dict__ (__dict__一个对象的属性)eval() 把字符串形式的表达式解析并扫行exec() 把字符串形式的代码解析并执行compile()把文件的代码加载进来，按 eval, exec方式解析并执行# 以字符串的形式导入模块, 后面模块章节也会讲到__import__()用法mode = &apos;module_name&apos;__import__(mode) 123456789101112131415161718192021222324all()与any()区别：all:传入一个可迭代对象，对其中每个元素求bool(x),所有返回True,则返回Tru迭代对象为空时返回True，注意是为空如[]，不是空元素如[&apos;&apos;]any:传入一个可迭代对象，对其中每个元素求bool(x),任意一个返回True，则返回True迭代对象为空时，返回Falsedef all(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for all values x in the iterable. If the iterable is empty, return True. &quot;&quot;&quot; passdef any(*args, **kwargs): # real signature unknown &quot;&quot;&quot; Return True if bool(x) is True for any x in the iterable. If the iterable is empty, return False. &quot;&quot;&quot; pass 匿名函数123In [31]: f = (lambda x,y,z=10: x+y+z) # 匿名函数也支持默认参数 In [32]: f(4,9)Out[32]: 23 123456In [56]: L = [ (lambda x: x*2),(lambda y: y*3) ] # 匿名函数可以出现在任意表达式可以出现的地方In [56]: for i in L: ....: print(i(4)) ....: 812 递归函数定义： 一个函数的自我循环调用称为递归 阶乘 123456&gt;&gt;&gt; def fact(x):... if x &lt;= 1: return 1... else: return x * fact(x-1)... &gt;&gt;&gt; fact(4)24 汉诺塔汉诺塔： 是一个传说，大概意思就是说把一个柱子上的盘子通过第二根柱子移到第三根柱子上。。未完。。。 123456789101112131415161718192021root@ubuntu:~# cat hanoi.py #!/usr/bin/env python3def move(n, a, b, c): if n == 1: print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) else: move(n-1, a, c, b) print(&apos;move&apos;, a, &apos;--&gt;&apos;, c) move(n-1, b, a, c)n = int(input(&quot;input: &quot;))move(n, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;)root@ubuntu:~# python3 hanoi.py input: 3move A --&gt; Cmove A --&gt; Bmove C --&gt; Bmove A --&gt; Cmove B --&gt; Amove B --&gt; Cmove A --&gt; C 斐波那契数列 123456789101112131415161718root@ubuntu:~# cat fibonacci.py #!/usr/bin/env python3def fibonacci(): a = b = 1 yield a yield b while True: a, b = b, a+b yield bfor num in fibonacci(): if num &gt; 100: break print(num, end=&apos; &apos;)print()root@ubuntu:~# python3 fibonacci.py 1 1 2 3 5 8 13 21 34 55 89 闭包python闭包：lexical closure函数及相关环境所构成的整体, 或者说一个函数(内层函数)和它所处的环境(外层函数)所构成的整体称为python闭包在这种情况下内层函数会记住外层函数的变量，在外层函数返回时内层函数依然可以调用 eg1123456789101112131415In [123]: def f1(x): .....: def f2(y): .....: return y ** x .....: return f2 # 内层函数直接返回 .....: In [124]: f = f1(3) # f1为f2提供运行环境，记住外部变量In [125]: f Out[125]: &lt;function __main__.f1.&lt;locals&gt;.f2&gt;In [126]: f(4)Out[126]: 64In [127]: f(5)Out[127]: 125 以上例子用匿名函数lambda简写成如下12345678In [129]: def f1(x): .....: return lambda y: y ** x .....: In [131]: f = f1(3)In [132]: f(6)Out[132]: 216 高阶函数定义： 一个函数当参数传递给另一个函数，我们就称这样的函数为高阶函数.装饰器/函数闭包: 是有返回函数的高阶函数，是高阶函数的特例 高阶函数 用法说明 map(func,seq1,seq2) 将函数func作用于给定序列(s)的每个元素，并用一个列表来提供返回值，如果func为None,func表现为一个身份函数，返回一个含有每个序列中元素集合的n个元组列表 reduce(func, seq, init) 将二元函数作用于seq序列的元素，每次携带一对(先前的结果以及下一个序列无素)，连续地将现有的结果和下一个值作用在获得的随后的结果上，最后减少我们的序列为一个单一的返回值，如果初始值init给定，第一个比较会是init和第一个序列元素而不是序列的头两个元素 filter(func,seq) 调用一个布尔函数func来迭代遍历每个seq中的元素，返回一个使func返回值为True的元素组成的序列 map()map()将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回 一个序列时1234567In [143]: def f(x): .....: return x ** 2In [144]: res = map(f, [1,2,3,4]) # 根据说明这里返回结果是一个Iterator惰性序列In [145]: list(res) # 惰性序列需要通过list()函数让它把整个序列都计算出来并返回一个listOut[145]: [1, 4, 9, 16] 二个序列时每一次同时依次取一个序列的一个值，两个序列就有2个值，那么用传入的函数作用于这2个值返回一个值,最后这些值再以列表显现。1234567In [140]: def f(x,y): return y ** xIn [141]: res = map(f, [1,2,3], [4,5,6])In [142]: list(res)Out[142]: [4, 25, 216] reduce()python3中reduce函数在functools模块里,用时需要先导入 从初始值开始，对序列折叠123456In [39]: from functools import reduceIn [50]: def add(x,y): ....: return x+y ....: In [52]: reduce(add, [1,2,3], 10) # 10为初始值Out[52]: 16 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：123456&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; reduce(fn, [1, 3, 5, 7, 9])13579 这个例子本身没多大用处，但是考虑到字符串str也是一个序列，对上面的例子稍加改动，配合map()就可以写出把str转换为int的函数： 123456789&gt;&gt;&gt; from functools import reduce&gt;&gt;&gt; def fn(x, y):... return x * 10 + y...&gt;&gt;&gt; def char2num(s):... return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]...&gt;&gt;&gt; reduce(fn, map(char2num, &apos;13579&apos;))13579 整理成一个str2int的函数就是：12345678from functools import reducedef str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s] return reduce(fn, map(char2num, s)) 还可以用lambda函数进一步简化成：1234567from functools import reducedef char2num(s): return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]def str2int(s): return reduce(lambda x, y: x * 10 + y, map(char2num, s)) 也就是说，假设Python没有提供int()函数，你完全可以自己写一个把字符串转化为整数的函数. filter()Python内建的filter()函数用于过滤序列。filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。 例如，在一个list中，删掉偶数，只保留奇数，可以这么写：12345def is_odd(n): return n % 2 == 1list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]))# 结果: [1, 5, 9, 15] 把一个序列中的空字符串删掉，可以这么写：12345def not_empty(s): return s and s.strip()list(filter(not_empty, [&apos;A&apos;, &apos;&apos;, &apos;B&apos;, None, &apos;C&apos;, &apos; &apos;]))# 结果: [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;] 可见filter()这个高阶函数，关键在于正确实现一个“筛选”函数, 这个函数必须是一个二元函数，返回True 或 False的函数 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 用filter求素数 计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单： 首先，列出从2开始的所有自然数，构造一个序列： 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, … 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：取新序列的第一个数5，然后用5把序列的5的倍数筛掉：不断筛下去，就可以得到所有的素数。 用Python来实现这个算法，可以先构造一个从3开始的奇数序列：12345def _odd_iter(): n = 1 while True: n = n + 2 yield n 注意这是一个生成器，并且是一个无限序列。 然后定义一个筛选函数：12def _not_divisible(n): return lambda x: x % n != 0 最后，定义一个生成器，不断返回下一个素数：1234567def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 这个生成器先返回第一个素数2，然后，利用filter()不断产生筛选后的新的序列。 由于primes()也是一个无限序列，所以调用时需要设置一个退出循环的条件：123456# 打印1000以内的素数:for n in primes(): if n &lt; 1000: print(n) else: break 小结： filter()的作用是从一个序列中筛出符合条件的元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 sorted()sorted()高阶函数用于排序 sorted()语法12sorted(iterable, key=None, reverse=False) Return a new list containing all items from the iterable in ascending order. 先来看一个例子：123456&gt;&gt;&gt; list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]&gt;&gt;&gt; sorted(list1, key=lambda x: x[&apos;age&apos;], reverse=False) [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] 这个例子也可以写成：12345678910In [174]: def f1(x): .....: return x[&quot;age&quot;] .....: In [175]: list1 = [&#123;&quot;age&quot;:20, &quot;name&quot;: &quot;def&quot;&#125;, &#123;&apos;age&apos;:25, &quot;name&quot;:&quot;abc&quot;&#125;, &#123;&quot;age&quot;:10, &quot;name&quot;:&quot;ghi&quot;&#125;]In [176]: sorted(list1, key=f1)Out[176]: [&#123;&apos;age&apos;: 10, &apos;name&apos;: &apos;ghi&apos;&#125;, &#123;&apos;age&apos;: 20, &apos;name&apos;: &apos;def&apos;&#125;, &#123;&apos;age&apos;: 25, &apos;name&apos;: &apos;abc&apos;&#125;] list1这样的迭代对象取出一个值（一个一个的字典）给key函数处理后的结果作为排序依据，而后返回另一个排续后的对象. 列表自身有个sort()方法，和sorted()有什么区别呢？ 来看个例子：123456789101112In [66]: list1Out[66]: [1, 2, 3, 4, 5]In [67]: list1.sort() # sort()方法是在原有列表上排序，这是与sorted()高阶函数的区别In [68]: list1Out[68]: [1, 2, 3, 4, 5]In [69]: list1.sort(reverse=True) # reverse表示逆序In [70]: list1 Out[70]: [5, 4, 3, 2, 1] 区别就是sorted()会生成新的对象，而列表sort()不会，如下是按字母排序的例子：12In [173]: sorted([&apos;bob&apos;, &apos;about&apos;, &apos;Zoo&apos;, &apos;Credit&apos;], key=str.lower)Out[173]: [&apos;about&apos;, &apos;bob&apos;, &apos;Credit&apos;, &apos;Zoo&apos;]","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python-03-01-IO","slug":"python-03-01-IO","date":"2017-01-19T18:12:36.000Z","updated":"2017-02-20T10:30:30.882Z","comments":true,"path":"2017/01/20/python-03-01-IO/","link":"","permalink":"http://www.digmyth.com/2017/01/20/python-03-01-IO/","excerpt":"","text":"目录 文件对象 OS 对象 IO 编程文件对象文件对象用于访问系统文件的接口，文件系统是计算机存储数据，组织数据的方式。计算机文件是存储在设备中的一段数据流，归属于文件系统管理之下。是计算机中由OS管理的具有名字的存储区域，对Linux而言，文件可以被看作字节序列。 序列化的对象才能存储的文件系统中，非字节序列化的数据不能存储在文件系统中的。 文件对象接口不仅用于访问普通文件，还可以访问套接字文件，管道文件。在Python中，文件读写是通过open()函数打开的文件对象完成的。使用with语句操作文件IO是个好习惯。 open(name[,mode[,bufsize]]) 返回的是一个文件对象。这里三个参数分别表示文件名，文件打开模式和缓冲区大小 bufsize:定义输出缓存12340 表示无输出缓存,禁用缓冲1 表示使用缓冲，只缓冲一行数据负数表示使用系统默认设置2+之后的正数表示使用指定大小缓冲 open(‘/var/log/message’, ‘r’)简单模式，首次打开的文件指针于文件首部r: 只读w: 新建文件或文件首部覆盖写入。a: 尾部追加，即打开时指针处于文件尾部 在模式后使用+表示同时支输入输出操作r+ w+ a+ 在模式后附加 b 表示二进制方式打开rb wb+ 创建一个文件对象123&gt;&gt; f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [3]: type(f)Out[3]: _io.TextIOWrapper 只读模式打开一个不存在文件是不可以的1234567In [1]: f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)---------------------------------------------------------------------------FileNotFoundError Traceback (most recent call last)&lt;ipython-input-1-07bb2dbd474f&gt; in &lt;module&gt;()----&gt; 1 f = open(&apos;/tmp/abc&apos;, &apos;r&apos;)FileNotFoundError: [Errno 2] No such file or directory: &apos;/tmp/abc&apos; 以写模式打开一个不存在文件，这个文件会自动被创建12345678In [3]: import osIn [7]: os.path.isfile(&apos;/tmp/f1&apos;)Out[7]: FalseIn [8]: f = open(&apos;/tmp/f1&apos;, &apos;w+&apos;)In [9]: os.path.isfile(&apos;/tmp/f1&apos;)Out[9]: True 查看一个文件的描述符，描述符是一个很小的数字表示，0表示标准输入，1表示标准输出，2表示标准错误输出它们所使用的描述符12In [20]: f.fileno()Out[20]: 8 f.readline() 读文件一行数据f.readlines() 读文件指针处至尾部所有数据包括行结束符\\n，一行为一个对象，然后多行多个对象组成一个列表 返回指针在当前文件中的位置，表示在多少个字节的位置。12In [23]: f.tell()Out[23]: 597 f.seek(offset, whence) offset:表示偏移多少个字节，whence表示从 多少节字数开始偏移。下面表示回到文件首部：12In [37]: f.seek(0)Out[37]: 0 f.read() 读取给定字节123456In [44]: f.seek(0)Out[44]: 0In [45]: f.read(10)Out[45]: &apos;# /etc/fst&apos;In [46]: f.tell()Out[46]: 10 12345678910In [57]: f = open(&apos;/etc/fstab&apos;, &apos;r&apos;)In [58]: f.name #返回文件名Out[58]: &apos;/etc/fstab&apos;In [59]: f.closed #返回是否关闭文件Out[59]: FalseIn [60]: f.close() #关闭文件In [61]: f.closedOut[61]: True 操作完毕会自动关闭文件对象12with open(&apos;/root/wxq.txt&apos;,&apos;w+&apos;) as f: f.write(&apos;hello world!\\n&apos;) OS 对象一些方法123456789101112131415161718192021os.path 跟文件路径相关 basename() 路径基名 dirname() 路径目录名 join() split() 返回dirname(), basename()元组 splitext() 返回(filename, extension_name)元组 信息： getatime() getctime() getmtime() getsize() 获取文件大小查询： exists() 指定文件是否存在 isabs() 指定路径是否为绝对路径 isdir() 是否为目录 isfile() 是否为文件 islink() 是否为符号链接 ismount() 是否为挂载点 samefile() 两个路径是否指向了同一个文件 __file__属性 在上面的glabals()中有一个file属性，其中保存的是程序运行的相对路径，如python3 ../py3_training/test/yy.py，则路径为../py3_training/test/yy.py在pycharm中为什么又变成了绝对路径了呢，不要认为是pycharm做了封装，是因为pycharm运行路径永远从c:\\开始，这样看不出效果 要获取程序绝对路径os.path.abspath(file)应用举例：12345678910import osimport sysbase_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))print(base_dir)sys.path.append(base_dir)from core import mainif __name__ == &apos;__main__&apos;: main.run() 来几个小练习，似乎参悟了1234567891011121314&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.split(&apos;/root/wxq.txt&apos;)(&apos;/root&apos;, &apos;wxq.txt&apos;)&gt;&gt;&gt; os.path.splitext(&apos;/root/wxq.txt&apos;)(&apos;/root/wxq&apos;, &apos;.txt&apos;)&gt;&gt;&gt; os.path.dirname(&apos;/root/wxq.txt&apos;)&apos;/root&apos;&gt;&gt;&gt; os.path.basename(&apos;/root/wxq.txt&apos;)&apos;wxq.txt&apos;&gt;&gt;&gt; dir, file_name = os.path.split(&apos;/root/wxq.txt&apos;)&gt;&gt;&gt; dir&apos;/root&apos;&gt;&gt;&gt; file_name&apos;wxq.txt&apos;","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_02_流程控制/枚举","slug":"python-02-流程控制_枚举","date":"2017-01-15T05:03:41.000Z","updated":"2017-02-22T04:09:53.601Z","comments":true,"path":"2017/01/15/python-02-流程控制_枚举/","link":"","permalink":"http://www.digmyth.com/2017/01/15/python-02-流程控制_枚举/","excerpt":"","text":"目录 流程控制 三元表达式 枚举类 流程控制ifif 玩猜数字游戏123456789101112131415#!/usr/bin/env python3i = 0try_num = 3AGE = 27while i &lt; try_num: enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) i += 1 else: print(&quot;too smaller&quot;) i+=1 if成绩查询12345678910111213141516171819#!/usr/bin/env python3__author__ = &quot;wxq&quot;enter_score = int(input(&quot;enter your score :&quot;).strip())if enter_score &lt;=100 and enter_score &gt;=0: if enter_score &gt;=90: print(&quot;A&quot;) elif enter_score &gt;=80: print(&quot;B&quot;) elif enter_score &gt;=70: print(&quot;C&quot;) elif enter_score &gt;= 60: print(&quot;D&quot;) else: print(&quot;you are too low&quot;)else: print(&quot;invalid score&quot;) while这里主要注意与shell中的区别，python里while后有else, 即while语句正常执行完后才执行else中的语句，否则不会执行。1234567891011i = 0while i &lt;3: if i &gt;=2: break print(i) i += 1else: print(&apos;end&apos;) #结果01 来个小练习12345678910111213count1 = 0while True: if count1 == 10000000: break count1 += 1print(&quot;cost&quot;, time.time() - t1_start, count1)t2_start = time.time()count2 = 0while count2 &lt; 10000000: count2 += 1print(&quot;cose&quot;, time.time() - t2_start, count2) for 很懒什么也没有留下…1234567891011121314151617181920count = 3AGE = 27for i in range(100): if i &gt;3: enter=input(&quot;are you want to keep trying ....&quot;).strip() if enter == &quot;y&quot;: count = 0 else: break enter = int(input(&apos;enter you num:&apos;)) if enter == AGE: print(&quot;Conguratulations, you got it&quot;) break elif enter &gt; AGE: print(&quot;too large&quot;) else: print(&quot;too smaller&quot;) count +=1 continue/breakcontinue结束本次循环，提前进入下一轮循环break 直接终止循环 1234567891011121314151617181920212223242526272829#!/usr/bin/env python3__author__ = &quot;wangxiaoqiang&quot;for i in range(10): if i == 5: for j in range(10): if j == 8: break print(&quot;inner loop&quot;,j) continue print(&quot;loop&quot;,i)结果：loop 0loop 1loop 2loop 3loop 4inner loop 0inner loop 1inner loop 2inner loop 3inner loop 4inner loop 5inner loop 6inner loop 7loop 6loop 7loop 8loop 9 三元表达式三元表达式很简单， 这里来几个小例子就明白了 条件满足为1，否则为False12n [44]: 1 if True else FalseOut[44]: 1 成员关系判断，条件满足为True, 否则为False12345In [53]: True if 1 in [1,2,3] else FalseOut[53]: TrueIn [54]: True if 0 in [1,2,3] else FalseOut[54]: False 12345In [45]: a = 10In [46]: b = 15In [47]: a if a&gt;b else bOut[47]: 15 枚举类枚举 enumerate, 在用到index和value对应关系时能用到enumerate函数，参数为可遍历对象（字符串，列表等），返回多个元组123456789101112In [3]: for i in enumerate(&apos;abc&apos;): ...: print(i) ...: (0, &apos;a&apos;)(1, &apos;b&apos;)(2, &apos;c&apos;)In [43]: for index,i in enumerate(&apos;abc&apos;, 10): ....: print(index,i) ....: 10 a11 b12 c 1234In [4]: a = enumerate(&apos;abc&apos;)In [5]: list(a)Out[5]: [(0, &apos;a&apos;), (1, &apos;b&apos;), (2, &apos;c&apos;)] 1234567891011121314151617181920In [6]: import stringIn [7]: s = string.ascii_uppercaseIn [8]: E = enumerate(s)In [9]: sOut[9]: &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;In [10]: list(E)Out[10]: [(0, &apos;A&apos;), (1, &apos;B&apos;),此处略...In [11]: for i in E: ....: print(i, end=&apos; &apos;) ....: In [12]: E = enumerate(s)In [13]: for i in E: print(i, end=&apos; &apos;) ....: (0, &apos;A&apos;) (1, &apos;B&apos;) (2, &apos;C&apos;) (3, &apos;D&apos;) (4, &apos;E&apos;) (5, &apos;F&apos;) (6, &apos;G&apos;) (7, &apos;H&apos;) (8, &apos;I&apos;) (9, &apos;J&apos;) (10, &apos;K&apos;) (11, &apos;L&apos;) (12, &apos;M&apos;) (13, &apos;N&apos;) (14, &apos;O&apos;) (15, &apos;P&apos;) (16, &apos;Q&apos;) (17, &apos;R&apos;) (18, &apos;S&apos;) (19, &apos;T&apos;) (20, &apos;U&apos;) (21, &apos;V&apos;) (22, &apos;W&apos;) (23, &apos;X&apos;) (24, &apos;Y&apos;) (25, &apos;Z&apos;) 枚举类用法int 常量默认从1开始，我们来看个例子 1234567891011121314151617181920212223242526272829In [16]: from enum import EnumIn [17]: Month = Enum(&apos;Month&apos;, (&apos;January&apos;, &apos;February&apos;, &apos;March&apos;, &apos;April&apos;, &apos;May&apos;, &apos;June&apos;, &apos;July&apos;, &apos;August&apos;, &apos;September&apos;, &apos;October&apos;, &apos;November&apos;, &apos;December&apos;))In [19]: print(Month.January)Month.JanuaryIn [20]: print(Month[&apos;January&apos;])Month.JanuaryIn [21]: print(Month[&apos;January&apos;].value)1In [22]: print(Month(4))Month.AprilIn [24]: for name, members in Month.__members__.items(): print(&quot;%s =&gt; %s =&gt; %s&quot; % (name, members, members.value)) ....: January =&gt; Month.January =&gt; 1February =&gt; Month.February =&gt; 2March =&gt; Month.March =&gt; 3April =&gt; Month.April =&gt; 4May =&gt; Month.May =&gt; 5June =&gt; Month.June =&gt; 6July =&gt; Month.July =&gt; 7August =&gt; Month.August =&gt; 8September =&gt; Month.September =&gt; 9October =&gt; Month.October =&gt; 10November =&gt; Month.November =&gt; 11December =&gt; Month.December =&gt; 12 自定义枚举类（自定义int常量从0开始）@unique帮助我们检查没有重复值 12345678910111213141516171819202122232425262728293031323334353637In [29]: from enum import Enum, uniqueIn [30]: @unique ....: class Myday(Enum): ....: Sun = 0 ....: Mon = 1 ....: Tue = 2 ....: Wed = 3 ....: Thu = 4 ....: Fri = 5 ....: Sat = 6 ....: In [31]: Myday.FriOut[31]: &lt;Myday.Fri: 5&gt;In [32]: print(Myday.Fri)Myday.FriIn [33]: print(Myday.Fri.value)5In [34]: print(Myday[&apos;Fri&apos;])Myday.FriIn [35]: print(Myday(5))Myday.FriIn [37]: for name, members in Myday.__members__.items(): ....: print(&quot;%s, %s, %s&quot; % (name, members, members.value)) ....: Sun, Myday.Sun, 0Mon, Myday.Mon, 1Tue, Myday.Tue, 2Wed, Myday.Wed, 3Thu, Myday.Thu, 4Fri, Myday.Fri, 5Sat, Myday.Sat, 6","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇下","slug":"python-01-基础篇下","date":"2017-01-09T02:37:13.000Z","updated":"2018-04-27T05:01:04.973Z","comments":true,"path":"2017/01/09/python-01-基础篇下/","link":"","permalink":"http://www.digmyth.com/2017/01/09/python-01-基础篇下/","excerpt":"","text":"目录 位运算 程序编码 用户交互 第四节 位运算123456位运算：&amp;与 ： 同位都为1则为1|或 ： 同位有1则为1^异或: 同位相异为1，相同为0&lt;&lt;n左移位： 左移n位(保留左位),右边补n个0&gt;&gt;n右移位： 右移n位(去掉右位),左边补n个0 &amp;运算:都为11234001100010111111100110001` |运算：或为1123001100010111111101111111 ^运算：相异为1123110011010111111110110010 &lt;&lt;3左移位：左边110保留121101000111010001000 &gt;&gt;3右移位：右边001不保留121101000100011010 第五节 程序编码bytes、str 区别python3 中bytes、str是有区别的 bytes/str的区别：bytes 是byte的序列，而str是unicode 序列 bytes并不能存储中文，需要先定义成str类型后encode()编码 之间的转换是编码，解码完成。 方式： b1 = str1.encode()/ b1.decode() 网络传输中都是用的bytes类型二进制进行传输（socket编程发送必须bytes类型） b（bytes）只能接收ASCII 的值 python3与大多数软件运行在内存中都是unicode编码 b表示方法(bytes)只能接收ASCII的值, 直接传的中文为字符串 unicode编码，一个unicode两个字节，一个汉字两个字节。 1234&gt;&gt;&gt; b1 = b&apos;hello world&apos; # bytes只能接收ASCII样的值&gt;&gt;&gt; b2 = b&apos;你好&apos; File &quot;&lt;stdin&gt;&quot;, line 1SyntaxError: bytes can only contain ASCII literal characters. 将中文转换为bytes (转为ASCII里面能支持的格式，默认为utf-8)123456&gt;&gt;&gt; b2 = &apos;你好&apos;.encode(&apos;utf-8&apos;)&gt;&gt;&gt; b3 = bytes(&apos;你好&apos;, encoding=&apos;utf-8&apos;)&gt;&gt;&gt; type(b2)&lt;class &apos;bytes&apos;&gt;&gt;&gt;&gt; b2b&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos; 看看下面的转换是否能领悟点什么12345678910&gt;&gt;&gt; test_str = &apos;你是最好的！&apos;&gt;&gt;&gt; test_b = test_str.encode() # 不指定时默认encode()成utf-8&gt;&gt;&gt; test_bb&apos;\\xe4\\xbd\\xa0\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xef\\xbc\\x81&apos;&gt;&gt;&gt; for i in test_b:... print(i, end=&apos; &apos;)228 189 160 230 152 175 230 156 128 229 165 189 231 154 132 239 188 129&gt;&gt;&gt; for i in test_str:... print(i, end=&apos; &apos;)你 是 最 好 的 ！ 1234567891011121314root@ubuntu:~# cat utf-8.txt 我是最好的！root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt ϒˇخºõģ¡root@ubuntu:~# iconv -f utf-8 -t gbk utf-8.txt &gt; gbk.txtroot@ubuntu:~# cat gbk.txtϒˇخºõģ¡&gt;&gt;&gt; f = open(&apos;gbk.txt&apos;, &apos;rb&apos;)&gt;&gt;&gt; test = f.read()&gt;&gt;&gt; testb&apos;\\xce\\xd2\\xca\\xc7\\xd7\\xee\\xba\\xc3\\xb5\\xc4\\xa3\\xa1\\n&apos;&gt;&gt;&gt; test.decode(&apos;gbk&apos;)&apos;我是最好的！\\n&apos;&gt;&gt;&gt; f.close() 编码总结编码过程： 任意unicode到bytes的过程解码过程： bytes到unicode的过程12345678910pycharm默认以UTF-8存数据到硬盘(unicode to UTF-8) 一个编码过程python3默认以UTF-8读数据到内存（UTF-8 to unicode） 一个解码过程#coding:utf-8 也是指明了用什么编码读数据到内存,一个解码过程#这里open虽然文件是UTF8存的，此时要以utf8读, utf8 to unicode， 是一个解码过程with open(&quot;test.txt&quot;,&apos;r&apos;,encoding=&apos;utf8&apos;) as f: f.read() python3字符串就是unicode, 任意unicode只要编码后就是bytes&apos;你好&apos;.encode(&apos;utf8&apos;) 第六节 用户交互for python2.xname = raw_input(“What is your name:”)for python3.xname = input(“What is your name:”)eg: 想要输入密码时不可见，可以利用getpass模块的getpass()方法12345678root@apt:/mnt# cat getp.py #!/usr/bin/env python3import getpasspwd = getpass.getpass(\"请输入密码：\")print(pwd)root@apt:/mnt# python3 getp.py 请输入密码：123","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"python_01_基础篇上","slug":"python-01-基础篇上","date":"2017-01-08T02:37:13.000Z","updated":"2018-04-27T04:57:42.337Z","comments":true,"path":"2017/01/08/python-01-基础篇上/","link":"","permalink":"http://www.digmyth.com/2017/01/08/python-01-基础篇上/","excerpt":"","text":"目录 python简介 python变量 数据类型 第一节 简介Python 简介 Python 安装More info: 官网 Python第一个程序斐波那契数列： 123456789# Python 3: Fibonacci series up to n&gt;&gt;&gt; def fib(n):&gt;&gt;&gt; a, b = 0, 1&gt;&gt;&gt; while a &lt; n:&gt;&gt;&gt; print(a, end=&apos; &apos;)&gt;&gt;&gt; a, b = b, a+b&gt;&gt;&gt; print()&gt;&gt;&gt; fib(1000)0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Python 注释单行注释：#多行注释：英文三引号 ‘’’‘’’say somethig‘’’有种特殊的用法,此时并非注释123456789101112131415161718192021root@apt:/mnt/proper# cat people_info.py #!/usr/bin/env python3name = input(\"your name: \").strip()age = input(\"your age: \").strip()salary = input(\"your money: \").strip()info = ''' -------- day day up ------------ name: %s age: %s salary: %s''' % (name, age, salary)print(info)root@apt:/mnt/proper# python3 people_info.py your name: wxq your age: 18your money: 5000 -------- day day up ------------ name: wxq age: 18 salary: 5000 Python代码长相123456789101112131415#!/usr/bin/env python3 # (1)程序起始行&quot;this is a test module&quot; # (2)模块文档(文档字符串)import os # (3)模块导入import sysdebug = True # (4)全局变量定义class FooClass(object): # (5)类定义 &quot;Foo class&quot; passdef func(*args, **kwargs): # (6)函数定义 &quot;test function&quot; foo = FooClass() if debug: print(&quot;run test()&quot;)if __name__ == &apos;__main__&apos;: # (7)主程序 func() 第二节 变量2.1 变量规范变量： 字母，数字，下划线且不能以数字开头，并系统己经引用的关键字不能为变量名关键字[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’,‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]1234In [2]: name = \"wxq\"In [3]: print(name)wxq 2.2 变量标准eg: age_of_name = ‘wxq’ #习惯上 AGE_OF_NAME = &quot;XX&quot; #常量 Age_Of_Name = &quot;XX&quot; #驼峰体 Age_of_name = &quot;xx&quot; #类名 第三节 数据类型3.1 数字int(整型)long(长整型) python3 中己经没有了float(浮点型)complex(复数) 3.2 布尔值True 1False 0 3.3 字符串不可变类型字符串常用功能：字符串拼接 join()方法： 用于指定字符把序列中的每一个元素连接起来1234In [11]: str = '_'In [12]: seq = ('a', 'b', 'c')In [13]: str.join(seq)Out[13]: 'a_b_c' 移除前后空白分割len()长度index()索引split()切片格式化输出% 格式化输出%s 字符串%d 数字%f 符点%r 原生字符串，不会对\\n \\t进行转换123In [5]: name = 'wxq'In [6]: print(\"hello, %s\" % name)hello, wxq 1234# 字符串.center()方法+颜色格式化输出In [22]: print(&quot;\\033[32;1m%s\\033[0m&quot; % &quot;wxq&quot;.center(50, &apos;-&apos;))-----------------------wxq------------------------ format 格式化输出12In [7]: \"&lt;&#123;tag&#125;&gt;&#123;str&#125;&lt;/&#123;tag&#125;&gt;\".format(tag='b', str='hello world')Out[7]: '&lt;b&gt;hello world&lt;/b&gt;' 3.4 列表可变类型name = [‘hello’, ‘world’]通过下标访问列表中元素，下标从0开始计数12345In [9]: name[0]Out[9]: 'hello'In [10]: name[-1]Out[10]: 'world' 列表常用操作：切片：取出多个元素追加插入修改删除扩展 3.5 字典python支持dictionary,采用key-value存储方式，在存放时根据key算出value的存放位置，这样取的时候根据key直接拿到value，这也说明了为什么字典查找速度比列表快的原因。 由于dict根据key来计算value的存储位置，就决定了dict的key必须是不可变对象，利于每次计算相同的key得出的相同的结果，这个通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变. 12345678910111213141516171819In [2]: dict_test = &#123;&#125;In [3]: for i in range(4): ...: k = &apos;f%s&apos; % (i+1) ...: v = &apos;v%s&apos; % i ...: dict_test[k] = v ...: In [4]: dict_testOut[4]: &#123;&apos;f1&apos;: &apos;v0&apos;, &apos;f2&apos;: &apos;v1&apos;, &apos;f3&apos;: &apos;v2&apos;, &apos;f4&apos;: &apos;v3&apos;&#125;In [5]: dict_test.get(&apos;f4&apos;)Out[5]: &apos;v3&apos;In [6]: for k,v in dict_test.items(): ...: print(k,v) ...: (&apos;f1&apos;, &apos;v0&apos;)(&apos;f2&apos;, &apos;v1&apos;)(&apos;f3&apos;, &apos;v2&apos;)(&apos;f4&apos;, &apos;v3&apos;) 3.6 元组3.7 集合可变集合集合：一组无序排列的可哈希的值，集合没有特定语法格式，使用工厂函数创建。支持： 支持集合关系测试：并集 支持成员关系测试：in /not in/迭代不支持： 索引,元素获取，切片 集合创建12345678&gt;&gt;&gt; set1 = set([1,2,3]) # 用set创建&gt;&gt;&gt; set1 &#123;1, 2, 3&#125;&gt;&gt;&gt; s1 = &#123;&apos;a&apos;, &apos;b&apos;, &apos;c&apos;&#125; # 或用&#123;&#125;创建&gt;&gt;&gt; s1&#123;&apos;b&apos;, &apos;c&apos;, &apos;a&apos;&#125;&gt;&gt;&gt; type(s1)&lt;class &apos;set&apos;&gt; 项目 描述 符号表示 len(s1) 返回s1项的长度 len(s1) s1.copy 制作s1的副本 s1.difference(s2) 求差集，返回所有在s1中，但不在s2中的项 s1 - s2 s1.intersection(s2) 求交集，返回所有同时在s1 s2中的项 s1 &amp; s2 s1.union(s2) 求并集，返回所有在s1或s2中的项 s1 l s2(竖线) s1.symmetric_differencee(s2) 求对称差集，返回所有在s1或s2中，但又不同时在s1 s2中的项，即并集减交集 s1 ^ s2 s1.isdisjoin(s2) 如果s1 s2没有相同项，则返回True s1.issubset(s2) 如果s1是s2的一个子集，则返回True s1.issuperset(s2) 如果s1是s2的一个父集，则返回True max(s1) 求最大值 max(s1) min(s1) 求最小值 min(s1) 3.8 集合forzent()可变集合","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"PyCharm基本使用-01","slug":"PyCharm基本使用-01","date":"2017-01-05T02:37:13.000Z","updated":"2018-04-23T06:58:15.230Z","comments":true,"path":"2017/01/05/PyCharm基本使用-01/","link":"","permalink":"http://www.digmyth.com/2017/01/05/PyCharm基本使用-01/","excerpt":"","text":"入门More info: 参考官网 下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748491 在Pycharm为你的python项目配置python解释器 Project当前项目名为&gt;&gt;Project Interpreter &gt;&gt; add Local2 在Pycharm下创建Python 文件，Python模块 File&gt;&gt;New&gt;&gt;Python file File &gt;&gt; New &gt;&gt; Python Package3 使用Pycharm安装python 三方模块 Project 当前项目名&gt;&gt; Project Interpreter &gt;&gt; 点击右侧绿色小加号4 Pycharm基本设置，例如不使用tab, tab=4空格，字体，字体颜色，主题，脚本设置，显示行号等， 如何导出入导入自定义设置 1 不使用tab,tab=4空格：Editor&gt;&gt;Code Style&gt;&gt;python 2 字体，字体颜色：Editor&gt; Color&amp;Fronts &gt;&gt; python 3 关闭自动更新：Apperance&amp; Behavior &gt; System Setting &gt;&gt; Updates 4 脚本关设置: Editor&gt;&gt; File and Code Templates &gt;&gt; Python Script 注：其它类似 5 显示行号： Editor&gt;&gt; Geratal &gt;&gt; Apperance &gt;&gt; Show Line number 注：2016.2默认显示行号 6 右侧坚线是PEP8的代码规范，提示一行不要超过120个字符 7 导出，导入你自定义的配置：File &gt;&gt; Export Settings, Import Settings5 常用快捷键，例如复制当前行，删除当前行，批量注释，缩进，查找和替换 1 常用快捷键的查询和配置：Keymap 1 Ctrl + D : 复制当前行 2 Ctrl + E : 删除当前行 3 Ctrl + Enter 快捷换行 4 Ctrl + / 快捷注释，（选中多行后可以批量注释） 5 Tab: 缩进当前行（选中多行后可以批量缩进） 6 Shift + Tab : 取消缩进（选中多行后可以批量取消缩进） 7 Ctrl + F: 查找 8 Ctrl + H : 替换 9 批量注释：ctrl + ?6 Pycharm安装插件，例如Markdown supprot,数据库支持插件等 1 Plugins &gt; Browse reposltories (下方三个按钮中间寻个)&gt;&gt; 搜索 markdown supprot &gt; Install 2 右上解View有三个选项可选，一般我们都用中间那个左侧编写，右侧实时预览7 Git配置 ？ 1 需要本地安装好git 2 Version control &gt; git 3 配置了git等版本控制系统之后，可以很方便的diff查看文件的不同8 常用操作指南，例如复制文件路径，在文件管理中打开，快速定位，查看模块结构视图，tab批量换space ,TODO的使用 ， Debug的使用， 1 复制文件路径: 左侧文件列表右键选中的文 件&gt; Copy Path 2 在文件管理器中打开：右键选中的文件&gt;&gt;往下找到show In Explorer 3 快速定位： Ctrl + 某些内键模块之后，点击在源文件中展开 4 查看结构： IDE左侧边栏Structure 查看当前项目的结构 5 tab 批量换space: Editor &gt; Convert Indents 6 Todo的使用： #todo要记录的事情 7 tab页上右键 &gt;&gt; Move Right (Down) , 把当前Tab 页移到窗口右边（下边），方便对比 8 文件中右键 &gt;&gt;Local History 能够查看文件修改前后对比 9 IDE右下解能看到一些有用的信息，光标当前在第几行的基本几个字符，当前回车换行，当前编码类型 ， 当前git 分支 10 IDE 右侧边栏&gt;&gt; Database9 如何去掉烦人的波浪线？PEP8是什么？ 完","categories":[{"name":"Python","slug":"Python","permalink":"http://www.digmyth.com/categories/Python/"}],"tags":[]},{"title":"博客声明","slug":"declare","date":"2017-01-01T00:47:02.000Z","updated":"2018-04-23T05:58:42.174Z","comments":true,"path":"2017/01/01/declare/","link":"","permalink":"http://www.digmyth.com/2017/01/01/declare/","excerpt":"","text":". 公告 本博客属个人所有，不涉及商业用途，本人保留追究其法律责任的权利。本博客为个人随笔所写，内容大多取自网络或个人经验，包括老男孩、马哥、廖雪峰、林海峰、小甲鱼及Python开发者，纯为个人学习记录所用.按金庸武侠秘籍上说就是本博客纯属虚构，如有雷同，纯属巧合.. 如涉及版权问题及时联系作者 wxqnote@163.com","categories":[{"name":"声明","slug":"声明","permalink":"http://www.digmyth.com/categories/声明/"}],"tags":[]},{"title":"为什么写博客","slug":"为什么写博客","date":"2017-01-01T00:08:08.000Z","updated":"2018-04-23T05:56:37.662Z","comments":true,"path":"2017/01/01/为什么写博客/","link":"","permalink":"http://www.digmyth.com/2017/01/01/为什么写博客/","excerpt":"","text":". 关于作者欢迎大家来到个人博客,我来自成都无疑不幸与万幸是北漂IT engineer ! 尤如www.digmyth.com,一个想要遆造神话却总在路上的人。 . 一个选择至于为什么写博客，有很多原因, 一段时间，一个心境，一段经历，一个情怀。在一个适当的时间做适当的事，想要做的事，没有目的，如半夜突然起来想写下一段话，转身安然入睡。 . 认知时间时间对年轻人来说太快了，2016年己远去，2017年己来临,刚好2017年1月1日,此时成立博客也许是天时地利。各大互联网产品创业思路一是提供服务优化它人时间如知识产品，二是让它人上瘾拖住它的时间如微信朋友圈。会在不知不觉中时间己去，套用罗振宇跨年演讲上的一句话，有时你什么错都没有，你就是老了。可能是因为身处互联网圈的原因，信息发展太快着时让人有种焦虑感,让人很着急，告别了过去却抓不到未来。此时我要做的就是脚踏实地做自己正在做的事情，就会让自己很充实. . 共鸣共勉欲望勃发节奏飞速的当下，如果不能够保持淡定和从容，不具有宠辱不惊的修养，就很难拥有一颗平常恬淡的心境。更无法在纷乱中理清头绪，认清自我，认清形势，找准坐标，在反思中沉淀，在沉淀中积累,才不会迷失方向,才不会迷失自我。 越是浮躁越是保持淡定，越是功利越是要适度恬静.焦虑和躁动不仅会折损你的心智，更会戕害你的身体，经过了不平凡不寻常的年头，度过了最艰难的岁月,再大的风险和考验都可以轻轻的付之一笑.有定力的人才有希望，告别2016，迎来2017，善待自己，给自己的心灵除除尘，给自己的灵魂洗洗礼, 给自己多些淡定和从容. . 记录点滴记录一个想要遆造神话却总在路上的人的点滴，代表曾经来过，有些事我做过。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://www.digmyth.com/categories/生活/"}],"tags":[]}]}